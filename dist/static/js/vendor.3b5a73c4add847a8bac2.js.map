{"version":3,"sources":["webpack:///static/js/vendor.3b5a73c4add847a8bac2.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/vexflow/releases/vexflow-debug.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vuex/dist/vuex.esm.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/process/browser.js","webpack:///./~/vue-class-component/dist/vue-class-component.common.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/vue-style-loader/lib/listToStyles.js"],"names":["webpackJsonp","/ocq","module","__webpack_exports__","__webpack_require__","warn","condition","message","isError","err","Object","prototype","toString","call","indexOf","resolveProps","route","config","params","undefined","extend","to","from","key","resolveQuery","query","extraQuery","_parseQuery","parsedQuery","parse","parseQuery","e","res","trim","replace","split","forEach","param","parts","decode","shift","val","length","join","Array","isArray","push","stringifyQuery","obj","keys","map","encode","result","val2","filter","x","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","name","meta","path","hash","fullPath","getFullPath","matched","formatMatch","freeze","value","unshift","parent","ref","_stringifyQuery","stringify","isSameRoute","a","b","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","every","aVal","bVal","String","isIncludedRoute","current","target","queryIncludes","guardEvent","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","findAnchor","children","child","i","tag","install","Vue","installed","_Vue","isDef","v","registerInstance","vm","callVal","$options","_parentVnode","data","registerRouteInstance","mixin","beforeCreate","this","_routerRoot","_router","init","util","defineReactive","history","$parent","destroyed","defineProperty","get","_route","component","View","Link","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","resolvePath","relative","base","append","firstChar","charAt","stack","pop","segments","segment","parsePath","hashIndex","slice","queryIndex","cleanPath","str","tokens","index","defaultDelimiter","delimiter","PATH_REGEXP","exec","m","escaped","offset","next","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","compile","tokensToFunction","encodeURIComponentPretty","encodeURI","c","charCodeAt","toUpperCase","encodeAsterisk","matches","RegExp","opts","pretty","encodeURIComponent","token","TypeError","isarray","JSON","j","attachKeys","re","flags","sensitive","regexpToRegexp","groups","source","match","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","end","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","pathToRegexp_1","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","create","nameMap","addRouteRecord","l","splice","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","components","default","instances","redirect","beforeEnter","props","childMatchAs","alias","aliasRoute","normalizeLocation","raw","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","len","decodeURIComponent","setupScroll","window","replaceState","getStateKey","addEventListener","saveScrollPosition","state","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","positionStore","pageXOffset","y","pageYOffset","getElementPosition","el","docEl","document","documentElement","docRect","getBoundingClientRect","elRect","left","top","isValidPosition","isNumber","normalizePosition","normalizeOffset","isObject","selector","querySelector","scrollTo","genKey","Time","now","toFixed","_key","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","_","cid","resolve","once","resolvedDef","isESModule","resolved","reject","reason","msg","Error","comp","flatten","arr","concat","apply","__esModule","hasSymbol","Symbol","toStringTag","called","args","arguments","normalizeBase","inBrowser","baseEl","resolveQueue","max","Math","updated","activated","deactivated","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","cbs","isValid","bindEnterGuard","poll","setTimeout","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","href","getUrl","pushHash","supportsPushState","registerHook","list","createHref","mode","functional","type","render","routerView","h","$createElement","$route","cache","_routerViewCache","depth","inactive","$vnode","_inactive","routerViewDepth","hook","prepatch","vnode","componentInstance","propsToPass","attrs","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","Boolean","activeClass","exactActiveClass","event","this$1","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","handler","on","click","class","$slots","isStatic","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","ua","navigator","userAgent","performance","Date","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","beforeHooks","iterator","postEnterCbs","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","HashHistory","fallback","setupListeners","supportsScroll","AbstractHistory","targetIndex","VueRouter","apps","matcher","prototypeAccessors","configurable","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","defineProperties","version","use","162o","exports","Timeout","id","clearFn","_id","_clearFn","Function","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","6CD5","root","factory","modules","moduleId","installedModules","loaded","p","_vex","_tables","_element","_fraction","_renderer","_formatter","_music","_glyph","_stave","_stavenote","_stavemodifier","_voice","_accidental","_beam","_stavetie","_tabstave","_tabnote","_bend","_vibrato","_vibratobracket","_note","_modifiercontext","_tickcontext","_articulation","_annotation","_stavebarline","_notehead","_staveconnector","_clefnote","_keysignature","_timesignature","_timesignote","_stem","_tabtie","_clef","_modifier","_tabslide","_tuplet","_gracenote","_gracetabnote","_tuning","_keymanager","_stavehairpin","_boundingbox","_strokes","_textnote","_curve","_textdynamics","_staveline","_ornament","_pedalmarking","_textbracket","_frethandfinger","_staverepetition","_barnote","_ghostnote","_notesubgroup","_gracenotegroup","_tremolo","_stringnumber","_crescendo","_stavevolta","_vexflow_font","_system","_factory","_parser","_easyscore","_registry","Vex","Flow","Element","Fraction","Renderer","Formatter","Music","Glyph","Stave","StaveNote","StaveModifier","Voice","Accidental","Beam","StaveTie","TabStave","TabNote","Bend","Vibrato","VibratoBracket","Note","ModifierContext","TickContext","Articulation","Annotation","Barline","NoteHead","StaveConnector","ClefNote","KeySignature","TimeSignature","TimeSigNote","Stem","TabTie","Clef","Modifier","TabSlide","Tuplet","GraceNote","GraceTabNote","Tuning","KeyManager","StaveHairpin","BoundingBox","Stroke","TextNote","Curve","TextDynamics","StaveLine","Ornament","PedalMarking","TextBracket","FretHandFinger","Repetition","BarNote","GhostNote","NoteSubGroup","GraceNoteGroup","Tremolo","StringNumber","Crescendo","Volta","Font","System","Factory","Parser","EasyScore","Registry","_classCallCheck","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","setPrototypeOf","_createClass","descriptor","protoProps","staticProps","L","block","line","log","MakeException","_Error","exception","_this","getPrototypeOf","RuntimeError","code","RERR","Merge","destination","property","Min","min","Max","RoundN","parseInt","MidLine","mid_line","SortAndUnique","cmp","eq","newArr","last","sort","Contains","getCanvasContext","canvas_sel","canvas","getElementById","getContext","drawDot","ctx","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","getTime","elapsed","StackTrace","W","_len","Prefix","text","_typeof","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","values","treble","line_shift","bass","tenor","alto","soprano","percussion","mezzo-soprano","baritone-c","baritone-f","subbass","french","keyProperties","octave_shift","pieces","k","note_values","octave","base_index","stroke","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","C","CN","C#","C##","CB","CBB","D","DN","D#","D##","DB","DBB","E","EN","E#","E##","EB","EBB","F","FN","F#","F##","FB","FBB","G","GN","G#","G##","GB","GBB","A","AN","A#","A##","AB","ABB","B","BN","B#","B##","BB","BBB","R","rest","X","D0","D1","D2","D3","T0","T1","T2","T3","X0","X1","X2","X3","integerToNote","integer","noteValue","table","0","1","2","3","4","5","6","7","8","9","10","11","tabToGlyph","fret","scale","glyph","width","shift_y","glyphMetrics","getMetrics","height","textWidth","getWidth","articulationCodes","artic","articulations","a.","between_lines","av","a>","a-","a^","a+","ao","ah","a@a","a@u","a|","am","a,","accidentalCodes","acc","accidentals","#","parenRightPaddingAdjustment","##","bb","{","}","db","d","bbs","++","+","+-","++-","bs","bss","o","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","keySignature","spec","keySpec","keySpecs","notes","accidentalList","acc_list","num","Am","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","Em","Bm","F#m","C#m","G#m","D#m","A#m","unicode","sharp","fromCharCode","flat","natural","triangle","o-with-slash","degrees","circle","parseNoteDurationString","durationString","regexp","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","durationAliases","durations","durationToFraction","durationToNumber","1/2","16","32","64","128","256","w","q","durationToGlyph","duration_codes","glyphTypeProperties","common","code_head","stem","stem_offset","flag","stem_up_extension","stem_down_extension","gracenote_stem_up_extension","gracenote_stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","r","beam_count","code_flag_upstem","code_flag_downstem","TIME4_4","num_beats","beat_value","resolution","numerator","denominator","set","t","GCD","LCM","arg0","LCMM","u","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","_copy","floor","abs","__tmp","quotient","fraction","toSimplifiedString","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","nextX","nextY","command","_boundingboxcomputation","_Element","point","setAttribute","font","metrics","x_shift","y_shift","originShift","setOptions","reset","glyphs","x_min","x_max","ha","cached_outline","x_pos","y_pos","nocache","loadMetrics","renderOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","BoundingBoxComputation","addPoint","addQuadraticCurve","addBezierCurve","x1","y1","stave","bbox","getOutlineBoundingBox","getW","getH","getX","xShift","getY","yShift","setOriginX","setOriginY","setRendered","applyStyle","restoreStyle","checkContext","context","getYForGlyphs","_ref","newID","boundingBox","rendered","getDefaultRegistry","register","ID","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","className","registry","onUpdate","oldValue","setIndexValue","elem","clear","INDEXES","updateIndex","onRegister","attrName","getElementsByAttribute","_ref2","array","defaultRegistry","x2","y2","Number","NaN","isNaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","pow","b2ac","t1","sqrt","addX","addY","t2","that","new_x","new_y","new_w","new_h","draw","rect","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","va","vb","vc","vf","v10","v11","v18","v1b","v1d","v1e","v1f","v20","v22","v23","v25","v26","v27","v28","v29","v2a","v2c","v2d","v2f","v30","v31","v33","v34","v36","v38","v39","v3b","v3c","v3e","v3f","v40","v41","v42","v43","v44","v45","v46","v47","v49","v4a","v4b","v4d","v4e","v51","v52","v53","v54","v55","v58","v59","v5a","v5b","v5c","v5d","v60","v62","v68","v6c","v6d","v6f","v70","v72","v74","v75","v78","v79","v7a","v7c","v7d","v7f","v80","v81","v83","v84","v86","v8a","v8b","v8c","v8d","v8f","v90","v92","v93","v94","v95","v97","v9a","v9b","v9c","v9e","va3","va5","va9","vaa","vab","vad","vb1","vb3","vb4","vb6","vb7","vb9","vba","vbf","vc3","vd0","vd1","cssFontWeight","ascender","underlinePosition","cssFontStyle","yMin","xMin","yMax","xMax","descender","familyName","lineHeight","underlineThickness","_canvascontext","_raphaelcontext","_svgcontext","lastContext","elementId","backend","element","paper","Backends","CANVAS","bolsterCanvasContext","RAPHAEL","RaphaelContext","SVG","SVGContext","background","renderer","resize","setBackgroundFillStyle","buildContext","USE_CANVAS_PROXY","CanvasContext","methodNames","vexFlowCanvasContext","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","VML","NONE","UP","DOWN","devicePixelRatio","WIDTH","HEIGHT","clearRect","family","size","weight","background_fillStyle","blur","cap_type","lineCap","dash","lineDash","parseFloat","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","Raphael","pen","font_family","font_size","font_weight","attributes","stroke-width","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","tmp","delta","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","stroke-linejoin","stroke-linecap","opacity","strokeWidth","txt","bounds","getBBox","remove","svgNS","svg","appendChild","font-family","font-size","font-weight","stroke-dasharray","font-style","iePolyfill","svgElementType","createElementNS","cls","pointerBBox","ie","bold","italic","fontAttributes","fontSize","fontArray","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBoxString","propertyName","setAttributeNS","lastChild","removeChild","rectangle","add","textContent","ieMeasureTextFix","widthCorrection","DEBUG","lookAhead","restLine","nextRestLine","note","isRest","shouldIgnoreTicks","getLineForRest","bot","createContexts","voices","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","voice","equals","getMode","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","ticksUsed","getTickables","tickable","integerTicks","newContext","getTicks","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","contextGaps","total","gaps","_ref$paddingBetween","paddingBetween","addToModifierContext","tick","addTickable","preFormat","extra","getExtraPx","setX","right","formatter","xPos","STAVEPADDING","setFont","gap","round","lossHistory","loss","auto_beam","align_rests","setMode","SOFT","addTickables","beams","applyAndGetBeams","joinVoices","formatToStave","setStave","beam","setContext","getBoundingBox","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","tuplet","getGlyph","getKeyProps","setKeyLine","AlignRestsToNotes","createTickContexts","_tickContexts","contextList","contextMap","tContexts","getTicksUsed","justifyWidth","renderingContext","centerX","extraLeftPx","remainingX","leftoverPxPerTick","spaceAccum","prevTick","getCenterAlignedTickables","center_x_shift","evaluate","updateStats","space","stats","durationStats","mean","count","_this2","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","getFormatterMetrics","freedom","formatterMetrics","leftNoteEdge","noteWidth","modRightPx","extraRightPx","rightNote","rightMetrics","modLeftPx","used","totalDeviation","iterations","deviation","totalCost","move","_this3","sum","means","nextContext","cost","minShift","postFormatContexts","postFormat","createModifierContexts","alignRests","getNoteEndX","getNoteStartX","format","_toConsumableArray","arr2","calculateStemDirection","lineSum","keyProps","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","getStemExtents","topY","firstStemX","getStemX","auto_stem","getIntrinsicTicks","stem_direction","hasStem","getStemDirection","getCategory","stem_weight","memo","setStemDirection","setBeam","postFormatted","getBeamCount","break_on_indices","render_options","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","time_sig","defaults","2/2","3/2","4/2","1/4","2/4","3/4","4/4","1/8","2/8","3/8","4/8","1/16","2/16","3/16","4/16","beatTotal","beatValue","generateBeams","vf_notes","nextTickGroup","tickGroups","currentTickGroup","findFirstNote","_i","_note2","applyStemDirection","direction","multiply","unprocessedNotes","noteGroups","currentGroup","nextGroup","unprocessedNote","ticksPerGroup","unbeamable","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","stemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","secondary_breaks","secondary_break_ticks","flat_beam_offset","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","_i2","setBracketed","beamCount","indices","first_x_px","first_y_px","slope","_render_options","initialSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","_i3","_note4","adjustedStemTipY","getSlopeY","stemTipY","diff","idealSlope","distanceFromIdeal","_render_options2","extremeY","extremeBeamCount","currentExtreme","_i4","_note5","getYs","beamWidth","extremeTest","newOffset","_render_options3","_i5","_note6","stemX","_note6$getStemExtents","beamedStemTipY","preBeamExtension","getStem","getExtension","beamExtension","setExtension","renderHeightAdjustment","totalBeamWidth","setVisibility","setStemlet","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","_i6","_note7","should_break","note_gets_beam","stem_x","next_note","beam_next","start","last_beam","valid_beam_durations","beamY","beamThickness","_i7","beamLines","getBeamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","drawStems","drawBeamLines","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","resolveGlyphs","attach","setTuplet","resetTuplet","getNotesOccupied","beats","setNotesOccupied","detach","num_glyphs","denom_glyphs","countTuplets","tupletStack","first_note","maxTupletCount","minTupletCount","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","y_offset","getStave","getYForLine","top_y","baseY","bottom_y","last_note","getTieLeftX","getTieRightX","getYPosition","addGlyphWidth","notation_center_x","notation_start_x","line_width","x_offset","colon_x","colon_radius","x_begin","x_end","y_top","y_bottom","stem_extension","hide","isStemlet","stemletHeight","ext","CATEGORY","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","isVisible","stem_y","getHeight","stemletYOffset","time","tickables","smallestTickCount","largestTickWidth","voiceGroup","FULL","mergeWith","g","lessThan","setVoice","preFormatted","tickable_bb","drawBoldDoubleLine","topX","botY","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","thickness","DOUBLE","texts","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","typeString","content","shift_x","getNumLines","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","text_width","getBottomLineY","shiftRestVertical","dir","isrest","maxLine","minLine","getKeyLine","centerRest","noteU","noteL","_extends","_get","object","receiver","desc","getOwnPropertyDescriptor","getter","_stemmablenote","_dot","getStemAdjustment","isInnerNoteIndex","_StemmableNote","noteStruct","noteType","use_default_head_x","note_heads","modifiers","glyph_font_scale","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","autoStem","buildFlag","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","noteM","voiceXShift","stemDelta","lineSpacing","setStemLength","setXShift","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNotBottomY","right_shift","noteHeadStyles","noteHead","buildNoteHeads","setStyle","head","calcExtraPx","yExtend","setStem","getKeys","lastLine","lineDiff","noteProps","notehead","note_type","custom_glyph_code","decider","Infinity","_getMetrics","getAbsoluteX","minY","maxY","halfLineSpacing","getSpacingBetweenLines","frac","yy","isTopNote","resultLine","thisLine","getCenterGlyphX","textLine","extents","getYForTopText","annotation_spacing","setYs","_getNoteHeadBounds","getNoteHeadBounds","setYBounds","tieStartX","getGlyphWidth","modifierContext","getExtraRightPx","tieEndX","_Modifier$Position","Position","ABOVE","BELOW","LEFT","RIGHT","hasFlag","ledgerLineStyle","flagStyle","mContext","setModifierContext","addModifier","setPreFormatted","setNote","setIndex","articulation","annotation","dot","Dot","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","setWidth","yTop","yBottom","nonDisplacedX","displacedX","highestLine","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","getLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","doubleWidth","_getNoteHeadBounds2","min_x","drawLedgerLine","normal","ledgerWidth","getLedgerLineStyle","getYForNote","_line","_normal","_displaced","openGroup","getIndex","noteheadStyle","closeGroup","shouldRenderFlag","_getNoteHeadBounds3","noteStemHeight","flagX","flagY","getFlagStyle","stemStruct","xBegin","shouldRenderStem","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","StemmableNote","drawSlashNoteHead","staveSpace","breve_lines","_Note","head_options","STEM_UP","glyph_code","custom_glyph","slashed","displacementStemAdjustment","spacing","half_spacing","min_y","setY","head_x","_tickable","_Tickable","note_struct","initData","duration_override","setDuration","setIntrinsicTicks","positions","playNote","tickContext","ignore_ticks","left_modPx","right_modPx","align_center","setCenterAlignment","stave_padding","yPos","getXShift","xStart","xPre1","xAbs","xPost1","xPost2","xEnd","xFreedomRight","xWidth","spaceDeviation","text_line","tc","mc","left_shift","isCenterAligned","getCenterXShift","Tickable","intrinsicTicks","tickMultiplier","noteCount","notesOccupied","getNoteCount","applyTickMultiplier","mod","stemExtensionOverride","flagCode","getStemExtension","setDirection","getExtents","getYForBottomText","stem_struct","modifier_context","spacingFromNextModifier","above","below","PositionString","_Modifier","dot_list","getNote","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","_dot_list$_i","_shift","lineSpace","spacing_between_lines_px","getModifierStartXY","top_text_line","PREFORMAT","POSTFORMAT","formatted","extra_left_px","extra_right_px","number","finger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","getPosition","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","_nums_list$_i","_pos","_num","numWidth","dot_x","dot_y","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","done","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","leftShift","accList","propsTemp","accLine","lineList","accShift","previousLine","_acc","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","_getGroupLines$map","_getGroupLines$map2","notColliding","_len2","indexPairs","_key2","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","sameAccidental","previouslyModified","addAccidental","getGraceNotes","fontScale","parenWidth","accX","accY","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","roots","rootName","noteName","getRelativeNoteName","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","b2","min2","S","H","maj2","T","b3","min3","maj3","#4","b5","aug4","#5","b6","aug5","maj6","m7","min7","dom7","maj7","major","dorian","mixolydian","minor","M","scales","root_index","cn","c#","c##","cbb","dn","d#","d##","dbb","en","e#","e##","eb","ebb","f#","f##","fb","fbb","gn","g#","g##","gb","gbb","an","a#","a##","ab","abb","bn","b#","b##","bbb","subNotes","_ret","subNote","setStrict","getMinTotalWidth","getTickContext","extraPx","extraLeft","getSpacingFromNextModifier","tick_context","grace_notes","show_slur","slur","slur_y_shift","gracenote_groups","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","_gracenote_group","_gracenote_group2","setSpacingFromNextModifier","graceNote","TieClass","first_indices","last_indices","cp2","cp1","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","renderTie","renderText","_StaveTie","all_voices","note_end","stroke_spacing","strokes","strokeList","_note$getKeyProps$str","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","line_space","getModifierContext","arrow","arrow_shift_x","arrow_y","text_y","Type","string_number","dashed","leg","LineEndType","shift_left","num_shiftR","x_widthL","x_widthR","num_width","stem_ext","bottom","STEM_DOWN","drawDashedLine","_defineProperty","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","getTopY","_note$getStemExtents","stemBaseY","getBottomY","_note$getStemExtents2","getInitialOffset","isOnStemTip","isAbove","isBelow","getIncrement","setTextLine","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","_ref3","getFactory","_ABOVE$BELOW$position","staffSpace","isTab","_note$getModifierStar","shouldSitOutsideStaff","initialOffset","setOrigin","INITIAL_OFFSET","noteLine","distanceFromNote","articLine","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornament","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","totalSpacing","glyphYBetweenLines","glyphX","glyphY","getNextContext","currentTick","maxTicks","minTicks","padding","notePx","tContext","extraRight","setTickContext","justification","Justify","CENTER","vert_justification","VerticalJustify","TOP","annotations","CENTER_STEM","center","centerStem","BOTTOM","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","yb","release","phrase","line_style","bend_width","release_width","updateWidth","bends","last_width","bend","total_width","additional_width","draw_width","renderRelease","renderArrowHead","bend_height","annotation_y","last_bend","last_drawn_width","cp_y","setRawFont","render_x","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","vx","vy","renderVibrato","num_waves","_stavesection","_stavetempo","_stavetext","start_x","end_x","measure","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","BEGIN","begBarline","getType","REPEAT_BEGIN","number_t","section","StaveSection","tempo","StaveTempo","StaveText","headroom","setPosition","END","_Barline$type","setType","clefSpec","clefs","addClef","setClef","cancelKeySpec","keySignatures","addKeySignature","setKeySig","setKeySignature","timeSpec","customPadding","timeSignatures","addTimeSignature","setTimeSig","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","getPadding","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","_StaveModifier","TYPE","widths","REPEAT_END","REPEAT_BOTH","paddings","repeatBegin","repeatEnd","repeatBoth","setPadding","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","renderToStave","setYShift","symbol_type","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","bpm","stem_height","Justification","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","segno","mordent_upper","mordent_lower","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","tab","small","8va","sizes","attachments","8vb","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","alterKeySpec","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","convertToCancelAccList","firstAccidentalType","convertToAlterAccList","convertAccLines","convertToGlyph","_glyph3","assertIsValidFraction","numbers","topLine","bottomLine","timeSig","C|","_TimeSignature$glyphs","_timeSpec$split$map","_timeSpec$split$map2","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","_glyph2","parseTimeSpec","volta","MID","BEGIN_END","vert_height","_Stave","tab_options","getUnusedStringGroups","strings_used","stem_through","string","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","stem_extension_override","getStemY","note_glyph_width","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","_this4","tab_x","_text","render_stem","drawPositions","drawStemThrough","bracket_data","stop","stop_x","clef_obj","abs_x","timeSignature","getTimeSig","_TabTie","first_fret","last_fret","SLIDE_DOWN","SLIDE_UP","slide_direction","slide_y","_StaveNote","SCALE","LEDGER_LINE_OFFSET","slash","_TabNote","tuningString","setTuning","standard","dagdad","dropd","standardBanjo","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","setKey","keyParts","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","change","valueNote","originalValueNote","hairpin","left_shift_px","right_shift_px","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","setRenderOptions","CRESC","DECRESC","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","renderHairpin","last_y","NEAR_HEAD","position_end","invert","cps","NEAR_TOP","nearHead","nearTop","cp_spacing","metric","end_metric","renderCurve","sequence","glyph_font_size","letter","glyph_data","letter_x","current_letter","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","bottom_x","padding_left","padding_right","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","applyLineStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","delta_x","vertical_position","applyFontStyle","drawPedalGlyph","TEXT","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","pedal","Styles","MIXED","setCustomText","pedal_depress","pedal_release","mixed","depress","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawBracketed","drawText","_ref$text","_ref$superscript","_ref$position","Positions","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","_this$metrics$widths","barline","parameter","y_spacing","begin_x","half_height","decrescendo","extend_left","extend_right","decresc","next_context","setDefaults","default_options","connector","spaceBetweenStaves","debugFormatter","formatIterations","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics","face","renderQ","systems","staves","initRenderer","_options$renderer","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","vJustify","hJustify","fontFamily","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","StylesString","isRendered","setId","setClass","commaSeparatedRegex","addClass","Grammar","LINE","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","_this5","SLASH","MAYBESLASH","TYPES","setNoteType","_this6","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","_this7","unquote","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Builder","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","addNote","_this8","_this9","_piece","accids","addDotToAll","_this10","easyScoreHook","throwOnError","grammar","parser","addCommitHook","success","getElements","voiceOptions","flattenMatches","results","matchedString","errorPos","returnPos","noSpace","workingLine","incrementPos","rule","allMatches","oneMatch","localPos","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","expectZeroOrMore","7+uW","global","isUndef","isTrue","isFalse","isPrimitive","isPlainObject","_toString","isRegExp","isValidArrayIndex","isFinite","toNumber","makeMap","expectsLowerCase","hasOwn","cached","boundFn","_length","toArray","ret","_from","toObject","noop","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","isReserved","bailRE","isNative","Ctor","pushTarget","_target","Dep","targetStack","popTarget","createTextVNode","VNode","cloneVNode","deep","componentOptions","cloned","elm","asyncFactory","ns","isComment","isCloned","cloneVNodes","vnodes","protoAugment","src","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","customSetter","shallow","dep","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","update","mergeOptions","mergeField","strat","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","hyphenate","getPropDefaultValue","prevShouldConvert","_props","handleError","info","cur","hooks","errorCaptured","globalHandleError","errorHandler","logError","flushCallbacks","copies","callbacks","withMacroTask","_withTask","useMacroTask","nextTick","_resolve","macroTimerFunc","microTimerFunc","Promise","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","normalizeEvent","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","merged","extractPropsFromVNodeData","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","lastIndex","_isVList","ensureCtor","createAsyncPlaceholder","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","loading","loadingComp","sync","forceRender","$forceUpdate","delay","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","slot","functionalContext","name$1","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_vnode","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","activatedChildren","has","waiting","flushing","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","traverse","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","initProps","methods","initMethods","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","dirty","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","resolveInject","Reflect","ownKeys","provideKey","provideDefault","renderList","renderSlot","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","eventKeyName","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","tree","staticRenderFns","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","FunctionalRenderContext","injections","contextVm","isCompiled","_compiled","needNormalization","_scopeId","_c","createElement","functionalScopeId","createFunctionalComponent","mergeProps","renderContext","functionalOptions","createComponent","_base","resolveConstructorOptions","model","transformModel","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","componentVNodeHooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","force","initRender","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","plugin","installedPlugins","_installedPlugins","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","createElement$1","tagName","multiple","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","registerRef","isRemoval","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","inserted","callInsert","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","updateClass","oldData","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","parseModel","lastIndexOf","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","CHECKBOX_RADIO_TOKEN","createOnceHandler","target$1","onceHandler","remove$2","add$1","once$$1","supportsPassive","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","classList","removeClass","tar","resolveTransition","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","toMs","enter","toggleDisplay","_leaveCb","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","moved","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","substring","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","rest$1","all","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","shouldDecodeNewlinesForHref","createASTElement","makeAttrsMap","template","endPre","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","processIfConditions","slotScope","plain","slotTarget","i$1","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","addRawAttr","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compiled","fnGenErrors","getShouldDecode","div","innerHTML","getOuterHTML","outerHTML","container","cloneNode","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","silent","productionTip","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","hasProto","UA","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","uid","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","MessageChannel","channel","port","port2","port1","onmessage","postMessage","uid$2","expOrFn","user","deps","newDeps","depIds","newDepIds","cleanupDeps","teardown","$mount","keepAlive","mountedNode","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","patternTypes","KeepAlive","include","exclude","builtInComponents","configDef","delete","ssrContext","emptyStyle","acceptValue","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","directive","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","hasMove","_reflow","body","offsetHeight","_hasMove","platformComponents","decoder","regexEscapeRE","open","klass$1","style$1","he","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","esc","up","down","prevent","ctrl","alt","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","DuR2","eval","FZ+f","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","sourceMap","unescape","mediaQuery","alreadyImportedModules","NYxO","devtoolPlugin","store","devtoolHook","_devtoolHook","targetState","subscribe","mutation","forEachValue","isPromise","targetModule","newModule","getChild","genericSubscribe","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","resetStoreVM","oldVm","_vm","getters","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","action","registerAction","forEachGetter","registerGetter","forEachChild","noNamespace","dispatch","_type","_payload","_options","unifyObjectStyle","payload","commit","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","rawGetter","applyMixin","normalizeMap","normalizeNamespace","getModuleByNamespace","helper","vuexInit","$store","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","addChild","actions","mutations","ModuleCollection","rawRootModule","rawChildModule","unregister","Store","plugins","_committing","_actionSubscribers","_subscribers","_watcherVM","entry","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","states","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","index_esm","VU/8","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","W2nU","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","process","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","c+8m","createDecorator","__decorators__","collectDataFromConstructor","Component","plainData","componentFactory","proto","$internalHooks","decorators","superProto","Extended","staticKey","ex","registerHooks","Component$1","mypn","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","attachEvent","script","onreadystatechange","rjj0","addStylesToDom","domStyle","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","media","styleSheet","replaceText","cssNode","hasDocument","listToStyles","getElementsByTagName","parentId","_isProduction","newList","mayRemove","textStore","replacement","tTVk","newStyles"],"mappings":"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","file":"static/js/vendor.3b5a73c4add847a8bac2.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ \"/ocq\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (false) {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n\n/***/ \"162o\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(\"mypn\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n\n/***/ \"6CD5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _tabstave = __webpack_require__(55);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tvar _vibratobracket = __webpack_require__(57);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _notehead = __webpack_require__(21);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _clefnote = __webpack_require__(58);\n\t\n\tvar _keysignature = __webpack_require__(52);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tvar _timesignote = __webpack_require__(59);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _tabslide = __webpack_require__(60);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _gracenote = __webpack_require__(61);\n\t\n\tvar _gracetabnote = __webpack_require__(62);\n\t\n\tvar _tuning = __webpack_require__(63);\n\t\n\tvar _keymanager = __webpack_require__(64);\n\t\n\tvar _stavehairpin = __webpack_require__(65);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _strokes = __webpack_require__(35);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tvar _curve = __webpack_require__(66);\n\t\n\tvar _textdynamics = __webpack_require__(67);\n\t\n\tvar _staveline = __webpack_require__(68);\n\t\n\tvar _ornament = __webpack_require__(38);\n\t\n\tvar _pedalmarking = __webpack_require__(69);\n\t\n\tvar _textbracket = __webpack_require__(70);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _staverepetition = __webpack_require__(46);\n\t\n\tvar _barnote = __webpack_require__(71);\n\t\n\tvar _ghostnote = __webpack_require__(72);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _tremolo = __webpack_require__(73);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _crescendo = __webpack_require__(74);\n\t\n\tvar _stavevolta = __webpack_require__(54);\n\t\n\tvar _vexflow_font = __webpack_require__(9);\n\t\n\tvar _system = __webpack_require__(75);\n\t\n\tvar _factory = __webpack_require__(76);\n\t\n\tvar _parser = __webpack_require__(78);\n\t\n\tvar _easyscore = __webpack_require__(77);\n\t\n\tvar _registry = __webpack_require__(6);\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t_vex.Vex.Flow = _tables.Flow;\n\t_vex.Vex.Flow.Element = _element.Element;\n\t_vex.Vex.Flow.Fraction = _fraction.Fraction;\n\t_vex.Vex.Flow.Renderer = _renderer.Renderer;\n\t_vex.Vex.Flow.Formatter = _formatter.Formatter;\n\t_vex.Vex.Flow.Music = _music.Music;\n\t_vex.Vex.Flow.Glyph = _glyph.Glyph;\n\t_vex.Vex.Flow.Stave = _stave.Stave;\n\t_vex.Vex.Flow.StaveNote = _stavenote.StaveNote;\n\t_vex.Vex.Flow.StaveModifier = _stavemodifier.StaveModifier;\n\t_vex.Vex.Flow.Voice = _voice.Voice;\n\t_vex.Vex.Flow.Accidental = _accidental.Accidental;\n\t_vex.Vex.Flow.Beam = _beam.Beam;\n\t_vex.Vex.Flow.StaveTie = _stavetie.StaveTie;\n\t_vex.Vex.Flow.TabStave = _tabstave.TabStave;\n\t_vex.Vex.Flow.TabNote = _tabnote.TabNote;\n\t_vex.Vex.Flow.Bend = _bend.Bend;\n\t_vex.Vex.Flow.Vibrato = _vibrato.Vibrato;\n\t_vex.Vex.Flow.VibratoBracket = _vibratobracket.VibratoBracket;\n\t_vex.Vex.Flow.Note = _note.Note;\n\t_vex.Vex.Flow.ModifierContext = _modifiercontext.ModifierContext;\n\t_vex.Vex.Flow.TickContext = _tickcontext.TickContext;\n\t_vex.Vex.Flow.Articulation = _articulation.Articulation;\n\t_vex.Vex.Flow.Annotation = _annotation.Annotation;\n\t_vex.Vex.Flow.Barline = _stavebarline.Barline;\n\t_vex.Vex.Flow.NoteHead = _notehead.NoteHead;\n\t_vex.Vex.Flow.StaveConnector = _staveconnector.StaveConnector;\n\t_vex.Vex.Flow.ClefNote = _clefnote.ClefNote;\n\t_vex.Vex.Flow.KeySignature = _keysignature.KeySignature;\n\t_vex.Vex.Flow.TimeSignature = _timesignature.TimeSignature;\n\t_vex.Vex.Flow.TimeSigNote = _timesignote.TimeSigNote;\n\t_vex.Vex.Flow.Stem = _stem.Stem;\n\t_vex.Vex.Flow.TabTie = _tabtie.TabTie;\n\t_vex.Vex.Flow.Clef = _clef.Clef;\n\t_vex.Vex.Flow.Modifier = _modifier.Modifier;\n\t_vex.Vex.Flow.TabSlide = _tabslide.TabSlide;\n\t_vex.Vex.Flow.Tuplet = _tuplet.Tuplet;\n\t_vex.Vex.Flow.GraceNote = _gracenote.GraceNote;\n\t_vex.Vex.Flow.GraceTabNote = _gracetabnote.GraceTabNote;\n\t_vex.Vex.Flow.Tuning = _tuning.Tuning;\n\t_vex.Vex.Flow.KeyManager = _keymanager.KeyManager;\n\t_vex.Vex.Flow.StaveHairpin = _stavehairpin.StaveHairpin;\n\t_vex.Vex.Flow.BoundingBox = _boundingbox.BoundingBox;\n\t_vex.Vex.Flow.Stroke = _strokes.Stroke;\n\t_vex.Vex.Flow.TextNote = _textnote.TextNote;\n\t_vex.Vex.Flow.Curve = _curve.Curve;\n\t_vex.Vex.Flow.TextDynamics = _textdynamics.TextDynamics;\n\t_vex.Vex.Flow.StaveLine = _staveline.StaveLine;\n\t_vex.Vex.Flow.Ornament = _ornament.Ornament;\n\t_vex.Vex.Flow.PedalMarking = _pedalmarking.PedalMarking;\n\t_vex.Vex.Flow.TextBracket = _textbracket.TextBracket;\n\t_vex.Vex.Flow.FretHandFinger = _frethandfinger.FretHandFinger;\n\t_vex.Vex.Flow.Repetition = _staverepetition.Repetition;\n\t_vex.Vex.Flow.BarNote = _barnote.BarNote;\n\t_vex.Vex.Flow.GhostNote = _ghostnote.GhostNote;\n\t_vex.Vex.Flow.NoteSubGroup = _notesubgroup.NoteSubGroup;\n\t_vex.Vex.Flow.GraceNoteGroup = _gracenotegroup.GraceNoteGroup;\n\t_vex.Vex.Flow.Tremolo = _tremolo.Tremolo;\n\t_vex.Vex.Flow.StringNumber = _stringnumber.StringNumber;\n\t_vex.Vex.Flow.Crescendo = _crescendo.Crescendo;\n\t_vex.Vex.Flow.Volta = _stavevolta.Volta;\n\t_vex.Vex.Flow.Font = _vexflow_font.Font;\n\t_vex.Vex.Flow.System = _system.System;\n\t_vex.Vex.Flow.Factory = _factory.Factory;\n\t_vex.Vex.Flow.Parser = _parser.Parser;\n\t_vex.Vex.Flow.EasyScore = _easyscore.EasyScore;\n\t_vex.Vex.Flow.Registry = _registry.Registry;\n\t\n\texports.default = _vex.Vex;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements utility methods used by the rest of the VexFlow\n\t// codebase.\n\t//\n\t\n\tvar Vex = function Vex() {};\n\t\n\t// Default log function sends all arguments to console.\n\tVex.L = function (block, args) {\n\t  if (!args) return;\n\t  var line = Array.prototype.slice.call(args).join(' ');\n\t  window.console.log(block + ': ' + line);\n\t};\n\t\n\tVex.MakeException = function (name) {\n\t  var exception = function (_Error) {\n\t    _inherits(exception, _Error);\n\t\n\t    function exception(message, data) {\n\t      _classCallCheck(this, exception);\n\t\n\t      var _this = _possibleConstructorReturn(this, (exception.__proto__ || Object.getPrototypeOf(exception)).call(this, message));\n\t\n\t      _this.name = name;\n\t      _this.message = message;\n\t      _this.data = data;\n\t      return _this;\n\t    }\n\t\n\t    return exception;\n\t  }(Error);\n\t\n\t  return exception;\n\t};\n\t\n\t// Default runtime exception.\n\t\n\tvar RuntimeError = function () {\n\t  function RuntimeError(code, message) {\n\t    _classCallCheck(this, RuntimeError);\n\t\n\t    this.code = code;\n\t    this.message = message;\n\t  }\n\t\n\t  _createClass(RuntimeError, [{\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '[RuntimeError] ' + this.code + ':' + this.message;\n\t    }\n\t  }]);\n\t\n\t  return RuntimeError;\n\t}();\n\t\n\t// Shortcut method for `RuntimeError`.\n\t\n\t\n\tVex.RuntimeError = RuntimeError;\n\tVex.RERR = Vex.RuntimeError;\n\t\n\t// Merge `destination` hash with `source` hash, overwriting like keys\n\t// in `source` if necessary.\n\tVex.Merge = function (destination, source) {\n\t  for (var property in source) {\n\t    // eslint-disable-line guard-for-in\n\t    destination[property] = source[property];\n\t  }\n\t  return destination;\n\t};\n\t\n\t// DEPRECATED. Use `Math.*`.\n\tVex.Min = Math.min;\n\tVex.Max = Math.max;\n\tVex.forEach = function (a, fn) {\n\t  for (var i = 0; i < a.length; i++) {\n\t    fn(a[i], i);\n\t  }\n\t};\n\t\n\t// Round number to nearest fractional value (`.5`, `.25`, etc.)\n\tVex.RoundN = function (x, n) {\n\t  return x % n >= n / 2 ? parseInt(x / n, 10) * n + n : parseInt(x / n, 10) * n;\n\t};\n\t\n\t// Locate the mid point between stave lines. Returns a fractional line if a space.\n\tVex.MidLine = function (a, b) {\n\t  var mid_line = b + (a - b) / 2;\n\t  if (mid_line % 2 > 0) {\n\t    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n\t  }\n\t  return mid_line;\n\t};\n\t\n\t// Take `arr` and return a new list consisting of the sorted, unique,\n\t// contents of arr. Does not modify `arr`.\n\tVex.SortAndUnique = function (arr, cmp, eq) {\n\t  if (arr.length > 1) {\n\t    var newArr = [];\n\t    var last = void 0;\n\t    arr.sort(cmp);\n\t\n\t    for (var i = 0; i < arr.length; ++i) {\n\t      if (i === 0 || !eq(arr[i], last)) {\n\t        newArr.push(arr[i]);\n\t      }\n\t      last = arr[i];\n\t    }\n\t\n\t    return newArr;\n\t  } else {\n\t    return arr;\n\t  }\n\t};\n\t\n\t// Check if array `a` contains `obj`.\n\tVex.Contains = function (a, obj) {\n\t  var i = a.length;\n\t  while (i--) {\n\t    if (a[i] === obj) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\t// Get the 2D Canvas context from DOM element `canvas_sel`.\n\tVex.getCanvasContext = function (canvas_sel) {\n\t  if (!canvas_sel) {\n\t    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n\t  }\n\t\n\t  var canvas = document.getElementById(canvas_sel);\n\t  if (!(canvas && canvas.getContext)) {\n\t    throw new Vex.RERR('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n\t  }\n\t\n\t  return canvas.getContext('2d');\n\t};\n\t\n\t// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n\t//\n\t// `ctx`: Canvas context.\n\t// `x`, `y`: Dot coordinates.\n\tVex.drawDot = function (ctx, x, y) {\n\t  var color = arguments.length <= 3 || arguments[3] === undefined ? '#55' : arguments[3];\n\t\n\t  ctx.save();\n\t  ctx.setFillStyle(color);\n\t\n\t  // draw a circle\n\t  ctx.beginPath();\n\t  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n\t  ctx.closePath();\n\t  ctx.fill();\n\t  ctx.restore();\n\t};\n\t\n\t// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\n\tVex.BM = function (s, f) {\n\t  var start_time = new Date().getTime();\n\t  f();\n\t  var elapsed = new Date().getTime() - start_time;\n\t  Vex.L(s + elapsed + 'ms');\n\t};\n\t\n\t// Get stack trace.\n\tVex.StackTrace = function () {\n\t  var err = new Error();\n\t  return err.stack;\n\t};\n\t\n\t// Dump warning to console.\n\tVex.W = function () {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  var line = args.join(' ');\n\t  window.console.log('Warning: ', line, Vex.StackTrace());\n\t};\n\t\n\t// Used by various classes (e.g., SVGContext) to provide a\n\t// unique prefix to element names (or other keys in shared namespaces).\n\tVex.Prefix = function (text) {\n\t  return Vex.Prefix.prefix + text;\n\t};\n\tVex.Prefix.prefix = 'vf-';\n\t\n\texports.Vex = Vex;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Flow = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t/* eslint-disable key-spacing */\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar Flow = {\n\t  STEM_WIDTH: 1.5,\n\t  STEM_HEIGHT: 35,\n\t  STAVE_LINE_THICKNESS: 1,\n\t  RESOLUTION: 16384,\n\t  DEFAULT_NOTATION_FONT_SCALE: 39,\n\t  DEFAULT_TABLATURE_FONT_SCALE: 39,\n\t  SLASH_NOTEHEAD_WIDTH: 15,\n\t\n\t  // HACK:\n\t  // Since text origins are positioned at the baseline, we must\n\t  // compensate for the ascender of the text. Of course, 1 staff space is\n\t  // a very poor approximation.\n\t  //\n\t  // This will be deprecated in the future. This is a temporary solution until\n\t  // we have more robust text metrics.\n\t  TEXT_HEIGHT_OFFSET_HACK: 1,\n\t\n\t  /* Kerning (DEPRECATED) */\n\t  IsKerned: true\n\t};\n\t\n\tFlow.clefProperties = function (clef) {\n\t  if (!clef) throw new _vex.Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\t\n\t  var props = Flow.clefProperties.values[clef];\n\t  if (!props) throw new _vex.Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\t\n\t  return props;\n\t};\n\t\n\tFlow.clefProperties.values = {\n\t  'treble': { line_shift: 0 },\n\t  'bass': { line_shift: 6 },\n\t  'tenor': { line_shift: 4 },\n\t  'alto': { line_shift: 3 },\n\t  'soprano': { line_shift: 1 },\n\t  'percussion': { line_shift: 0 },\n\t  'mezzo-soprano': { line_shift: 2 },\n\t  'baritone-c': { line_shift: 5 },\n\t  'baritone-f': { line_shift: 5 },\n\t  'subbass': { line_shift: 7 },\n\t  'french': { line_shift: -1 }\n\t};\n\t\n\t/*\n\t  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\t\n\t  The last argument, params, is a struct the currently can contain one option,\n\t  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n\t*/\n\tFlow.keyProperties = function (key, clef, params) {\n\t  if (clef === undefined) {\n\t    clef = 'treble';\n\t  }\n\t\n\t  var options = { octave_shift: 0 };\n\t\n\t  if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t    _vex.Vex.Merge(options, params);\n\t  }\n\t\n\t  var pieces = key.split('/');\n\t\n\t  if (pieces.length < 2) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Key must have note + octave and an optional glyph: ' + key);\n\t  }\n\t\n\t  var k = pieces[0].toUpperCase();\n\t  var value = Flow.keyProperties.note_values[k];\n\t  if (!value) throw new _vex.Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n\t  if (value.octave) pieces[1] = value.octave;\n\t\n\t  var octave = parseInt(pieces[1], 10);\n\t\n\t  // Octave_shift is the shift to compensate for clef 8va/8vb.\n\t  octave += -1 * options.octave_shift;\n\t\n\t  var base_index = octave * 7 - 4 * 7;\n\t  var line = (base_index + value.index) / 2;\n\t  line += Flow.clefProperties(clef).line_shift;\n\t\n\t  var stroke = 0;\n\t\n\t  if (line <= 0 && line * 2 % 2 === 0) stroke = 1; // stroke up\n\t  if (line >= 6 && line * 2 % 2 === 0) stroke = -1; // stroke down\n\t\n\t  // Integer value for note arithmetic.\n\t  var int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : null;\n\t\n\t  /* Check if the user specified a glyph. */\n\t  var code = value.code;\n\t  var shift_right = value.shift_right;\n\t  if (pieces.length > 2 && pieces[2]) {\n\t    var glyph_name = pieces[2].toUpperCase();\n\t    var note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n\t    if (note_glyph) {\n\t      code = note_glyph.code;\n\t      shift_right = note_glyph.shift_right;\n\t    }\n\t  }\n\t\n\t  return {\n\t    key: k,\n\t    octave: octave,\n\t    line: line,\n\t    int_value: int_value,\n\t    accidental: value.accidental,\n\t    code: code,\n\t    stroke: stroke,\n\t    shift_right: shift_right,\n\t    displaced: false\n\t  };\n\t};\n\t\n\tFlow.keyProperties.note_values = {\n\t  'C': { index: 0, int_val: 0, accidental: null },\n\t  'CN': { index: 0, int_val: 0, accidental: 'n' },\n\t  'C#': { index: 0, int_val: 1, accidental: '#' },\n\t  'C##': { index: 0, int_val: 2, accidental: '##' },\n\t  'CB': { index: 0, int_val: -1, accidental: 'b' },\n\t  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n\t  'D': { index: 1, int_val: 2, accidental: null },\n\t  'DN': { index: 1, int_val: 2, accidental: 'n' },\n\t  'D#': { index: 1, int_val: 3, accidental: '#' },\n\t  'D##': { index: 1, int_val: 4, accidental: '##' },\n\t  'DB': { index: 1, int_val: 1, accidental: 'b' },\n\t  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n\t  'E': { index: 2, int_val: 4, accidental: null },\n\t  'EN': { index: 2, int_val: 4, accidental: 'n' },\n\t  'E#': { index: 2, int_val: 5, accidental: '#' },\n\t  'E##': { index: 2, int_val: 6, accidental: '##' },\n\t  'EB': { index: 2, int_val: 3, accidental: 'b' },\n\t  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n\t  'F': { index: 3, int_val: 5, accidental: null },\n\t  'FN': { index: 3, int_val: 5, accidental: 'n' },\n\t  'F#': { index: 3, int_val: 6, accidental: '#' },\n\t  'F##': { index: 3, int_val: 7, accidental: '##' },\n\t  'FB': { index: 3, int_val: 4, accidental: 'b' },\n\t  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n\t  'G': { index: 4, int_val: 7, accidental: null },\n\t  'GN': { index: 4, int_val: 7, accidental: 'n' },\n\t  'G#': { index: 4, int_val: 8, accidental: '#' },\n\t  'G##': { index: 4, int_val: 9, accidental: '##' },\n\t  'GB': { index: 4, int_val: 6, accidental: 'b' },\n\t  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n\t  'A': { index: 5, int_val: 9, accidental: null },\n\t  'AN': { index: 5, int_val: 9, accidental: 'n' },\n\t  'A#': { index: 5, int_val: 10, accidental: '#' },\n\t  'A##': { index: 5, int_val: 11, accidental: '##' },\n\t  'AB': { index: 5, int_val: 8, accidental: 'b' },\n\t  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n\t  'B': { index: 6, int_val: 11, accidental: null },\n\t  'BN': { index: 6, int_val: 11, accidental: 'n' },\n\t  'B#': { index: 6, int_val: 12, accidental: '#' },\n\t  'B##': { index: 6, int_val: 13, accidental: '##' },\n\t  'BB': { index: 6, int_val: 10, accidental: 'b' },\n\t  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n\t  'R': { index: 6, int_val: 9, rest: true }, // Rest\n\t  'X': {\n\t    index: 6,\n\t    accidental: '',\n\t    octave: 4,\n\t    code: 'v3e',\n\t    shift_right: 5.5\n\t  }\n\t};\n\t\n\tFlow.keyProperties.note_glyph = {\n\t  /* Diamond */\n\t  'D0': { code: 'v27', shift_right: -0.5 },\n\t  'D1': { code: 'v2d', shift_right: -0.5 },\n\t  'D2': { code: 'v22', shift_right: -0.5 },\n\t  'D3': { code: 'v70', shift_right: -0.5 },\n\t\n\t  /* Triangle */\n\t  'T0': { code: 'v49', shift_right: -2 },\n\t  'T1': { code: 'v93', shift_right: 0.5 },\n\t  'T2': { code: 'v40', shift_right: 0.5 },\n\t  'T3': { code: 'v7d', shift_right: 0.5 },\n\t\n\t  /* Cross */\n\t  'X0': { code: 'v92', shift_right: -2 },\n\t  'X1': { code: 'v95', shift_right: -0.5 },\n\t  'X2': { code: 'v7f', shift_right: 0.5 },\n\t  'X3': { code: 'v3b', shift_right: -2 }\n\t};\n\t\n\tFlow.integerToNote = function (integer) {\n\t  if (typeof integer === 'undefined') {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n\t  }\n\t\n\t  if (integer < -2) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'integerToNote requires integer > -2: ' + integer);\n\t  }\n\t\n\t  var noteValue = Flow.integerToNote.table[integer];\n\t  if (!noteValue) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Unknown note value for integer: ' + integer);\n\t  }\n\t\n\t  return noteValue;\n\t};\n\t\n\tFlow.integerToNote.table = {\n\t  0: 'C',\n\t  1: 'C#',\n\t  2: 'D',\n\t  3: 'D#',\n\t  4: 'E',\n\t  5: 'F',\n\t  6: 'F#',\n\t  7: 'G',\n\t  8: 'G#',\n\t  9: 'A',\n\t  10: 'A#',\n\t  11: 'B'\n\t};\n\t\n\tFlow.tabToGlyph = function (fret) {\n\t  var scale = arguments.length <= 1 || arguments[1] === undefined ? 1.0 : arguments[1];\n\t\n\t  var glyph = null;\n\t  var width = 0;\n\t  var shift_y = 0;\n\t\n\t  if (fret.toString().toUpperCase() === 'X') {\n\t    var glyphMetrics = new _glyph.Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n\t    glyph = 'v7f';\n\t    width = glyphMetrics.width;\n\t    shift_y = -glyphMetrics.height / 2;\n\t  } else {\n\t    width = Flow.textWidth(fret.toString());\n\t  }\n\t\n\t  return {\n\t    text: fret,\n\t    code: glyph,\n\t    getWidth: function getWidth() {\n\t      return width * scale;\n\t    },\n\t    shift_y: shift_y\n\t  };\n\t};\n\t\n\tFlow.textWidth = function (text) {\n\t  return 7 * text.toString().length;\n\t};\n\t\n\tFlow.articulationCodes = function (artic) {\n\t  return Flow.articulationCodes.articulations[artic];\n\t};\n\t\n\tFlow.articulationCodes.articulations = {\n\t  'a.': { code: 'v23', between_lines: true }, // Staccato\n\t  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n\t  'a>': { code: 'v42', between_lines: true }, // Accent\n\t  'a-': { code: 'v25', between_lines: true }, // Tenuto\n\t  'a^': { code: 'va', between_lines: false }, // Marcato\n\t  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n\t  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n\t  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n\t  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n\t  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n\t  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n\t  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n\t  'a,': { code: 'vb3', between_lines: false } };\n\t\n\tFlow.accidentalCodes = function (acc) {\n\t  return Flow.accidentalCodes.accidentals[acc];\n\t};\n\t\n\tFlow.accidentalCodes.accidentals = {\n\t  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n\t  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n\t  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n\t  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n\t  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n\t  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n\t  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n\t  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n\t  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n\t  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n\t  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n\t  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n\t  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n\t  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n\t  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n\t  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n\t  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n\t  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 }\n\t};\n\t\n\tFlow.accidentalColumnsTable = {\n\t  1: {\n\t    a: [1],\n\t    b: [1]\n\t  },\n\t  2: {\n\t    a: [1, 2]\n\t  },\n\t  3: {\n\t    a: [1, 3, 2],\n\t    b: [1, 2, 1],\n\t    second_on_bottom: [1, 2, 3]\n\t  },\n\t  4: {\n\t    a: [1, 3, 4, 2],\n\t    b: [1, 2, 3, 1],\n\t    spaced_out_tetrachord: [1, 2, 1, 2]\n\t  },\n\t  5: {\n\t    a: [1, 3, 5, 4, 2],\n\t    b: [1, 2, 4, 3, 1],\n\t    spaced_out_pentachord: [1, 2, 3, 2, 1],\n\t    very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n\t  6: {\n\t    a: [1, 3, 5, 6, 4, 2],\n\t    b: [1, 2, 4, 5, 3, 1],\n\t    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n\t    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2]\n\t  }\n\t};\n\t\n\tFlow.ornamentCodes = function (acc) {\n\t  return Flow.ornamentCodes.ornaments[acc];\n\t};\n\t\n\tFlow.ornamentCodes.ornaments = {\n\t  'mordent': { code: 'v1e' },\n\t  'mordent_inverted': { code: 'v45' },\n\t  'turn': { code: 'v72' },\n\t  'turn_inverted': { code: 'v33' },\n\t  'tr': { code: 'v1f' },\n\t  'upprall': { code: 'v60' },\n\t  'downprall': { code: 'vb4' },\n\t  'prallup': { code: 'v6d' },\n\t  'pralldown': { code: 'v2c' },\n\t  'upmordent': { code: 'v29' },\n\t  'downmordent': { code: 'v68' },\n\t  'lineprall': { code: 'v20' },\n\t  'prallprall': { code: 'v86' }\n\t};\n\t\n\tFlow.keySignature = function (spec) {\n\t  var keySpec = Flow.keySignature.keySpecs[spec];\n\t\n\t  if (!keySpec) {\n\t    throw new _vex.Vex.RERR('BadKeySignature', 'Bad key signature spec: \\'' + spec + '\\'');\n\t  }\n\t\n\t  if (!keySpec.acc) {\n\t    return [];\n\t  }\n\t\n\t  var notes = Flow.keySignature.accidentalList(keySpec.acc);\n\t\n\t  var acc_list = [];\n\t  for (var i = 0; i < keySpec.num; ++i) {\n\t    var line = notes[i];\n\t    acc_list.push({ type: keySpec.acc, line: line });\n\t  }\n\t\n\t  return acc_list;\n\t};\n\t\n\tFlow.keySignature.keySpecs = {\n\t  'C': { acc: null, num: 0 },\n\t  'Am': { acc: null, num: 0 },\n\t  'F': { acc: 'b', num: 1 },\n\t  'Dm': { acc: 'b', num: 1 },\n\t  'Bb': { acc: 'b', num: 2 },\n\t  'Gm': { acc: 'b', num: 2 },\n\t  'Eb': { acc: 'b', num: 3 },\n\t  'Cm': { acc: 'b', num: 3 },\n\t  'Ab': { acc: 'b', num: 4 },\n\t  'Fm': { acc: 'b', num: 4 },\n\t  'Db': { acc: 'b', num: 5 },\n\t  'Bbm': { acc: 'b', num: 5 },\n\t  'Gb': { acc: 'b', num: 6 },\n\t  'Ebm': { acc: 'b', num: 6 },\n\t  'Cb': { acc: 'b', num: 7 },\n\t  'Abm': { acc: 'b', num: 7 },\n\t  'G': { acc: '#', num: 1 },\n\t  'Em': { acc: '#', num: 1 },\n\t  'D': { acc: '#', num: 2 },\n\t  'Bm': { acc: '#', num: 2 },\n\t  'A': { acc: '#', num: 3 },\n\t  'F#m': { acc: '#', num: 3 },\n\t  'E': { acc: '#', num: 4 },\n\t  'C#m': { acc: '#', num: 4 },\n\t  'B': { acc: '#', num: 5 },\n\t  'G#m': { acc: '#', num: 5 },\n\t  'F#': { acc: '#', num: 6 },\n\t  'D#m': { acc: '#', num: 6 },\n\t  'C#': { acc: '#', num: 7 },\n\t  'A#m': { acc: '#', num: 7 }\n\t};\n\t\n\tFlow.unicode = {\n\t  // Unicode accidentals\n\t  'sharp': String.fromCharCode(parseInt('266F', 16)),\n\t  'flat': String.fromCharCode(parseInt('266D', 16)),\n\t  'natural': String.fromCharCode(parseInt('266E', 16)),\n\t  // Major Chord\n\t  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n\t  // half-diminished\n\t  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n\t  // Diminished\n\t  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n\t  'circle': String.fromCharCode(parseInt('25CB', 16))\n\t};\n\t\n\tFlow.keySignature.accidentalList = function (acc) {\n\t  var patterns = {\n\t    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n\t    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2]\n\t  };\n\t\n\t  return patterns[acc];\n\t};\n\t\n\tFlow.parseNoteDurationString = function (durationString) {\n\t  if (typeof durationString !== 'string') {\n\t    return null;\n\t  }\n\t\n\t  var regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\t\n\t  var result = regexp.exec(durationString);\n\t  if (!result) {\n\t    return null;\n\t  }\n\t\n\t  var duration = result[1];\n\t  var dots = result[2].length;\n\t  var type = result[3];\n\t\n\t  if (type.length === 0) {\n\t    type = 'n';\n\t  }\n\t\n\t  return {\n\t    duration: duration,\n\t    dots: dots,\n\t    type: type\n\t  };\n\t};\n\t\n\tFlow.parseNoteData = function (noteData) {\n\t  var duration = noteData.duration;\n\t\n\t  // Preserve backwards-compatibility\n\t  var durationStringData = Flow.parseNoteDurationString(duration);\n\t  if (!durationStringData) {\n\t    return null;\n\t  }\n\t\n\t  var ticks = Flow.durationToTicks(durationStringData.duration);\n\t  if (ticks == null) {\n\t    return null;\n\t  }\n\t\n\t  var type = noteData.type;\n\t\n\t  if (type) {\n\t    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n\t      return null;\n\t    }\n\t  } else {\n\t    type = durationStringData.type;\n\t    if (!type) {\n\t      type = 'n';\n\t    }\n\t  }\n\t\n\t  var dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\t\n\t  if (typeof dots !== 'number') {\n\t    return null;\n\t  }\n\t\n\t  var currentTicks = ticks;\n\t\n\t  for (var i = 0; i < dots; i++) {\n\t    if (currentTicks <= 1) return null;\n\t\n\t    currentTicks = currentTicks / 2;\n\t    ticks += currentTicks;\n\t  }\n\t\n\t  return {\n\t    duration: durationStringData.duration,\n\t    type: type,\n\t    dots: dots,\n\t    ticks: ticks\n\t  };\n\t};\n\t\n\t// Used to convert duration aliases to the number based duration.\n\t// If the input isn't an alias, simply return the input.\n\t//\n\t// example: 'q' -> '4', '8' -> '8'\n\tFlow.sanitizeDuration = function (duration) {\n\t  var alias = Flow.durationAliases[duration];\n\t  if (alias !== undefined) {\n\t    duration = alias;\n\t  }\n\t\n\t  if (Flow.durationToTicks.durations[duration] === undefined) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'The provided duration is not valid: ' + duration);\n\t  }\n\t\n\t  return duration;\n\t};\n\t\n\t// Convert the `duration` to an fraction\n\tFlow.durationToFraction = function (duration) {\n\t  return new _fraction.Fraction().parse(Flow.sanitizeDuration(duration));\n\t};\n\t\n\t// Convert the `duration` to an number\n\tFlow.durationToNumber = function (duration) {\n\t  return Flow.durationToFraction(duration).value();\n\t};\n\t\n\t// Convert the `duration` to total ticks\n\tFlow.durationToTicks = function (duration) {\n\t  duration = Flow.sanitizeDuration(duration);\n\t\n\t  var ticks = Flow.durationToTicks.durations[duration];\n\t  if (ticks === undefined) {\n\t    return null;\n\t  }\n\t\n\t  return ticks;\n\t};\n\t\n\tFlow.durationToTicks.durations = {\n\t  '1/2': Flow.RESOLUTION * 2,\n\t  '1': Flow.RESOLUTION / 1,\n\t  '2': Flow.RESOLUTION / 2,\n\t  '4': Flow.RESOLUTION / 4,\n\t  '8': Flow.RESOLUTION / 8,\n\t  '16': Flow.RESOLUTION / 16,\n\t  '32': Flow.RESOLUTION / 32,\n\t  '64': Flow.RESOLUTION / 64,\n\t  '128': Flow.RESOLUTION / 128,\n\t  '256': Flow.RESOLUTION / 256\n\t};\n\t\n\tFlow.durationAliases = {\n\t  'w': '1',\n\t  'h': '2',\n\t  'q': '4',\n\t\n\t  // This is the default duration used to render bars (BarNote). Bars no longer\n\t  // consume ticks, so this should be a no-op.\n\t  //\n\t  // TODO(0xfe): This needs to be cleaned up.\n\t  'b': '256'\n\t};\n\t\n\tFlow.durationToGlyph = function (duration, type) {\n\t  duration = Flow.sanitizeDuration(duration);\n\t\n\t  var code = Flow.durationToGlyph.duration_codes[duration];\n\t  if (code === undefined) {\n\t    return null;\n\t  }\n\t\n\t  if (!type) {\n\t    type = 'n';\n\t  }\n\t\n\t  var glyphTypeProperties = code.type[type];\n\t  if (glyphTypeProperties === undefined) {\n\t    return null;\n\t  }\n\t\n\t  return _vex.Vex.Merge(_vex.Vex.Merge({}, code.common), glyphTypeProperties);\n\t};\n\t\n\tFlow.durationToGlyph.duration_codes = {\n\t  '1/2': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v53', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: false,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: -Flow.STEM_HEIGHT,\n\t      stem_down_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Breve note\n\t        code_head: 'v53'\n\t      },\n\t      'h': { // Breve note harmonic\n\t        code_head: 'v59'\n\t      },\n\t      'm': { // Breve note muted -\n\t        code_head: 'vf',\n\t        stem_offset: 0\n\t      },\n\t      'r': { // Breve rest\n\t        code_head: 'v31',\n\t        rest: true,\n\t        position: 'B/5',\n\t        dot_shiftY: 0.5\n\t      },\n\t      's': { // Breve note slash -\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '1': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: false,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: -Flow.STEM_HEIGHT,\n\t      stem_down_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Whole note\n\t        code_head: 'v1d'\n\t      },\n\t      'h': { // Whole note harmonic\n\t        code_head: 'v46'\n\t      },\n\t      'm': { // Whole note muted\n\t        code_head: 'v92',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Whole rest\n\t        code_head: 'v5c',\n\t        rest: true,\n\t        position: 'D/5',\n\t        dot_shiftY: 0.5\n\t      },\n\t      's': { // Whole note slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '2': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v81', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Half note\n\t        code_head: 'v81'\n\t      },\n\t      'h': { // Half note harmonic\n\t        code_head: 'v2d'\n\t      },\n\t      'm': { // Half note muted\n\t        code_head: 'v95',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Half rest\n\t        code_head: 'vc',\n\t        stem: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5\n\t      },\n\t      's': { // Half note slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '4': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Quarter note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Quarter harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Quarter muted\n\t        code_head: 'v3e',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Quarter rest\n\t        code_head: 'v7c',\n\t        stem: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.5,\n\t        line_below: 1.5\n\t      },\n\t      's': { // Quarter slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '8': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      beam_count: 1,\n\t      code_flag_upstem: 'v54',\n\t      code_flag_downstem: 'v9a',\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Eighth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Eighth note harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Eighth note muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Eighth rest\n\t        code_head: 'va5',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.0,\n\t        line_below: 1.0\n\t      },\n\t      's': { // Eight slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '16': {\n\t    common: {\n\t      beam_count: 2,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v3f',\n\t      code_flag_downstem: 'v8f',\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Sixteenth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Sixteenth note harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Sixteenth note muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Sixteenth rest\n\t        code_head: 'v3c',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.0,\n\t        line_below: 2.0\n\t      },\n\t      's': { // Sixteenth slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '32': {\n\t    common: {\n\t      beam_count: 3,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v47',\n\t      code_flag_downstem: 'v2a',\n\t      stem_up_extension: 9,\n\t      stem_down_extension: 9,\n\t      gracenote_stem_up_extension: -12,\n\t      gracenote_stem_down_extension: -12,\n\t      tabnote_stem_up_extension: 8,\n\t      tabnote_stem_down_extension: 5,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Thirty-second note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Thirty-second harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Thirty-second muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Thirty-second rest\n\t        code_head: 'v55',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -1.5,\n\t        line_above: 2.0,\n\t        line_below: 2.0\n\t      },\n\t      's': { // Thirty-second slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '64': {\n\t    common: {\n\t      beam_count: 4,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'va9',\n\t      code_flag_downstem: 'v58',\n\t      stem_up_extension: 13,\n\t      stem_down_extension: 13,\n\t      gracenote_stem_up_extension: -10,\n\t      gracenote_stem_down_extension: -10,\n\t      tabnote_stem_up_extension: 12,\n\t      tabnote_stem_down_extension: 9,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Sixty-fourth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Sixty-fourth harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Sixty-fourth muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Sixty-fourth rest\n\t        code_head: 'v38',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -1.5,\n\t        line_above: 2.0,\n\t        line_below: 3.0\n\t      },\n\t      's': { // Sixty-fourth slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '128': {\n\t    common: {\n\t      beam_count: 5,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v9b',\n\t      code_flag_downstem: 'v30',\n\t      stem_up_extension: 22,\n\t      stem_down_extension: 22,\n\t      gracenote_stem_up_extension: -8,\n\t      gracenote_stem_down_extension: -8,\n\t      tabnote_stem_up_extension: 21,\n\t      tabnote_stem_down_extension: 18,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Hundred-twenty-eight note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Hundred-twenty-eight harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Hundred-twenty-eight muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Hundred-twenty-eight rest\n\t        code_head: 'vaa',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: 1.5,\n\t        line_above: 3.0,\n\t        line_below: 3.0\n\t      },\n\t      's': { // Hundred-twenty-eight rest\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t// Some defaults\n\tFlow.TIME4_4 = {\n\t  num_beats: 4,\n\t  beat_value: 4,\n\t  resolution: Flow.RESOLUTION\n\t};\n\texports.Flow = Flow;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Fraction = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Fraction class that represents a rational number\n\t//\n\t// @author zz85\n\t// @author incompleteopus (modifications)\n\t\n\t/* eslint-disable no-underscore-dangle */\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Fraction = function () {\n\t  _createClass(Fraction, null, [{\n\t    key: 'GCD',\n\t\n\t\n\t    /**\n\t     * GCD: Find greatest common divisor using Euclidean algorithm\n\t     */\n\t    value: function GCD(a, b) {\n\t      if (typeof a !== 'number' || typeof b !== 'number') {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid numbers: ' + a + ', ' + b);\n\t      }\n\t\n\t      var t = void 0;\n\t\n\t      while (b !== 0) {\n\t        t = b;\n\t        b = a % b;\n\t        a = t;\n\t      }\n\t\n\t      return a;\n\t    }\n\t\n\t    /**\n\t     * LCM: Lowest common multiple\n\t     */\n\t\n\t  }, {\n\t    key: 'LCM',\n\t    value: function LCM(a, b) {\n\t      return a * b / Fraction.GCD(a, b);\n\t    }\n\t\n\t    /**\n\t     * LCMM: Lowest common multiple for more than two numbers\n\t     */\n\t\n\t  }, {\n\t    key: 'LCMM',\n\t    value: function LCMM(args) {\n\t      if (args.length === 0) {\n\t        return 0;\n\t      } else if (args.length === 1) {\n\t        return args[0];\n\t      } else if (args.length === 2) {\n\t        return Fraction.LCM(args[0], args[1]);\n\t      } else {\n\t        var arg0 = args[0];\n\t        args.shift();\n\t        return Fraction.LCM(arg0, Fraction.LCMM(args));\n\t      }\n\t    }\n\t  }]);\n\t\n\t  function Fraction(numerator, denominator) {\n\t    _classCallCheck(this, Fraction);\n\t\n\t    this.set(numerator, denominator);\n\t  }\n\t\n\t  _createClass(Fraction, [{\n\t    key: 'set',\n\t    value: function set(numerator, denominator) {\n\t      this.numerator = numerator === undefined ? 1 : numerator;\n\t      this.denominator = denominator === undefined ? 1 : denominator;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'value',\n\t    value: function value() {\n\t      return this.numerator / this.denominator;\n\t    }\n\t  }, {\n\t    key: 'simplify',\n\t    value: function simplify() {\n\t      var u = this.numerator;\n\t      var d = this.denominator;\n\t\n\t      var gcd = Fraction.GCD(u, d);\n\t      u /= gcd;\n\t      d /= gcd;\n\t\n\t      if (d < 0) {\n\t        d = -d;\n\t        u = -u;\n\t      }\n\t      return this.set(u, d);\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 0;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      var lcm = Fraction.LCM(this.denominator, otherDenominator);\n\t      var a = lcm / this.denominator;\n\t      var b = lcm / otherDenominator;\n\t\n\t      var u = this.numerator * a + otherNumerator * b;\n\t      return this.set(u, lcm);\n\t    }\n\t  }, {\n\t    key: 'subtract',\n\t    value: function subtract(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 0;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      var lcm = Fraction.LCM(this.denominator, otherDenominator);\n\t      var a = lcm / this.denominator;\n\t      var b = lcm / otherDenominator;\n\t\n\t      var u = this.numerator * a - otherNumerator * b;\n\t      return this.set(u, lcm);\n\t    }\n\t  }, {\n\t    key: 'multiply',\n\t    value: function multiply(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 1;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n\t    }\n\t  }, {\n\t    key: 'divide',\n\t    value: function divide(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 1;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n\t    }\n\t\n\t    // Simplifies both sides and checks if they are equal.\n\t\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(compare) {\n\t      var a = Fraction.__compareA.copy(compare).simplify();\n\t      var b = Fraction.__compareB.copy(this).simplify();\n\t\n\t      return a.numerator === b.numerator && a.denominator === b.denominator;\n\t    }\n\t\n\t    // Greater than operator.\n\t\n\t  }, {\n\t    key: 'greaterThan',\n\t    value: function greaterThan(compare) {\n\t      var a = Fraction.__compareB.copy(this);\n\t      a.subtract(compare);\n\t      return a.numerator > 0;\n\t    }\n\t\n\t    // Greater than or equals operator.\n\t\n\t  }, {\n\t    key: 'greaterThanEquals',\n\t    value: function greaterThanEquals(compare) {\n\t      var a = Fraction.__compareB.copy(this);\n\t      a.subtract(compare);\n\t      return a.numerator >= 0;\n\t    }\n\t\n\t    // Less than operator.\n\t\n\t  }, {\n\t    key: 'lessThan',\n\t    value: function lessThan(compare) {\n\t      return !this.greaterThanEquals(compare);\n\t    }\n\t\n\t    // Less than or equals operator.\n\t\n\t  }, {\n\t    key: 'lessThanEquals',\n\t    value: function lessThanEquals(compare) {\n\t      return !this.greaterThan(compare);\n\t    }\n\t\n\t    // Creates a new copy with this current values.\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      return new Fraction(this.numerator, this.denominator);\n\t    }\n\t\n\t    // Copies value of another Fraction into itself.\n\t\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy(_copy) {\n\t      return this.set(_copy.numerator, _copy.denominator);\n\t    }\n\t\n\t    // Returns the integer component eg. (4/2) == 2\n\t\n\t  }, {\n\t    key: 'quotient',\n\t    value: function quotient() {\n\t      return Math.floor(this.numerator / this.denominator);\n\t    }\n\t\n\t    // Returns the fraction component when reduced to a mixed number\n\t\n\t  }, {\n\t    key: 'fraction',\n\t    value: function fraction() {\n\t      return this.numerator % this.denominator;\n\t    }\n\t\n\t    // Returns the absolute value\n\t\n\t  }, {\n\t    key: 'abs',\n\t    value: function abs() {\n\t      this.denominator = Math.abs(this.denominator);\n\t      this.numerator = Math.abs(this.numerator);\n\t      return this;\n\t    }\n\t\n\t    // Returns a raw string representation\n\t\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return this.numerator + '/' + this.denominator;\n\t    }\n\t\n\t    // Returns a simplified string respresentation\n\t\n\t  }, {\n\t    key: 'toSimplifiedString',\n\t    value: function toSimplifiedString() {\n\t      return Fraction.__tmp.copy(this).simplify().toString();\n\t    }\n\t\n\t    // Returns string representation in mixed form\n\t\n\t  }, {\n\t    key: 'toMixedString',\n\t    value: function toMixedString() {\n\t      var s = '';\n\t      var q = this.quotient();\n\t      var f = Fraction.__tmp.copy(this);\n\t\n\t      if (q < 0) {\n\t        f.abs().fraction();\n\t      } else {\n\t        f.fraction();\n\t      }\n\t\n\t      if (q !== 0) {\n\t        s += q;\n\t\n\t        if (f.numerator !== 0) {\n\t          s += ' ' + f.toSimplifiedString();\n\t        }\n\t      } else {\n\t        if (f.numerator === 0) {\n\t          s = '0';\n\t        } else {\n\t          s = f.toSimplifiedString();\n\t        }\n\t      }\n\t\n\t      return s;\n\t    }\n\t\n\t    // Parses a fraction string\n\t\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(str) {\n\t      var i = str.split('/');\n\t      var n = parseInt(i[0], 10);\n\t      var d = i[1] ? parseInt(i[1], 10) : 1;\n\t\n\t      return this.set(n, d);\n\t    }\n\t  }]);\n\t\n\t  return Fraction;\n\t}();\n\t\n\t// Temporary cached objects\n\t\n\t\n\texports.Fraction = Fraction;\n\tFraction.__compareA = new Fraction();\n\tFraction.__compareB = new Fraction();\n\tFraction.__tmp = new Fraction();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Glyph = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _boundingboxcomputation = __webpack_require__(7);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _vexflow_font = __webpack_require__(9);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n\t  var command = void 0;\n\t  var x = void 0;\n\t  var y = void 0;\n\t  var i = 0;\n\t\n\t  function nextX() {\n\t    return originX + outline[i++] * scaleX;\n\t  }\n\t  function nextY() {\n\t    return originY + outline[i++] * scaleY;\n\t  }\n\t\n\t  while (i < outline.length) {\n\t    command = outline[i++];\n\t    switch (command) {\n\t      case 'm':\n\t      case 'l':\n\t        outlineFns[command](nextX(), nextY());\n\t        break;\n\t      case 'q':\n\t        x = nextX();\n\t        y = nextY();\n\t        outlineFns.q(nextX(), nextY(), x, y);\n\t        break;\n\t      case 'b':\n\t        x = nextX();\n\t        y = nextY();\n\t        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  }\n\t}\n\t\n\tvar Glyph = exports.Glyph = function (_Element) {\n\t  _inherits(Glyph, _Element);\n\t\n\t  _createClass(Glyph, null, [{\n\t    key: 'loadMetrics',\n\t\n\t    /* Static methods used to implement loading / unloading of glyphs */\n\t    value: function loadMetrics(font, code, cache) {\n\t      var glyph = font.glyphs[code];\n\t      if (!glyph) {\n\t        throw new _vex.Vex.RERR('BadGlyph', 'Glyph ' + code + ' does not exist in font.');\n\t      }\n\t\n\t      var x_min = glyph.x_min;\n\t      var x_max = glyph.x_max;\n\t      var ha = glyph.ha;\n\t\n\t      var outline = void 0;\n\t\n\t      if (glyph.o) {\n\t        if (cache) {\n\t          if (glyph.cached_outline) {\n\t            outline = glyph.cached_outline;\n\t          } else {\n\t            outline = glyph.o.split(' ');\n\t            glyph.cached_outline = outline;\n\t          }\n\t        } else {\n\t          if (glyph.cached_outline) delete glyph.cached_outline;\n\t          outline = glyph.o.split(' ');\n\t        }\n\t\n\t        return {\n\t          x_min: x_min,\n\t          x_max: x_max,\n\t          ha: ha,\n\t          outline: outline\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadGlyph', 'Glyph ' + code + ' has no outline defined.');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * A quick and dirty static glyph renderer. Renders glyphs from the default\n\t     * font defined in Vex.Flow.Font.\n\t     *\n\t     * @param {!Object} ctx The canvas context.\n\t     * @param {number} x_pos X coordinate.\n\t     * @param {number} y_pos Y coordinate.\n\t     * @param {number} point The point size to use.\n\t     * @param {string} val The glyph code in Vex.Flow.Font.\n\t     * @param {boolean} nocache If set, disables caching of font outline.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderGlyph',\n\t    value: function renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n\t      var scale = point * 72.0 / (_vexflow_font.Font.resolution * 100.0);\n\t      var metrics = Glyph.loadMetrics(_vexflow_font.Font, val, !nocache);\n\t      Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n\t    }\n\t  }, {\n\t    key: 'renderOutline',\n\t    value: function renderOutline(ctx, outline, scale, x_pos, y_pos) {\n\t      ctx.beginPath();\n\t      ctx.moveTo(x_pos, y_pos);\n\t      processOutline(outline, x_pos, y_pos, scale, -scale, {\n\t        m: ctx.moveTo.bind(ctx),\n\t        l: ctx.lineTo.bind(ctx),\n\t        q: ctx.quadraticCurveTo.bind(ctx),\n\t        b: ctx.bezierCurveTo.bind(ctx)\n\t      });\n\t      ctx.fill();\n\t    }\n\t  }, {\n\t    key: 'getOutlineBoundingBox',\n\t    value: function getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n\t      var bboxComp = new _boundingboxcomputation.BoundingBoxComputation();\n\t\n\t      processOutline(outline, x_pos, y_pos, scale, -scale, {\n\t        m: bboxComp.addPoint.bind(bboxComp),\n\t        l: bboxComp.addPoint.bind(bboxComp),\n\t        q: bboxComp.addQuadraticCurve.bind(bboxComp),\n\t        b: bboxComp.addBezierCurve.bind(bboxComp)\n\t      });\n\t\n\t      return new _boundingbox.BoundingBox(bboxComp.x1, bboxComp.y1, bboxComp.width(), bboxComp.height());\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     */\n\t\n\t  }]);\n\t\n\t  function Glyph(code, point, options) {\n\t    _classCallCheck(this, Glyph);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Glyph.__proto__ || Object.getPrototypeOf(Glyph)).call(this));\n\t\n\t    _this.setAttribute('type', 'Glyph');\n\t\n\t    _this.code = code;\n\t    _this.point = point;\n\t    _this.options = {\n\t      cache: true,\n\t      font: _vexflow_font.Font\n\t    };\n\t\n\t    _this.metrics = null;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t\n\t    _this.originShift = {\n\t      x: 0,\n\t      y: 0\n\t    };\n\t\n\t    if (options) {\n\t      _this.setOptions(options);\n\t    } else {\n\t      _this.reset();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Glyph, [{\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      _vex.Vex.Merge(this.options, options);\n\t      this.reset();\n\t    }\n\t  }, {\n\t    key: 'setPoint',\n\t    value: function setPoint(point) {\n\t      this.point = point;return this;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;return this;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x_shift) {\n\t      this.x_shift = x_shift;return this;\n\t    }\n\t  }, {\n\t    key: 'setYShift',\n\t    value: function setYShift(y_shift) {\n\t      this.y_shift = y_shift;return this;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.scale = this.point * 72 / (this.options.font.resolution * 100);\n\t      this.metrics = Glyph.loadMetrics(this.options.font, this.code, this.options.cache);\n\t      this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.scale, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      return {\n\t        x_min: this.metrics.x_min * this.scale,\n\t        x_max: this.metrics.x_max * this.scale,\n\t        width: this.bbox.getW(),\n\t        height: this.bbox.getH()\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setOriginX',\n\t    value: function setOriginX(x) {\n\t      var bbox = this.bbox;\n\t\n\t      var originX = Math.abs(bbox.getX() / bbox.getW());\n\t      var xShift = (x - originX) * bbox.getW();\n\t      this.originShift.x = -xShift;\n\t    }\n\t  }, {\n\t    key: 'setOriginY',\n\t    value: function setOriginY(y) {\n\t      var bbox = this.bbox;\n\t\n\t      var originY = Math.abs(bbox.getY() / bbox.getH());\n\t      var yShift = (y - originY) * bbox.getH();\n\t      this.originShift.y = -yShift;\n\t    }\n\t  }, {\n\t    key: 'setOrigin',\n\t    value: function setOrigin(x, y) {\n\t      this.setOriginX(x);\n\t      this.setOriginY(y);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render(ctx, x, y) {\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      var outline = this.metrics.outline;\n\t      var scale = this.scale;\n\t\n\t      this.setRendered();\n\t      this.applyStyle(ctx);\n\t      Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n\t      this.restoreStyle(ctx);\n\t    }\n\t  }, {\n\t    key: 'renderToStave',\n\t    value: function renderToStave(x) {\n\t      this.checkContext();\n\t\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RuntimeError('GlyphError', 'No valid stave');\n\t      }\n\t\n\t      var outline = this.metrics.outline;\n\t      var scale = this.scale;\n\t\n\t      this.setRendered();\n\t      this.applyStyle();\n\t      Glyph.renderOutline(this.context, outline, scale, x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n\t      this.restoreStyle();\n\t    }\n\t  }]);\n\n\t  return Glyph;\n\t}(_element.Element);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Element = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a generic base class for VexFlow, with implementations\n\t// of general functions and properties that can be inherited by all VexFlow elements.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _registry = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Element = exports.Element = function () {\n\t  _createClass(Element, null, [{\n\t    key: 'newID',\n\t    value: function newID() {\n\t      return 'auto' + Element.ID++;\n\t    }\n\t  }]);\n\t\n\t  function Element() {\n\t    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var type = _ref.type;\n\t\n\t    _classCallCheck(this, Element);\n\t\n\t    this.attrs = {\n\t      id: Element.newID(),\n\t      el: null,\n\t      type: type || 'Base',\n\t      classes: {}\n\t    };\n\t\n\t    this.boundingBox = null;\n\t    this.context = null;\n\t    this.rendered = false;\n\t\n\t    // If a default registry exist, then register with it right away.\n\t    if (_registry.Registry.getDefaultRegistry()) {\n\t      _registry.Registry.getDefaultRegistry().register(this);\n\t    }\n\t  }\n\t\n\t  // set the draw style of a stemmable note:\n\t\n\t\n\t  _createClass(Element, [{\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      this.style = style;return this;\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      return this.style;\n\t    }\n\t\n\t    // Apply current style to Canvas `context`\n\t\n\t  }, {\n\t    key: 'applyStyle',\n\t    value: function applyStyle() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var style = arguments.length <= 1 || arguments[1] === undefined ? this.getStyle() : arguments[1];\n\t\n\t      if (!style) return this;\n\t\n\t      context.save();\n\t      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n\t      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n\t      if (style.fillStyle) context.setFillStyle(style.fillStyle);\n\t      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n\t      if (style.lineWidth) context.setLineWidth(style.lineWidth);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restoreStyle',\n\t    value: function restoreStyle() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var style = arguments.length <= 1 || arguments[1] === undefined ? this.getStyle() : arguments[1];\n\t\n\t      if (!style) return this;\n\t      context.restore();\n\t      return this;\n\t    }\n\t\n\t    // An element can have multiple class labels.\n\t\n\t  }, {\n\t    key: 'hasClass',\n\t    value: function hasClass(className) {\n\t      return this.attrs.classes[className] === true;\n\t    }\n\t  }, {\n\t    key: 'addClass',\n\t    value: function addClass(className) {\n\t      this.attrs.classes[className] = true;\n\t      if (this.registry) {\n\t        this.registry.onUpdate({\n\t          id: this.getAttribute('id'),\n\t          name: 'class',\n\t          value: className,\n\t          oldValue: null\n\t        });\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'removeClass',\n\t    value: function removeClass(className) {\n\t      delete this.attrs.classes[className];\n\t      if (this.registry) {\n\t        this.registry.onUpdate({\n\t          id: this.getAttribute('id'),\n\t          name: 'class',\n\t          value: null,\n\t          oldValue: className\n\t        });\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // This is called by the registry after the element is registered.\n\t\n\t  }, {\n\t    key: 'onRegister',\n\t    value: function onRegister(registry) {\n\t      this.registry = registry;return this;\n\t    }\n\t  }, {\n\t    key: 'isRendered',\n\t    value: function isRendered() {\n\t      return this.rendered;\n\t    }\n\t  }, {\n\t    key: 'setRendered',\n\t    value: function setRendered() {\n\t      var rendered = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t      this.rendered = rendered;return this;\n\t    }\n\t  }, {\n\t    key: 'getAttributes',\n\t    value: function getAttributes() {\n\t      return this.attrs;\n\t    }\n\t  }, {\n\t    key: 'getAttribute',\n\t    value: function getAttribute(name) {\n\t      return this.attrs[name];\n\t    }\n\t  }, {\n\t    key: 'setAttribute',\n\t    value: function setAttribute(name, value) {\n\t      var id = this.attrs.id;\n\t      var oldValue = this.attrs[name];\n\t      this.attrs[name] = value;\n\t      if (this.registry) {\n\t        // Register with old id to support id changes.\n\t        this.registry.onUpdate({ id: id, name: name, value: value, oldValue: oldValue });\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.context;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return this.boundingBox;\n\t    }\n\t\n\t    // Validators\n\t\n\t  }, {\n\t    key: 'checkContext',\n\t    value: function checkContext() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoContext', 'No rendering context attached to instance');\n\t      }\n\t      return this.context;\n\t    }\n\t  }]);\n\t\n\t  return Element;\n\t}();\n\t\n\tElement.ID = 1000;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Registry = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a registry for VexFlow elements. It allows users\n\t// to track, query, and manage some subset of generated elements, and\n\t// dynamically get and set attributes.\n\t//\n\t// There are two ways to regiser with a registry:\n\t//\n\t// 1) Explicitly call `element.register(registry)`, or,\n\t// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n\t//    elements will automatically register with it.\n\t//\n\t// Once an element is registered, selected attributes are tracked and indexed by\n\t// the registry. This allows fast look up of elements by attributes like id, type,\n\t// and class.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('RegistryError');\n\t\n\tfunction setIndexValue(index, name, value, id, elem) {\n\t  if (!index[name][value]) index[name][value] = {};\n\t  index[name][value][id] = elem;\n\t}\n\t\n\tvar Registry = exports.Registry = function () {\n\t  _createClass(Registry, null, [{\n\t    key: 'INDEXES',\n\t    get: function get() {\n\t      return ['type'];\n\t    }\n\t  }]);\n\t\n\t  function Registry() {\n\t    _classCallCheck(this, Registry);\n\t\n\t    this.clear();\n\t  }\n\t\n\t  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n\t  // the provided registry as soon as they're constructed.\n\t\n\t\n\t  _createClass(Registry, [{\n\t    key: 'clear',\n\t    value: function clear() {\n\t      // Indexes are represented as maps of maps (of maps). This allows\n\t      // for both multi-labeling (e.g., an element can have multiple classes)\n\t      // and efficient lookup.\n\t      this.index = {\n\t        id: {},\n\t        type: {},\n\t        class: {}\n\t      };\n\t      return this;\n\t    }\n\t\n\t    // Updates the indexes for element 'id'. If an element's attribute changes\n\t    // from A -> B, make sure to remove the element from A.\n\t\n\t  }, {\n\t    key: 'updateIndex',\n\t    value: function updateIndex(_ref) {\n\t      var id = _ref.id;\n\t      var name = _ref.name;\n\t      var value = _ref.value;\n\t      var oldValue = _ref.oldValue;\n\t\n\t      var elem = this.getElementById(id);\n\t      if (oldValue !== null && this.index[name][oldValue]) {\n\t        delete this.index[name][oldValue][id];\n\t      }\n\t      if (value !== null) {\n\t        setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n\t      }\n\t    }\n\t\n\t    // Register element `elem` with this registry. This adds the element to its index and watches\n\t    // it for attribute changes.\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(elem, id) {\n\t      var _this = this;\n\t\n\t      id = id || elem.getAttribute('id');\n\t\n\t      if (!id) {\n\t        throw new X('Can\\'t add element without `id` attribute to registry', elem);\n\t      }\n\t\n\t      // Manually add id to index, then update other indexes.\n\t      elem.setAttribute('id', id);\n\t      setIndexValue(this.index, 'id', id, id, elem);\n\t      Registry.INDEXES.forEach(function (name) {\n\t        _this.updateIndex({ id: id, name: name, value: elem.getAttribute(name), oldValue: null });\n\t      });\n\t      elem.onRegister(this);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getElementById',\n\t    value: function getElementById(id) {\n\t      return this.index.id[id] ? this.index.id[id][id] : null;\n\t    }\n\t  }, {\n\t    key: 'getElementsByAttribute',\n\t    value: function getElementsByAttribute(attrName, value) {\n\t      var index = this.index[attrName];\n\t      if (index && index[value]) {\n\t        return Object.keys(index[value]).map(function (i) {\n\t          return index[value][i];\n\t        });\n\t      } else {\n\t        return [];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getElementsByType',\n\t    value: function getElementsByType(type) {\n\t      return this.getElementsByAttribute('type', type);\n\t    }\n\t  }, {\n\t    key: 'getElementsByClass',\n\t    value: function getElementsByClass(className) {\n\t      return this.getElementsByAttribute('class', className);\n\t    }\n\t\n\t    // This is called by the element when an attribute value changes. If an indexed\n\t    // attribute changes, then update the local index.\n\t\n\t  }, {\n\t    key: 'onUpdate',\n\t    value: function onUpdate(_ref2) {\n\t      var id = _ref2.id;\n\t      var name = _ref2.name;\n\t      var value = _ref2.value;\n\t      var oldValue = _ref2.oldValue;\n\t\n\t      function includes(array, value) {\n\t        return array.filter(function (x) {\n\t          return x === value;\n\t        }).length > 0;\n\t      }\n\t\n\t      if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n\t      this.updateIndex({ id: id, name: name, value: value, oldValue: oldValue });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'enableDefaultRegistry',\n\t    value: function enableDefaultRegistry(registry) {\n\t      Registry.defaultRegistry = registry;\n\t    }\n\t  }, {\n\t    key: 'getDefaultRegistry',\n\t    value: function getDefaultRegistry() {\n\t      return Registry.defaultRegistry;\n\t    }\n\t  }, {\n\t    key: 'disableDefaultRegistry',\n\t    value: function disableDefaultRegistry() {\n\t      Registry.defaultRegistry = null;\n\t    }\n\t  }]);\n\t\n\t  return Registry;\n\t}();\n\t\n\tRegistry.defaultRegistry = null;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// ## Description\n\t//\n\t// Object which computes metrics for a bounding box by continuously\n\t// taking canvas path commands\n\t\n\t// Warning: This file is merely a crutch to get bounding box information without\n\t// explicit metadata. This is likely to get deprecated following SMuFL support.\n\t//\n\t// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n\t// nvg.js#L449\n\t\n\tvar BoundingBoxComputation = exports.BoundingBoxComputation = function () {\n\t  function BoundingBoxComputation(x1, y1, x2, y2) {\n\t    _classCallCheck(this, BoundingBoxComputation);\n\t\n\t    // pass in initial points if you want\n\t    this.x1 = Number.NaN;\n\t    this.y1 = Number.NaN;\n\t    this.x2 = Number.NaN;\n\t    this.y2 = Number.NaN;\n\t\n\t    this.addPoint(x1, y1);\n\t    this.addPoint(x2, y2);\n\t  }\n\t\n\t  _createClass(BoundingBoxComputation, [{\n\t    key: \"width\",\n\t    value: function width() {\n\t      return this.x2 - this.x1;\n\t    }\n\t  }, {\n\t    key: \"height\",\n\t    value: function height() {\n\t      return this.y2 - this.y1;\n\t    }\n\t  }, {\n\t    key: \"addPoint\",\n\t    value: function addPoint(x, y) {\n\t      if (x != null) {\n\t        if (isNaN(this.x1) || isNaN(this.x2)) {\n\t          this.x1 = x;\n\t          this.x2 = x;\n\t        }\n\t        if (x < this.x1) this.x1 = x;\n\t        if (x > this.x2) this.x2 = x;\n\t      }\n\t\n\t      if (y != null) {\n\t        if (isNaN(this.y1) || isNaN(this.y2)) {\n\t          this.y1 = y;\n\t          this.y2 = y;\n\t        }\n\t        if (y < this.y1) this.y1 = y;\n\t        if (y > this.y2) this.y2 = y;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"addX\",\n\t    value: function addX(x) {\n\t      this.addPoint(x, null);\n\t    }\n\t  }, {\n\t    key: \"addY\",\n\t    value: function addY(y) {\n\t      this.addPoint(null, y);\n\t    }\n\t  }, {\n\t    key: \"addQuadraticCurve\",\n\t    value: function addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n\t      var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\t      var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\t      var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\t      var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\t      this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n\t    }\n\t  }, {\n\t    key: \"addBezierCurve\",\n\t    value: function addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n\t      // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t      var p0 = [p0x, p0y];\n\t      var p1 = [p1x, p1y];\n\t      var p2 = [p2x, p2y];\n\t      var p3 = [p3x, p3y];\n\t      var i = void 0;\n\t\n\t      this.addPoint(p0[0], p0[1]);\n\t      this.addPoint(p3[0], p3[1]);\n\t\n\t      var f = function f(t, i) {\n\t        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n\t      };\n\t\n\t      for (i = 0; i <= 1; i++) {\n\t        var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n\t        var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n\t        var c = 3 * p1[i] - 3 * p0[i];\n\t\n\t        if (a === 0) {\n\t          if (b === 0) continue;\n\t          var t = -c / b;\n\t          if (0 < t && t < 1) {\n\t            if (i === 0) this.addX(f(t, i));\n\t            if (i === 1) this.addY(f(t, i));\n\t          }\n\t          continue;\n\t        }\n\t\n\t        var b2ac = Math.pow(b, 2) - 4 * c * a;\n\t        if (b2ac < 0) continue;\n\t        var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\t        if (0 < t1 && t1 < 1) {\n\t          if (i === 0) this.addX(f(t1, i));\n\t          if (i === 1) this.addY(f(t1, i));\n\t        }\n\t        var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\t        if (0 < t2 && t2 < 1) {\n\t          if (i === 0) this.addX(f(t2, i));\n\t          if (i === 1) this.addY(f(t2, i));\n\t        }\n\t      }\n\t    }\n\t  }]);\n\n\t  return BoundingBoxComputation;\n\t}();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Vex Music Notation\n\t// Mohit Muthanna <mohit@muthanna.com>\n\t//\n\t// Copyright Mohit Muthanna 2010\n\t\n\t// Bounding boxes for interactive notation\n\t\n\tvar BoundingBox = exports.BoundingBox = function () {\n\t  _createClass(BoundingBox, null, [{\n\t    key: \"copy\",\n\t    value: function copy(that) {\n\t      return new BoundingBox(that.x, that.y, that.w, that.h);\n\t    }\n\t  }]);\n\t\n\t  function BoundingBox(x, y, w, h) {\n\t    _classCallCheck(this, BoundingBox);\n\t\n\t    this.x = x;\n\t    this.y = y;\n\t    this.w = w;\n\t    this.h = h;\n\t  }\n\t\n\t  _createClass(BoundingBox, [{\n\t    key: \"getX\",\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: \"getY\",\n\t    value: function getY() {\n\t      return this.y;\n\t    }\n\t  }, {\n\t    key: \"getW\",\n\t    value: function getW() {\n\t      return this.w;\n\t    }\n\t  }, {\n\t    key: \"getH\",\n\t    value: function getH() {\n\t      return this.h;\n\t    }\n\t  }, {\n\t    key: \"setX\",\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: \"setY\",\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t  }, {\n\t    key: \"setW\",\n\t    value: function setW(w) {\n\t      this.w = w;return this;\n\t    }\n\t  }, {\n\t    key: \"setH\",\n\t    value: function setH(h) {\n\t      this.h = h;return this;\n\t    }\n\t  }, {\n\t    key: \"move\",\n\t    value: function move(x, y) {\n\t      this.x += x;this.y += y;\n\t    }\n\t  }, {\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return BoundingBox.copy(this);\n\t    }\n\t\n\t    // Merge my box with given box. Creates a bigger bounding box unless\n\t    // the given box is contained in this one.\n\t\n\t  }, {\n\t    key: \"mergeWith\",\n\t    value: function mergeWith(boundingBox, ctx) {\n\t      var that = boundingBox;\n\t\n\t      var new_x = this.x < that.x ? this.x : that.x;\n\t      var new_y = this.y < that.y ? this.y : that.y;\n\t      var new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n\t      var new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\t\n\t      this.x = new_x;\n\t      this.y = new_y;\n\t      this.w = new_w;\n\t      this.h = new_h;\n\t\n\t      if (ctx) this.draw(ctx);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: \"draw\",\n\t    value: function draw(ctx, x, y) {\n\t      if (!x) x = 0;\n\t      if (!y) y = 0;\n\t      ctx.rect(this.x + x, this.y + y, this.w, this.h);\n\t      ctx.stroke();\n\t    }\n\t  }]);\n\n\t  return BoundingBox;\n\t}();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var Font=exports.Font={\"glyphs\":{\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"}},\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Renderer = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Support for different rendering contexts: Canvas, Raphael\n\t\n\t/* global document: false */\n\t\n\tvar _canvascontext = __webpack_require__(11);\n\t\n\tvar _raphaelcontext = __webpack_require__(12);\n\t\n\tvar _svgcontext = __webpack_require__(13);\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar lastContext = null;\n\t\n\tvar Renderer = exports.Renderer = function () {\n\t  _createClass(Renderer, null, [{\n\t    key: 'buildContext',\n\t    value: function buildContext(elementId, backend, width, height, background) {\n\t      var renderer = new Renderer(elementId, backend);\n\t      if (width && height) {\n\t        renderer.resize(width, height);\n\t      }\n\t\n\t      if (!background) background = '#FFF';\n\t      var ctx = renderer.getContext();\n\t      ctx.setBackgroundFillStyle(background);\n\t      Renderer.lastContext = ctx;\n\t      return ctx;\n\t    }\n\t  }, {\n\t    key: 'getCanvasContext',\n\t    value: function getCanvasContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getRaphaelContext',\n\t    value: function getRaphaelContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getSVGContext',\n\t    value: function getSVGContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'bolsterCanvasContext',\n\t    value: function bolsterCanvasContext(ctx) {\n\t      if (Renderer.USE_CANVAS_PROXY) {\n\t        return new _canvascontext.CanvasContext(ctx);\n\t      }\n\t\n\t      var methodNames = ['clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle', 'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth', 'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup'];\n\t\n\t      ctx.vexFlowCanvasContext = ctx;\n\t\n\t      methodNames.forEach(function (methodName) {\n\t        ctx[methodName] = ctx[methodName] || _canvascontext.CanvasContext.prototype[methodName];\n\t      });\n\t\n\t      return ctx;\n\t    }\n\t\n\t    // Draw a dashed line (horizontal, vertical or diagonal\n\t    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n\t    // setting the second number to 0 draws a solid line.\n\t\n\t  }, {\n\t    key: 'drawDashedLine',\n\t    value: function drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n\t      context.beginPath();\n\t\n\t      var dx = toX - fromX;\n\t      var dy = toY - fromY;\n\t      var angle = Math.atan2(dy, dx);\n\t      var x = fromX;\n\t      var y = fromY;\n\t      context.moveTo(fromX, fromY);\n\t      var idx = 0;\n\t      var draw = true;\n\t      while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n\t        var dashLength = dashPattern[idx++ % dashPattern.length];\n\t        var nx = x + Math.cos(angle) * dashLength;\n\t        x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n\t        var ny = y + Math.sin(angle) * dashLength;\n\t        y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n\t        if (draw) {\n\t          context.lineTo(x, y);\n\t        } else {\n\t          context.moveTo(x, y);\n\t        }\n\t        draw = !draw;\n\t      }\n\t\n\t      context.closePath();\n\t      context.stroke();\n\t    }\n\t  }, {\n\t    key: 'Backends',\n\t    get: function get() {\n\t      return {\n\t        CANVAS: 1,\n\t        RAPHAEL: 2,\n\t        SVG: 3,\n\t        VML: 4\n\t      };\n\t    }\n\t\n\t    // End of line types\n\t\n\t  }, {\n\t    key: 'LineEndType',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1, // No leg\n\t        UP: 2, // Upward leg\n\t        DOWN: 3 };\n\t    }\n\t\n\t    // Set this to true if you're using VexFlow inside a runtime\n\t    // that does not allow modifiying canvas objects. There is a small\n\t    // performance degradation due to the extra indirection.\n\t\n\t  }, {\n\t    key: 'USE_CANVAS_PROXY',\n\t    get: function get() {\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'lastContext',\n\t    get: function get() {\n\t      return lastContext;\n\t    },\n\t    set: function set(ctx) {\n\t      lastContext = ctx;\n\t    }\n\t  }]);\n\t\n\t  function Renderer(elementId, backend) {\n\t    _classCallCheck(this, Renderer);\n\t\n\t    this.elementId = elementId;\n\t    if (!this.elementId) {\n\t      throw new _vex.Vex.RERR('BadArgument', 'Invalid id for renderer.');\n\t    }\n\t\n\t    this.element = document.getElementById(elementId);\n\t    if (!this.element) this.element = elementId;\n\t\n\t    // Verify backend and create context\n\t    this.ctx = null;\n\t    this.paper = null;\n\t    this.backend = backend;\n\t    if (this.backend === Renderer.Backends.CANVAS) {\n\t      // Create context.\n\t      if (!this.element.getContext) {\n\t        throw new _vex.Vex.RERR('BadElement', 'Can\\'t get canvas context from element: ' + elementId);\n\t      }\n\t      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n\t    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n\t      this.ctx = new _raphaelcontext.RaphaelContext(this.element);\n\t    } else if (this.backend === Renderer.Backends.SVG) {\n\t      this.ctx = new _svgcontext.SVGContext(this.element);\n\t    } else {\n\t      throw new _vex.Vex.RERR('InvalidBackend', 'No support for backend: ' + this.backend);\n\t    }\n\t  }\n\t\n\t  _createClass(Renderer, [{\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      if (this.backend === Renderer.Backends.CANVAS) {\n\t        if (!this.element.getContext) {\n\t          throw new _vex.Vex.RERR('BadElement', 'Can\\'t get canvas context from element: ' + this.elementId);\n\t        }\n\t\n\t        var devicePixelRatio = window.devicePixelRatio || 1;\n\t\n\t        this.element.width = width * devicePixelRatio;\n\t        this.element.height = height * devicePixelRatio;\n\t        this.element.style.width = width + 'px';\n\t        this.element.style.height = height + 'px';\n\t\n\t        this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n\t        this.ctx.scale(devicePixelRatio, devicePixelRatio);\n\t      } else {\n\t        this.ctx.resize(width, height);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.ctx;\n\t    }\n\t  }]);\n\n\t  return Renderer;\n\t}();\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Mohit Muthanna <mohit@muthanna.com>\n\t//\n\t// A rendering context for the Raphael backend.\n\t//\n\t// Copyright Mohit Cheppudira 2010\n\t\n\t/** @constructor */\n\tvar CanvasContext = exports.CanvasContext = function () {\n\t  _createClass(CanvasContext, null, [{\n\t    key: 'WIDTH',\n\t    get: function get() {\n\t      return 600;\n\t    }\n\t  }, {\n\t    key: 'HEIGHT',\n\t    get: function get() {\n\t      return 400;\n\t    }\n\t  }]);\n\t\n\t  function CanvasContext(context) {\n\t    _classCallCheck(this, CanvasContext);\n\t\n\t    // Use a name that is unlikely to clash with a canvas context\n\t    // property\n\t    this.vexFlowCanvasContext = context;\n\t    if (!context.canvas) {\n\t      this.canvas = {\n\t        width: CanvasContext.WIDTH,\n\t        height: CanvasContext.HEIGHT\n\t      };\n\t    } else {\n\t      this.canvas = context.canvas;\n\t    }\n\t  }\n\t\n\t  _createClass(CanvasContext, [{\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t    }\n\t\n\t    // Containers not implemented\n\t\n\t  }, {\n\t    key: 'openGroup',\n\t    value: function openGroup() {}\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {}\n\t  }, {\n\t    key: 'add',\n\t    value: function add() {}\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      this.vexFlowCanvasContext.font = font;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.vexFlowCanvasContext.fillStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_fillStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.vexFlowCanvasContext.strokeStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.vexFlowCanvasContext.shadowColor = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.vexFlowCanvasContext.shadowBlur = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.vexFlowCanvasContext.lineWidth = width;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap(cap_type) {\n\t      this.vexFlowCanvasContext.lineCap = cap_type;\n\t      return this;\n\t    }\n\t\n\t    // setLineDash: is the one native method in a canvas context\n\t    // that begins with set, therefore we don't bolster the method\n\t    // if it already exists (see renderer.bolsterCanvasContext).\n\t    // If it doesn't exist, we bolster it and assume it's looking for\n\t    // a ctx.lineDash method, as previous versions of VexFlow\n\t    // expected.\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash(dash) {\n\t      this.vexFlowCanvasContext.lineDash = dash;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n\t    }\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n\t    }\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.rect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      return this.vexFlowCanvasContext.beginPath();\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      return this.vexFlowCanvasContext.moveTo(x, y);\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      return this.vexFlowCanvasContext.lineTo(x, y);\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      return this.vexFlowCanvasContext.glow();\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill() {\n\t      return this.vexFlowCanvasContext.fill();\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      return this.vexFlowCanvasContext.stroke();\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      return this.vexFlowCanvasContext.closePath();\n\t    }\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      return this.vexFlowCanvasContext.measureText(text);\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      return this.vexFlowCanvasContext.fillText(text, x, y);\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      return this.vexFlowCanvasContext.save();\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      return this.vexFlowCanvasContext.restore();\n\t    }\n\t  }]);\n\n\t  return CanvasContext;\n\t}();\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A rendering context for the Raphael backend.\n\t//\n\t// ## Warning: Deprecated for SVGContext\n\t// Except in instances where SVG support for IE < 9.0 is\n\t// needed, SVGContext is recommended.\n\t\n\tvar RaphaelContext = exports.RaphaelContext = function () {\n\t  function RaphaelContext(element) {\n\t    _classCallCheck(this, RaphaelContext);\n\t\n\t    this.element = element;\n\t    this.paper = Raphael(element); // eslint-disable-line\n\t    this.path = '';\n\t    this.pen = { x: 0, y: 0 };\n\t    this.lineWidth = 1.0;\n\t    this.state = {\n\t      scale: { x: 1, y: 1 },\n\t      font_family: 'Arial',\n\t      font_size: 8,\n\t      font_weight: 800\n\t    };\n\t\n\t    this.attributes = {\n\t      'stroke-width': 0.3,\n\t      'fill': 'black',\n\t      'stroke': 'black',\n\t      'font': '10pt Arial'\n\t    };\n\t\n\t    this.background_attributes = {\n\t      'stroke-width': 0,\n\t      'fill': 'white',\n\t      'stroke': 'white',\n\t      'font': '10pt Arial'\n\t    };\n\t\n\t    this.shadow_attributes = {\n\t      width: 0,\n\t      color: 'black'\n\t    };\n\t\n\t    this.state_stack = [];\n\t  }\n\t\n\t  // Containers not implemented\n\t\n\t\n\t  _createClass(RaphaelContext, [{\n\t    key: 'openGroup',\n\t    value: function openGroup() {}\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {}\n\t  }, {\n\t    key: 'add',\n\t    value: function add() {}\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.state.font_family = family;\n\t      this.state.font_size = size;\n\t      this.state.font_weight = weight;\n\t      this.attributes.font = (this.state.font_weight || '') + ' ' + this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      this.attributes.font = font;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.attributes.fill = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_attributes.fill = style;\n\t      this.background_attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.shadow_attributes.color = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.shadow_attributes.width = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.attributes['stroke-width'] = width;\n\t      this.lineWidth = width;\n\t    }\n\t\n\t    // Empty because there is no equivalent in SVG\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      this.state.scale = { x: x, y: y };\n\t      // The scale() method is deprecated as of Raphael.JS 2.0, and\n\t      // can no longer be used as an option in an Element.attr() call.\n\t      // It is preserved here for users running earlier versions of\n\t      // Raphael.JS, though it has no effect on the SVG output in\n\t      // Raphael 2 and higher.\n\t      this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n\t      this.attributes.scale = x + ',' + y + ',0,0';\n\t      this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n\t      this.background_attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.paper.clear();\n\t    }\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      this.element.style.width = width;\n\t      this.paper.setSize(width, height);\n\t      return this;\n\t    }\n\t\n\t    // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n\t    // is resized.\n\t    //\n\t    // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n\t\n\t  }, {\n\t    key: 'setViewBox',\n\t    value: function setViewBox(viewBox) {\n\t      this.paper.canvas.setAttribute('viewBox', viewBox);\n\t    }\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes).attr('fill', 'none').attr('stroke-width', this.lineWidth);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.background_attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      this.path = '';\n\t      this.pen.x = 0;\n\t      this.pen.y = 0;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      this.path += 'M' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      this.path += 'L' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      this.path += 'C' + x1 + ',' + y1 + ',' + x2 + ',' + y2 + ',' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      this.path += 'Q' + x1 + ',' + y1 + ',' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      function normalizeAngle(angle) {\n\t        while (angle < 0) {\n\t          angle += Math.PI * 2;\n\t        }\n\t\n\t        while (angle > Math.PI * 2) {\n\t          angle -= Math.PI * 2;\n\t        }\n\t        return angle;\n\t      }\n\t\n\t      startAngle = normalizeAngle(startAngle);\n\t      endAngle = normalizeAngle(endAngle);\n\t\n\t      if (startAngle > endAngle) {\n\t        var tmp = startAngle;\n\t        startAngle = endAngle;\n\t        endAngle = tmp;\n\t        antiClockwise = !antiClockwise;\n\t      }\n\t\n\t      var delta = endAngle - startAngle;\n\t\n\t      if (delta > Math.PI) {\n\t        this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n\t        this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n\t      } else {\n\t        this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'arcHelper',\n\t    value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      var x1 = x + radius * Math.cos(startAngle);\n\t      var y1 = y + radius * Math.sin(startAngle);\n\t\n\t      var x2 = x + radius * Math.cos(endAngle);\n\t      var y2 = y + radius * Math.sin(endAngle);\n\t\n\t      var largeArcFlag = 0;\n\t      var sweepFlag = 0;\n\t      if (antiClockwise) {\n\t        sweepFlag = 1;\n\t        if (endAngle - startAngle < Math.PI) {\n\t          largeArcFlag = 1;\n\t        }\n\t      } else if (endAngle - startAngle > Math.PI) {\n\t        largeArcFlag = 1;\n\t      }\n\t\n\t      this.path += 'M' + x1 + ',' + y1 + ',A' + radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' + x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      var out = this.paper.set();\n\t      if (this.shadow_attributes.width > 0) {\n\t        var sa = this.shadow_attributes;\n\t        var num_paths = sa.width / 2;\n\t        for (var i = 1; i <= num_paths; i++) {\n\t          out.push(this.paper.path(this.path).attr({\n\t            stroke: sa.color,\n\t            'stroke-linejoin': 'round',\n\t            'stroke-linecap': 'round',\n\t            'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n\t            opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n\t            // See note in this.scale(): In Raphael the scale() method\n\t            // is deprecated and removed as of Raphael 2.0 and replaced\n\t            // by the transform() method.  It is preserved here for\n\t            // users with earlier versions of Raphael, but has no effect\n\t            // on the output SVG in Raphael 2.0+.\n\t            transform: this.attributes.transform,\n\t            scale: this.attributes.scale\n\t          }));\n\t        }\n\t      }\n\t      return out;\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill() {\n\t      var elem = this.paper.path(this.path).attr(this.attributes).attr('stroke-width', 0);\n\t      this.glow(elem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      // The first line of code below is, unfortunately, a bit of a hack:\n\t      // Raphael's transform() scaling does not scale the stroke-width, so\n\t      // in order to scale a stroke, we have to manually scale the\n\t      // stroke-width.\n\t      //\n\t      // This works well so long as the X & Y states for this.scale() are\n\t      // relatively similar.  However, if they are very different, we\n\t      // would expect horizontal and vertical lines to have different\n\t      // stroke-widths.\n\t      //\n\t      // In the future, if we want to support very divergent values for\n\t      // horizontal and vertical scaling, we may want to consider\n\t      // implementing SVG scaling with properties of the SVG viewBox &\n\t      // viewPort and removing it entirely from the Element.attr() calls.\n\t      // This would more closely parallel the approach taken in\n\t      // canvascontext.js as well.\n\t\n\t      var strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n\t      var elem = this.paper.path(this.path).attr(this.attributes).attr('fill', 'none').attr('stroke-width', strokeWidth);\n\t      this.glow(elem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      this.path += 'Z';\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      var txt = this.paper.text(0, 0, text).attr(this.attributes).attr('fill', 'none').attr('stroke', 'none');\n\t      var bounds = txt.getBBox();\n\t      txt.remove();\n\t\n\t      return {\n\t        width: bounds.width,\n\t        height: bounds.height\n\t      };\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      this.paper.text(x + this.measureText(text).width / 2, y - this.state.font_size / (2.25 * this.state.scale.y), text).attr(this.attributes);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      // TODO(mmuthanna): State needs to be deep-copied.\n\t      this.state_stack.push({\n\t        state: {\n\t          font_family: this.state.font_family\n\t        },\n\t        attributes: {\n\t          font: this.attributes.font,\n\t          fill: this.attributes.fill,\n\t          stroke: this.attributes.stroke,\n\t          'stroke-width': this.attributes['stroke-width']\n\t        },\n\t        shadow_attributes: {\n\t          width: this.shadow_attributes.width,\n\t          color: this.shadow_attributes.color\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      // TODO(0xfe): State needs to be deep-restored.\n\t      var state = this.state_stack.pop();\n\t      this.state.font_family = state.state.font_family;\n\t      this.attributes.font = state.attributes.font;\n\t      this.attributes.fill = state.attributes.fill;\n\t      this.attributes.stroke = state.attributes.stroke;\n\t      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n\t      this.shadow_attributes.width = state.shadow_attributes.width;\n\t      this.shadow_attributes.color = state.shadow_attributes.color;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return RaphaelContext;\n\t}();\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SVGContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Gregory Ristow (2015)\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SVGContext = exports.SVGContext = function () {\n\t  function SVGContext(element) {\n\t    _classCallCheck(this, SVGContext);\n\t\n\t    // element is the parent DOM object\n\t    this.element = element;\n\t    // Create the SVG in the SVG namespace:\n\t    this.svgNS = 'http://www.w3.org/2000/svg';\n\t    var svg = this.create('svg');\n\t    // Add it to the canvas:\n\t    this.element.appendChild(svg);\n\t\n\t    // Point to it:\n\t    this.svg = svg;\n\t    this.groups = [this.svg]; // Create the group stack\n\t    this.parent = this.svg;\n\t\n\t    this.path = '';\n\t    this.pen = { x: 0, y: 0 };\n\t    this.lineWidth = 1.0;\n\t    this.state = {\n\t      scale: { x: 1, y: 1 },\n\t      'font-family': 'Arial',\n\t      'font-size': '8pt',\n\t      'font-weight': 'normal'\n\t    };\n\t\n\t    this.attributes = {\n\t      'stroke-width': 0.3,\n\t      'fill': 'black',\n\t      'stroke': 'black',\n\t      'stroke-dasharray': 'none',\n\t      'font-family': 'Arial',\n\t      'font-size': '10pt',\n\t      'font-weight': 'normal',\n\t      'font-style': 'normal'\n\t    };\n\t\n\t    this.background_attributes = {\n\t      'stroke-width': 0,\n\t      'fill': 'white',\n\t      'stroke': 'white',\n\t      'stroke-dasharray': 'none',\n\t      'font-family': 'Arial',\n\t      'font-size': '10pt',\n\t      'font-weight': 'normal',\n\t      'font-style': 'normal'\n\t    };\n\t\n\t    this.shadow_attributes = {\n\t      width: 0,\n\t      color: 'black'\n\t    };\n\t\n\t    this.state_stack = [];\n\t\n\t    // Test for Internet Explorer\n\t    this.iePolyfill();\n\t  }\n\t\n\t  _createClass(SVGContext, [{\n\t    key: 'create',\n\t    value: function create(svgElementType) {\n\t      return document.createElementNS(this.svgNS, svgElementType);\n\t    }\n\t\n\t    // Allow grouping elements in containers for interactivity.\n\t\n\t  }, {\n\t    key: 'openGroup',\n\t    value: function openGroup(cls, id, attrs) {\n\t      var group = this.create('g');\n\t      this.groups.push(group);\n\t      this.parent.appendChild(group);\n\t      this.parent = group;\n\t      if (cls) group.setAttribute('class', _vex.Vex.Prefix(cls));\n\t      if (id) group.setAttribute('id', _vex.Vex.Prefix(id));\n\t\n\t      if (attrs && attrs.pointerBBox) {\n\t        group.setAttribute('pointer-events', 'bounding-box');\n\t      }\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {\n\t      this.groups.pop();\n\t      this.parent = this.groups[this.groups.length - 1];\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(elem) {\n\t      this.parent.appendChild(elem);\n\t    }\n\t\n\t    // Tests if the browser is Internet Explorer; if it is,\n\t    // we do some tricks to improve text layout.  See the\n\t    // note at ieMeasureTextFix() for details.\n\t\n\t  }, {\n\t    key: 'iePolyfill',\n\t    value: function iePolyfill() {\n\t      if (typeof navigator !== 'undefined') {\n\t        this.ie = /MSIE 9/i.test(navigator.userAgent) || /MSIE 10/i.test(navigator.userAgent) || /rv:11\\.0/i.test(navigator.userAgent) || /Trident/i.test(navigator.userAgent);\n\t      }\n\t    }\n\t\n\t    // ### Styling & State Methods:\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      // Unlike canvas, in SVG italic is handled by font-style,\n\t      // not weight. So: we search the weight argument and\n\t      // apply bold and italic to weight and style respectively.\n\t      var bold = false;\n\t      var italic = false;\n\t      var style = 'normal';\n\t      // Weight might also be a number (200, 400, etc...) so we\n\t      // test its type to be sure we have access to String methods.\n\t      if (typeof weight === 'string') {\n\t        // look for \"italic\" in the weight:\n\t        if (weight.indexOf('italic') !== -1) {\n\t          weight = weight.replace(/italic/g, '');\n\t          italic = true;\n\t        }\n\t        // look for \"bold\" in weight\n\t        if (weight.indexOf('bold') !== -1) {\n\t          weight = weight.replace(/bold/g, '');\n\t          bold = true;\n\t        }\n\t        // remove any remaining spaces\n\t        weight = weight.replace(/ /g, '');\n\t      }\n\t      weight = bold ? 'bold' : weight;\n\t      weight = typeof weight === 'undefined' || weight === '' ? 'normal' : weight;\n\t\n\t      style = italic ? 'italic' : style;\n\t\n\t      var fontAttributes = {\n\t        'font-family': family,\n\t        'font-size': size + 'pt',\n\t        'font-weight': weight,\n\t        'font-style': style\n\t      };\n\t\n\t      // Store the font size so that if the browser is Internet\n\t      // Explorer we can fix its calculations of text width.\n\t      this.fontSize = Number(size);\n\t\n\t      _vex.Vex.Merge(this.attributes, fontAttributes);\n\t      _vex.Vex.Merge(this.state, fontAttributes);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      font = font.trim();\n\t      // Assumes size first, splits on space -- which is presently\n\t      // how all existing modules are calling this.\n\t      var fontArray = font.split(' ');\n\t\n\t      this.attributes['font-family'] = fontArray[1];\n\t      this.state['font-family'] = fontArray[1];\n\t\n\t      this.attributes['font-size'] = fontArray[0];\n\t      this.state['font-size'] = fontArray[0];\n\t\n\t      // Saves fontSize for IE polyfill\n\t      this.fontSize = Number(fontArray[0].match(/\\d+/));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.attributes.fill = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_attributes.fill = style;\n\t      this.background_attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.shadow_attributes.color = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.shadow_attributes.width = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.attributes['stroke-width'] = width;\n\t      this.lineWidth = width;\n\t    }\n\t\n\t    // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash(lineDash) {\n\t      if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n\t        lineDash = lineDash.join(', ');\n\t        this.attributes['stroke-dasharray'] = lineDash;\n\t        return this;\n\t      } else {\n\t        throw new _vex.Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap(lineCap) {\n\t      this.attributes['stroke-linecap'] = lineCap;\n\t      return this;\n\t    }\n\t\n\t    // ### Sizing & Scaling Methods:\n\t\n\t    // TODO (GCR): See note at scale() -- seperate our internal\n\t    // conception of pixel-based width/height from the style.width\n\t    // and style.height properties eventually to allow users to\n\t    // apply responsive sizing attributes to the SVG.\n\t\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.element.style.width = width;\n\t      var attributes = {\n\t        width: width,\n\t        height: height\n\t      };\n\t      this.applyAttributes(this.svg, attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      // uses viewBox to scale\n\t      // TODO (GCR): we may at some point want to distinguish the\n\t      // style.width / style.height properties that are applied to\n\t      // the SVG object from our internal conception of the SVG\n\t      // width/height.  This would allow us to create automatically\n\t      // scaling SVG's that filled their containers, for instance.\n\t      //\n\t      // As this isn't implemented in Canvas or Raphael contexts,\n\t      // I've left as is for now, but in using the viewBox to\n\t      // handle internal scaling, am trying to make it possible\n\t      // for us to eventually move in that direction.\n\t\n\t      this.state.scale = { x: x, y: y };\n\t      var visibleWidth = this.width / x;\n\t      var visibleHeight = this.height / y;\n\t      this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setViewBox',\n\t    value: function setViewBox() {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      // Override for \"x y w h\" style:\n\t      if (args.length === 1) {\n\t        var viewBox = args[0];\n\t\n\t        this.svg.setAttribute('viewBox', viewBox);\n\t      } else {\n\t        var xMin = args[0];\n\t        var yMin = args[1];\n\t        var width = args[2];\n\t        var height = args[3];\n\t\n\t        var viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n\t        this.svg.setAttribute('viewBox', viewBoxString);\n\t      }\n\t    }\n\t\n\t    // ### Drawing helper methods:\n\t\n\t  }, {\n\t    key: 'applyAttributes',\n\t    value: function applyAttributes(element, attributes) {\n\t      Object.keys(attributes).forEach(function (propertyName) {\n\t        return element.setAttributeNS(null, propertyName, attributes[propertyName]);\n\t      });\n\t\n\t      return element;\n\t    }\n\t\n\t    // ### Shape & Path Methods:\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      // Clear the SVG by removing all inner children.\n\t\n\t      // (This approach is usually slightly more efficient\n\t      // than removing the old SVG & adding a new one to\n\t      // the container element, since it does not cause the\n\t      // container to resize twice.  Also, the resize\n\t      // triggered by removing the entire SVG can trigger\n\t      // a touchcancel event when the element resizes away\n\t      // from a touch point.)\n\t\n\t      while (this.svg.lastChild) {\n\t        this.svg.removeChild(this.svg.lastChild);\n\t      }\n\t\n\t      // Replace the viewbox attribute we just removed:\n\t      this.scale(this.state.scale.x, this.state.scale.y);\n\t    }\n\t\n\t    // ## Rectangles:\n\t\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height, attributes) {\n\t      // Avoid invalid negative height attribs by\n\t      // flipping the rectangle on its head:\n\t      if (height < 0) {\n\t        y += height;\n\t        height *= -1;\n\t      }\n\t\n\t      // Create the rect & style it:\n\t      var rectangle = this.create('rect');\n\t      if (typeof attributes === 'undefined') {\n\t        attributes = {\n\t          fill: 'none',\n\t          'stroke-width': this.lineWidth,\n\t          stroke: 'black'\n\t        };\n\t      }\n\t\n\t      _vex.Vex.Merge(attributes, {\n\t        x: x,\n\t        y: y,\n\t        width: width,\n\t        height: height\n\t      });\n\t\n\t      this.applyAttributes(rectangle, attributes);\n\t\n\t      this.add(rectangle);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height *= -1;\n\t      }\n\t\n\t      this.rect(x, y, width, height, this.attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      // TODO(GCR): Improve implementation of this...\n\t      // Currently it draws a box of the background color, rather\n\t      // than creating alpha through lower z-levels.\n\t      //\n\t      // See the implementation of this in SVGKit:\n\t      // http://sourceforge.net/projects/svgkit/\n\t      // as a starting point.\n\t      //\n\t      // Adding a large number of transform paths (as we would\n\t      // have to do) could be a real performance hit.  Since\n\t      // tabNote seems to be the only module that makes use of this\n\t      // it may be worth creating a seperate tabStave that would\n\t      // draw lines around locations of tablature fingering.\n\t      //\n\t\n\t      this.rect(x, y, width, height, this.background_attributes);\n\t      return this;\n\t    }\n\t\n\t    // ## Paths:\n\t\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      this.path = '';\n\t      this.pen.x = 0;\n\t      this.pen.y = 0;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      this.path += 'M' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      this.path += 'L' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      function normalizeAngle(angle) {\n\t        while (angle < 0) {\n\t          angle += Math.PI * 2;\n\t        }\n\t\n\t        while (angle > Math.PI * 2) {\n\t          angle -= Math.PI * 2;\n\t        }\n\t        return angle;\n\t      }\n\t\n\t      startAngle = normalizeAngle(startAngle);\n\t      endAngle = normalizeAngle(endAngle);\n\t\n\t      if (startAngle > endAngle) {\n\t        var tmp = startAngle;\n\t        startAngle = endAngle;\n\t        endAngle = tmp;\n\t        antiClockwise = !antiClockwise;\n\t      }\n\t\n\t      var delta = endAngle - startAngle;\n\t\n\t      if (delta > Math.PI) {\n\t        this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n\t        this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n\t      } else {\n\t        this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'arcHelper',\n\t    value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      var x1 = x + radius * Math.cos(startAngle);\n\t      var y1 = y + radius * Math.sin(startAngle);\n\t\n\t      var x2 = x + radius * Math.cos(endAngle);\n\t      var y2 = y + radius * Math.sin(endAngle);\n\t\n\t      var largeArcFlag = 0;\n\t      var sweepFlag = 0;\n\t      if (antiClockwise) {\n\t        sweepFlag = 1;\n\t        if (endAngle - startAngle < Math.PI) {\n\t          largeArcFlag = 1;\n\t        }\n\t      } else if (endAngle - startAngle > Math.PI) {\n\t        largeArcFlag = 1;\n\t      }\n\t\n\t      this.path += 'M' + x1 + ' ' + y1 + ' A' + radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' + x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      this.path += 'Z';\n\t\n\t      return this;\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      // Calculate the width & paths of the glow:\n\t      if (this.shadow_attributes.width > 0) {\n\t        var sa = this.shadow_attributes;\n\t        var num_paths = sa.width / 2;\n\t        // Stroke at varying widths to create effect of gaussian blur:\n\t        for (var i = 1; i <= num_paths; i++) {\n\t          var attributes = {\n\t            stroke: sa.color,\n\t            'stroke-linejoin': 'round',\n\t            'stroke-linecap': 'round',\n\t            'stroke-width': +(sa.width * 0.4 / num_paths * i).toFixed(3),\n\t            opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3)\n\t          };\n\t\n\t          var path = this.create('path');\n\t          attributes.d = this.path;\n\t          this.applyAttributes(path, attributes);\n\t          this.add(path);\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill(attributes) {\n\t      // If our current path is set to glow, make it glow\n\t      this.glow();\n\t\n\t      var path = this.create('path');\n\t      if (typeof attributes === 'undefined') {\n\t        attributes = {};\n\t        _vex.Vex.Merge(attributes, this.attributes);\n\t        attributes.stroke = 'none';\n\t      }\n\t\n\t      attributes.d = this.path;\n\t\n\t      this.applyAttributes(path, attributes);\n\t      this.add(path);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      // If our current path is set to glow, make it glow.\n\t      this.glow();\n\t\n\t      var path = this.create('path');\n\t      var attributes = {};\n\t      _vex.Vex.Merge(attributes, this.attributes);\n\t      attributes.fill = 'none';\n\t      attributes['stroke-width'] = this.lineWidth;\n\t      attributes.d = this.path;\n\t\n\t      this.applyAttributes(path, attributes);\n\t      this.add(path);\n\t      return this;\n\t    }\n\t\n\t    // ## Text Methods:\n\t\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      var txt = this.create('text');\n\t      if (typeof txt.getBBox !== 'function') {\n\t        return { x: 0, y: 0, width: 0, height: 0 };\n\t      }\n\t\n\t      txt.textContent = text;\n\t      this.applyAttributes(txt, this.attributes);\n\t\n\t      // Temporarily add it to the document for measurement.\n\t      this.svg.appendChild(txt);\n\t\n\t      var bbox = txt.getBBox();\n\t      if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n\t        bbox = this.ieMeasureTextFix(bbox, text);\n\t      }\n\t\n\t      this.svg.removeChild(txt);\n\t      return bbox;\n\t    }\n\t  }, {\n\t    key: 'ieMeasureTextFix',\n\t    value: function ieMeasureTextFix(bbox) {\n\t      // Internet Explorer over-pads text in italics,\n\t      // resulting in giant width estimates for measureText.\n\t      // To fix this, we use this formula, tested against\n\t      // ie 11:\n\t      // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n\t      // And then subtract the overestimate from calculated width.\n\t\n\t      var fontSize = Number(this.fontSize);\n\t      var m = 1.196;\n\t      var b = 1.9598;\n\t      var widthCorrection = m * fontSize + b;\n\t      var width = bbox.width - widthCorrection;\n\t      var height = bbox.height - 1.5;\n\t\n\t      // Get non-protected copy:\n\t      var box = {\n\t        x: bbox.x,\n\t        y: bbox.y,\n\t        width: width,\n\t        height: height\n\t      };\n\t\n\t      return box;\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      var attributes = {};\n\t      _vex.Vex.Merge(attributes, this.attributes);\n\t      attributes.stroke = 'none';\n\t      attributes.x = x;\n\t      attributes.y = y;\n\t\n\t      var txt = this.create('text');\n\t      txt.textContent = text;\n\t      this.applyAttributes(txt, attributes);\n\t      this.add(txt);\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      // TODO(mmuthanna): State needs to be deep-copied.\n\t      this.state_stack.push({\n\t        state: {\n\t          'font-family': this.state['font-family'],\n\t          'font-weight': this.state['font-weight'],\n\t          'font-style': this.state['font-style'],\n\t          'font-size': this.state['font-size']\n\t        },\n\t        attributes: {\n\t          'font-family': this.attributes['font-family'],\n\t          'font-weight': this.attributes['font-weight'],\n\t          'font-style': this.attributes['font-style'],\n\t          'font-size': this.attributes['font-size'],\n\t          fill: this.attributes.fill,\n\t          stroke: this.attributes.stroke,\n\t          'stroke-width': this.attributes['stroke-width'],\n\t          'stroke-dasharray': this.attributes['stroke-dasharray']\n\t        },\n\t        shadow_attributes: {\n\t          width: this.shadow_attributes.width,\n\t          color: this.shadow_attributes.color\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      // TODO(0xfe): State needs to be deep-restored.\n\t      var state = this.state_stack.pop();\n\t      this.state['font-family'] = state.state['font-family'];\n\t      this.state['font-weight'] = state.state['font-weight'];\n\t      this.state['font-style'] = state.state['font-style'];\n\t      this.state['font-size'] = state.state['font-size'];\n\t\n\t      this.attributes['font-family'] = state.attributes['font-family'];\n\t      this.attributes['font-weight'] = state.attributes['font-weight'];\n\t      this.attributes['font-style'] = state.attributes['font-style'];\n\t      this.attributes['font-size'] = state.attributes['font-size'];\n\t\n\t      this.attributes.fill = state.attributes.fill;\n\t      this.attributes.stroke = state.attributes.stroke;\n\t      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n\t      this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\t\n\t      this.shadow_attributes.width = state.shadow_attributes.width;\n\t      this.shadow_attributes.color = state.shadow_attributes.color;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return SVGContext;\n\t}();\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Formatter = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the formatting and layout algorithms that are used\n\t// to position notes in a voice. The algorithm can align multiple voices both\n\t// within a stave, and across multiple staves.\n\t//\n\t// To do this, the formatter breaks up voices into a grid of rational-valued\n\t// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n\t// to each tick based on the widths of the notes and modifiers in that tick. This\n\t// establishes the smallest amount of space required for each tick.\n\t//\n\t// Finally, the formatter distributes the left over space proportionally to\n\t// all the ticks, setting the `x` values of the notes in each tick.\n\t//\n\t// See `tests/formatter_tests.js` for usage examples. The helper functions included\n\t// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Formatter.DEBUG) _vex.Vex.L('Vex.Flow.Formatter', args);\n\t}\n\t\n\t// Helper function to locate the next non-rest note(s).\n\tfunction lookAhead(notes, restLine, i, compare) {\n\t  // If no valid next note group, nextRestLine is same as current.\n\t  var nextRestLine = restLine;\n\t\n\t  // Get the rest line for next valid non-rest note group.\n\t  for (i += 1; i < notes.length; i += 1) {\n\t    var note = notes[i];\n\t    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n\t      nextRestLine = note.getLineForRest();\n\t      break;\n\t    }\n\t  }\n\t\n\t  // Locate the mid point between two lines.\n\t  if (compare && restLine !== nextRestLine) {\n\t    var top = Math.max(restLine, nextRestLine);\n\t    var bot = Math.min(restLine, nextRestLine);\n\t    nextRestLine = _vex.Vex.MidLine(top, bot);\n\t  }\n\t  return nextRestLine;\n\t}\n\t\n\t// Take an array of `voices` and place aligned tickables in the same context. Returns\n\t// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n\t// multiplier.\n\t//\n\t// Params:\n\t// * `voices`: Array of `Voice` instances.\n\t// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n\t// * `addToContext`: Function to add tickable to context.\n\tfunction createContexts(voices, ContextType, addToContext) {\n\t  if (!voices || !voices.length) {\n\t    throw new _vex.Vex.RERR('BadArgument', 'No voices to format');\n\t  }\n\t\n\t  // Find out highest common multiple of resolution multipliers.\n\t  // The purpose of this is to find out a common denominator\n\t  // for all fractional tick values in all tickables of all voices,\n\t  // so that the values can be expanded and the numerator used\n\t  // as an integer tick value.\n\t  var totalTicks = voices[0].getTotalTicks();\n\t  var resolutionMultiplier = voices.reduce(function (resolutionMultiplier, voice) {\n\t    if (!voice.getTotalTicks().equals(totalTicks)) {\n\t      throw new _vex.Vex.RERR('TickMismatch', 'Voices should have same total note duration in ticks.');\n\t    }\n\t\n\t    if (voice.getMode() === _voice.Voice.Mode.STRICT && !voice.isComplete()) {\n\t      throw new _vex.Vex.RERR('IncompleteVoice', 'Voice does not have enough notes.');\n\t    }\n\t\n\t    return Math.max(resolutionMultiplier, _fraction.Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier()));\n\t  }, 1);\n\t\n\t  // Initialize tick maps.\n\t  var tickToContextMap = {};\n\t  var tickList = [];\n\t  var contexts = [];\n\t\n\t  // For each voice, extract notes and create a context for every\n\t  // new tick that hasn't been seen before.\n\t  voices.forEach(function (voice) {\n\t    // Use resolution multiplier as denominator to expand ticks\n\t    // to suitable integer values, so that no additional expansion\n\t    // of fractional tick values is needed.\n\t    var ticksUsed = new _fraction.Fraction(0, resolutionMultiplier);\n\t\n\t    voice.getTickables().forEach(function (tickable) {\n\t      var integerTicks = ticksUsed.numerator;\n\t\n\t      // If we have no tick context for this tick, create one.\n\t      if (!tickToContextMap[integerTicks]) {\n\t        var newContext = new ContextType();\n\t        contexts.push(newContext);\n\t        tickToContextMap[integerTicks] = newContext;\n\t      }\n\t\n\t      // Add this tickable to the TickContext.\n\t      addToContext(tickable, tickToContextMap[integerTicks]);\n\t\n\t      // Maintain a sorted list of tick contexts.\n\t      tickList.push(integerTicks);\n\t      ticksUsed.add(tickable.getTicks());\n\t    });\n\t  });\n\t\n\t  return {\n\t    map: tickToContextMap,\n\t    array: contexts,\n\t    list: _vex.Vex.SortAndUnique(tickList, function (a, b) {\n\t      return a - b;\n\t    }, function (a, b) {\n\t      return a === b;\n\t    }),\n\t    resolutionMultiplier: resolutionMultiplier\n\t  };\n\t}\n\t\n\tvar Formatter = exports.Formatter = function () {\n\t  _createClass(Formatter, null, [{\n\t    key: 'SimpleFormat',\n\t\n\t    // Helper function to layout \"notes\" one after the other without\n\t    // regard for proportions. Useful for tests and debugging.\n\t    value: function SimpleFormat(notes) {\n\t      var x = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      var _ref$paddingBetween = _ref.paddingBetween;\n\t      var paddingBetween = _ref$paddingBetween === undefined ? 10 : _ref$paddingBetween;\n\t\n\t      notes.reduce(function (x, note) {\n\t        note.addToModifierContext(new _modifiercontext.ModifierContext());\n\t        var tick = new _tickcontext.TickContext().addTickable(note).preFormat();\n\t        var extra = tick.getExtraPx();\n\t        tick.setX(x + extra.left);\n\t\n\t        return x + tick.getWidth() + extra.right + paddingBetween;\n\t      }, x);\n\t    }\n\t\n\t    // Helper function to plot formatter debug info.\n\t\n\t  }, {\n\t    key: 'plotDebugging',\n\t    value: function plotDebugging(ctx, formatter, xPos, y1, y2) {\n\t      var x = xPos + _note.Note.STAVEPADDING;\n\t      var contextGaps = formatter.contextGaps;\n\t      function stroke(x1, x2, color) {\n\t        ctx.beginPath();\n\t        ctx.setStrokeStyle(color);\n\t        ctx.setFillStyle(color);\n\t        ctx.setLineWidth(1);\n\t        ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.setFont('Arial', 8, '');\n\t\n\t      contextGaps.gaps.forEach(function (gap) {\n\t        stroke(x + gap.x1, x + gap.x2, '#aaa');\n\t        // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n\t        ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n\t      });\n\t\n\t      ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n\t      ctx.setFillStyle('red');\n\t\n\t      ctx.fillText('Loss: ' + formatter.lossHistory.map(function (loss) {\n\t        return Math.round(loss);\n\t      }), x - 20, y2 + 22);\n\t      ctx.restore();\n\t    }\n\t\n\t    // Helper function to format and draw a single voice. Returns a bounding\n\t    // box for the notation.\n\t    //\n\t    // Parameters:\n\t    // * `ctx` - The rendering context\n\t    // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n\t    // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n\t    // * `params` - One of below:\n\t    //    * Setting `autobeam` only `(context, stave, notes, true)` or\n\t    //      `(ctx, stave, notes, {autobeam: true})`\n\t    //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n\t    //    * Setting both a struct is needed `(context, stave, notes, {\n\t    //      autobeam: true, align_rests: true})`\n\t    //\n\t    // `autobeam` automatically generates beams for the notes.\n\t    // `align_rests` aligns rests with nearby notes.\n\t\n\t  }, {\n\t    key: 'FormatAndDraw',\n\t    value: function FormatAndDraw(ctx, stave, notes, params) {\n\t      var options = {\n\t        auto_beam: false,\n\t        align_rests: false\n\t      };\n\t\n\t      if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t        _vex.Vex.Merge(options, params);\n\t      } else if (typeof params === 'boolean') {\n\t        options.auto_beam = params;\n\t      }\n\t\n\t      // Start by creating a voice and adding all the notes to it.\n\t      var voice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(notes);\n\t\n\t      // Then create beams, if requested.\n\t      var beams = options.auto_beam ? _beam.Beam.applyAndGetBeams(voice) : [];\n\t\n\t      // Instantiate a `Formatter` and format the notes.\n\t      new Formatter().joinVoices([voice], { align_rests: options.align_rests }).formatToStave([voice], stave, { align_rests: options.align_rests, stave: stave });\n\t\n\t      // Render the voice and beams to the stave.\n\t      voice.setStave(stave).draw(ctx, stave);\n\t      beams.forEach(function (beam) {\n\t        return beam.setContext(ctx).draw();\n\t      });\n\t\n\t      // Return the bounding box of the voice.\n\t      return voice.getBoundingBox();\n\t    }\n\t\n\t    // Helper function to format and draw aligned tab and stave notes in two\n\t    // separate staves.\n\t    //\n\t    // Parameters:\n\t    // * `ctx` - The rendering context\n\t    // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n\t    // * `stave` - A `Stave` instance on which to render `Note`s.\n\t    // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n\t    // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n\t    // * `autobeam` - Automatically generate beams.\n\t    // * `params` - A configuration object:\n\t    //    * `autobeam` automatically generates beams for the notes.\n\t    //    * `align_rests` aligns rests with nearby notes.\n\t\n\t  }, {\n\t    key: 'FormatAndDrawTab',\n\t    value: function FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n\t      var opts = {\n\t        auto_beam: autobeam,\n\t        align_rests: false\n\t      };\n\t\n\t      if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t        _vex.Vex.Merge(opts, params);\n\t      } else if (typeof params === 'boolean') {\n\t        opts.auto_beam = params;\n\t      }\n\t\n\t      // Create a `4/4` voice for `notes`.\n\t      var notevoice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(notes);\n\t\n\t      // Create a `4/4` voice for `tabnotes`.\n\t      var tabvoice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(tabnotes);\n\t\n\t      // Then create beams, if requested.\n\t      var beams = opts.auto_beam ? _beam.Beam.applyAndGetBeams(notevoice) : [];\n\t\n\t      // Instantiate a `Formatter` and align tab and stave notes.\n\t      new Formatter().joinVoices([notevoice], { align_rests: opts.align_rests }).joinVoices([tabvoice]).formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\t\n\t      // Render voices and beams to staves.\n\t      notevoice.draw(ctx, stave);\n\t      tabvoice.draw(ctx, tabstave);\n\t      beams.forEach(function (beam) {\n\t        return beam.setContext(ctx).draw();\n\t      });\n\t\n\t      // Draw a connector between tab and note staves.\n\t      new _staveconnector.StaveConnector(stave, tabstave).setContext(ctx).draw();\n\t    }\n\t\n\t    // Auto position rests based on previous/next note positions.\n\t    //\n\t    // Params:\n\t    // * `notes`: An array of notes.\n\t    // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n\t    // * `alignTuplets`: If set to false, ignores tuplets.\n\t\n\t  }, {\n\t    key: 'AlignRestsToNotes',\n\t    value: function AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n\t      notes.forEach(function (note, index) {\n\t        if (note instanceof _stavenote.StaveNote && note.isRest()) {\n\t          if (note.tuplet && !alignTuplets) return;\n\t\n\t          // If activated rests not on default can be rendered as specified.\n\t          var position = note.getGlyph().position.toUpperCase();\n\t          if (position !== 'R/4' && position !== 'B/4') return;\n\t\n\t          if (alignAllNotes || note.beam != null) {\n\t            // Align rests with previous/next notes.\n\t            var props = note.getKeyProps()[0];\n\t            if (index === 0) {\n\t              props.line = lookAhead(notes, props.line, index, false);\n\t              note.setKeyLine(0, props.line);\n\t            } else if (index > 0 && index < notes.length) {\n\t              // If previous note is a rest, use its line number.\n\t              var restLine = void 0;\n\t              if (notes[index - 1].isRest()) {\n\t                restLine = notes[index - 1].getKeyProps()[0].line;\n\t                props.line = restLine;\n\t              } else {\n\t                restLine = notes[index - 1].getLineForRest();\n\t                // Get the rest line for next valid non-rest note group.\n\t                props.line = lookAhead(notes, restLine, index, true);\n\t              }\n\t              note.setKeyLine(0, props.line);\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  function Formatter() {\n\t    _classCallCheck(this, Formatter);\n\t\n\t    // Minimum width required to render all the notes in the voices.\n\t    this.minTotalWidth = 0;\n\t\n\t    // This is set to `true` after `minTotalWidth` is calculated.\n\t    this.hasMinTotalWidth = false;\n\t\n\t    // Total number of ticks in the voice.\n\t    this.totalTicks = new _fraction.Fraction(0, 1);\n\t\n\t    // Arrays of tick and modifier contexts.\n\t    this.tickContexts = null;\n\t    this.modiferContexts = null;\n\t\n\t    // Gaps between contexts, for free movement of notes post\n\t    // formatting.\n\t    this.contextGaps = {\n\t      total: 0,\n\t      gaps: []\n\t    };\n\t\n\t    this.voices = [];\n\t  }\n\t\n\t  // Find all the rests in each of the `voices` and align them\n\t  // to neighboring notes. If `alignAllNotes` is `false`, then only\n\t  // align non-beamed notes.\n\t\n\t\n\t  _createClass(Formatter, [{\n\t    key: 'alignRests',\n\t    value: function alignRests(voices, alignAllNotes) {\n\t      if (!voices || !voices.length) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'No voices to format rests');\n\t      }\n\t\n\t      voices.forEach(function (voice) {\n\t        return Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes);\n\t      });\n\t    }\n\t\n\t    // Calculate the minimum width required to align and format `voices`.\n\t\n\t  }, {\n\t    key: 'preCalculateMinTotalWidth',\n\t    value: function preCalculateMinTotalWidth(voices) {\n\t      // Cache results.\n\t      if (this.hasMinTotalWidth) return this.minTotalWidth;\n\t\n\t      // Create tick contexts if not already created.\n\t      if (!this.tickContexts) {\n\t        if (!voices) {\n\t          throw new _vex.Vex.RERR('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n\t        }\n\t\n\t        this.createTickContexts(voices);\n\t      }\n\t\n\t      var _tickContexts = this.tickContexts;\n\t      var contextList = _tickContexts.list;\n\t      var contextMap = _tickContexts.map;\n\t\n\t      // Go through each tick context and calculate total width.\n\t\n\t      this.minTotalWidth = contextList.map(function (tick) {\n\t        var context = contextMap[tick];\n\t        context.preFormat();\n\t        return context.getWidth();\n\t      }).reduce(function (a, b) {\n\t        return a + b;\n\t      }, 0);\n\t\n\t      this.hasMinTotalWidth = true;\n\t\n\t      return this.minTotalWidth;\n\t    }\n\t\n\t    // Get minimum width required to render all voices. Either `format` or\n\t    // `preCalculateMinTotalWidth` must be called before this method.\n\t\n\t  }, {\n\t    key: 'getMinTotalWidth',\n\t    value: function getMinTotalWidth() {\n\t      if (!this.hasMinTotalWidth) {\n\t        throw new _vex.Vex.RERR('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n\t      }\n\t\n\t      return this.minTotalWidth;\n\t    }\n\t\n\t    // Create `ModifierContext`s for each tick in `voices`.\n\t\n\t  }, {\n\t    key: 'createModifierContexts',\n\t    value: function createModifierContexts(voices) {\n\t      var contexts = createContexts(voices, _modifiercontext.ModifierContext, function (tickable, context) {\n\t        return tickable.addToModifierContext(context);\n\t      });\n\t\n\t      this.modiferContexts = contexts;\n\t      return contexts;\n\t    }\n\t\n\t    // Create `TickContext`s for each tick in `voices`. Also calculate the\n\t    // total number of ticks in voices.\n\t\n\t  }, {\n\t    key: 'createTickContexts',\n\t    value: function createTickContexts(voices) {\n\t      var contexts = createContexts(voices, _tickcontext.TickContext, function (tickable, context) {\n\t        return context.addTickable(tickable);\n\t      });\n\t\n\t      contexts.array.forEach(function (context) {\n\t        context.tContexts = contexts.array;\n\t      });\n\t\n\t      this.totalTicks = voices[0].getTicksUsed().clone();\n\t      this.tickContexts = contexts;\n\t      return contexts;\n\t    }\n\t\n\t    // This is the core formatter logic. Format voices and justify them\n\t    // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n\t    // that can't retreive widths without a canvas. This method sets the `x` positions\n\t    // of all the tickables/notes in the formatter.\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var justifyWidth = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t      var renderingContext = arguments[1];\n\t\n\t      var _this = this;\n\t\n\t      var voices = arguments[2];\n\t      var stave = arguments[3];\n\t\n\t      // Initialize context maps.\n\t      var contexts = this.tickContexts;\n\t      var contextList = contexts.list;\n\t      var contextMap = contexts.map;\n\t      var resolutionMultiplier = contexts.resolutionMultiplier;\n\t\n\t      // If voices and a stave were provided, set the Stave for each voice\n\t      // and preFormat to apply Y values to the notes;\n\t\n\t      if (voices && stave) {\n\t        voices.forEach(function (voice) {\n\t          return voice.setStave(stave).preFormat();\n\t        });\n\t      }\n\t\n\t      // Now distribute the ticks to each tick context, and assign them their\n\t      // own X positions.\n\t      var x = 0;\n\t      var shift = 0;\n\t      var centerX = justifyWidth / 2;\n\t      this.minTotalWidth = 0;\n\t\n\t      // Pass 1: Give each note maximum width requested by context.\n\t      contextList.forEach(function (tick) {\n\t        var context = contextMap[tick];\n\t        if (renderingContext) context.setContext(renderingContext);\n\t\n\t        // Make sure that all tickables in this context have calculated their\n\t        // space requirements.\n\t        context.preFormat();\n\t\n\t        var width = context.getWidth();\n\t        _this.minTotalWidth += width;\n\t\n\t        var metrics = context.getMetrics();\n\t        x = x + shift + metrics.extraLeftPx;\n\t        context.setX(x);\n\t\n\t        // Calculate shift for the next tick.\n\t        shift = width - metrics.extraLeftPx;\n\t      });\n\t\n\t      this.minTotalWidth = x + shift;\n\t      this.hasMinTotalWidth = true;\n\t\n\t      // No justification needed. End formatting.\n\t      if (justifyWidth <= 0) return;\n\t\n\t      // Pass 2: Take leftover width, and distribute it to proportionately to\n\t      // all notes.\n\t      var remainingX = justifyWidth - this.minTotalWidth;\n\t      var leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n\t      var spaceAccum = 0;\n\t\n\t      contextList.forEach(function (tick, index) {\n\t        var prevTick = contextList[index - 1] || 0;\n\t        var context = contextMap[tick];\n\t        var tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\t\n\t        spaceAccum += tickSpace;\n\t        context.setX(context.getX() + spaceAccum);\n\t\n\t        // Move center aligned tickables to middle\n\t        context.getCenterAlignedTickables().forEach(function (tickable) {\n\t          // eslint-disable-line\n\t          tickable.center_x_shift = centerX - context.getX();\n\t        });\n\t      });\n\t\n\t      // Just one context. Done formatting.\n\t      if (contextList.length === 1) return;\n\t\n\t      this.justifyWidth = justifyWidth;\n\t      this.lossHistory = [];\n\t      this.evaluate();\n\t    }\n\t\n\t    // Calculate the total cost of this formatting decision.\n\t\n\t  }, {\n\t    key: 'evaluate',\n\t    value: function evaluate() {\n\t      var _this2 = this;\n\t\n\t      var justifyWidth = this.justifyWidth;\n\t      // Calculate available slack per tick context. This works out how much freedom\n\t      // to move a context has in either direction, without affecting other notes.\n\t      this.contextGaps = { total: 0, gaps: [] };\n\t      this.tickContexts.list.forEach(function (tick, index) {\n\t        if (index === 0) return;\n\t        var prevTick = _this2.tickContexts.list[index - 1];\n\t        var prevContext = _this2.tickContexts.map[prevTick];\n\t        var context = _this2.tickContexts.map[tick];\n\t        var prevMetrics = prevContext.getMetrics();\n\t\n\t        var insideRightEdge = prevContext.getX() + prevMetrics.width;\n\t        var insideLeftEdge = context.getX();\n\t        var gap = insideLeftEdge - insideRightEdge;\n\t        _this2.contextGaps.total += gap;\n\t        _this2.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\t\n\t        // Tell the tick contexts how much they can reposition themselves.\n\t        context.getFormatterMetrics().freedom.left = gap;\n\t        prevContext.getFormatterMetrics().freedom.right = gap;\n\t      });\n\t\n\t      // Calculate mean distance in each voice for each duration type, then calculate\n\t      // how far each note is from the mean.\n\t      var durationStats = this.durationStats = {};\n\t\n\t      function updateStats(duration, space) {\n\t        var stats = durationStats[duration];\n\t        if (stats === undefined) {\n\t          durationStats[duration] = { mean: space, count: 1 };\n\t        } else {\n\t          stats.count += 1;\n\t          stats.mean = (stats.mean + space) / 2;\n\t        }\n\t      }\n\t\n\t      this.voices.forEach(function (voice) {\n\t        voice.getTickables().forEach(function (note, i, notes) {\n\t          var duration = note.getTicks().clone().simplify().toString();\n\t          var metrics = note.getMetrics();\n\t          var formatterMetrics = note.getFormatterMetrics();\n\t          var leftNoteEdge = note.getX() + metrics.noteWidth + metrics.modRightPx + metrics.extraRightPx;\n\t          var space = 0;\n\t\n\t          if (i < notes.length - 1) {\n\t            var rightNote = notes[i + 1];\n\t            var rightMetrics = rightNote.getMetrics();\n\t            var rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\t\n\t            space = rightNoteEdge - leftNoteEdge;\n\t            formatterMetrics.space.used = rightNote.getX() - note.getX();\n\t            rightNote.getFormatterMetrics().freedom.left = space;\n\t          } else {\n\t            space = justifyWidth - leftNoteEdge;\n\t            formatterMetrics.space.used = justifyWidth - note.getX();\n\t          }\n\t\n\t          formatterMetrics.freedom.right = space;\n\t          updateStats(duration, formatterMetrics.space.used);\n\t        });\n\t      });\n\t\n\t      // Calculate how much each note deviates from the mean. Loss function is square\n\t      // root of the sum of squared deviations.\n\t      var totalDeviation = 0;\n\t      this.voices.forEach(function (voice) {\n\t        voice.getTickables().forEach(function (note) {\n\t          var duration = note.getTicks().clone().simplify().toString();\n\t          var metrics = note.getFormatterMetrics();\n\t          metrics.iterations += 1;\n\t          metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n\t          metrics.duration = duration;\n\t          metrics.space.mean = durationStats[duration].mean;\n\t\n\t          totalDeviation += Math.pow(durationStats[duration].mean, 2);\n\t        });\n\t      });\n\t\n\t      this.totalCost = Math.sqrt(totalDeviation);\n\t      this.lossHistory.push(this.totalCost);\n\t      return this;\n\t    }\n\t\n\t    // Run a single iteration of rejustification. At a high level, this method calculates\n\t    // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n\t    // attempt to reduce the cost. You can call this method multiple times until it finds\n\t    // and oscillates around a global minimum.\n\t\n\t  }, {\n\t    key: 'tune',\n\t    value: function tune() {\n\t      var _this3 = this;\n\t\n\t      var sum = function sum(means) {\n\t        return means.reduce(function (a, b) {\n\t          return a + b;\n\t        });\n\t      };\n\t\n\t      // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n\t      // on adjacent tickcontexts.\n\t      function move(current, prev, next, shift) {\n\t        current.setX(current.getX() + shift);\n\t        current.getFormatterMetrics().freedom.left += shift;\n\t        current.getFormatterMetrics().freedom.right -= shift;\n\t\n\t        if (prev) prev.getFormatterMetrics().freedom.right += shift;\n\t        if (next) next.getFormatterMetrics().freedom.left -= shift;\n\t      }\n\t\n\t      var shift = 0;\n\t      this.tickContexts.list.forEach(function (tick, index, list) {\n\t        var context = _this3.tickContexts.map[tick];\n\t        var prevContext = index > 0 ? _this3.tickContexts.map[list[index - 1]] : null;\n\t        var nextContext = index < list.length - 1 ? _this3.tickContexts.map[list[index + 1]] : null;\n\t\n\t        move(context, prevContext, nextContext, shift);\n\t\n\t        var cost = -sum(context.getTickables().map(function (t) {\n\t          return t.getFormatterMetrics().space.deviation;\n\t        }));\n\t\n\t        if (cost > 0) {\n\t          shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n\t        } else if (cost < 0) {\n\t          if (nextContext) {\n\t            shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n\t          } else {\n\t            shift = 0;\n\t          }\n\t        }\n\t\n\t        var minShift = Math.min(5, Math.abs(shift));\n\t        shift = shift > 0 ? minShift : -minShift;\n\t      });\n\t\n\t      return this.evaluate();\n\t    }\n\t\n\t    // This is the top-level call for all formatting logic completed\n\t    // after `x` *and* `y` values have been computed for the notes\n\t    // in the voices.\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      var postFormatContexts = function postFormatContexts(contexts) {\n\t        return contexts.list.forEach(function (tick) {\n\t          return contexts.map[tick].postFormat();\n\t        });\n\t      };\n\t\n\t      postFormatContexts(this.modiferContexts);\n\t      postFormatContexts(this.tickContexts);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Take all `voices` and create `ModifierContext`s out of them. This tells\n\t    // the formatters that the voices belong on a single stave.\n\t\n\t  }, {\n\t    key: 'joinVoices',\n\t    value: function joinVoices(voices) {\n\t      this.createModifierContexts(voices);\n\t      this.hasMinTotalWidth = false;\n\t      return this;\n\t    }\n\t\n\t    // Align rests in voices, justify the contexts, and position the notes\n\t    // so voices are aligned and ready to render onto the stave. This method\n\t    // mutates the `x` positions of all tickables in `voices`.\n\t    //\n\t    // Voices are full justified to fit in `justifyWidth` pixels.\n\t    //\n\t    // Set `options.context` to the rendering context. Set `options.align_rests`\n\t    // to true to enable rest alignment.\n\t\n\t  }, {\n\t    key: 'format',\n\t    value: function format(voices, justifyWidth, options) {\n\t      var opts = {\n\t        align_rests: false,\n\t        context: null,\n\t        stave: null\n\t      };\n\t\n\t      _vex.Vex.Merge(opts, options);\n\t      this.voices = voices;\n\t      this.alignRests(voices, opts.align_rests);\n\t      this.createTickContexts(voices);\n\t      this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\t\n\t      // Only postFormat if a stave was supplied for y value formatting\n\t      if (opts.stave) this.postFormat();\n\t\n\t      return this;\n\t    }\n\t\n\t    // This method is just like `format` except that the `justifyWidth` is inferred\n\t    // from the `stave`.\n\t\n\t  }, {\n\t    key: 'formatToStave',\n\t    value: function formatToStave(voices, stave, options) {\n\t      var justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n\t      L('Formatting voices to width: ', justifyWidth);\n\t      var opts = { context: stave.getContext() };\n\t      _vex.Vex.Merge(opts, options);\n\t      return this.format(voices, justifyWidth, opts);\n\t    }\n\t  }]);\n\n\t  return Formatter;\n\t}();\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Beam = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `Beams` that span over a set of `StemmableNotes`.\n\t\n\tfunction calculateStemDirection(notes) {\n\t  var lineSum = 0;\n\t  notes.forEach(function (note) {\n\t    if (note.keyProps) {\n\t      note.keyProps.forEach(function (keyProp) {\n\t        lineSum += keyProp.line - 3;\n\t      });\n\t    }\n\t  });\n\t\n\t  if (lineSum >= 0) {\n\t    return _stem.Stem.DOWN;\n\t  }\n\t  return _stem.Stem.UP;\n\t}\n\t\n\tvar getStemSlope = function getStemSlope(firstNote, lastNote) {\n\t  var firstStemTipY = firstNote.getStemExtents().topY;\n\t  var firstStemX = firstNote.getStemX();\n\t  var lastStemTipY = lastNote.getStemExtents().topY;\n\t  var lastStemX = lastNote.getStemX();\n\t  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n\t};\n\t\n\tvar Beam = exports.Beam = function (_Element) {\n\t  _inherits(Beam, _Element);\n\t\n\t  _createClass(Beam, null, [{\n\t    key: 'getDefaultBeamGroups',\n\t\n\t    // Gets the default beam groups for a provided time signature.\n\t    // Attempts to guess if the time signature is not found in table.\n\t    // Currently this is fairly naive.\n\t    value: function getDefaultBeamGroups(time_sig) {\n\t      if (!time_sig || time_sig === 'c') {\n\t        time_sig = '4/4';\n\t      }\n\t\n\t      var defaults = {\n\t        '1/2': ['1/2'],\n\t        '2/2': ['1/2'],\n\t        '3/2': ['1/2'],\n\t        '4/2': ['1/2'],\n\t\n\t        '1/4': ['1/4'],\n\t        '2/4': ['1/4'],\n\t        '3/4': ['1/4'],\n\t        '4/4': ['1/4'],\n\t\n\t        '1/8': ['1/8'],\n\t        '2/8': ['2/8'],\n\t        '3/8': ['3/8'],\n\t        '4/8': ['2/8'],\n\t\n\t        '1/16': ['1/16'],\n\t        '2/16': ['2/16'],\n\t        '3/16': ['3/16'],\n\t        '4/16': ['2/16']\n\t      };\n\t\n\t      var groups = defaults[time_sig];\n\t\n\t      if (groups === undefined) {\n\t        // If no beam groups found, naively determine\n\t        // the beam groupings from the time signature\n\t        var beatTotal = parseInt(time_sig.split('/')[0], 10);\n\t        var beatValue = parseInt(time_sig.split('/')[1], 10);\n\t\n\t        var tripleMeter = beatTotal % 3 === 0;\n\t\n\t        if (tripleMeter) {\n\t          return [new _fraction.Fraction(3, beatValue)];\n\t        } else if (beatValue > 4) {\n\t          return [new _fraction.Fraction(2, beatValue)];\n\t        } else if (beatValue <= 4) {\n\t          return [new _fraction.Fraction(1, beatValue)];\n\t        }\n\t      } else {\n\t        return groups.map(function (group) {\n\t          return new _fraction.Fraction().parse(group);\n\t        });\n\t      }\n\t\n\t      return [new _fraction.Fraction(1, 4)];\n\t    }\n\t\n\t    // A helper function to automatically build basic beams for a voice. For more\n\t    // complex auto-beaming use `Beam.generateBeams()`.\n\t    //\n\t    // Parameters:\n\t    // * `voice` - The voice to generate the beams for\n\t    // * `stem_direction` - A stem direction to apply to the entire voice\n\t    // * `groups` - An array of `Fraction` representing beat groupings for the beam\n\t\n\t  }, {\n\t    key: 'applyAndGetBeams',\n\t    value: function applyAndGetBeams(voice, stem_direction, groups) {\n\t      return Beam.generateBeams(voice.getTickables(), {\n\t        groups: groups,\n\t        stem_direction: stem_direction\n\t      });\n\t    }\n\t\n\t    // A helper function to autimatically build beams for a voice with\n\t    // configuration options.\n\t    //\n\t    // Example configuration object:\n\t    //\n\t    // ```\n\t    // config = {\n\t    //   groups: [new Vex.Flow.Fraction(2, 8)],\n\t    //   stem_direction: -1,\n\t    //   beam_rests: true,\n\t    //   beam_middle_only: true,\n\t    //   show_stemlets: false\n\t    // };\n\t    // ```\n\t    //\n\t    // Parameters:\n\t    // * `notes` - An array of notes to create the beams for\n\t    // * `config` - The configuration object\n\t    //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n\t    //    * `stem_direction` - Set to apply the same direction to all notes\n\t    //    * `beam_rests` - Set to `true` to include rests in the beams\n\t    //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n\t    //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n\t    //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n\t    //\n\t\n\t  }, {\n\t    key: 'generateBeams',\n\t    value: function generateBeams(notes, config) {\n\t      if (!config) config = {};\n\t\n\t      if (!config.groups || !config.groups.length) {\n\t        config.groups = [new _fraction.Fraction(2, 8)];\n\t      }\n\t\n\t      // Convert beam groups to tick amounts\n\t      var tickGroups = config.groups.map(function (group) {\n\t        if (!group.multiply) {\n\t          throw new _vex.Vex.RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n\t        }\n\t        return group.clone().multiply(_tables.Flow.RESOLUTION, 1);\n\t      });\n\t\n\t      var unprocessedNotes = notes;\n\t      var currentTickGroup = 0;\n\t      var noteGroups = [];\n\t      var currentGroup = [];\n\t\n\t      function getTotalTicks(vf_notes) {\n\t        return vf_notes.reduce(function (memo, note) {\n\t          return note.getTicks().clone().add(memo);\n\t        }, new _fraction.Fraction(0, 1));\n\t      }\n\t\n\t      function nextTickGroup() {\n\t        if (tickGroups.length - 1 > currentTickGroup) {\n\t          currentTickGroup += 1;\n\t        } else {\n\t          currentTickGroup = 0;\n\t        }\n\t      }\n\t\n\t      function createGroups() {\n\t        var nextGroup = [];\n\t\n\t        unprocessedNotes.forEach(function (unprocessedNote) {\n\t          nextGroup = [];\n\t          if (unprocessedNote.shouldIgnoreTicks()) {\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            return; // Ignore untickables (like bar notes)\n\t          }\n\t\n\t          currentGroup.push(unprocessedNote);\n\t          var ticksPerGroup = tickGroups[currentTickGroup].clone();\n\t          var totalTicks = getTotalTicks(currentGroup);\n\t\n\t          // Double the amount of ticks in a group, if it's an unbeamable tuplet\n\t          var unbeamable = _tables.Flow.durationToNumber(unprocessedNote.duration) < 8;\n\t          if (unbeamable && unprocessedNote.tuplet) {\n\t            ticksPerGroup.numerator *= 2;\n\t          }\n\t\n\t          // If the note that was just added overflows the group tick total\n\t          if (totalTicks.greaterThan(ticksPerGroup)) {\n\t            // If the overflow note can be beamed, start the next group\n\t            // with it. Unbeamable notes leave the group overflowed.\n\t            if (!unbeamable) {\n\t              nextGroup.push(currentGroup.pop());\n\t            }\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            nextTickGroup();\n\t          } else if (totalTicks.equals(ticksPerGroup)) {\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            nextTickGroup();\n\t          }\n\t        });\n\t\n\t        // Adds any remainder notes\n\t        if (currentGroup.length > 0) {\n\t          noteGroups.push(currentGroup);\n\t        }\n\t      }\n\t\n\t      function getBeamGroups() {\n\t        return noteGroups.filter(function (group) {\n\t          if (group.length > 1) {\n\t            var beamable = true;\n\t            group.forEach(function (note) {\n\t              if (note.getIntrinsicTicks() >= _tables.Flow.durationToTicks('4')) {\n\t                beamable = false;\n\t              }\n\t            });\n\t            return beamable;\n\t          }\n\t          return false;\n\t        });\n\t      }\n\t\n\t      // Splits up groups by Rest\n\t      function sanitizeGroups() {\n\t        var sanitizedGroups = [];\n\t        noteGroups.forEach(function (group) {\n\t          var tempGroup = [];\n\t          group.forEach(function (note, index, group) {\n\t            var isFirstOrLast = index === 0 || index === group.length - 1;\n\t            var prevNote = group[index - 1];\n\t\n\t            var breaksOnEachRest = !config.beam_rests && note.isRest();\n\t            var breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n\t\n\t            var breakOnStemChange = false;\n\t            if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n\t              var prevDirection = prevNote.getStemDirection();\n\t              var currentDirection = note.getStemDirection();\n\t              breakOnStemChange = currentDirection !== prevDirection;\n\t            }\n\t\n\t            var isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\t\n\t            // Determine if the group should be broken at this note\n\t            var shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n\t\n\t            if (shouldBreak) {\n\t              // Add current group\n\t              if (tempGroup.length > 0) {\n\t                sanitizedGroups.push(tempGroup);\n\t              }\n\t\n\t              // Start a new group. Include the current note if the group\n\t              // was broken up by stem direction, as that note needs to start\n\t              // the next group of notes\n\t              tempGroup = breakOnStemChange ? [note] : [];\n\t            } else {\n\t              // Add note to group\n\t              tempGroup.push(note);\n\t            }\n\t          });\n\t\n\t          // If there is a remaining group, add it as well\n\t          if (tempGroup.length > 0) {\n\t            sanitizedGroups.push(tempGroup);\n\t          }\n\t        });\n\t\n\t        noteGroups = sanitizedGroups;\n\t      }\n\t\n\t      function formatStems() {\n\t        noteGroups.forEach(function (group) {\n\t          var stemDirection = void 0;\n\t          if (config.maintain_stem_directions) {\n\t            var _note = findFirstNote(group);\n\t            stemDirection = _note ? _note.getStemDirection() : _stem.Stem.UP;\n\t          } else {\n\t            if (config.stem_direction) {\n\t              stemDirection = config.stem_direction;\n\t            } else {\n\t              stemDirection = calculateStemDirection(group);\n\t            }\n\t          }\n\t          applyStemDirection(group, stemDirection);\n\t        });\n\t      }\n\t\n\t      function findFirstNote(group) {\n\t        for (var _i = 0; _i < group.length; _i++) {\n\t          var _note2 = group[_i];\n\t          if (!_note2.isRest()) {\n\t            return _note2;\n\t          }\n\t        }\n\t\n\t        return false;\n\t      }\n\t\n\t      function applyStemDirection(group, direction) {\n\t        group.forEach(function (note) {\n\t          note.setStemDirection(direction);\n\t        });\n\t      }\n\t\n\t      // Get all of the tuplets in all of the note groups\n\t      function getTuplets() {\n\t        var uniqueTuplets = [];\n\t\n\t        // Go through all of the note groups and inspect for tuplets\n\t        noteGroups.forEach(function (group) {\n\t          var tuplet = null;\n\t          group.forEach(function (note) {\n\t            if (note.tuplet && tuplet !== note.tuplet) {\n\t              tuplet = note.tuplet;\n\t              uniqueTuplets.push(tuplet);\n\t            }\n\t          });\n\t        });\n\t        return uniqueTuplets;\n\t      }\n\t\n\t      // Using closures to store the variables throughout the various functions\n\t      // IMO Keeps it this process lot cleaner - but not super consistent with\n\t      // the rest of the API's style - Silverwolf90 (Cyril)\n\t      createGroups();\n\t      sanitizeGroups();\n\t      formatStems();\n\t\n\t      // Get the notes to be beamed\n\t      var beamedNoteGroups = getBeamGroups();\n\t\n\t      // Get the tuplets in order to format them accurately\n\t      var allTuplets = getTuplets();\n\t\n\t      // Create a Vex.Flow.Beam from each group of notes to be beamed\n\t      var beams = [];\n\t      beamedNoteGroups.forEach(function (group) {\n\t        var beam = new Beam(group);\n\t\n\t        if (config.show_stemlets) {\n\t          beam.render_options.show_stemlets = true;\n\t        }\n\t        if (config.secondary_breaks) {\n\t          beam.render_options.secondary_break_ticks = _tables.Flow.durationToTicks(config.secondary_breaks);\n\t        }\n\t        if (config.flat_beams === true) {\n\t          beam.render_options.flat_beams = true;\n\t          beam.render_options.flat_beam_offset = config.flat_beam_offset;\n\t        }\n\t        beams.push(beam);\n\t      });\n\t\n\t      // Reformat tuplets\n\t      allTuplets.forEach(function (tuplet) {\n\t        // Set the tuplet location based on the stem direction\n\t        var direction = tuplet.notes[0].stem_direction === _stem.Stem.DOWN ? _tuplet.Tuplet.LOCATION_BOTTOM : _tuplet.Tuplet.LOCATION_TOP;\n\t        tuplet.setTupletLocation(direction);\n\t\n\t        // If any of the notes in the tuplet are not beamed, draw a bracket.\n\t        var bracketed = false;\n\t        for (var _i2 = 0; _i2 < tuplet.notes.length; _i2++) {\n\t          var _note3 = tuplet.notes[_i2];\n\t          if (_note3.beam === null) {\n\t            bracketed = true;\n\t            break;\n\t          }\n\t        }\n\t        tuplet.setBracketed(bracketed);\n\t      });\n\t\n\t      return beams;\n\t    }\n\t  }]);\n\t\n\t  function Beam(notes, auto_stem) {\n\t    _classCallCheck(this, Beam);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Beam.__proto__ || Object.getPrototypeOf(Beam)).call(this));\n\t\n\t    _this.setAttribute('type', 'Beam');\n\t\n\t    if (!notes || notes === []) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n\t    }\n\t\n\t    if (notes.length === 1) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n\t    }\n\t\n\t    // Validate beam line, direction and ticks.\n\t    _this.ticks = notes[0].getIntrinsicTicks();\n\t\n\t    if (_this.ticks >= _tables.Flow.durationToTicks('4')) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n\t    }\n\t\n\t    var i = void 0; // shared iterator\n\t    var note = void 0;\n\t\n\t    _this.stem_direction = _stem.Stem.UP;\n\t\n\t    for (i = 0; i < notes.length; ++i) {\n\t      note = notes[i];\n\t      if (note.hasStem()) {\n\t        _this.stem_direction = note.getStemDirection();\n\t        break;\n\t      }\n\t    }\n\t\n\t    var stem_direction = _this.stem_direction;\n\t    // Figure out optimal stem direction based on given notes\n\t    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n\t      stem_direction = calculateStemDirection(notes);\n\t    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n\t      // Auto Stem TabNotes\n\t      var stem_weight = notes.reduce(function (memo, note) {\n\t        return memo + note.stem_direction;\n\t      }, 0);\n\t\n\t      stem_direction = stem_weight > -1 ? _stem.Stem.UP : _stem.Stem.DOWN;\n\t    }\n\t\n\t    // Apply stem directions and attach beam to notes\n\t    for (i = 0; i < notes.length; ++i) {\n\t      note = notes[i];\n\t      if (auto_stem) {\n\t        note.setStemDirection(stem_direction);\n\t        _this.stem_direction = stem_direction;\n\t      }\n\t      note.setBeam(_this);\n\t    }\n\t\n\t    _this.postFormatted = false;\n\t    _this.notes = notes;\n\t    _this.beam_count = _this.getBeamCount();\n\t    _this.break_on_indices = [];\n\t    _this.render_options = {\n\t      beam_width: 5,\n\t      max_slope: 0.25,\n\t      min_slope: -0.25,\n\t      slope_iterations: 20,\n\t      slope_cost: 100,\n\t      show_stemlets: false,\n\t      stemlet_extension: 7,\n\t      partial_beam_length: 10,\n\t      flat_beams: false,\n\t      min_flat_beam_offset: 15\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Get the notes in this beam\n\t\n\t\n\t  _createClass(Beam, [{\n\t    key: 'getNotes',\n\t    value: function getNotes() {\n\t      return this.notes;\n\t    }\n\t\n\t    // Get the max number of beams in the set of notes\n\t\n\t  }, {\n\t    key: 'getBeamCount',\n\t    value: function getBeamCount() {\n\t      var beamCounts = this.notes.map(function (note) {\n\t        return note.getGlyph().beam_count;\n\t      });\n\t\n\t      var maxBeamCount = beamCounts.reduce(function (max, beamCount) {\n\t        return beamCount > max ? beamCount : max;\n\t      });\n\t\n\t      return maxBeamCount;\n\t    }\n\t\n\t    // Set which note `indices` to break the secondary beam at\n\t\n\t  }, {\n\t    key: 'breakSecondaryAt',\n\t    value: function breakSecondaryAt(indices) {\n\t      this.break_on_indices = indices;\n\t      return this;\n\t    }\n\t\n\t    // Return the y coordinate for linear function\n\t\n\t  }, {\n\t    key: 'getSlopeY',\n\t    value: function getSlopeY(x, first_x_px, first_y_px, slope) {\n\t      return first_y_px + (x - first_x_px) * slope;\n\t    }\n\t\n\t    // Calculate the best possible slope for the provided notes\n\t\n\t  }, {\n\t    key: 'calculateSlope',\n\t    value: function calculateSlope() {\n\t      var notes = this.notes;\n\t      var stemDirection = this.stem_direction;\n\t      var _render_options = this.render_options;\n\t      var max_slope = _render_options.max_slope;\n\t      var min_slope = _render_options.min_slope;\n\t      var slope_iterations = _render_options.slope_iterations;\n\t      var slope_cost = _render_options.slope_cost;\n\t\n\t\n\t      var firstNote = notes[0];\n\t      var initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n\t      var increment = (max_slope - min_slope) / slope_iterations;\n\t      var minCost = Number.MAX_VALUE;\n\t      var bestSlope = 0;\n\t      var yShift = 0;\n\t\n\t      // iterate through slope values to find best weighted fit\n\t      for (var slope = min_slope; slope <= max_slope; slope += increment) {\n\t        var totalStemExtension = 0;\n\t        var yShiftTemp = 0;\n\t\n\t        // iterate through notes, calculating y shift and stem extension\n\t        for (var _i3 = 1; _i3 < notes.length; ++_i3) {\n\t          var _note4 = notes[_i3];\n\t          var adjustedStemTipY = this.getSlopeY(_note4.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n\t\n\t          var stemTipY = _note4.getStemExtents().topY;\n\t          // beam needs to be shifted up to accommodate note\n\t          if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n\t            var diff = Math.abs(stemTipY - adjustedStemTipY);\n\t            yShiftTemp += diff * -stemDirection;\n\t            totalStemExtension += diff * _i3;\n\t          } else {\n\t            // beam overshoots note, account for the difference\n\t            totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n\t          }\n\t        }\n\t\n\t        // most engraving books suggest aiming for a slope about half the angle of the\n\t        // difference between the first and last notes' stem length;\n\t        var idealSlope = initialSlope / 2;\n\t        var distanceFromIdeal = Math.abs(idealSlope - slope);\n\t\n\t        // This tries to align most beams to something closer to the idealSlope, but\n\t        // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n\t        var cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\t\n\t        // update state when a more ideal slope is found\n\t        if (cost < minCost) {\n\t          minCost = cost;\n\t          bestSlope = slope;\n\t          yShift = yShiftTemp;\n\t        }\n\t      }\n\t\n\t      this.slope = bestSlope;\n\t      this.y_shift = yShift;\n\t    }\n\t\n\t    // Calculate a slope and y-shift for flat beams\n\t\n\t  }, {\n\t    key: 'calculateFlatSlope',\n\t    value: function calculateFlatSlope() {\n\t      var notes = this.notes;\n\t      var stem_direction = this.stem_direction;\n\t      var _render_options2 = this.render_options;\n\t      var beam_width = _render_options2.beam_width;\n\t      var min_flat_beam_offset = _render_options2.min_flat_beam_offset;\n\t      var flat_beam_offset = _render_options2.flat_beam_offset;\n\t\n\t      // If a flat beam offset has not yet been supplied or calculated,\n\t      // generate one based on the notes in this particular note group\n\t\n\t      var total = 0;\n\t      var extremeY = 0; // Store the highest or lowest note here\n\t      var extremeBeamCount = 0; // The beam count of the extreme note\n\t      var currentExtreme = 0;\n\t      for (var _i4 = 0; _i4 < notes.length; _i4++) {\n\t        // Total up all of the offsets so we can average them out later\n\t        var _note5 = notes[_i4];\n\t        var stemTipY = _note5.getStemExtents().topY;\n\t        total += stemTipY;\n\t\n\t        // Store the highest (stems-up) or lowest (stems-down) note so the\n\t        //  offset can be adjusted in case the average isn't enough\n\t        if (stem_direction === _stem.Stem.DOWN && currentExtreme < stemTipY) {\n\t          currentExtreme = stemTipY;\n\t          extremeY = Math.max.apply(Math, _toConsumableArray(_note5.getYs()));\n\t          extremeBeamCount = _note5.getBeamCount();\n\t        } else if (stem_direction === _stem.Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n\t          currentExtreme = stemTipY;\n\t          extremeY = Math.min.apply(Math, _toConsumableArray(_note5.getYs()));\n\t          extremeBeamCount = _note5.getBeamCount();\n\t        }\n\t      }\n\t\n\t      // Average the offsets to try and come up with a reasonable one that\n\t      //  works for all of the notes in the beam group.\n\t      var offset = total / notes.length;\n\t\n\t      // In case the average isn't long enough, add or subtract some more\n\t      //  based on the highest or lowest note (again, based on the stem\n\t      //  direction). This also takes into account the added height due to\n\t      //  the width of the beams.\n\t      var beamWidth = beam_width * 1.5;\n\t      var extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n\t      var newOffset = extremeY + extremeTest * -stem_direction;\n\t      if (stem_direction === _stem.Stem.DOWN && offset < newOffset) {\n\t        offset = extremeY + extremeTest;\n\t      } else if (stem_direction === _stem.Stem.UP && offset > newOffset) {\n\t        offset = extremeY - extremeTest;\n\t      }\n\t\n\t      if (!flat_beam_offset) {\n\t        // Set the offset for the group based on the calculations above.\n\t        this.render_options.flat_beam_offset = offset;\n\t      } else if (stem_direction === _stem.Stem.DOWN && offset > flat_beam_offset) {\n\t        this.render_options.flat_beam_offset = offset;\n\t      } else if (stem_direction === _stem.Stem.UP && offset < flat_beam_offset) {\n\t        this.render_options.flat_beam_offset = offset;\n\t      }\n\t\n\t      // for flat beams, the slope and y_shift are simply 0\n\t      this.slope = 0;\n\t      this.y_shift = 0;\n\t    }\n\t\n\t    // Create new stems for the notes in the beam, so that each stem\n\t    // extends into the beams.\n\t\n\t  }, {\n\t    key: 'applyStemExtensions',\n\t    value: function applyStemExtensions() {\n\t      var notes = this.notes;\n\t      var slope = this.slope;\n\t      var y_shift = this.y_shift;\n\t      var stem_direction = this.stem_direction;\n\t      var beam_count = this.beam_count;\n\t      var _render_options3 = this.render_options;\n\t      var show_stemlets = _render_options3.show_stemlets;\n\t      var flat_beam_offset = _render_options3.flat_beam_offset;\n\t      var flat_beams = _render_options3.flat_beams;\n\t      var stemlet_extension = _render_options3.stemlet_extension;\n\t      var beam_width = _render_options3.beam_width;\n\t\n\t\n\t      var firstNote = notes[0];\n\t      var firstStemTipY = firstNote.getStemExtents().topY;\n\t\n\t      // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n\t      //  the offset so the stems all end at the beam offset.\n\t      if (flat_beams && flat_beam_offset) {\n\t        firstStemTipY = flat_beam_offset;\n\t      }\n\t      var firstStemX = firstNote.getStemX();\n\t\n\t      for (var _i5 = 0; _i5 < notes.length; ++_i5) {\n\t        var _note6 = notes[_i5];\n\t        var stemX = _note6.getStemX();\n\t\n\t        var _note6$getStemExtents = _note6.getStemExtents();\n\t\n\t        var stemTipY = _note6$getStemExtents.topY;\n\t\n\t        var beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n\t        var preBeamExtension = _note6.getStem().getExtension();\n\t        var beamExtension = stem_direction === _stem.Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n\t\n\t        _note6.stem.setExtension(preBeamExtension + beamExtension);\n\t        _note6.stem.renderHeightAdjustment = -_stem.Stem.WIDTH / 2;\n\t\n\t        if (_note6.isRest() && show_stemlets) {\n\t          var beamWidth = beam_width;\n\t          var totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n\t          _note6.stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Get the x coordinates for the beam lines of specific `duration`\n\t\n\t  }, {\n\t    key: 'getBeamLines',\n\t    value: function getBeamLines(duration) {\n\t      var beam_lines = [];\n\t      var beam_started = false;\n\t      var current_beam = null;\n\t      var partial_beam_length = this.render_options.partial_beam_length;\n\t      var previous_should_break = false;\n\t      var tick_tally = 0;\n\t      for (var _i6 = 0; _i6 < this.notes.length; ++_i6) {\n\t        var _note7 = this.notes[_i6];\n\t\n\t        // See if we need to break secondary beams on this note.\n\t        var ticks = _note7.ticks.value();\n\t        tick_tally += ticks;\n\t        var should_break = false;\n\t\n\t        // 8th note beams are always drawn.\n\t        if (parseInt(duration, 10) >= 8) {\n\t          // First, check to see if any indices were set up through breakSecondaryAt()\n\t          should_break = this.break_on_indices.indexOf(_i6) !== -1;\n\t\n\t          // If the secondary breaks were auto-configured in the render options,\n\t          //  handle that as well.\n\t          if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n\t            tick_tally = 0;\n\t            should_break = true;\n\t          }\n\t        }\n\t        var note_gets_beam = _note7.getIntrinsicTicks() < _tables.Flow.durationToTicks(duration);\n\t\n\t        var stem_x = _note7.getStemX() - _stem.Stem.WIDTH / 2;\n\t\n\t        // Check to see if the next note in the group will get a beam at this\n\t        //  level. This will help to inform the partial beam logic below.\n\t        var next_note = this.notes[_i6 + 1];\n\t        var beam_next = next_note && next_note.getIntrinsicTicks() < _tables.Flow.durationToTicks(duration);\n\t        if (note_gets_beam) {\n\t          // This note gets a beam at the current level\n\t          if (beam_started) {\n\t            // We're currently in the middle of a beam. Just continue it on to\n\t            //  the stem X of the current note.\n\t            current_beam = beam_lines[beam_lines.length - 1];\n\t            current_beam.end = stem_x;\n\t\n\t            // If a secondary beam break is set up, end the beam right now.\n\t            if (should_break) {\n\t              beam_started = false;\n\t              if (next_note && !beam_next && current_beam.end === null) {\n\t                // This note gets a beam,.but the next one does not. This means\n\t                //  we need a partial pointing right.\n\t                current_beam.end = current_beam.start - partial_beam_length;\n\t              }\n\t            }\n\t          } else {\n\t            // No beam started yet. Start a new one.\n\t            current_beam = { start: stem_x, end: null };\n\t            beam_started = true;\n\t            if (!beam_next) {\n\t              // The next note doesn't get a beam. Draw a partial.\n\t              if ((previous_should_break || _i6 === 0) && next_note) {\n\t                // This is the first note (but not the last one), or it is\n\t                //  following a secondary break. Draw a partial to the right.\n\t                current_beam.end = current_beam.start + partial_beam_length;\n\t              } else {\n\t                // By default, draw a partial to the left.\n\t                current_beam.end = current_beam.start - partial_beam_length;\n\t              }\n\t            } else if (should_break) {\n\t              // This note should have a secondary break after it. Even though\n\t              //  we just started a beam, it needs to end immediately.\n\t              current_beam.end = current_beam.start - partial_beam_length;\n\t              beam_started = false;\n\t            }\n\t            beam_lines.push(current_beam);\n\t          }\n\t        } else {\n\t          // The current note does not get a beam.\n\t          beam_started = false;\n\t        }\n\t\n\t        // Store the secondary break flag to inform the partial beam logic in\n\t        //  the next iteration of the loop.\n\t        previous_should_break = should_break;\n\t      }\n\t\n\t      // Add a partial beam pointing left if this is the last note in the group\n\t      var last_beam = beam_lines[beam_lines.length - 1];\n\t      if (last_beam && last_beam.end === null) {\n\t        last_beam.end = last_beam.start - partial_beam_length;\n\t      }\n\t      return beam_lines;\n\t    }\n\t\n\t    // Render the stems for each notes\n\t\n\t  }, {\n\t    key: 'drawStems',\n\t    value: function drawStems() {\n\t      var _this2 = this;\n\t\n\t      this.notes.forEach(function (note) {\n\t        if (note.getStem()) {\n\t          note.getStem().setContext(_this2.context).draw();\n\t        }\n\t      }, this);\n\t    }\n\t\n\t    // Render the beam lines\n\t\n\t  }, {\n\t    key: 'drawBeamLines',\n\t    value: function drawBeamLines() {\n\t      this.checkContext();\n\t\n\t      var valid_beam_durations = ['4', '8', '16', '32', '64'];\n\t\n\t      var firstNote = this.notes[0];\n\t\n\t      var firstStemTipY = firstNote.getStemExtents().topY;\n\t      var beamY = firstStemTipY;\n\t\n\t      // For flat beams, set the first and last Y to the offset, rather than\n\t      //  using the note's stem extents.\n\t      if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n\t        beamY = this.render_options.flat_beam_offset;\n\t      }\n\t\n\t      var firstStemX = firstNote.getStemX();\n\t      var beamThickness = this.render_options.beam_width * this.stem_direction;\n\t\n\t      // Draw the beams.\n\t      for (var _i7 = 0; _i7 < valid_beam_durations.length; ++_i7) {\n\t        var duration = valid_beam_durations[_i7];\n\t        var beamLines = this.getBeamLines(duration);\n\t\n\t        for (var j = 0; j < beamLines.length; ++j) {\n\t          var beam_line = beamLines[j];\n\t          var startBeamX = beam_line.start;\n\t\n\t          var startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n\t          var lastBeamX = beam_line.end;\n\t          var lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\t\n\t          this.context.beginPath();\n\t          this.context.moveTo(startBeamX, startBeamY);\n\t          this.context.lineTo(startBeamX, startBeamY + beamThickness);\n\t          this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n\t          this.context.lineTo(lastBeamX + 1, lastBeamY);\n\t          this.context.closePath();\n\t          this.context.fill();\n\t        }\n\t\n\t        beamY += beamThickness * 1.5;\n\t      }\n\t    }\n\t\n\t    // Pre-format the beam\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      return this;\n\t    }\n\t\n\t    // Post-format the beam. This can only be called after\n\t    // the notes in the beam have both `x` and `y` values. ie: they've\n\t    // been formatted and have staves\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return;\n\t\n\t      // Calculate a smart slope if we're not forcing the beams to be flat.\n\t      if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n\t        this.calculateFlatSlope();\n\t      } else {\n\t        this.calculateSlope();\n\t      }\n\t      this.applyStemExtensions();\n\t\n\t      this.postFormatted = true;\n\t    }\n\t\n\t    // Render the beam to the canvas context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t      if (this.unbeamable) return;\n\t\n\t      if (!this.postFormatted) {\n\t        this.postFormat();\n\t      }\n\t\n\t      this.drawStems();\n\t      this.applyStyle();\n\t      this.drawBeamLines();\n\t      this.restoreStyle();\n\t    }\n\t  }]);\n\n\t  return Beam;\n\t}(_element.Element);\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tuplet = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t/**\n\t * ## Description\n\t *\n\t * Create a new tuplet from the specified notes. The notes must\n\t * be part of the same voice. If they are of different rhythmic\n\t * values, then options.num_notes must be set.\n\t *\n\t * @constructor\n\t * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n\t *   notes, etc... any class that inherits stemmableNote at some\n\t *   point in its prototype chain.\n\t * @param options: object {\n\t *\n\t *   num_notes: fit this many notes into...\n\t *   notes_occupied: ...the space of this many notes\n\t *\n\t *       Together, these two properties make up the tuplet ratio\n\t *     in the form of num_notes : notes_occupied.\n\t *       num_notes defaults to the number of notes passed in, so\n\t *     it is important that if you omit this property, all of\n\t *     the notes passed should be of the same note value.\n\t *       notes_occupied defaults to 2 -- so you should almost\n\t *     certainly pass this parameter for anything other than\n\t *     a basic triplet.\n\t *\n\t *   location:\n\t *     default 1, which is above the notes: ┌─── 3 ───┐\n\t *      -1 is below the notes └─── 3 ───┘\n\t *\n\t *   bracketed: boolean, draw a bracket around the tuplet number\n\t *     when true: ┌─── 3 ───┐   when false: 3\n\t *     defaults to true if notes are not beamed, false otherwise\n\t *\n\t *   ratioed: boolean\n\t *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n\t *     defaults to true if the difference between num_notes and\n\t *     notes_occupied is greater than 1.\n\t *\n\t *   y_offset: int, default 0\n\t *     manually offset a tuplet, for instance to avoid collisions\n\t *     with articulations, etc...\n\t * }\n\t */\n\t\n\tvar Tuplet = exports.Tuplet = function (_Element) {\n\t  _inherits(Tuplet, _Element);\n\t\n\t  _createClass(Tuplet, null, [{\n\t    key: 'LOCATION_TOP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'LOCATION_BOTTOM',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: 'NESTING_OFFSET',\n\t    get: function get() {\n\t      return 15;\n\t    }\n\t  }]);\n\t\n\t  function Tuplet(notes, options) {\n\t    _classCallCheck(this, Tuplet);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tuplet.__proto__ || Object.getPrototypeOf(Tuplet)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tuplet');\n\t    if (!notes || !notes.length) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n\t    }\n\t\n\t    _this.options = _vex.Vex.Merge({}, options);\n\t    _this.notes = notes;\n\t    _this.num_notes = 'num_notes' in _this.options ? _this.options.num_notes : notes.length;\n\t\n\t    // We accept beats_occupied, but warn that it's deprecated:\n\t    // the preferred property name is now notes_occupied.\n\t    if (_this.options.beats_occupied) {\n\t      _this.beatsOccupiedDeprecationWarning();\n\t    }\n\t    _this.notes_occupied = _this.options.notes_occupied || _this.options.beats_occupied || 2;\n\t    if ('bracketed' in _this.options) {\n\t      _this.bracketed = _this.options.bracketed;\n\t    } else {\n\t      _this.bracketed = notes.some(function (note) {\n\t        return note.beam === null;\n\t      });\n\t    }\n\t\n\t    _this.ratioed = 'ratioed' in _this.options ? _this.options.ratioed : Math.abs(_this.notes_occupied - _this.num_notes) > 1;\n\t    _this.point = 28;\n\t    _this.y_pos = 16;\n\t    _this.x_pos = 100;\n\t    _this.width = 200;\n\t    _this.location = _this.options.location || Tuplet.LOCATION_TOP;\n\t\n\t    _formatter.Formatter.AlignRestsToNotes(notes, true, true);\n\t    _this.resolveGlyphs();\n\t    _this.attach();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tuplet, [{\n\t    key: 'attach',\n\t    value: function attach() {\n\t      for (var i = 0; i < this.notes.length; i++) {\n\t        var note = this.notes[i];\n\t        note.setTuplet(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detach',\n\t    value: function detach() {\n\t      for (var i = 0; i < this.notes.length; i++) {\n\t        var note = this.notes[i];\n\t        note.resetTuplet(this);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Set whether or not the bracket is drawn.\n\t     */\n\t\n\t  }, {\n\t    key: 'setBracketed',\n\t    value: function setBracketed(bracketed) {\n\t      this.bracketed = !!bracketed;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set whether or not the ratio is shown.\n\t     */\n\t\n\t  }, {\n\t    key: 'setRatioed',\n\t    value: function setRatioed(ratioed) {\n\t      this.ratioed = !!ratioed;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the tuplet to be displayed either on the top or bottom of the stave\n\t     */\n\t\n\t  }, {\n\t    key: 'setTupletLocation',\n\t    value: function setTupletLocation(location) {\n\t      if (!location) {\n\t        location = Tuplet.LOCATION_TOP;\n\t      } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n\t      }\n\t\n\t      this.location = location;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getNotes',\n\t    value: function getNotes() {\n\t      return this.notes;\n\t    }\n\t  }, {\n\t    key: 'getNoteCount',\n\t    value: function getNoteCount() {\n\t      return this.num_notes;\n\t    }\n\t  }, {\n\t    key: 'beatsOccupiedDeprecationWarning',\n\t    value: function beatsOccupiedDeprecationWarning() {\n\t      var msg = ['beats_occupied has been deprecated as an ', 'option for tuplets. Please use notes_occupied ', 'instead. Calls to getBeatsOccupied and ', 'setBeatsOccupied should now be routed to ', 'getNotesOccupied and setNotesOccupied instead'].join('');\n\t\n\t      if (console && console.warn) {\n\t        // eslint-disable-line no-console\n\t        console.warn(msg); // eslint-disable-line no-console\n\t      } else if (console) {\n\t        console.log(msg); // eslint-disable-line no-console\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getBeatsOccupied',\n\t    value: function getBeatsOccupied() {\n\t      this.beatsOccupiedDeprecationWarning();\n\t      return this.getNotesOccupied();\n\t    }\n\t  }, {\n\t    key: 'setBeatsOccupied',\n\t    value: function setBeatsOccupied(beats) {\n\t      this.beatsOccupiedDeprecationWarning();\n\t      return this.setNotesOccupied(beats);\n\t    }\n\t  }, {\n\t    key: 'getNotesOccupied',\n\t    value: function getNotesOccupied() {\n\t      return this.notes_occupied;\n\t    }\n\t  }, {\n\t    key: 'setNotesOccupied',\n\t    value: function setNotesOccupied(notes) {\n\t      this.detach();\n\t      this.notes_occupied = notes;\n\t      this.resolveGlyphs();\n\t      this.attach();\n\t    }\n\t  }, {\n\t    key: 'resolveGlyphs',\n\t    value: function resolveGlyphs() {\n\t      this.num_glyphs = [];\n\t      var n = this.num_notes;\n\t      while (n >= 1) {\n\t        this.num_glyphs.push(new _glyph.Glyph('v' + n % 10, this.point));\n\t        n = parseInt(n / 10, 10);\n\t      }\n\t\n\t      this.denom_glyphs = [];\n\t      n = this.notes_occupied;\n\t      while (n >= 1) {\n\t        this.denom_glyphs.push(new _glyph.Glyph('v' + n % 10, this.point));\n\t        n = parseInt(n / 10, 10);\n\t      }\n\t    }\n\t\n\t    // determine how many tuplets are nested within this tuplet\n\t    // on the same side (above/below), to calculate a y\n\t    // offset for this tuplet:\n\t\n\t  }, {\n\t    key: 'getNestedTupletCount',\n\t    value: function getNestedTupletCount() {\n\t      var location = this.location;\n\t      var first_note = this.notes[0];\n\t      var maxTupletCount = countTuplets(first_note, location);\n\t      var minTupletCount = countTuplets(first_note, location);\n\t\n\t      // Count the tuplets that are on the same side (above/below)\n\t      // as this tuplet:\n\t      function countTuplets(note, location) {\n\t        return note.tupletStack.filter(function (tuplet) {\n\t          return tuplet.location === location;\n\t        }).length;\n\t      }\n\t\n\t      this.notes.forEach(function (note) {\n\t        var tupletCount = countTuplets(note, location);\n\t        maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n\t        minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n\t      });\n\t\n\t      return maxTupletCount - minTupletCount;\n\t    }\n\t\n\t    // determine the y position of the tuplet:\n\t\n\t  }, {\n\t    key: 'getYPosition',\n\t    value: function getYPosition() {\n\t      // offset the tuplet for any nested tuplets between\n\t      // it and the notes:\n\t      var nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n\t\n\t      // offset the tuplet for any manual y_offset:\n\t      var y_offset = this.options.y_offset || 0;\n\t\n\t      // now iterate through the notes and find our highest\n\t      // or lowest locations, to form a base y_pos\n\t      var first_note = this.notes[0];\n\t      var y_pos = void 0;\n\t      if (this.location === Tuplet.LOCATION_TOP) {\n\t        y_pos = first_note.getStave().getYForLine(0) - 15;\n\t        // y_pos = first_note.getStemExtents().topY - 10;\n\t\n\t        for (var i = 0; i < this.notes.length; ++i) {\n\t          var top_y = this.notes[i].getStemDirection() === _stem.Stem.UP ? this.notes[i].getStemExtents().topY - 10 : this.notes[i].getStemExtents().baseY - 20;\n\t\n\t          if (top_y < y_pos) {\n\t            y_pos = top_y;\n\t          }\n\t        }\n\t      } else {\n\t        y_pos = first_note.getStave().getYForLine(4) + 20;\n\t\n\t        for (var _i = 0; _i < this.notes.length; ++_i) {\n\t          var bottom_y = this.notes[_i].getStemDirection() === _stem.Stem.UP ? this.notes[_i].getStemExtents().baseY + 20 : this.notes[_i].getStemExtents().topY + 10;\n\t          if (bottom_y > y_pos) {\n\t            y_pos = bottom_y;\n\t          }\n\t        }\n\t      }\n\t\n\t      return y_pos + nested_tuplet_y_offset + y_offset;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      // determine x value of left bound of tuplet\n\t      var first_note = this.notes[0];\n\t      var last_note = this.notes[this.notes.length - 1];\n\t\n\t      if (!this.bracketed) {\n\t        this.x_pos = first_note.getStemX();\n\t        this.width = last_note.getStemX() - this.x_pos;\n\t      } else {\n\t        this.x_pos = first_note.getTieLeftX() - 5;\n\t        this.width = last_note.getTieRightX() - this.x_pos + 5;\n\t      }\n\t\n\t      // determine y value for tuplet\n\t      this.y_pos = this.getYPosition();\n\t\n\t      var addGlyphWidth = function addGlyphWidth(width, glyph) {\n\t        return width + glyph.getMetrics().width;\n\t      };\n\t\n\t      // calculate total width of tuplet notation\n\t      var width = this.num_glyphs.reduce(addGlyphWidth, 0);\n\t      if (this.ratioed) {\n\t        width = this.denom_glyphs.reduce(addGlyphWidth, width);\n\t        width += this.point * 0.32;\n\t      }\n\t\n\t      var notation_center_x = this.x_pos + this.width / 2;\n\t      var notation_start_x = notation_center_x - width / 2;\n\t\n\t      // draw bracket if the tuplet is not beamed\n\t      if (this.bracketed) {\n\t        var line_width = this.width / 2 - width / 2 - 5;\n\t\n\t        // only draw the bracket if it has positive length\n\t        if (line_width > 0) {\n\t          this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n\t          this.context.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n\t          this.context.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n\t          this.context.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n\t        }\n\t      }\n\t\n\t      // draw numerator glyphs\n\t      var x_offset = 0;\n\t      this.num_glyphs.forEach(function (glyph) {\n\t        glyph.render(_this2.context, notation_start_x + x_offset, _this2.y_pos + _this2.point / 3 - 2);\n\t        x_offset += glyph.getMetrics().width;\n\t      });\n\t\n\t      // display colon and denominator if the ratio is to be shown\n\t      if (this.ratioed) {\n\t        var colon_x = notation_start_x + x_offset + this.point * 0.16;\n\t        var colon_radius = this.point * 0.06;\n\t        this.context.beginPath();\n\t        this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n\t        this.context.closePath();\n\t        this.context.fill();\n\t        this.context.beginPath();\n\t        this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n\t        this.context.closePath();\n\t        this.context.fill();\n\t        x_offset += this.point * 0.32;\n\t        this.denom_glyphs.forEach(function (glyph) {\n\t          glyph.render(_this2.context, notation_start_x + x_offset, _this2.y_pos + _this2.point / 3 - 2);\n\t          x_offset += glyph.getMetrics().width;\n\t        });\n\t      }\n\t    }\n\t  }]);\n\n\t  return Tuplet;\n\t}(_element.Element);\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stem = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements the `Stem` object. Generally this object is handled\n\t// by its parent `StemmableNote`.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Stem.DEBUG) _vex.Vex.L('Vex.Flow.Stem', args);\n\t}\n\t\n\tvar Stem = exports.Stem = function (_Element) {\n\t  _inherits(Stem, _Element);\n\t\n\t  _createClass(Stem, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stem';\n\t    }\n\t\n\t    // Stem directions\n\t\n\t  }, {\n\t    key: 'UP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'DOWN',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t\n\t    // Theme\n\t\n\t  }, {\n\t    key: 'WIDTH',\n\t    get: function get() {\n\t      return _tables.Flow.STEM_WIDTH;\n\t    }\n\t  }, {\n\t    key: 'HEIGHT',\n\t    get: function get() {\n\t      return _tables.Flow.STEM_HEIGHT;\n\t    }\n\t  }]);\n\t\n\t  function Stem() {\n\t    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, Stem);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stem.__proto__ || Object.getPrototypeOf(Stem)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stem');\n\t\n\t    // Default notehead x bounds\n\t    _this.x_begin = options.x_begin || 0;\n\t    _this.x_end = options.x_end || 0;\n\t\n\t    // Y bounds for top/bottom most notehead\n\t    _this.y_top = options.y_top || 0;\n\t    _this.y_bottom = options.y_bottom || 0;\n\t\n\t    // Stem top extension\n\t    _this.stem_extension = options.stem_extension || 0;\n\t\n\t    // Direction of the stem\n\t    _this.stem_direction = options.stem_direction || 0;\n\t\n\t    // Flag to override all draw calls\n\t    _this.hide = options.hide || false;\n\t\n\t    _this.isStemlet = options.isStemlet || false;\n\t    _this.stemletHeight = options.stemletHeight || 0;\n\t\n\t    // Use to adjust the rendered height without affecting\n\t    // the results of `.getExtents()`\n\t    _this.renderHeightAdjustment = 0;\n\t    return _this;\n\t  }\n\t\n\t  // Set the x bounds for the default notehead\n\t\n\t\n\t  _createClass(Stem, [{\n\t    key: 'setNoteHeadXBounds',\n\t    value: function setNoteHeadXBounds(x_begin, x_end) {\n\t      this.x_begin = x_begin;\n\t      this.x_end = x_end;\n\t      return this;\n\t    }\n\t\n\t    // Set the direction of the stem in relation to the noteheads\n\t\n\t  }, {\n\t    key: 'setDirection',\n\t    value: function setDirection(direction) {\n\t      this.stem_direction = direction;\n\t    }\n\t\n\t    // Set the extension for the stem, generally for flags or beams\n\t\n\t  }, {\n\t    key: 'setExtension',\n\t    value: function setExtension(ext) {\n\t      this.stem_extension = ext;\n\t    }\n\t  }, {\n\t    key: 'getExtension',\n\t    value: function getExtension() {\n\t      return this.stem_extension;\n\t    }\n\t\n\t    // The the y bounds for the top and bottom noteheads\n\t\n\t  }, {\n\t    key: 'setYBounds',\n\t    value: function setYBounds(y_top, y_bottom) {\n\t      this.y_top = y_top;\n\t      this.y_bottom = y_bottom;\n\t    }\n\t\n\t    // The category of the object\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Stem.CATEGORY;\n\t    }\n\t\n\t    // Gets the entire height for the stem\n\t\n\t  }, {\n\t    key: 'getHeight',\n\t    value: function getHeight() {\n\t      return (this.y_bottom - this.y_top) * this.stem_direction + (Stem.HEIGHT + this.stem_extension) * this.stem_direction;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      throw new _vex.Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n\t    }\n\t\n\t    // Get the y coordinates for the very base of the stem to the top of\n\t    // the extension\n\t\n\t  }, {\n\t    key: 'getExtents',\n\t    value: function getExtents() {\n\t      var isStemUp = this.stem_direction === Stem.UP;\n\t      var ys = [this.y_top, this.y_bottom];\n\t      var stemHeight = Stem.HEIGHT + this.stem_extension;\n\t      var innerMostNoteheadY = (isStemUp ? Math.min : Math.max).apply(undefined, ys);\n\t      var outerMostNoteheadY = (isStemUp ? Math.max : Math.min).apply(undefined, ys);\n\t      var stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n\t\n\t      return { topY: stemTipY, baseY: outerMostNoteheadY };\n\t    }\n\t  }, {\n\t    key: 'setVisibility',\n\t    value: function setVisibility(isVisible) {\n\t      this.hide = !isVisible;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStemlet',\n\t    value: function setStemlet(isStemlet, stemletHeight) {\n\t      this.isStemlet = isStemlet;\n\t      this.stemletHeight = stemletHeight;\n\t      return this;\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.setRendered();\n\t      if (this.hide) return;\n\t      var ctx = this.checkContext();\n\t\n\t      var stem_x = void 0;\n\t      var stem_y = void 0;\n\t      var stem_direction = this.stem_direction;\n\t\n\t      if (stem_direction === Stem.DOWN) {\n\t        // Down stems are rendered to the left of the head.\n\t        stem_x = this.x_begin;\n\t        stem_y = this.y_top;\n\t      } else {\n\t        // Up stems are rendered to the right of the head.\n\t        stem_x = this.x_end;\n\t        stem_y = this.y_bottom;\n\t      }\n\t\n\t      var stemHeight = this.getHeight();\n\t\n\t      L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\t\n\t      // The offset from the stem's base which is required fo satisfy the stemlet height\n\t      var stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n\t\n\t      // Draw the stem\n\t      ctx.save();\n\t      this.applyStyle(ctx);\n\t      ctx.beginPath();\n\t      ctx.setLineWidth(Stem.WIDTH);\n\t      ctx.moveTo(stem_x, stem_y - stemletYOffset);\n\t      ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return Stem;\n\t}(_element.Element);\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Voice = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the main Voice class. It's mainly a container\n\t// object to group `Tickables` for formatting.\n\t\n\tvar Voice = exports.Voice = function (_Element) {\n\t  _inherits(Voice, _Element);\n\t\n\t  _createClass(Voice, null, [{\n\t    key: 'Mode',\n\t\n\t    // Modes allow the addition of ticks in three different ways:\n\t    //\n\t    // STRICT: This is the default. Ticks must fill the voice.\n\t    // SOFT:   Ticks can be added without restrictions.\n\t    // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n\t    //         tick length.\n\t    get: function get() {\n\t      return {\n\t        STRICT: 1,\n\t        SOFT: 2,\n\t        FULL: 3\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Voice(time) {\n\t    _classCallCheck(this, Voice);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Voice.__proto__ || Object.getPrototypeOf(Voice)).call(this));\n\t\n\t    _this.setAttribute('type', 'Voice');\n\t\n\t    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n\t    if (typeof time === 'string') {\n\t      var match = time.match(/(\\d+)\\/(\\d+)/);\n\t      if (match) {\n\t        time = {\n\t          num_beats: match[1],\n\t          beat_value: match[2],\n\t          resolution: _tables.Flow.RESOLUTION\n\t        };\n\t      }\n\t    }\n\t\n\t    // Default time sig is 4/4\n\t    _this.time = _vex.Vex.Merge({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }, time);\n\t\n\t    // Recalculate total ticks.\n\t    _this.totalTicks = new _fraction.Fraction(_this.time.num_beats * (_this.time.resolution / _this.time.beat_value), 1);\n\t\n\t    _this.resolutionMultiplier = 1;\n\t\n\t    // Set defaults\n\t    _this.tickables = [];\n\t    _this.ticksUsed = new _fraction.Fraction(0, 1);\n\t    _this.smallestTickCount = _this.totalTicks.clone();\n\t    _this.largestTickWidth = 0;\n\t    _this.stave = null;\n\t    // Do we care about strictly timed notes\n\t    _this.mode = Voice.Mode.STRICT;\n\t\n\t    // This must belong to a VoiceGroup\n\t    _this.voiceGroup = null;\n\t    return _this;\n\t  }\n\t\n\t  // Get the total ticks in the voice\n\t\n\t\n\t  _createClass(Voice, [{\n\t    key: 'getTotalTicks',\n\t    value: function getTotalTicks() {\n\t      return this.totalTicks;\n\t    }\n\t\n\t    // Get the total ticks used in the voice by all the tickables\n\t\n\t  }, {\n\t    key: 'getTicksUsed',\n\t    value: function getTicksUsed() {\n\t      return this.ticksUsed;\n\t    }\n\t\n\t    // Get the largest width of all the tickables\n\t\n\t  }, {\n\t    key: 'getLargestTickWidth',\n\t    value: function getLargestTickWidth() {\n\t      return this.largestTickWidth;\n\t    }\n\t\n\t    // Get the tick count for the shortest tickable\n\t\n\t  }, {\n\t    key: 'getSmallestTickCount',\n\t    value: function getSmallestTickCount() {\n\t      return this.smallestTickCount;\n\t    }\n\t\n\t    // Get the tickables in the voice\n\t\n\t  }, {\n\t    key: 'getTickables',\n\t    value: function getTickables() {\n\t      return this.tickables;\n\t    }\n\t\n\t    // Get/set the voice mode, use a value from `Voice.Mode`\n\t\n\t  }, {\n\t    key: 'getMode',\n\t    value: function getMode() {\n\t      return this.mode;\n\t    }\n\t  }, {\n\t    key: 'setMode',\n\t    value: function setMode(mode) {\n\t      this.mode = mode;return this;\n\t    }\n\t\n\t    // Get the resolution multiplier for the voice\n\t\n\t  }, {\n\t    key: 'getResolutionMultiplier',\n\t    value: function getResolutionMultiplier() {\n\t      return this.resolutionMultiplier;\n\t    }\n\t\n\t    // Get the actual tick resolution for the voice\n\t\n\t  }, {\n\t    key: 'getActualResolution',\n\t    value: function getActualResolution() {\n\t      return this.resolutionMultiplier * this.time.resolution;\n\t    }\n\t\n\t    // Set the voice's stave\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t      this.boundingBox = null; // Reset bounding box so we can reformat\n\t      return this;\n\t    }\n\t\n\t    // Get the bounding box for the voice\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      var stave = void 0;\n\t      var boundingBox = void 0;\n\t      var bb = void 0;\n\t      var i = void 0;\n\t\n\t      if (!this.boundingBox) {\n\t        if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n\t        stave = this.stave;\n\t        boundingBox = null;\n\t\n\t        for (i = 0; i < this.tickables.length; ++i) {\n\t          this.tickables[i].setStave(stave);\n\t\n\t          bb = this.tickables[i].getBoundingBox();\n\t          if (!bb) continue;\n\t\n\t          boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n\t        }\n\t\n\t        this.boundingBox = boundingBox;\n\t      }\n\t      return this.boundingBox;\n\t    }\n\t\n\t    // Every tickable must be associated with a voiceGroup. This allows formatters\n\t    // and preformatters to associate them with the right modifierContexts.\n\t\n\t  }, {\n\t    key: 'getVoiceGroup',\n\t    value: function getVoiceGroup() {\n\t      if (!this.voiceGroup) {\n\t        throw new _vex.Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n\t      }\n\t\n\t      return this.voiceGroup;\n\t    }\n\t\n\t    // Set the voice group\n\t\n\t  }, {\n\t    key: 'setVoiceGroup',\n\t    value: function setVoiceGroup(g) {\n\t      this.voiceGroup = g;return this;\n\t    }\n\t\n\t    // Set the voice mode to strict or soft\n\t\n\t  }, {\n\t    key: 'setStrict',\n\t    value: function setStrict(strict) {\n\t      this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n\t      return this;\n\t    }\n\t\n\t    // Determine if the voice is complete according to the voice mode\n\t\n\t  }, {\n\t    key: 'isComplete',\n\t    value: function isComplete() {\n\t      if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n\t        return this.ticksUsed.equals(this.totalTicks);\n\t      } else {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    // Add a tickable to the voice\n\t\n\t  }, {\n\t    key: 'addTickable',\n\t    value: function addTickable(tickable) {\n\t      if (!tickable.shouldIgnoreTicks()) {\n\t        var ticks = tickable.getTicks();\n\t\n\t        // Update the total ticks for this line.\n\t        this.ticksUsed.add(ticks);\n\t\n\t        if ((this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) && this.ticksUsed.greaterThan(this.totalTicks)) {\n\t          this.totalTicks.subtract(ticks);\n\t          throw new _vex.Vex.RERR('BadArgument', 'Too many ticks.');\n\t        }\n\t\n\t        // Track the smallest tickable for formatting.\n\t        if (ticks.lessThan(this.smallestTickCount)) {\n\t          this.smallestTickCount = ticks.clone();\n\t        }\n\t\n\t        this.resolutionMultiplier = this.ticksUsed.denominator;\n\t\n\t        // Expand total ticks using denominator from ticks used.\n\t        this.totalTicks.add(0, this.ticksUsed.denominator);\n\t      }\n\t\n\t      // Add the tickable to the line.\n\t      this.tickables.push(tickable);\n\t      tickable.setVoice(this);\n\t      return this;\n\t    }\n\t\n\t    // Add an array of tickables to the voice.\n\t\n\t  }, {\n\t    key: 'addTickables',\n\t    value: function addTickables(tickables) {\n\t      for (var i = 0; i < tickables.length; ++i) {\n\t        this.addTickable(tickables[i]);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Preformats the voice by applying the voice's stave to each note.\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this2 = this;\n\t\n\t      if (this.preFormatted) return this;\n\t\n\t      this.tickables.forEach(function (tickable) {\n\t        if (!tickable.getStave()) {\n\t          tickable.setStave(_this2.stave);\n\t        }\n\t      });\n\t\n\t      this.preFormatted = true;\n\t      return this;\n\t    }\n\t\n\t    // Render the voice onto the canvas `context` and an optional `stave`.\n\t    // If `stave` is omitted, it is expected that the notes have staves\n\t    // already set.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var stave = arguments.length <= 1 || arguments[1] === undefined ? this.stave : arguments[1];\n\t\n\t      this.setRendered();\n\t      var boundingBox = null;\n\t      for (var i = 0; i < this.tickables.length; ++i) {\n\t        var tickable = this.tickables[i];\n\t\n\t        // Set the stave if provided\n\t        if (stave) tickable.setStave(stave);\n\t\n\t        if (!tickable.getStave()) {\n\t          throw new _vex.Vex.RuntimeError('MissingStave', 'The voice cannot draw tickables without staves.');\n\t        }\n\t\n\t        if (i === 0) boundingBox = tickable.getBoundingBox();\n\t\n\t        if (i > 0 && boundingBox) {\n\t          var tickable_bb = tickable.getBoundingBox();\n\t          if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n\t        }\n\t\n\t        tickable.setContext(context);\n\t        tickable.draw();\n\t      }\n\t\n\t      this.boundingBox = boundingBox;\n\t    }\n\t  }]);\n\n\t  return Voice;\n\t}(_element.Element);\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveConnector = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n\t  if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n\t    throw new _vex.Vex.RERR('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n\t  }\n\t\n\t  var x_shift = 3;\n\t  var variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n\t  var thickLineOffset = 2; // For aesthetics\n\t\n\t  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n\t    x_shift = -5; // Flips the side of the thin line\n\t    variableWidth = 3;\n\t  }\n\t\n\t  // Thin line\n\t  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n\t  // Thick line\n\t  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n\t}\n\t\n\tvar StaveConnector = exports.StaveConnector = function (_Element) {\n\t  _inherits(StaveConnector, _Element);\n\t\n\t  _createClass(StaveConnector, null, [{\n\t    key: 'type',\n\t\n\t    // SINGLE_LEFT and SINGLE are the same value for compatibility\n\t    // with older versions of vexflow which didn't have right sided\n\t    // stave connectors\n\t    get: function get() {\n\t      return {\n\t        SINGLE_RIGHT: 0,\n\t        SINGLE_LEFT: 1,\n\t        SINGLE: 1,\n\t        DOUBLE: 2,\n\t        BRACE: 3,\n\t        BRACKET: 4,\n\t        BOLD_DOUBLE_LEFT: 5,\n\t        BOLD_DOUBLE_RIGHT: 6,\n\t        THIN_DOUBLE: 7,\n\t        NONE: 8\n\t      };\n\t    }\n\t  }, {\n\t    key: 'typeString',\n\t    get: function get() {\n\t      return {\n\t        singleRight: StaveConnector.type.SINGLE_RIGHT,\n\t        singleLeft: StaveConnector.type.SINGLE_LEFT,\n\t        single: StaveConnector.type.SINGLE,\n\t        double: StaveConnector.type.DOUBLE,\n\t        brace: StaveConnector.type.BRACE,\n\t        bracket: StaveConnector.type.BRACKET,\n\t        boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n\t        boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n\t        thinDouble: StaveConnector.type.THIN_DOUBLE,\n\t        none: StaveConnector.type.NONE\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveConnector(top_stave, bottom_stave) {\n\t    _classCallCheck(this, StaveConnector);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveConnector.__proto__ || Object.getPrototypeOf(StaveConnector)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveConnector');\n\t\n\t    _this.thickness = _tables.Flow.STAVE_LINE_THICKNESS;\n\t    _this.width = 3;\n\t    _this.top_stave = top_stave;\n\t    _this.bottom_stave = bottom_stave;\n\t    _this.type = StaveConnector.type.DOUBLE;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 16,\n\t      weight: 'normal'\n\t    };\n\t    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n\t    // 2. Offset BRACE type not to overlap with another StaveConnector\n\t    _this.x_shift = 0;\n\t    _this.texts = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveConnector, [{\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      type = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n\t\n\t      if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n\t        this.type = type;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text, options) {\n\t      this.texts.push({\n\t        content: text,\n\t        options: _vex.Vex.Merge({ shift_x: 0, shift_y: 0 }, options)\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      _vex.Vex.Merge(this.font, font);\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x_shift) {\n\t      if (typeof x_shift !== 'number') {\n\t        throw _vex.Vex.RERR('InvalidType', 'x_shift must be a Number');\n\t      }\n\t\n\t      this.x_shift = x_shift;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      var topY = this.top_stave.getYForLine(0);\n\t      var botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n\t      var width = this.width;\n\t      var topX = this.top_stave.getX();\n\t\n\t      var isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT || this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT || this.type === StaveConnector.type.THIN_DOUBLE;\n\t\n\t      if (isRightSidedConnector) {\n\t        topX = this.top_stave.getX() + this.top_stave.width;\n\t      }\n\t\n\t      var attachment_height = botY - topY;\n\t      switch (this.type) {\n\t        case StaveConnector.type.SINGLE:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.SINGLE_LEFT:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.SINGLE_RIGHT:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.DOUBLE:\n\t          topX -= this.width + 2;\n\t          break;\n\t        case StaveConnector.type.BRACE:\n\t          {\n\t            width = 12;\n\t            // May need additional code to draw brace\n\t            var x1 = this.top_stave.getX() - 2 + this.x_shift;\n\t            var y1 = topY;\n\t            var x3 = x1;\n\t            var y3 = botY;\n\t            var x2 = x1 - width;\n\t            var y2 = y1 + attachment_height / 2.0;\n\t            var cpx1 = x2 - 0.90 * width;\n\t            var cpy1 = y1 + 0.2 * attachment_height;\n\t            var cpx2 = x1 + 1.10 * width;\n\t            var cpy2 = y2 - 0.135 * attachment_height;\n\t            var cpx3 = cpx2;\n\t            var cpy3 = y2 + 0.135 * attachment_height;\n\t            var cpx4 = cpx1;\n\t            var cpy4 = y3 - 0.2 * attachment_height;\n\t            var cpx5 = x2 - width;\n\t            var cpy5 = cpy4;\n\t            var cpx6 = x1 + 0.40 * width;\n\t            var cpy6 = y2 + 0.135 * attachment_height;\n\t            var cpx7 = cpx6;\n\t            var cpy7 = y2 - 0.135 * attachment_height;\n\t            var cpx8 = cpx5;\n\t            var cpy8 = cpy1;\n\t            ctx.beginPath();\n\t            ctx.moveTo(x1, y1);\n\t            ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n\t            ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n\t            ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n\t            ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n\t            ctx.fill();\n\t            ctx.stroke();\n\t            break;\n\t          }case StaveConnector.type.BRACKET:\n\t          topY -= 4;\n\t          botY += 4;\n\t          attachment_height = botY - topY;\n\t          _glyph.Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n\t          _glyph.Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n\t          topX -= this.width + 2;\n\t          break;\n\t        case StaveConnector.type.BOLD_DOUBLE_LEFT:\n\t          drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n\t          break;\n\t        case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n\t          drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n\t          break;\n\t        case StaveConnector.type.THIN_DOUBLE:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.NONE:\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidType', 'The provided StaveConnector.type (' + this.type + ') is invalid');\n\t      }\n\t\n\t      if (this.type !== StaveConnector.type.BRACE && this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT && this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT && this.type !== StaveConnector.type.NONE) {\n\t        ctx.fillRect(topX, topY, width, attachment_height);\n\t      }\n\t\n\t      // If the connector is a thin double barline, draw the paralell line\n\t      if (this.type === StaveConnector.type.THIN_DOUBLE) {\n\t        ctx.fillRect(topX - 3, topY, width, attachment_height);\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      // Add stave connector text\n\t      for (var i = 0; i < this.texts.length; i++) {\n\t        var text = this.texts[i];\n\t        var text_width = ctx.measureText('' + text.content).width;\n\t        var x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n\t        var y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n\t\n\t        ctx.fillText('' + text.content, x, y + 4);\n\t      }\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return StaveConnector;\n\t}(_element.Element);\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveNote = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _notehead = __webpack_require__(21);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements notes for standard notation. This consists of one or\n\t// more `NoteHeads`, an optional stem, and an optional flag.\n\t//\n\t// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n\t// and a \"key\" refers to a specific pitch/notehead within a note.*\n\t//\n\t// See `tests/stavenote_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (StaveNote.DEBUG) _vex.Vex.L('Vex.Flow.StaveNote', args);\n\t}\n\t\n\tvar getStemAdjustment = function getStemAdjustment(note) {\n\t  return _stem.Stem.WIDTH / (2 * -note.getStemDirection());\n\t};\n\t\n\tvar isInnerNoteIndex = function isInnerNoteIndex(note, index) {\n\t  return index === (note.getStemDirection() === _stem.Stem.UP ? note.keyProps.length - 1 : 0);\n\t};\n\t\n\t// Helper methods for rest positioning in ModifierContext.\n\tfunction shiftRestVertical(rest, note, dir) {\n\t  var delta = (note.isrest ? 0.0 : 1.0) * dir;\n\t\n\t  rest.line += delta;\n\t  rest.maxLine += delta;\n\t  rest.minLine += delta;\n\t  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n\t}\n\t\n\t// Called from formatNotes :: center a rest between two notes\n\tfunction centerRest(rest, noteU, noteL) {\n\t  var delta = rest.line - _vex.Vex.MidLine(noteU.minLine, noteL.maxLine);\n\t  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n\t  rest.line -= delta;\n\t  rest.maxLine -= delta;\n\t  rest.minLine -= delta;\n\t}\n\t\n\tvar StaveNote = exports.StaveNote = function (_StemmableNote) {\n\t  _inherits(StaveNote, _StemmableNote);\n\t\n\t  _createClass(StaveNote, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    //\n\t    // Format notes inside a ModifierContext.\n\t    value: function format(notes, state) {\n\t      if (!notes || notes.length < 2) return false;\n\t\n\t      // FIXME: VexFlow will soon require that a stave be set before formatting.\n\t      // Which, according to the below condition, means that following branch will\n\t      // always be taken and the rest of this function is dead code.\n\t      //\n\t      // Problematically, `Formatter#formatByY` was not designed to work for more\n\t      // than 2 voices (although, doesn't throw on this condition, just tries\n\t      // to power through).\n\t      //\n\t      // Based on the above:\n\t      //   * 2 voices can be formatted *with or without* a stave being set but\n\t      //     the output will be different\n\t      //   * 3 voices can only be formatted *without* a stave\n\t      if (notes[0].getStave()) {\n\t        return StaveNote.formatByY(notes, state);\n\t      }\n\t\n\t      var notesList = [];\n\t\n\t      for (var i = 0; i < notes.length; i++) {\n\t        var props = notes[i].getKeyProps();\n\t        var line = props[0].line;\n\t        var minL = props[props.length - 1].line;\n\t        var stemDirection = notes[i].getStemDirection();\n\t        var stemMax = notes[i].getStemLength() / 10;\n\t        var stemMin = notes[i].getStemMinumumLength() / 10;\n\t\n\t        var maxL = void 0;\n\t        if (notes[i].isRest()) {\n\t          maxL = line + notes[i].glyph.line_above;\n\t          minL = line - notes[i].glyph.line_below;\n\t        } else {\n\t          maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n\t\n\t          minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n\t        }\n\t\n\t        notesList.push({\n\t          line: props[0].line, // note/rest base line\n\t          maxLine: maxL, // note/rest upper bounds line\n\t          minLine: minL, // note/rest lower bounds line\n\t          isrest: notes[i].isRest(),\n\t          stemDirection: stemDirection,\n\t          stemMax: stemMax, // Maximum (default) note stem length;\n\t          stemMin: stemMin, // minimum note stem length\n\t          voice_shift: notes[i].getVoiceShiftWidth(),\n\t          is_displaced: notes[i].isDisplaced(), // note manually displaced\n\t          note: notes[i]\n\t        });\n\t      }\n\t\n\t      var voices = notesList.length;\n\t\n\t      var noteU = notesList[0];\n\t      var noteM = voices > 2 ? notesList[1] : null;\n\t      var noteL = voices > 2 ? notesList[2] : notesList[1];\n\t\n\t      // for two voice backward compatibility, ensure upper voice is stems up\n\t      // for three voices, the voices must be in order (upper, middle, lower)\n\t      if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n\t        noteU = notesList[1];\n\t        noteL = notesList[0];\n\t      }\n\t\n\t      var voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n\t      var xShift = 0;\n\t      var stemDelta = void 0;\n\t\n\t      // Test for two voice note intersection\n\t      if (voices === 2) {\n\t        var lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n\t        // if top voice is a middle voice, check stem intersection with lower voice\n\t        if (noteU.stemDirection === noteL.stemDirection && noteU.minLine <= noteL.maxLine) {\n\t          if (!noteU.isrest) {\n\t            stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n\t            stemDelta = Math.max(stemDelta, noteU.stemMin);\n\t            noteU.minLine = noteU.line - stemDelta;\n\t            noteU.note.setStemLength(stemDelta * 10);\n\t          }\n\t        }\n\t        if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n\t          if (noteU.isrest) {\n\t            // shift rest up\n\t            shiftRestVertical(noteU, noteL, 1);\n\t          } else if (noteL.isrest) {\n\t            // shift rest down\n\t            shiftRestVertical(noteL, noteU, -1);\n\t          } else {\n\t            xShift = voiceXShift;\n\t            if (noteU.stemDirection === noteL.stemDirection) {\n\t              // upper voice is middle voice, so shift it right\n\t              noteU.note.setXShift(xShift + 3);\n\t            } else {\n\t              // shift lower voice right\n\t              noteL.note.setXShift(xShift);\n\t            }\n\t          }\n\t        }\n\t\n\t        // format complete\n\t        return true;\n\t      }\n\t\n\t      // Check middle voice stem intersection with lower voice\n\t      if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n\t        if (!noteM.isrest) {\n\t          stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n\t          stemDelta = Math.max(stemDelta, noteM.stemMin);\n\t          noteM.minLine = noteM.line - stemDelta;\n\t          noteM.note.setStemLength(stemDelta * 10);\n\t        }\n\t      }\n\t\n\t      // For three voices, test if rests can be repositioned\n\t      //\n\t      // Special case 1 :: middle voice rest between two notes\n\t      //\n\t      if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n\t        if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n\t          var restHeight = noteM.maxLine - noteM.minLine;\n\t          var space = noteU.minLine - noteL.maxLine;\n\t          if (restHeight < space) {\n\t            // center middle voice rest between the upper and lower voices\n\t            centerRest(noteM, noteU, noteL);\n\t          } else {\n\t            xShift = voiceXShift + 3; // shift middle rest right\n\t            noteM.note.setXShift(xShift);\n\t          }\n\t          // format complete\n\t          return true;\n\t        }\n\t      }\n\t\n\t      // Special case 2 :: all voices are rests\n\t      if (noteU.isrest && noteM.isrest && noteL.isrest) {\n\t        // Shift upper voice rest up\n\t        shiftRestVertical(noteU, noteM, 1);\n\t        // Shift lower voice rest down\n\t        shiftRestVertical(noteL, noteM, -1);\n\t        // format complete\n\t        return true;\n\t      }\n\t\n\t      // Test if any other rests can be repositioned\n\t      if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n\t        // Shift middle voice rest up\n\t        shiftRestVertical(noteM, noteL, 1);\n\t      }\n\t      if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n\t        // Shift middle voice rest down\n\t        shiftRestVertical(noteM, noteU, -1);\n\t      }\n\t      if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n\t        // shift upper voice rest up;\n\t        shiftRestVertical(noteU, noteM, 1);\n\t      }\n\t      if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n\t        // shift lower voice rest down\n\t        shiftRestVertical(noteL, noteM, -1);\n\t      }\n\t\n\t      // If middle voice intersects upper or lower voice\n\t      if (!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5 || !noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine) {\n\t        xShift = voiceXShift + 3; // shift middle note right\n\t        noteM.note.setXShift(xShift);\n\t      }\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'formatByY',\n\t    value: function formatByY(notes, state) {\n\t      // NOTE: this function does not support more than two voices per stave\n\t      // use with care.\n\t      var hasStave = true;\n\t\n\t      for (var i = 0; i < notes.length; i++) {\n\t        hasStave = hasStave && notes[i].getStave() != null;\n\t      }\n\t\n\t      if (!hasStave) {\n\t        throw new _vex.Vex.RERR('Stave Missing', 'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!');\n\t      }\n\t\n\t      var xShift = 0;\n\t\n\t      for (var _i = 0; _i < notes.length - 1; _i++) {\n\t        var topNote = notes[_i];\n\t        var bottomNote = notes[_i + 1];\n\t\n\t        if (topNote.getStemDirection() === _stem.Stem.DOWN) {\n\t          topNote = notes[_i + 1];\n\t          bottomNote = notes[_i];\n\t        }\n\t\n\t        var topKeys = topNote.getKeyProps();\n\t        var bottomKeys = bottomNote.getKeyProps();\n\t\n\t        var HALF_NOTEHEAD_HEIGHT = 0.5;\n\t\n\t        // `keyProps` and `stave.getYForLine` have different notions of a `line`\n\t        // so we have to convert the keyProps value by subtracting 5.\n\t        // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n\t        //\n\t        // We also extend the y for each note by a half notehead because the\n\t        // notehead's origin is centered\n\t        var topNotBottomY = topNote.getStave().getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\t\n\t        var bottomNoteTopY = bottomNote.getStave().getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\t\n\t        var areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\t\n\t        if (areNotesColliding) {\n\t          xShift = topNote.getVoiceShiftWidth() + 2;\n\t          bottomNote.setXShift(xShift);\n\t        }\n\t      }\n\t\n\t      state.right_shift += xShift;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat(notes) {\n\t      if (!notes) return false;\n\t\n\t      notes.forEach(function (note) {\n\t        return note.postFormat();\n\t      });\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavenotes';\n\t    }\n\t  }, {\n\t    key: 'STEM_UP',\n\t    get: function get() {\n\t      return _stem.Stem.UP;\n\t    }\n\t  }, {\n\t    key: 'STEM_DOWN',\n\t    get: function get() {\n\t      return _stem.Stem.DOWN;\n\t    }\n\t  }, {\n\t    key: 'DEFAULT_LEDGER_LINE_OFFSET',\n\t    get: function get() {\n\t      return 3;\n\t    }\n\t  }]);\n\t\n\t  function StaveNote(noteStruct) {\n\t    _classCallCheck(this, StaveNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveNote.__proto__ || Object.getPrototypeOf(StaveNote)).call(this, noteStruct));\n\t\n\t    _this.setAttribute('type', 'StaveNote');\n\t\n\t    _this.keys = noteStruct.keys;\n\t    _this.clef = noteStruct.clef;\n\t    _this.octave_shift = noteStruct.octave_shift;\n\t    _this.beam = null;\n\t\n\t    // Pull note rendering properties\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(noteStruct));\n\t    }\n\t\n\t    // if true, displace note to right\n\t    _this.displaced = false;\n\t    _this.dot_shiftY = 0;\n\t    // per-pitch properties\n\t    _this.keyProps = [];\n\t    // for displaced ledger lines\n\t    _this.use_default_head_x = false;\n\t\n\t    // Drawing\n\t    _this.note_heads = [];\n\t    _this.modifiers = [];\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads and rests\n\t      glyph_font_scale: noteStruct.glyph_font_scale || _tables.Flow.DEFAULT_NOTATION_FONT_SCALE,\n\t      // number of stroke px to the left and right of head\n\t      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET\n\t    });\n\t\n\t    _this.calculateKeyProps();\n\t    _this.buildStem();\n\t\n\t    // Set the stem direction\n\t    if (noteStruct.auto_stem) {\n\t      _this.autoStem();\n\t    } else {\n\t      _this.setStemDirection(noteStruct.stem_direction);\n\t    }\n\t    _this.reset();\n\t    _this.buildFlag();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveNote, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var _this2 = this;\n\t\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'reset', this).call(this);\n\t\n\t      // Save prior noteHead styles & reapply them after making new noteheads.\n\t      var noteHeadStyles = this.note_heads.map(function (noteHead) {\n\t        return noteHead.getStyle();\n\t      });\n\t      this.buildNoteHeads();\n\t      this.note_heads.forEach(function (noteHead, index) {\n\t        return noteHead.setStyle(noteHeadStyles[index]);\n\t      });\n\t\n\t      if (this.stave) {\n\t        this.note_heads.forEach(function (head) {\n\t          return head.setStave(_this2.stave);\n\t        });\n\t      }\n\t      this.calcExtraPx();\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveNote.CATEGORY;\n\t    }\n\t\n\t    // Builds a `Stem` for the note\n\t\n\t  }, {\n\t    key: 'buildStem',\n\t    value: function buildStem() {\n\t      var glyph = this.getGlyph();\n\t      var yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\t\n\t      this.setStem(new _stem.Stem({\n\t        yExtend: yExtend,\n\t        hide: !!this.isRest()\n\t      }));\n\t    }\n\t\n\t    // Builds a `NoteHead` for each key in the note\n\t\n\t  }, {\n\t    key: 'buildNoteHeads',\n\t    value: function buildNoteHeads() {\n\t      this.note_heads = [];\n\t      var stemDirection = this.getStemDirection();\n\t      var keys = this.getKeys();\n\t\n\t      var lastLine = null;\n\t      var lineDiff = null;\n\t      var displaced = false;\n\t\n\t      // Draw notes from bottom to top.\n\t\n\t      // For down-stem notes, we draw from top to bottom.\n\t      var start = void 0;\n\t      var end = void 0;\n\t      var step = void 0;\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        start = 0;\n\t        end = keys.length;\n\t        step = 1;\n\t      } else if (stemDirection === _stem.Stem.DOWN) {\n\t        start = keys.length - 1;\n\t        end = -1;\n\t        step = -1;\n\t      }\n\t\n\t      for (var i = start; i !== end; i += step) {\n\t        var noteProps = this.keyProps[i];\n\t        var line = noteProps.line;\n\t\n\t        // Keep track of last line with a note head, so that consecutive heads\n\t        // are correctly displaced.\n\t        if (lastLine === null) {\n\t          lastLine = line;\n\t        } else {\n\t          lineDiff = Math.abs(lastLine - line);\n\t          if (lineDiff === 0 || lineDiff === 0.5) {\n\t            displaced = !displaced;\n\t          } else {\n\t            displaced = false;\n\t            this.use_default_head_x = true;\n\t          }\n\t        }\n\t        lastLine = line;\n\t\n\t        var notehead = new _notehead.NoteHead({\n\t          duration: this.duration,\n\t          note_type: this.noteType,\n\t          displaced: displaced,\n\t          stem_direction: stemDirection,\n\t          custom_glyph_code: noteProps.code,\n\t          glyph_font_scale: this.render_options.glyph_font_scale,\n\t          x_shift: noteProps.shift_right,\n\t          line: noteProps.line\n\t        });\n\t\n\t        this.note_heads[i] = notehead;\n\t      }\n\t    }\n\t\n\t    // Automatically sets the stem direction based on the keys in the note\n\t\n\t  }, {\n\t    key: 'autoStem',\n\t    value: function autoStem() {\n\t      // Figure out optimal stem direction based on given notes\n\t      this.minLine = this.keyProps[0].line;\n\t      this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\t\n\t      var MIDDLE_LINE = 3;\n\t      var decider = (this.minLine + this.maxLine) / 2;\n\t      var stemDirection = decider < MIDDLE_LINE ? _stem.Stem.UP : _stem.Stem.DOWN;\n\t\n\t      this.setStemDirection(stemDirection);\n\t    }\n\t\n\t    // Calculates and stores the properties for each key in the note\n\t\n\t  }, {\n\t    key: 'calculateKeyProps',\n\t    value: function calculateKeyProps() {\n\t      var lastLine = null;\n\t      for (var i = 0; i < this.keys.length; ++i) {\n\t        var key = this.keys[i];\n\t\n\t        // All rests use the same position on the line.\n\t        // if (this.glyph.rest) key = this.glyph.position;\n\t        if (this.glyph.rest) this.glyph.position = key;\n\t\n\t        var options = { octave_shift: this.octave_shift || 0 };\n\t        var props = _tables.Flow.keyProperties(key, this.clef, options);\n\t\n\t        if (!props) {\n\t          throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid key for note properties: ' + key);\n\t        }\n\t\n\t        // Override line placement for default rests\n\t        if (props.key === 'R') {\n\t          if (this.duration === '1' || this.duration === 'w') {\n\t            props.line = 4;\n\t          } else {\n\t            props.line = 3;\n\t          }\n\t        }\n\t\n\t        // Calculate displacement of this note\n\t        var line = props.line;\n\t        if (lastLine === null) {\n\t          lastLine = line;\n\t        } else {\n\t          if (Math.abs(lastLine - line) === 0.5) {\n\t            this.displaced = true;\n\t            props.displaced = true;\n\t\n\t            // Have to mark the previous note as\n\t            // displaced as well, for modifier placement\n\t            if (this.keyProps.length > 0) {\n\t              this.keyProps[i - 1].displaced = true;\n\t            }\n\t          }\n\t        }\n\t\n\t        lastLine = line;\n\t        this.keyProps.push(props);\n\t      }\n\t\n\t      // Sort the notes from lowest line to highest line\n\t      lastLine = -Infinity;\n\t      this.keyProps.forEach(function (key) {\n\t        if (key.line < lastLine) {\n\t          _vex.Vex.W('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n\t        }\n\t        lastLine = key.line;\n\t      });\n\t      this.keyProps.sort(function (a, b) {\n\t        return a.line - b.line;\n\t      });\n\t    }\n\t\n\t    // Get the `BoundingBox` for the entire note\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n\t      }\n\t\n\t      var _getMetrics = this.getMetrics();\n\t\n\t      var w = _getMetrics.width;\n\t      var modLeftPx = _getMetrics.modLeftPx;\n\t      var extraLeftPx = _getMetrics.extraLeftPx;\n\t\n\t      var x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\t\n\t      var minY = 0;\n\t      var maxY = 0;\n\t      var halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n\t      var lineSpacing = halfLineSpacing * 2;\n\t\n\t      if (this.isRest()) {\n\t        var y = this.ys[0];\n\t        var frac = _tables.Flow.durationToFraction(this.duration);\n\t        if (frac.equals(1) || frac.equals(2)) {\n\t          minY = y - halfLineSpacing;\n\t          maxY = y + halfLineSpacing;\n\t        } else {\n\t          minY = y - this.glyph.line_above * lineSpacing;\n\t          maxY = y + this.glyph.line_below * lineSpacing;\n\t        }\n\t      } else if (this.glyph.stem) {\n\t        var ys = this.getStemExtents();\n\t        ys.baseY += halfLineSpacing * this.stem_direction;\n\t        minY = Math.min(ys.topY, ys.baseY);\n\t        maxY = Math.max(ys.topY, ys.baseY);\n\t      } else {\n\t        minY = null;\n\t        maxY = null;\n\t\n\t        for (var i = 0; i < this.ys.length; ++i) {\n\t          var yy = this.ys[i];\n\t          if (i === 0) {\n\t            minY = yy;\n\t            maxY = yy;\n\t          } else {\n\t            minY = Math.min(yy, minY);\n\t            maxY = Math.max(yy, maxY);\n\t          }\n\t        }\n\t        minY -= halfLineSpacing;\n\t        maxY += halfLineSpacing;\n\t      }\n\t\n\t      return new _boundingbox.BoundingBox(x, minY, w, maxY - minY);\n\t    }\n\t\n\t    // Gets the line number of the top or bottom note in the chord.\n\t    // If `isTopNote` is `true` then get the top note\n\t\n\t  }, {\n\t    key: 'getLineNumber',\n\t    value: function getLineNumber(isTopNote) {\n\t      if (!this.keyProps.length) {\n\t        throw new _vex.Vex.RERR('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n\t      }\n\t\n\t      var resultLine = this.keyProps[0].line;\n\t\n\t      // No precondition assumed for sortedness of keyProps array\n\t      for (var i = 0; i < this.keyProps.length; i++) {\n\t        var thisLine = this.keyProps[i].line;\n\t        if (isTopNote) {\n\t          if (thisLine > resultLine) resultLine = thisLine;\n\t        } else {\n\t          if (thisLine < resultLine) resultLine = thisLine;\n\t        }\n\t      }\n\t\n\t      return resultLine;\n\t    }\n\t\n\t    // Determine if current note is a rest\n\t\n\t  }, {\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return this.glyph.rest;\n\t    }\n\t\n\t    // Determine if the current note is a chord\n\t\n\t  }, {\n\t    key: 'isChord',\n\t    value: function isChord() {\n\t      return !this.isRest() && this.keys.length > 1;\n\t    }\n\t\n\t    // Determine if the `StaveNote` has a stem\n\t\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return this.glyph.stem;\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag() {\n\t      return _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'hasFlag', this).call(this) && !this.isRest();\n\t    }\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      if (this.noteType === 'r') {\n\t        return this.getCenterGlyphX();\n\t      } else {\n\t        // We adjust the origin of the stem because we want the stem left-aligned\n\t        // with the notehead if stemmed-down, and right-aligned if stemmed-up\n\t        return _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'getStemX', this).call(this) + getStemAdjustment(this);\n\t      }\n\t    }\n\t\n\t    // Get the `y` coordinate for text placed on the top/bottom of a\n\t    // note at a desired `text_line`\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      return Math.min(this.stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      return Math.max(this.stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n\t    }\n\t\n\t    // Sets the current note to the provided `stave`. This applies\n\t    // `y` values to the `NoteHeads`.\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'setStave', this).call(this, stave);\n\t\n\t      var ys = this.note_heads.map(function (notehead) {\n\t        notehead.setStave(stave);\n\t        return notehead.getY();\n\t      });\n\t\n\t      this.setYs(ys);\n\t\n\t      if (this.stem) {\n\t        var _getNoteHeadBounds = this.getNoteHeadBounds();\n\t\n\t        var y_top = _getNoteHeadBounds.y_top;\n\t        var y_bottom = _getNoteHeadBounds.y_bottom;\n\t\n\t        this.stem.setYBounds(y_top, y_bottom);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Get the pitches in the note\n\t\n\t  }, {\n\t    key: 'getKeys',\n\t    value: function getKeys() {\n\t      return this.keys;\n\t    }\n\t\n\t    // Get the properties for all the keys in the note\n\t\n\t  }, {\n\t    key: 'getKeyProps',\n\t    value: function getKeyProps() {\n\t      return this.keyProps;\n\t    }\n\t\n\t    // Check if note is shifted to the right\n\t\n\t  }, {\n\t    key: 'isDisplaced',\n\t    value: function isDisplaced() {\n\t      return this.displaced;\n\t    }\n\t\n\t    // Sets whether shift note to the right. `displaced` is a `boolean`\n\t\n\t  }, {\n\t    key: 'setNoteDisplaced',\n\t    value: function setNoteDisplaced(displaced) {\n\t      this.displaced = displaced;\n\t      return this;\n\t    }\n\t\n\t    // Get the starting `x` coordinate for a `StaveTie`\n\t\n\t  }, {\n\t    key: 'getTieRightX',\n\t    value: function getTieRightX() {\n\t      var tieStartX = this.getAbsoluteX();\n\t      tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n\t      if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n\t      return tieStartX;\n\t    }\n\t\n\t    // Get the ending `x` coordinate for a `StaveTie`\n\t\n\t  }, {\n\t    key: 'getTieLeftX',\n\t    value: function getTieLeftX() {\n\t      var tieEndX = this.getAbsoluteX();\n\t      tieEndX += this.x_shift - this.extraLeftPx;\n\t      return tieEndX;\n\t    }\n\t\n\t    // Get the stave line on which to place a rest\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      var restLine = this.keyProps[0].line;\n\t      if (this.keyProps.length > 1) {\n\t        var lastLine = this.keyProps[this.keyProps.length - 1].line;\n\t        var top = Math.max(restLine, lastLine);\n\t        var bot = Math.min(restLine, lastLine);\n\t        restLine = _vex.Vex.MidLine(top, bot);\n\t      }\n\t\n\t      return restLine;\n\t    }\n\t\n\t    // Get the default `x` and `y` coordinates for the provided `position`\n\t    // and key `index`\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY(position, index) {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n\t      }\n\t\n\t      var _Modifier$Position = _modifier.Modifier.Position;\n\t      var ABOVE = _Modifier$Position.ABOVE;\n\t      var BELOW = _Modifier$Position.BELOW;\n\t      var LEFT = _Modifier$Position.LEFT;\n\t      var RIGHT = _Modifier$Position.RIGHT;\n\t\n\t      var x = 0;\n\t      if (position === LEFT) {\n\t        // extra_left_px\n\t        // FIXME: What are these magic numbers?\n\t        x = -1 * 2;\n\t      } else if (position === RIGHT) {\n\t        // extra_right_px\n\t        // FIXME: What is this magical +2?\n\t        x = this.getGlyphWidth() + this.x_shift + 2;\n\t\n\t        if (this.stem_direction === _stem.Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n\t          x += this.flag.getMetrics().width;\n\t        }\n\t      } else if (position === BELOW || position === ABOVE) {\n\t        x = this.getGlyphWidth() / 2;\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX() + x,\n\t        y: this.ys[index]\n\t      };\n\t    }\n\t\n\t    // Sets the style of the complete StaveNote, including all keys\n\t    // and the stem.\n\t\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'setStyle', this).call(this, style);\n\t      this.note_heads.forEach(function (notehead) {\n\t        return notehead.setStyle(style);\n\t      });\n\t      this.stem.setStyle(style);\n\t    }\n\t  }, {\n\t    key: 'setStemStyle',\n\t    value: function setStemStyle(style) {\n\t      var stem = this.getStem();\n\t      stem.setStyle(style);\n\t    }\n\t  }, {\n\t    key: 'getStemStyle',\n\t    value: function getStemStyle() {\n\t      return this.stem.getStyle();\n\t    }\n\t  }, {\n\t    key: 'setLedgerLineStyle',\n\t    value: function setLedgerLineStyle(style) {\n\t      this.ledgerLineStyle = style;\n\t    }\n\t  }, {\n\t    key: 'getLedgerLineStyle',\n\t    value: function getLedgerLineStyle() {\n\t      return this.ledgerLineStyle;\n\t    }\n\t  }, {\n\t    key: 'setFlagStyle',\n\t    value: function setFlagStyle(style) {\n\t      this.flagStyle = style;\n\t    }\n\t  }, {\n\t    key: 'getFlagStyle',\n\t    value: function getFlagStyle() {\n\t      return this.flagStyle;\n\t    }\n\t\n\t    // Sets the notehead at `index` to the provided coloring `style`.\n\t    //\n\t    // `style` is an `object` with the following properties: `shadowColor`,\n\t    // `shadowBlur`, `fillStyle`, `strokeStyle`\n\t\n\t  }, {\n\t    key: 'setKeyStyle',\n\t    value: function setKeyStyle(index, style) {\n\t      this.note_heads[index].setStyle(style);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setKeyLine',\n\t    value: function setKeyLine(index, line) {\n\t      this.keyProps[index].line = line;\n\t      this.reset();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getKeyLine',\n\t    value: function getKeyLine(index) {\n\t      return this.keyProps[index].line;\n\t    }\n\t\n\t    // Add self to modifier context. `mContext` is the `ModifierContext`\n\t    // to be added to.\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mContext) {\n\t      this.setModifierContext(mContext);\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        this.modifierContext.addModifier(this.modifiers[i]);\n\t      }\n\t      this.modifierContext.addModifier(this);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Generic function to add modifiers to a note\n\t    //\n\t    // Parameters:\n\t    // * `index`: The index of the key that we're modifying\n\t    // * `modifier`: The modifier to add\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(index, modifier) {\n\t      modifier.setNote(this);\n\t      modifier.setIndex(index);\n\t      this.modifiers.push(modifier);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Helper function to add an accidental to a key\n\t\n\t  }, {\n\t    key: 'addAccidental',\n\t    value: function addAccidental(index, accidental) {\n\t      return this.addModifier(index, accidental);\n\t    }\n\t\n\t    // Helper function to add an articulation to a key\n\t\n\t  }, {\n\t    key: 'addArticulation',\n\t    value: function addArticulation(index, articulation) {\n\t      return this.addModifier(index, articulation);\n\t    }\n\t\n\t    // Helper function to add an annotation to a key\n\t\n\t  }, {\n\t    key: 'addAnnotation',\n\t    value: function addAnnotation(index, annotation) {\n\t      return this.addModifier(index, annotation);\n\t    }\n\t\n\t    // Helper function to add a dot on a specific key\n\t\n\t  }, {\n\t    key: 'addDot',\n\t    value: function addDot(index) {\n\t      var dot = new _dot.Dot();\n\t      dot.setDotShiftY(this.glyph.dot_shiftY);\n\t      this.dots++;\n\t      return this.addModifier(index, dot);\n\t    }\n\t\n\t    // Convenience method to add dot to all keys in note\n\t\n\t  }, {\n\t    key: 'addDotToAll',\n\t    value: function addDotToAll() {\n\t      for (var i = 0; i < this.keys.length; ++i) {\n\t        this.addDot(i);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Get all accidentals in the `ModifierContext`\n\t\n\t  }, {\n\t    key: 'getAccidentals',\n\t    value: function getAccidentals() {\n\t      return this.modifierContext.getModifiers('accidentals');\n\t    }\n\t\n\t    // Get all dots in the `ModifierContext`\n\t\n\t  }, {\n\t    key: 'getDots',\n\t    value: function getDots() {\n\t      return this.modifierContext.getModifiers('dots');\n\t    }\n\t\n\t    // Get the width of the note if it is displaced. Used for `Voice`\n\t    // formatting\n\t\n\t  }, {\n\t    key: 'getVoiceShiftWidth',\n\t    value: function getVoiceShiftWidth() {\n\t      // TODO: may need to accomodate for dot here.\n\t      return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n\t    }\n\t\n\t    // Calculates and sets the extra pixels to the left or right\n\t    // if the note is displaced.\n\t\n\t  }, {\n\t    key: 'calcExtraPx',\n\t    value: function calcExtraPx() {\n\t      this.setExtraLeftPx(this.displaced && this.stem_direction === _stem.Stem.DOWN ? this.getGlyphWidth() : 0);\n\t\n\t      // For upstems with flags, the extra space is unnecessary, since it's taken\n\t      // up by the flag.\n\t      this.setExtraRightPx(!this.hasFlag() && this.displaced && this.stem_direction === _stem.Stem.UP ? this.getGlyphWidth() : 0);\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t      if (this.modifierContext) this.modifierContext.preFormat();\n\t\n\t      var width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\t\n\t      // For upward flagged notes, the width of the flag needs to be added\n\t      if (this.glyph.flag && this.beam === null && this.stem_direction === _stem.Stem.UP) {\n\t        width += this.getGlyphWidth();\n\t      }\n\t\n\t      this.setWidth(width);\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    /**\n\t     * @typedef {Object} noteHeadBounds\n\t     * @property {number} y_top the highest notehead bound\n\t     * @property {number} y_bottom the lowest notehead bound\n\t     * @property {number|Null} displaced_x the starting x for displaced noteheads\n\t     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n\t     * @property {number} highest_line the highest notehead line in traditional music line\n\t     *  numbering (bottom line = 1, top line = 5)\n\t     * @property {number} lowest_line the lowest notehead line\n\t     * @property {number|false} highest_displaced_line the highest staff line number\n\t     *   for a displaced notehead\n\t     * @property {number|false} lowest_displaced_line\n\t     * @property {number} highest_non_displaced_line\n\t     * @property {number} lowest_non_displaced_line\n\t     */\n\t\n\t    /**\n\t     * Get the staff line and y value for the highest & lowest noteheads\n\t     * @returns {noteHeadBounds}\n\t     */\n\t\n\t  }, {\n\t    key: 'getNoteHeadBounds',\n\t    value: function getNoteHeadBounds() {\n\t      // Top and bottom Y values for stem.\n\t      var yTop = null;\n\t      var yBottom = null;\n\t      var nonDisplacedX = null;\n\t      var displacedX = null;\n\t\n\t      var highestLine = this.stave.getNumLines();\n\t      var lowestLine = 1;\n\t      var highestDisplacedLine = false;\n\t      var lowestDisplacedLine = false;\n\t      var highestNonDisplacedLine = highestLine;\n\t      var lowestNonDisplacedLine = lowestLine;\n\t\n\t      this.note_heads.forEach(function (notehead) {\n\t        var line = notehead.getLine();\n\t        var y = notehead.getY();\n\t\n\t        if (yTop === null || y < yTop) {\n\t          yTop = y;\n\t        }\n\t\n\t        if (yBottom === null || y > yBottom) {\n\t          yBottom = y;\n\t        }\n\t\n\t        if (displacedX === null && notehead.isDisplaced()) {\n\t          displacedX = notehead.getAbsoluteX();\n\t        }\n\t\n\t        if (nonDisplacedX === null && !notehead.isDisplaced()) {\n\t          nonDisplacedX = notehead.getAbsoluteX();\n\t        }\n\t\n\t        highestLine = line > highestLine ? line : highestLine;\n\t        lowestLine = line < lowestLine ? line : lowestLine;\n\t\n\t        if (notehead.isDisplaced()) {\n\t          highestDisplacedLine = highestDisplacedLine === false ? line : Math.max(line, highestDisplacedLine);\n\t          lowestDisplacedLine = lowestDisplacedLine === false ? line : Math.min(line, lowestDisplacedLine);\n\t        } else {\n\t          highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n\t          lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n\t        }\n\t      }, this);\n\t\n\t      return {\n\t        y_top: yTop,\n\t        y_bottom: yBottom,\n\t        displaced_x: displacedX,\n\t        non_displaced_x: nonDisplacedX,\n\t        highest_line: highestLine,\n\t        lowest_line: lowestLine,\n\t        highest_displaced_line: highestDisplacedLine,\n\t        lowest_displaced_line: lowestDisplacedLine,\n\t        highest_non_displaced_line: highestNonDisplacedLine,\n\t        lowest_non_displaced_line: lowestNonDisplacedLine\n\t      };\n\t    }\n\t\n\t    // Get the starting `x` coordinate for the noteheads\n\t\n\t  }, {\n\t    key: 'getNoteHeadBeginX',\n\t    value: function getNoteHeadBeginX() {\n\t      return this.getAbsoluteX() + this.x_shift;\n\t    }\n\t\n\t    // Get the ending `x` coordinate for the noteheads\n\t\n\t  }, {\n\t    key: 'getNoteHeadEndX',\n\t    value: function getNoteHeadEndX() {\n\t      var xBegin = this.getNoteHeadBeginX();\n\t      return xBegin + this.getGlyphWidth();\n\t    }\n\t\n\t    // Draw the ledger lines between the stave and the highest/lowest keys\n\t\n\t  }, {\n\t    key: 'drawLedgerLines',\n\t    value: function drawLedgerLines() {\n\t      var stave = this.stave;\n\t      var glyph = this.glyph;\n\t      var stroke_px = this.render_options.stroke_px;\n\t      var ctx = this.context;\n\t\n\t\n\t      var width = glyph.getWidth() + stroke_px * 2;\n\t      var doubleWidth = 2 * (glyph.getWidth() + stroke_px) - _stem.Stem.WIDTH / 2;\n\t\n\t      if (this.isRest()) return;\n\t      if (!ctx) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var _getNoteHeadBounds2 = this.getNoteHeadBounds();\n\t\n\t      var highest_line = _getNoteHeadBounds2.highest_line;\n\t      var lowest_line = _getNoteHeadBounds2.lowest_line;\n\t      var highest_displaced_line = _getNoteHeadBounds2.highest_displaced_line;\n\t      var highest_non_displaced_line = _getNoteHeadBounds2.highest_non_displaced_line;\n\t      var lowest_displaced_line = _getNoteHeadBounds2.lowest_displaced_line;\n\t      var lowest_non_displaced_line = _getNoteHeadBounds2.lowest_non_displaced_line;\n\t      var displaced_x = _getNoteHeadBounds2.displaced_x;\n\t      var non_displaced_x = _getNoteHeadBounds2.non_displaced_x;\n\t\n\t\n\t      var min_x = Math.min(displaced_x, non_displaced_x);\n\t\n\t      var drawLedgerLine = function drawLedgerLine(y, normal, displaced) {\n\t        var x = void 0;\n\t        if (displaced && normal) x = min_x - stroke_px;else if (normal) x = non_displaced_x - stroke_px;else x = displaced_x - stroke_px;\n\t        var ledgerWidth = normal && displaced ? doubleWidth : width;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(x, y);\n\t        ctx.lineTo(x + ledgerWidth, y);\n\t        ctx.stroke();\n\t      };\n\t\n\t      var style = _extends({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n\t      this.applyStyle(ctx, style);\n\t\n\t      // Draw ledger lines below the staff:\n\t      for (var line = 6; line <= highest_line; ++line) {\n\t        var normal = non_displaced_x !== null && line <= highest_non_displaced_line;\n\t        var displaced = displaced_x !== null && line <= highest_displaced_line;\n\t        drawLedgerLine(stave.getYForNote(line), normal, displaced);\n\t      }\n\t\n\t      // Draw ledger lines above the staff:\n\t      for (var _line = 0; _line >= lowest_line; --_line) {\n\t        var _normal = non_displaced_x !== null && _line >= lowest_non_displaced_line;\n\t        var _displaced = displaced_x !== null && _line >= lowest_displaced_line;\n\t        drawLedgerLine(stave.getYForNote(_line), _normal, _displaced);\n\t      }\n\t\n\t      this.restoreStyle(ctx, style);\n\t    }\n\t\n\t    // Draw all key modifiers\n\t\n\t  }, {\n\t    key: 'drawModifiers',\n\t    value: function drawModifiers() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var ctx = this.context;\n\t      ctx.openGroup('modifiers');\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        var modifier = this.modifiers[i];\n\t        var notehead = this.note_heads[modifier.getIndex()];\n\t        var noteheadStyle = notehead.getStyle();\n\t        if (noteheadStyle) {\n\t          ctx.save();\n\t          notehead.applyStyle(ctx);\n\t        }\n\t        modifier.setContext(ctx);\n\t        modifier.draw();\n\t        if (noteheadStyle) {\n\t          ctx.restore();\n\t        }\n\t      }\n\t      ctx.closeGroup();\n\t    }\n\t\n\t    // Draw the flag for the note\n\t\n\t  }, {\n\t    key: 'drawFlag',\n\t    value: function drawFlag() {\n\t      var stem = this.stem;\n\t      var beam = this.beam;\n\t      var ctx = this.context;\n\t\n\t\n\t      if (!ctx) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var shouldRenderFlag = beam === null;\n\t      var glyph = this.getGlyph();\n\t\n\t      if (glyph.flag && shouldRenderFlag) {\n\t        var _getNoteHeadBounds3 = this.getNoteHeadBounds();\n\t\n\t        var y_top = _getNoteHeadBounds3.y_top;\n\t        var y_bottom = _getNoteHeadBounds3.y_bottom;\n\t\n\t        var noteStemHeight = stem.getHeight();\n\t        var flagX = this.getStemX();\n\t        // FIXME: What's with the magic +/- 2\n\t        var flagY = this.getStemDirection() === _stem.Stem.DOWN\n\t        // Down stems have flags on the left\n\t        ? y_top - noteStemHeight + 2\n\t        // Up stems have flags on the eft.\n\t        : y_bottom - noteStemHeight - 2;\n\t\n\t        // Draw the Flag\n\t        ctx.openGroup('flag', null, { pointerBBox: true });\n\t        this.applyStyle(ctx, this.getFlagStyle() || false);\n\t        this.flag.render(ctx, flagX, flagY);\n\t        this.restoreStyle(ctx, this.getFlagStyle() || false);\n\t        ctx.closeGroup();\n\t      }\n\t    }\n\t\n\t    // Draw the NoteHeads\n\t\n\t  }, {\n\t    key: 'drawNoteHeads',\n\t    value: function drawNoteHeads() {\n\t      var _this3 = this;\n\t\n\t      this.note_heads.forEach(function (notehead) {\n\t        _this3.context.openGroup('notehead', null, { pointerBBox: true });\n\t        notehead.setContext(_this3.context).draw();\n\t        _this3.context.closeGroup();\n\t      });\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'drawStem',\n\t    value: function drawStem(stemStruct) {\n\t      // GCR TODO: I can't find any context in which this is called with the stemStruct\n\t      // argument in the codebase or tests. Nor can I find a case where super.drawStem\n\t      // is called at all. Perhaps these should be removed?\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      if (stemStruct) {\n\t        this.setStem(new _stem.Stem(stemStruct));\n\t      }\n\t\n\t      this.context.openGroup('stem', null, { pointerBBox: true });\n\t      this.stem.setContext(this.context).draw();\n\t      this.context.closeGroup();\n\t    }\n\t\n\t    // Draws all the `StaveNote` parts. This is the main drawing method.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n\t      }\n\t\n\t      var xBegin = this.getNoteHeadBeginX();\n\t      var shouldRenderStem = this.hasStem() && !this.beam;\n\t\n\t      // Format note head x positions\n\t      this.note_heads.forEach(function (notehead) {\n\t        return notehead.setX(xBegin);\n\t      });\n\t\n\t      // Format stem x positions\n\t      var stemX = this.getStemX();\n\t      this.stem.setNoteHeadXBounds(stemX, stemX);\n\t\n\t      L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\t\n\t      // Draw each part of the note\n\t      this.drawLedgerLines();\n\t\n\t      // Apply the overall style -- may be contradicted by local settings:\n\t      this.applyStyle();\n\t      this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n\t      this.context.openGroup('note', null, { pointerBBox: true });\n\t      if (shouldRenderStem) this.drawStem();\n\t      this.drawNoteHeads();\n\t      this.drawFlag();\n\t      this.context.closeGroup();\n\t      this.drawModifiers();\n\t      this.context.closeGroup();\n\t      this.restoreStyle();\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return StaveNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NoteHead = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n\t// directly, but used internally in `StaveNote`.\n\t//\n\t// See `tests/notehead_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (NoteHead.DEBUG) _vex.Vex.L('Vex.Flow.NoteHead', args);\n\t}\n\t\n\t// Draw slashnote head manually. No glyph exists for this.\n\t//\n\t// Parameters:\n\t// * `ctx`: the Canvas context\n\t// * `duration`: the duration of the note. ex: \"4\"\n\t// * `x`: the x coordinate to draw at\n\t// * `y`: the y coordinate to draw at\n\t// * `stem_direction`: the direction of the stem\n\tfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n\t  var width = _tables.Flow.SLASH_NOTEHEAD_WIDTH;\n\t  ctx.save();\n\t  ctx.setLineWidth(_tables.Flow.STEM_WIDTH);\n\t\n\t  var fill = false;\n\t\n\t  if (_tables.Flow.durationToNumber(duration) > 2) {\n\t    fill = true;\n\t  }\n\t\n\t  if (!fill) x -= _tables.Flow.STEM_WIDTH / 2 * stem_direction;\n\t\n\t  ctx.beginPath();\n\t  ctx.moveTo(x, y + staveSpace);\n\t  ctx.lineTo(x, y + 1);\n\t  ctx.lineTo(x + width, y - staveSpace);\n\t  ctx.lineTo(x + width, y);\n\t  ctx.lineTo(x, y + staveSpace);\n\t  ctx.closePath();\n\t\n\t  if (fill) {\n\t    ctx.fill();\n\t  } else {\n\t    ctx.stroke();\n\t  }\n\t\n\t  if (_tables.Flow.durationToFraction(duration).equals(0.5)) {\n\t    var breve_lines = [-3, -1, width + 1, width + 3];\n\t    for (var i = 0; i < breve_lines.length; i++) {\n\t      ctx.beginPath();\n\t      ctx.moveTo(x + breve_lines[i], y - 10);\n\t      ctx.lineTo(x + breve_lines[i], y + 11);\n\t      ctx.stroke();\n\t    }\n\t  }\n\t\n\t  ctx.restore();\n\t}\n\t\n\tvar NoteHead = exports.NoteHead = function (_Note) {\n\t  _inherits(NoteHead, _Note);\n\t\n\t  _createClass(NoteHead, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'notehead';\n\t    }\n\t  }]);\n\t\n\t  function NoteHead(head_options) {\n\t    _classCallCheck(this, NoteHead);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NoteHead.__proto__ || Object.getPrototypeOf(NoteHead)).call(this, head_options));\n\t\n\t    _this.setAttribute('type', 'NoteHead');\n\t\n\t    _this.index = head_options.index;\n\t    _this.x = head_options.x || 0;\n\t    _this.y = head_options.y || 0;\n\t    _this.note_type = head_options.note_type;\n\t    _this.duration = head_options.duration;\n\t    _this.displaced = head_options.displaced || false;\n\t    _this.stem_direction = head_options.stem_direction || _stavenote.StaveNote.STEM_UP;\n\t    _this.line = head_options.line;\n\t\n\t    // Get glyph code based on duration and note type. This could be\n\t    // regular notes, rests, or other custom codes.\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.note_type);\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No glyph found for duration \\'' + _this.duration + '\\' and type \\'' + _this.note_type + '\\'');\n\t    }\n\t\n\t    _this.glyph_code = _this.glyph.code_head;\n\t    _this.x_shift = head_options.x_shift;\n\t    if (head_options.custom_glyph_code) {\n\t      _this.custom_glyph = true;\n\t      _this.glyph_code = head_options.custom_glyph_code;\n\t    }\n\t\n\t    _this.style = head_options.style;\n\t    _this.slashed = head_options.slashed;\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads\n\t      glyph_font_scale: head_options.glyph_font_scale || _tables.Flow.DEFAULT_NOTATION_FONT_SCALE,\n\t      // number of stroke px to the left and right of head\n\t      stroke_px: 3\n\t    });\n\t\n\t    _this.setWidth(_this.glyph.getWidth(_this.render_options.glyph_font_scale));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(NoteHead, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return NoteHead.CATEGORY;\n\t    }\n\t\n\t    // Get the width of the notehead\n\t\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t\n\t    // Determine if the notehead is displaced\n\t\n\t  }, {\n\t    key: 'isDisplaced',\n\t    value: function isDisplaced() {\n\t      return this.displaced === true;\n\t    }\n\t\n\t    // Get the glyph data\n\t\n\t  }, {\n\t    key: 'getGlyph',\n\t    value: function getGlyph() {\n\t      return this.glyph;\n\t    }\n\t\n\t    // Set the X coordinate\n\t\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t\n\t    // get/set the Y coordinate\n\t\n\t  }, {\n\t    key: 'getY',\n\t    value: function getY() {\n\t      return this.y;\n\t    }\n\t  }, {\n\t    key: 'setY',\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t\n\t    // Get/set the stave line the notehead is placed on\n\t\n\t  }, {\n\t    key: 'getLine',\n\t    value: function getLine() {\n\t      return this.line;\n\t    }\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Get the canvas `x` coordinate position of the notehead.\n\t\n\t  }, {\n\t    key: 'getAbsoluteX',\n\t    value: function getAbsoluteX() {\n\t      // If the note has not been preformatted, then get the static x value\n\t      // Otherwise, it's been formatted and we should use it's x value relative\n\t      // to its tick context\n\t      var x = !this.preFormatted ? this.x : _get(NoteHead.prototype.__proto__ || Object.getPrototypeOf(NoteHead.prototype), 'getAbsoluteX', this).call(this);\n\t\n\t      // For a more natural displaced notehead, we adjust the displacement amount\n\t      // by half the stem width in order to maintain a slight overlap with the stem\n\t      var displacementStemAdjustment = _stem.Stem.WIDTH / 2;\n\t\n\t      return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction : 0);\n\t    }\n\t\n\t    // Get the `BoundingBox` for the `NoteHead`\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n\t      }\n\t\n\t      var spacing = this.stave.getSpacingBetweenLines();\n\t      var half_spacing = spacing / 2;\n\t      var min_y = this.y - half_spacing;\n\t\n\t      return new _tables.Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n\t    }\n\t\n\t    // Set notehead to a provided `stave`\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      var line = this.getLine();\n\t\n\t      this.stave = stave;\n\t      this.setY(stave.getYForNote(line));\n\t      this.context = this.stave.context;\n\t      return this;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return this;\n\t\n\t      var width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\t\n\t      this.setWidth(width);\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t\n\t    // Draw the notehead\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var ctx = this.context;\n\t      var head_x = this.getAbsoluteX();\n\t      var y = this.y;\n\t\n\t      L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\t\n\t      // Begin and end positions for head.\n\t      var stem_direction = this.stem_direction;\n\t      var glyph_font_scale = this.render_options.glyph_font_scale;\n\t\n\t      if (this.note_type === 's') {\n\t        var staveSpace = this.stave.getSpacingBetweenLines();\n\t        drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n\t      } else {\n\t        if (this.style) {\n\t          this.applyStyle(ctx);\n\t          _glyph.Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n\t          this.restoreStyle(ctx);\n\t        } else {\n\t          _glyph.Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n\t        }\n\t      }\n\t    }\n\t  }]);\n\n\t  return NoteHead;\n\t}(_note.Note);\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Note = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _tickable = __webpack_require__(23);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements an abstract interface for notes and chords that\n\t// are rendered on a stave. Notes have some common properties: All of them\n\t// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n\t//\n\t// Some notes have stems, heads, dots, etc. Most notational elements that\n\t// surround a note are called *modifiers*, and every note has an associated\n\t// array of them. All notes also have a rendering context and belong to a stave.\n\t\n\tvar Note = exports.Note = function (_Tickable) {\n\t  _inherits(Note, _Tickable);\n\t\n\t  _createClass(Note, null, [{\n\t    key: 'plotMetrics',\n\t\n\t\n\t    // Debug helper. Displays various note metrics for the given\n\t    // note.\n\t    value: function plotMetrics(ctx, note, yPos) {\n\t      var metrics = note.getMetrics();\n\t      var xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n\t      var xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n\t      var xAbs = note.getAbsoluteX();\n\t      var xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n\t      var xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n\t      var xEnd = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx + metrics.modRightPx;\n\t      var xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\t\n\t      var xWidth = xEnd - xStart;\n\t      ctx.save();\n\t      ctx.setFont('Arial', 8, '');\n\t      ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\t\n\t      var y = yPos + 7;\n\t      function stroke(x1, x2, color) {\n\t        var yy = arguments.length <= 3 || arguments[3] === undefined ? y : arguments[3];\n\t\n\t        ctx.beginPath();\n\t        ctx.setStrokeStyle(color);\n\t        ctx.setFillStyle(color);\n\t        ctx.setLineWidth(3);\n\t        ctx.moveTo(x1 + note.getXShift(), yy);\n\t        ctx.lineTo(x2 + note.getXShift(), yy);\n\t        ctx.stroke();\n\t      }\n\t\n\t      stroke(xStart, xPre1, 'red');\n\t      stroke(xPre1, xAbs, '#999');\n\t      stroke(xAbs, xPost1, 'green');\n\t      stroke(xPost1, xPost2, '#999');\n\t      stroke(xPost2, xEnd, 'red');\n\t      stroke(xEnd, xFreedomRight, '#DD0');\n\t      stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n\t      _vex.Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\t\n\t      var formatterMetrics = note.getFormatterMetrics();\n\t      if (formatterMetrics.iterations > 0) {\n\t        var spaceDeviation = formatterMetrics.space.deviation;\n\t        var prefix = spaceDeviation >= 0 ? '+' : '';\n\t        ctx.setFillStyle('red');\n\t        ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n\t      }\n\t      ctx.restore();\n\t    }\n\t\n\t    // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n\t    // positioning and layout.\n\t    // To create a new note you need to provide a `note_struct`, which consists\n\t    // of the following fields:\n\t    //\n\t    // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n\t    // `dots`: The number of dots, which affects the duration.\n\t    // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n\t    //\n\t    // The range of values for these parameters are available in `src/tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'note';\n\t    }\n\t  }, {\n\t    key: 'STAVEPADDING',\n\t    get: function get() {\n\t      return 12;\n\t    }\n\t  }]);\n\t\n\t  function Note(note_struct) {\n\t    _classCallCheck(this, Note);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Note.__proto__ || Object.getPrototypeOf(Note)).call(this));\n\t\n\t    _this.setAttribute('type', 'Note');\n\t\n\t    if (!note_struct) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n\t    }\n\t\n\t    // Parse `note_struct` and get note properties.\n\t    var initData = _tables.Flow.parseNoteData(note_struct);\n\t    if (!initData) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization object: ' + JSON.stringify(note_struct));\n\t    }\n\t\n\t    // Set note properties from parameters.\n\t    _this.duration = initData.duration;\n\t    _this.dots = initData.dots;\n\t    _this.noteType = initData.type;\n\t\n\t    if (note_struct.duration_override) {\n\t      // Custom duration\n\t      _this.setDuration(note_struct.duration_override);\n\t    } else {\n\t      // Default duration\n\t      _this.setIntrinsicTicks(initData.ticks);\n\t    }\n\t\n\t    _this.modifiers = [];\n\t\n\t    // Get the glyph code for this note from the font.\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (_this.positions && (_typeof(_this.positions) !== 'object' || !_this.positions.length)) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n\t    }\n\t\n\t    // Note to play for audio players.\n\t    _this.playNote = null;\n\t\n\t    // Positioning contexts used by the Formatter.\n\t    _this.tickContext = null; // The current tick context.\n\t    _this.modifierContext = null;\n\t    _this.ignore_ticks = false;\n\t\n\t    // Positioning variables\n\t    _this.width = 0; // Width in pixels calculated after preFormat\n\t    _this.extraLeftPx = 0; // Extra room on left for offset note head\n\t    _this.extraRightPx = 0; // Extra room on right for offset note head\n\t    _this.x_shift = 0; // X shift from tick context X\n\t    _this.left_modPx = 0; // Max width of left modifiers\n\t    _this.right_modPx = 0; // Max width of right modifiers\n\t    _this.voice = null; // The voice that this note is in\n\t    _this.preFormatted = false; // Is this note preFormatted?\n\t    _this.ys = []; // list of y coordinates for each note\n\t    // we need to hold on to these for ties and beams.\n\t\n\t    if (note_struct.align_center) {\n\t      _this.setCenterAlignment(note_struct.align_center);\n\t    }\n\t\n\t    // The render surface.\n\t    _this.stave = null;\n\t    _this.render_options = {\n\t      annotation_spacing: 5,\n\t      stave_padding: Note.STAVEPADDING\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the play note, which is arbitrary data that can be used by an\n\t  // audio player.\n\t\n\t\n\t  _createClass(Note, [{\n\t    key: 'getPlayNote',\n\t    value: function getPlayNote() {\n\t      return this.playNote;\n\t    }\n\t  }, {\n\t    key: 'setPlayNote',\n\t    value: function setPlayNote(note) {\n\t      this.playNote = note;return this;\n\t    }\n\t\n\t    // Don't play notes by default, call them rests. This is also used by things like\n\t    // beams and dots for positioning.\n\t\n\t  }, {\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return false;\n\t    }\n\t\n\t    // TODO(0xfe): Why is this method here?\n\t\n\t  }, {\n\t    key: 'addStroke',\n\t    value: function addStroke(index, stroke) {\n\t      stroke.setNote(this);\n\t      stroke.setIndex(index);\n\t      this.modifiers.push(stroke);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Get and set the target stave.\n\t\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t      this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n\t      this.context = this.stave.context;\n\t      return this;\n\t    }\n\t\n\t    // `Note` is not really a modifier, but is used in\n\t    // a `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Note.CATEGORY;\n\t    }\n\t\n\t    // Set the rendering context for the note.\n\t\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t\n\t    // Get and set spacing to the left and right of the notes.\n\t\n\t  }, {\n\t    key: 'getExtraLeftPx',\n\t    value: function getExtraLeftPx() {\n\t      return this.extraLeftPx;\n\t    }\n\t  }, {\n\t    key: 'getExtraRightPx',\n\t    value: function getExtraRightPx() {\n\t      return this.extraRightPx;\n\t    }\n\t  }, {\n\t    key: 'setExtraLeftPx',\n\t    value: function setExtraLeftPx(x) {\n\t      this.extraLeftPx = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setExtraRightPx',\n\t    value: function setExtraRightPx(x) {\n\t      this.extraRightPx = x;return this;\n\t    }\n\t\n\t    // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n\t\n\t  }, {\n\t    key: 'shouldIgnoreTicks',\n\t    value: function shouldIgnoreTicks() {\n\t      return this.ignore_ticks;\n\t    }\n\t\n\t    // Get the stave line number for the note.\n\t\n\t  }, {\n\t    key: 'getLineNumber',\n\t    value: function getLineNumber() {\n\t      return 0;\n\t    }\n\t\n\t    // Get the stave line number for rest.\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      return 0;\n\t    }\n\t\n\t    // Get the glyph associated with this note.\n\t\n\t  }, {\n\t    key: 'getGlyph',\n\t    value: function getGlyph() {\n\t      return this.glyph;\n\t    }\n\t  }, {\n\t    key: 'getGlyphWidth',\n\t    value: function getGlyphWidth() {\n\t      return this.glyph.getWidth(this.render_options.glyph_font_scale);\n\t    }\n\t\n\t    // Set and get Y positions for this note. Each Y value is associated with\n\t    // an individual pitch/key within the note/chord.\n\t\n\t  }, {\n\t    key: 'setYs',\n\t    value: function setYs(ys) {\n\t      this.ys = ys;return this;\n\t    }\n\t  }, {\n\t    key: 'getYs',\n\t    value: function getYs() {\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n\t      }\n\t\n\t      return this.ys;\n\t    }\n\t\n\t    // Get the Y position of the space above the stave onto which text can\n\t    // be rendered.\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(text_line) {\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', 'No stave attached to this note.');\n\t      }\n\t\n\t      return this.stave.getYForTopText(text_line);\n\t    }\n\t\n\t    // Get a `BoundingBox` for this note.\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return null;\n\t    }\n\t\n\t    // Returns the voice that this note belongs in.\n\t\n\t  }, {\n\t    key: 'getVoice',\n\t    value: function getVoice() {\n\t      if (!this.voice) throw new _vex.Vex.RERR('NoVoice', 'Note has no voice.');\n\t      return this.voice;\n\t    }\n\t\n\t    // Attach this note to `voice`.\n\t\n\t  }, {\n\t    key: 'setVoice',\n\t    value: function setVoice(voice) {\n\t      this.voice = voice;\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Get and set the `TickContext` for this note.\n\t\n\t  }, {\n\t    key: 'getTickContext',\n\t    value: function getTickContext() {\n\t      return this.tickContext;\n\t    }\n\t  }, {\n\t    key: 'setTickContext',\n\t    value: function setTickContext(tc) {\n\t      this.tickContext = tc;\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Accessors for the note type.\n\t\n\t  }, {\n\t    key: 'getDuration',\n\t    value: function getDuration() {\n\t      return this.duration;\n\t    }\n\t  }, {\n\t    key: 'isDotted',\n\t    value: function isDotted() {\n\t      return this.dots > 0;\n\t    }\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'getDots',\n\t    value: function getDots() {\n\t      return this.dots;\n\t    }\n\t  }, {\n\t    key: 'getNoteType',\n\t    value: function getNoteType() {\n\t      return this.noteType;\n\t    }\n\t  }, {\n\t    key: 'setBeam',\n\t    value: function setBeam() {\n\t      return this;\n\t    } // ignore parameters\n\t\n\t    // Attach this note to a modifier context.\n\t\n\t  }, {\n\t    key: 'setModifierContext',\n\t    value: function setModifierContext(mc) {\n\t      this.modifierContext = mc;return this;\n\t    }\n\t\n\t    // Attach a modifier to this note.\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier) {\n\t      var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      modifier.setNote(this);\n\t      modifier.setIndex(index);\n\t      this.modifiers.push(modifier);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Get the coordinates for where modifiers begin.\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX(),\n\t        y: this.ys[0]\n\t      };\n\t    }\n\t\n\t    // Get bounds and metrics for this note.\n\t    //\n\t    // Returns a struct with fields:\n\t    // `width`: The total width of the note (including modifiers.)\n\t    // `noteWidth`: The width of the note head only.\n\t    // `left_shift`: The horizontal displacement of the note.\n\t    // `modLeftPx`: Start `X` for left modifiers.\n\t    // `modRightPx`: Start `X` for right modifiers.\n\t    // `extraLeftPx`: Extra space on left of note.\n\t    // `extraRightPx`: Extra space on right of note.\n\t\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n\t      }\n\t\n\t      var modLeftPx = 0;\n\t      var modRightPx = 0;\n\t      if (this.modifierContext != null) {\n\t        modLeftPx = this.modifierContext.state.left_shift;\n\t        modRightPx = this.modifierContext.state.right_shift;\n\t      }\n\t\n\t      var width = this.getWidth();\n\t      return {\n\t        width: width,\n\t        noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n\t        left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\t\n\t        // Modifiers, accidentals etc.\n\t        modLeftPx: modLeftPx,\n\t        modRightPx: modRightPx,\n\t\n\t        // Displaced note head on left or right.\n\t        extraLeftPx: this.extraLeftPx,\n\t        extraRightPx: this.extraRightPx\n\t      };\n\t    }\n\t\n\t    // Get and set width of note. Used by the formatter for positioning.\n\t\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n\t      }\n\t\n\t      return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n\t    }\n\t\n\t    // Displace note by `x` pixels. Used by the formatter.\n\t\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getXShift',\n\t    value: function getXShift() {\n\t      return this.x_shift;\n\t    }\n\t\n\t    // Get `X` position of this tick context.\n\t\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      if (!this.tickContext) {\n\t        throw new _vex.Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n\t      }\n\t\n\t      return this.tickContext.getX() + this.x_shift;\n\t    }\n\t\n\t    // Get the absolute `X` position of this note's tick context. This\n\t    // excludes x_shift, so you'll need to factor it in if you're\n\t    // looking for the post-formatted x-position.\n\t\n\t  }, {\n\t    key: 'getAbsoluteX',\n\t    value: function getAbsoluteX() {\n\t      if (!this.tickContext) {\n\t        throw new _vex.Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n\t      }\n\t\n\t      // Position note to left edge of tick context.\n\t      var x = this.tickContext.getX();\n\t      if (this.stave) {\n\t        x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n\t      }\n\t\n\t      if (this.isCenterAligned()) {\n\t        x += this.getCenterXShift();\n\t      }\n\t\n\t      return x;\n\t    }\n\t  }, {\n\t    key: 'setPreFormatted',\n\t    value: function setPreFormatted(value) {\n\t      this.preFormatted = value;\n\t\n\t      // Maintain the width of left and right modifiers in pixels.\n\t      if (this.preFormatted) {\n\t        var extra = this.tickContext.getExtraPx();\n\t        this.left_modPx = Math.max(this.left_modPx, extra.left);\n\t        this.right_modPx = Math.max(this.right_modPx, extra.right);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Note;\n\t}(_tickable.Tickable);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tickable = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// The tickable interface. Tickables are things that sit on a score and\n\t// have a duration, i.e., they occupy space in the musical rendering dimension.\n\t\n\tvar Tickable = exports.Tickable = function (_Element) {\n\t  _inherits(Tickable, _Element);\n\t\n\t  function Tickable() {\n\t    _classCallCheck(this, Tickable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tickable.__proto__ || Object.getPrototypeOf(Tickable)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tickable');\n\t\n\t    // These properties represent the duration of\n\t    // this tickable element.\n\t    _this.ticks = new _fraction.Fraction(0, 1);\n\t    _this.intrinsicTicks = 0;\n\t    _this.tickMultiplier = new _fraction.Fraction(1, 1);\n\t\n\t    _this.width = 0;\n\t    _this.x_shift = 0; // Shift from tick context\n\t    _this.voice = null;\n\t    _this.tickContext = null;\n\t    _this.modifierContext = null;\n\t    _this.modifiers = [];\n\t    _this.preFormatted = false;\n\t    _this.postFormatted = false;\n\t    _this.tuplet = null;\n\t    _this.tupletStack = [];\n\t\n\t    _this.align_center = false;\n\t    _this.center_x_shift = 0; // Shift from tick context if center aligned\n\t\n\t    // This flag tells the formatter to ignore this tickable during\n\t    // formatting and justification. It is set by tickables such as BarNote.\n\t    _this.ignore_ticks = false;\n\t\n\t    // This is a space for an external formatting class or function to maintain\n\t    // metrics.\n\t    _this.formatterMetrics = {\n\t      // The freedom of a tickable is the distance it can move without colliding\n\t      // with neighboring elements. A formatter can set these values during its\n\t      // formatting pass, which a different formatter can then use to fine tune.\n\t      freedom: { left: 0, right: 0 },\n\t\n\t      // The simplified rational duration of this tick as a string. It can be\n\t      // used as an index to a map or hashtable.\n\t      duration: '',\n\t\n\t      // The number of formatting iterations undergone.\n\t      iterations: 0,\n\t\n\t      // The space in pixels allocated by this formatter, along with the mean space\n\t      // for tickables of this duration, and the deviation from the mean.\n\t      space: {\n\t        used: 0,\n\t        mean: 0,\n\t        deviation: 0\n\t      }\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tickable, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getTicks',\n\t    value: function getTicks() {\n\t      return this.ticks;\n\t    }\n\t  }, {\n\t    key: 'shouldIgnoreTicks',\n\t    value: function shouldIgnoreTicks() {\n\t      return this.ignore_ticks;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getFormatterMetrics',\n\t    value: function getFormatterMetrics() {\n\t      return this.formatterMetrics;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = x;\n\t    }\n\t  }, {\n\t    key: 'getCenterXShift',\n\t    value: function getCenterXShift() {\n\t      if (this.isCenterAligned()) {\n\t        return this.center_x_shift;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'isCenterAligned',\n\t    value: function isCenterAligned() {\n\t      return this.align_center;\n\t    }\n\t  }, {\n\t    key: 'setCenterAlignment',\n\t    value: function setCenterAlignment(align_center) {\n\t      this.align_center = align_center;\n\t      return this;\n\t    }\n\t\n\t    // Every tickable must be associated with a voice. This allows formatters\n\t    // and preFormatter to associate them with the right modifierContexts.\n\t\n\t  }, {\n\t    key: 'getVoice',\n\t    value: function getVoice() {\n\t      if (!this.voice) throw new _vex.Vex.RERR('NoVoice', 'Tickable has no voice.');\n\t      return this.voice;\n\t    }\n\t  }, {\n\t    key: 'setVoice',\n\t    value: function setVoice(voice) {\n\t      this.voice = voice;\n\t    }\n\t  }, {\n\t    key: 'getTuplet',\n\t    value: function getTuplet() {\n\t      return this.tuplet;\n\t    }\n\t\n\t    /*\n\t     * resetTuplet\n\t     * @param tuplet -- the specific tuplet to reset\n\t     *   if this is not provided, all tuplets are reset.\n\t     * @returns this\n\t     *\n\t     * Removes any prior tuplets from the tick calculation and\n\t     * resets the intrinsic tick value to\n\t     */\n\t\n\t  }, {\n\t    key: 'resetTuplet',\n\t    value: function resetTuplet(tuplet) {\n\t      var noteCount = void 0;\n\t      var notesOccupied = void 0;\n\t      if (tuplet) {\n\t        var i = this.tupletStack.indexOf(tuplet);\n\t        if (i !== -1) {\n\t          this.tupletStack.splice(i, 1);\n\t          noteCount = tuplet.getNoteCount();\n\t          notesOccupied = tuplet.getNotesOccupied();\n\t\n\t          // Revert old multiplier by inverting numerator & denom.:\n\t          this.applyTickMultiplier(noteCount, notesOccupied);\n\t        }\n\t        return this;\n\t      }\n\t\n\t      while (this.tupletStack.length) {\n\t        tuplet = this.tupletStack.pop();\n\t        noteCount = tuplet.getNoteCount();\n\t        notesOccupied = tuplet.getNotesOccupied();\n\t\n\t        // Revert old multiplier by inverting numerator & denom.:\n\t        this.applyTickMultiplier(noteCount, notesOccupied);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setTuplet',\n\t    value: function setTuplet(tuplet) {\n\t      // Attach to new tuplet\n\t\n\t      if (tuplet) {\n\t        this.tupletStack.push(tuplet);\n\t\n\t        var noteCount = tuplet.getNoteCount();\n\t        var notesOccupied = tuplet.getNotesOccupied();\n\t\n\t        this.applyTickMultiplier(notesOccupied, noteCount);\n\t      }\n\t\n\t      this.tuplet = tuplet;\n\t\n\t      return this;\n\t    }\n\t\n\t    /** optional, if tickable has modifiers **/\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mc) {\n\t      this.modifierContext = mc;\n\t      // Add modifiers to modifier context (if any)\n\t      this.preFormatted = false;\n\t    }\n\t\n\t    /** optional, if tickable has modifiers **/\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(mod) {\n\t      this.modifiers.push(mod);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers() {\n\t      return this.modifiers;\n\t    }\n\t  }, {\n\t    key: 'setTickContext',\n\t    value: function setTickContext(tc) {\n\t      this.tickContext = tc;\n\t      this.preFormatted = false;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.width = 0;\n\t      if (this.modifierContext) {\n\t        this.modifierContext.preFormat();\n\t        this.width += this.modifierContext.getWidth();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return this;\n\t      this.postFormatted = true;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getIntrinsicTicks',\n\t    value: function getIntrinsicTicks() {\n\t      return this.intrinsicTicks;\n\t    }\n\t  }, {\n\t    key: 'setIntrinsicTicks',\n\t    value: function setIntrinsicTicks(intrinsicTicks) {\n\t      this.intrinsicTicks = intrinsicTicks;\n\t      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n\t    }\n\t  }, {\n\t    key: 'getTickMultiplier',\n\t    value: function getTickMultiplier() {\n\t      return this.tickMultiplier;\n\t    }\n\t  }, {\n\t    key: 'applyTickMultiplier',\n\t    value: function applyTickMultiplier(numerator, denominator) {\n\t      this.tickMultiplier.multiply(numerator, denominator);\n\t      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n\t    }\n\t  }, {\n\t    key: 'setDuration',\n\t    value: function setDuration(duration) {\n\t      var ticks = duration.numerator * (_tables.Flow.RESOLUTION / duration.denominator);\n\t      this.ticks = this.tickMultiplier.clone().multiply(ticks);\n\t      this.intrinsicTicks = this.ticks.value();\n\t    }\n\t  }]);\n\n\t  return Tickable;\n\t}(_element.Element);\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StemmableNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// `StemmableNote` is an abstract interface for notes with optional stems.\n\t// Examples of stemmable notes are `StaveNote` and `TabNote`\n\t\n\tvar StemmableNote = exports.StemmableNote = function (_Note) {\n\t  _inherits(StemmableNote, _Note);\n\t\n\t  function StemmableNote(note_struct) {\n\t    _classCallCheck(this, StemmableNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StemmableNote.__proto__ || Object.getPrototypeOf(StemmableNote)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'StemmableNote');\n\t\n\t    _this.stem = null;\n\t    _this.stemExtensionOverride = null;\n\t    _this.beam = null;\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the note's `Stem`\n\t\n\t\n\t  _createClass(StemmableNote, [{\n\t    key: 'getStem',\n\t    value: function getStem() {\n\t      return this.stem;\n\t    }\n\t  }, {\n\t    key: 'setStem',\n\t    value: function setStem(stem) {\n\t      this.stem = stem;return this;\n\t    }\n\t\n\t    // Builds and sets a new stem\n\t\n\t  }, {\n\t    key: 'buildStem',\n\t    value: function buildStem() {\n\t      var stem = new _stem.Stem();\n\t      this.setStem(stem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'buildFlag',\n\t    value: function buildFlag() {\n\t      var glyph = this.glyph;\n\t      var beam = this.beam;\n\t\n\t      var shouldRenderFlag = beam === null;\n\t\n\t      if (glyph && glyph.flag && shouldRenderFlag) {\n\t        var flagCode = this.getStemDirection() === _stem.Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n\t\n\t        this.flag = new _glyph.Glyph(flagCode, this.render_options.glyph_font_scale);\n\t      }\n\t    }\n\t\n\t    // Get the full length of stem\n\t\n\t  }, {\n\t    key: 'getStemLength',\n\t    value: function getStemLength() {\n\t      return _stem.Stem.HEIGHT + this.getStemExtension();\n\t    }\n\t\n\t    // Get the number of beams for this duration\n\t\n\t  }, {\n\t    key: 'getBeamCount',\n\t    value: function getBeamCount() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (glyph) {\n\t        return glyph.beam_count;\n\t      } else {\n\t        return 0;\n\t      }\n\t    }\n\t\n\t    // Get the minimum length of stem\n\t\n\t  }, {\n\t    key: 'getStemMinumumLength',\n\t    value: function getStemMinumumLength() {\n\t      var frac = _tables.Flow.durationToFraction(this.duration);\n\t      var length = frac.value() <= 1 ? 0 : 20;\n\t      // if note is flagged, cannot shorten beam\n\t      switch (this.duration) {\n\t        case '8':\n\t          if (this.beam == null) length = 35;\n\t          break;\n\t        case '16':\n\t          length = this.beam == null ? 35 : 25;\n\t          break;\n\t        case '32':\n\t          length = this.beam == null ? 45 : 35;\n\t          break;\n\t        case '64':\n\t          length = this.beam == null ? 50 : 40;\n\t          break;\n\t        case '128':\n\t          length = this.beam == null ? 55 : 45;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      return length;\n\t    }\n\t\n\t    // Get/set the direction of the stem\n\t\n\t  }, {\n\t    key: 'getStemDirection',\n\t    value: function getStemDirection() {\n\t      return this.stem_direction;\n\t    }\n\t  }, {\n\t    key: 'setStemDirection',\n\t    value: function setStemDirection(direction) {\n\t      if (!direction) direction = _stem.Stem.UP;\n\t      if (direction !== _stem.Stem.UP && direction !== _stem.Stem.DOWN) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid stem direction: ' + direction);\n\t      }\n\t\n\t      this.stem_direction = direction;\n\t      if (this.stem) {\n\t        this.stem.setDirection(direction);\n\t        this.stem.setExtension(this.getStemExtension());\n\t      }\n\t\n\t      this.reset();\n\t      if (this.flag) {\n\t        this.buildFlag();\n\t      }\n\t\n\t      this.beam = null;\n\t      if (this.preFormatted) {\n\t        this.preFormat();\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Get the `x` coordinate of the stem\n\t\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      var x_begin = this.getAbsoluteX() + this.x_shift;\n\t      var x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n\t      var stem_x = this.stem_direction === _stem.Stem.DOWN ? x_begin : x_end;\n\t      return stem_x;\n\t    }\n\t\n\t    // Get the `x` coordinate for the center of the glyph.\n\t    // Used for `TabNote` stems and stemlets over rests\n\t\n\t  }, {\n\t    key: 'getCenterGlyphX',\n\t    value: function getCenterGlyphX() {\n\t      return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n\t    }\n\t\n\t    // Get the stem extension for the current duration\n\t\n\t  }, {\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stemExtensionOverride != null) {\n\t        return this.stemExtensionOverride;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.stem_up_extension : glyph.stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t\n\t    // Set the stem length to a specific. Will override the default length.\n\t\n\t  }, {\n\t    key: 'setStemLength',\n\t    value: function setStemLength(height) {\n\t      this.stemExtensionOverride = height - _stem.Stem.HEIGHT;\n\t      return this;\n\t    }\n\t\n\t    // Get the top and bottom `y` values of the stem.\n\t\n\t  }, {\n\t    key: 'getStemExtents',\n\t    value: function getStemExtents() {\n\t      return this.stem.getExtents();\n\t    }\n\t\n\t    // Sets the current note's beam\n\t\n\t  }, {\n\t    key: 'setBeam',\n\t    value: function setBeam(beam) {\n\t      this.beam = beam;return this;\n\t    }\n\t\n\t    // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      if (this.hasStem()) {\n\t        return Math.min(this.stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n\t      } else {\n\t        return this.stave.getYForTopText(textLine);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      if (this.hasStem()) {\n\t        return Math.max(this.stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n\t      } else {\n\t        return this.stave.getYForBottomText(textLine);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag() {\n\t      return _tables.Flow.durationToGlyph(this.duration).flag && !this.beam;\n\t    }\n\t\n\t    // Post format the note\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.beam) this.beam.postFormat();\n\t\n\t      this.postFormatted = true;\n\t\n\t      return this;\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'drawStem',\n\t    value: function drawStem(stem_struct) {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      this.setStem(new _stem.Stem(stem_struct));\n\t      this.stem.setContext(this.context).draw();\n\t    }\n\t  }]);\n\n\t  return StemmableNote;\n\t}(_note.Note);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Modifier = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// `Modifier` is an abstract interface for notational elements that modify\n\t// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n\t//\n\t// For a `Modifier` instance to be positioned correctly, it must be part of\n\t// a `ModifierContext`. All modifiers in the same context are rendered relative to\n\t// one another.\n\t//\n\t// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n\t// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n\t// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n\t// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\t\n\tvar Modifier = exports.Modifier = function (_Element) {\n\t  _inherits(Modifier, _Element);\n\t\n\t  _createClass(Modifier, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'none';\n\t    }\n\t\n\t    // Modifiers can be positioned almost anywhere, relative to a note.\n\t\n\t  }, {\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        RIGHT: 2,\n\t        ABOVE: 3,\n\t        BELOW: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        above: Modifier.Position.ABOVE,\n\t        below: Modifier.Position.BELOW,\n\t        left: Modifier.Position.LEFT,\n\t        right: Modifier.Position.RIGHT\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Modifier() {\n\t    _classCallCheck(this, Modifier);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modifier.__proto__ || Object.getPrototypeOf(Modifier)).call(this));\n\t\n\t    _this.setAttribute('type', 'Modifier');\n\t\n\t    _this.width = 0;\n\t\n\t    // Modifiers are attached to a note and an index. An index is a\n\t    // specific head in a chord.\n\t    _this.note = null;\n\t    _this.index = null;\n\t\n\t    // The `text_line` is reserved space above or below a stave.\n\t    _this.text_line = 0;\n\t    _this.position = Modifier.Position.LEFT;\n\t    _this.modifier_context = null;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.spacingFromNextModifier = 0;\n\t    return _this;\n\t  }\n\t\n\t  // Every modifier has a category. The `ModifierContext` uses this to determine\n\t  // the type and order of the modifiers.\n\t\n\t\n\t  _createClass(Modifier, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Modifier.CATEGORY;\n\t    }\n\t\n\t    // Get and set modifier widths.\n\t\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;return this;\n\t    }\n\t\n\t    // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n\t\n\t  }, {\n\t    key: 'getNote',\n\t    value: function getNote() {\n\t      return this.note;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;return this;\n\t    }\n\t\n\t    // Get and set note index, which is a specific note in a chord.\n\t\n\t  }, {\n\t    key: 'getIndex',\n\t    value: function getIndex() {\n\t      return this.index;\n\t    }\n\t  }, {\n\t    key: 'setIndex',\n\t    value: function setIndex(index) {\n\t      this.index = index;return this;\n\t    }\n\t\n\t    // Every modifier must be part of a `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'getModifierContext',\n\t    value: function getModifierContext() {\n\t      return this.modifier_context;\n\t    }\n\t  }, {\n\t    key: 'setModifierContext',\n\t    value: function setModifierContext(c) {\n\t      this.modifier_context = c;return this;\n\t    }\n\t\n\t    // Get and set articulation position.\n\t\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n\t      return this;\n\t    }\n\t\n\t    // Set the `text_line` for the modifier.\n\t\n\t  }, {\n\t    key: 'setTextLine',\n\t    value: function setTextLine(line) {\n\t      this.text_line = line;return this;\n\t    }\n\t\n\t    // Shift modifier down `y` pixels. Negative values shift up.\n\t\n\t  }, {\n\t    key: 'setYShift',\n\t    value: function setYShift(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setSpacingFromNextModifier',\n\t    value: function setSpacingFromNextModifier(x) {\n\t      this.spacingFromNextModifier = x;\n\t    }\n\t  }, {\n\t    key: 'getSpacingFromNextModifier',\n\t    value: function getSpacingFromNextModifier() {\n\t      return this.spacingFromNextModifier;\n\t    }\n\t\n\t    // Shift modifier `x` pixels in the direction of the modifier. Negative values\n\t    // shift reverse.\n\t\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = 0;\n\t      if (this.position === Modifier.Position.LEFT) {\n\t        this.x_shift -= x;\n\t      } else {\n\t        this.x_shift += x;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getXShift',\n\t    value: function getXShift() {\n\t      return this.x_shift;\n\t    }\n\t\n\t    // Render the modifier onto the canvas.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      throw new _vex.Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n\t    }\n\t  }]);\n\n\t  return Modifier;\n\t}(_element.Element);\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Dot = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// This class implements dot modifiers for notes.\n\t\n\tvar Dot = exports.Dot = function (_Modifier) {\n\t  _inherits(Dot, _Modifier);\n\t\n\t  _createClass(Dot, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange dots inside a ModifierContext.\n\t    value: function format(dots, state) {\n\t      var right_shift = state.right_shift;\n\t      var dot_spacing = 1;\n\t\n\t      if (!dots || dots.length === 0) return false;\n\t\n\t      var dot_list = [];\n\t      for (var i = 0; i < dots.length; ++i) {\n\t        var dot = dots[i];\n\t        var note = dot.getNote();\n\t\n\t        var props = void 0;\n\t        var shift = void 0;\n\t        // Only StaveNote has .getKeyProps()\n\t        if (typeof note.getKeyProps === 'function') {\n\t          props = note.getKeyProps()[dot.getIndex()];\n\t          shift = props.displaced ? note.getExtraRightPx() : 0;\n\t        } else {\n\t          // Else it's a TabNote\n\t          props = { line: 0.5 }; // Shim key props for dot placement\n\t          shift = 0;\n\t        }\n\t\n\t        dot_list.push({ line: props.line, shift: shift, note: note, dot: dot });\n\t      }\n\t\n\t      // Sort dots by line number.\n\t      dot_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      var dot_shift = right_shift;\n\t      var x_width = 0;\n\t      var last_line = null;\n\t      var last_note = null;\n\t      var prev_dotted_space = null;\n\t      var half_shiftY = 0;\n\t\n\t      for (var _i = 0; _i < dot_list.length; ++_i) {\n\t        var _dot_list$_i = dot_list[_i];\n\t        var _dot = _dot_list$_i.dot;\n\t        var _note = _dot_list$_i.note;\n\t        var _shift = _dot_list$_i.shift;\n\t        var line = _dot_list$_i.line;\n\t\n\t        // Reset the position of the dot every line.\n\t\n\t        if (line !== last_line || _note !== last_note) {\n\t          dot_shift = _shift;\n\t        }\n\t\n\t        if (!_note.isRest() && line !== last_line) {\n\t          if (Math.abs(line % 1) === 0.5) {\n\t            // note is on a space, so no dot shift\n\t            half_shiftY = 0;\n\t          } else if (!_note.isRest()) {\n\t            // note is on a line, so shift dot to space above the line\n\t            half_shiftY = 0.5;\n\t            if (last_note != null && !last_note.isRest() && last_line - line === 0.5) {\n\t              // previous note on a space, so shift dot to space below the line\n\t              half_shiftY = -0.5;\n\t            } else if (line + half_shiftY === prev_dotted_space) {\n\t              // previous space is dotted, so shift dot to space below the line\n\t              half_shiftY = -0.5;\n\t            }\n\t          }\n\t        }\n\t\n\t        // convert half_shiftY to a multiplier for dots.draw()\n\t        _dot.dot_shiftY = -half_shiftY;\n\t        prev_dotted_space = line + half_shiftY;\n\t\n\t        _dot.setXShift(dot_shift);\n\t        dot_shift += _dot.getWidth() + dot_spacing; // spacing\n\t        x_width = dot_shift > x_width ? dot_shift : x_width;\n\t        last_line = line;\n\t        last_note = _note;\n\t      }\n\t\n\t      // Update state.\n\t      state.right_shift += x_width;\n\t      return true;\n\t    }\n\t\n\t    /**\r\n\t     * @constructor\r\n\t     */\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'dots';\n\t    }\n\t  }]);\n\t\n\t  function Dot() {\n\t    _classCallCheck(this, Dot);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Dot.__proto__ || Object.getPrototypeOf(Dot)).call(this));\n\t\n\t    _this.setAttribute('type', 'Dot');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.RIGHT;\n\t\n\t    _this.radius = 2;\n\t    _this.setWidth(5);\n\t    _this.dot_shiftY = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Dot, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Dot.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t\n\t      if (this.note.getCategory() === 'gracenotes') {\n\t        this.radius *= 0.50;\n\t        this.setWidth(3);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setDotShiftY',\n\t    value: function setDotShiftY(y) {\n\t      this.dot_shiftY = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.note || this.index === null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n\t      }\n\t\n\t      var lineSpace = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t\n\t      // Set the starting y coordinate to the base of the stem for TabNotes\n\t      if (this.note.getCategory() === 'tabnotes') {\n\t        start.y = this.note.getStemExtents().baseY;\n\t      }\n\t\n\t      var x = start.x + this.x_shift + this.width - this.radius;\n\t      var y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n\t      var ctx = this.context;\n\t\n\t      ctx.beginPath();\n\t      ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n\t      ctx.fill();\n\t    }\n\t  }]);\n\n\t  return Dot;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ModifierContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This class implements various types of modifiers to notes (e.g. bends,\n\t// fingering positions etc.)\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _strokes = __webpack_require__(35);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _ornament = __webpack_require__(38);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (ModifierContext.DEBUG) _vex.Vex.L('Vex.Flow.ModifierContext', args);\n\t}\n\t\n\tvar ModifierContext = exports.ModifierContext = function () {\n\t  function ModifierContext() {\n\t    _classCallCheck(this, ModifierContext);\n\t\n\t    // Current modifiers\n\t    this.modifiers = {};\n\t\n\t    // Formatting data.\n\t    this.preFormatted = false;\n\t    this.postFormatted = false;\n\t    this.width = 0;\n\t    this.spacing = 0;\n\t    this.state = {\n\t      left_shift: 0,\n\t      right_shift: 0,\n\t      text_line: 0,\n\t      top_text_line: 0\n\t    };\n\t\n\t    // Add new modifiers to this array. The ordering is significant -- lower\n\t    // modifiers are formatted and rendered before higher ones.\n\t    this.PREFORMAT = [_stavenote.StaveNote, _dot.Dot, _frethandfinger.FretHandFinger, _accidental.Accidental, _gracenotegroup.GraceNoteGroup, _notesubgroup.NoteSubGroup, _strokes.Stroke, _stringnumber.StringNumber, _articulation.Articulation, _ornament.Ornament, _annotation.Annotation, _bend.Bend, _vibrato.Vibrato];\n\t\n\t    // If post-formatting is required for an element, add it to this array.\n\t    this.POSTFORMAT = [_stavenote.StaveNote];\n\t  }\n\t\n\t  _createClass(ModifierContext, [{\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier) {\n\t      var type = modifier.getCategory();\n\t      if (!this.modifiers[type]) this.modifiers[type] = [];\n\t      this.modifiers[type].push(modifier);\n\t      modifier.setModifierContext(this);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers(type) {\n\t      return this.modifiers[type];\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getExtraLeftPx',\n\t    value: function getExtraLeftPx() {\n\t      return this.state.left_shift;\n\t    }\n\t  }, {\n\t    key: 'getExtraRightPx',\n\t    value: function getExtraRightPx() {\n\t      return this.state.right_shift;\n\t    }\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.formatted) {\n\t        throw new _vex.Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n\t      }\n\t\n\t      return {\n\t        width: this.state.left_shift + this.state.right_shift + this.spacing,\n\t        spacing: this.spacing,\n\t        extra_left_px: this.state.left_shift,\n\t        extra_right_px: this.state.right_shift\n\t      };\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this = this;\n\t\n\t      if (this.preFormatted) return;\n\t      this.PREFORMAT.forEach(function (modifier) {\n\t        L('Preformatting ModifierContext: ', modifier.CATEGORY);\n\t        modifier.format(_this.getModifiers(modifier.CATEGORY), _this.state, _this);\n\t      });\n\t\n\t      // Update width of this modifier context\n\t      this.width = this.state.left_shift + this.state.right_shift;\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      var _this2 = this;\n\t\n\t      if (this.postFormatted) return;\n\t      this.POSTFORMAT.forEach(function (modifier) {\n\t        L('Postformatting ModifierContext: ', modifier.CATEGORY);\n\t        modifier.postFormat(_this2.getModifiers(modifier.CATEGORY), _this2);\n\t      });\n\t    }\n\t  }]);\n\n\t  return ModifierContext;\n\t}();\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FretHandFinger = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t// Author Larry Kuhns 2013\n\t// Class to draws string numbers into the notation.\n\t\n\t/**\r\n\t * @constructor\r\n\t */\n\tvar FretHandFinger = exports.FretHandFinger = function (_Modifier) {\n\t  _inherits(FretHandFinger, _Modifier);\n\t\n\t  _createClass(FretHandFinger, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange fingerings inside a ModifierContext.\n\t    value: function format(nums, state) {\n\t      var left_shift = state.left_shift;\n\t      var right_shift = state.right_shift;\n\t\n\t      var num_spacing = 1;\n\t\n\t      if (!nums || nums.length === 0) return false;\n\t\n\t      var nums_list = [];\n\t      var prev_note = null;\n\t      var shiftLeft = 0;\n\t      var shiftRight = 0;\n\t\n\t      for (var i = 0; i < nums.length; ++i) {\n\t        var num = nums[i];\n\t        var note = num.getNote();\n\t        var pos = num.getPosition();\n\t        var props = note.getKeyProps()[num.getIndex()];\n\t        if (note !== prev_note) {\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            var props_tmp = note.getKeyProps()[n];\n\t            if (left_shift === 0) {\n\t              shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\n\t            }\n\t            if (right_shift === 0) {\n\t              shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\n\t            }\n\t          }\n\t          prev_note = note;\n\t        }\n\t\n\t        nums_list.push({\n\t          note: note,\n\t          num: num,\n\t          pos: pos,\n\t          line: props.line,\n\t          shiftL: shiftLeft,\n\t          shiftR: shiftRight\n\t        });\n\t      }\n\t\n\t      // Sort fingernumbers by line number.\n\t      nums_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      var numShiftL = 0;\n\t      var numShiftR = 0;\n\t      var xWidthL = 0;\n\t      var xWidthR = 0;\n\t      var lastLine = null;\n\t      var lastNote = null;\n\t\n\t      for (var _i = 0; _i < nums_list.length; ++_i) {\n\t        var num_shift = 0;\n\t        var _nums_list$_i = nums_list[_i];\n\t        var _note = _nums_list$_i.note;\n\t        var _pos = _nums_list$_i.pos;\n\t        var _num = _nums_list$_i.num;\n\t        var line = _nums_list$_i.line;\n\t        var shiftL = _nums_list$_i.shiftL;\n\t        var shiftR = _nums_list$_i.shiftR;\n\t\n\t        // Reset the position of the string number every line.\n\t\n\t        if (line !== lastLine || _note !== lastNote) {\n\t          numShiftL = left_shift + shiftL;\n\t          numShiftR = right_shift + shiftR;\n\t        }\n\t\n\t        var numWidth = _num.getWidth() + num_spacing;\n\t        if (_pos === _modifier.Modifier.Position.LEFT) {\n\t          _num.setXShift(left_shift + numShiftL);\n\t          num_shift = left_shift + numWidth; // spacing\n\t          xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n\t        } else if (_pos === _modifier.Modifier.Position.RIGHT) {\n\t          _num.setXShift(numShiftR);\n\t          num_shift = shiftRight + numWidth; // spacing\n\t          xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n\t        }\n\t        lastLine = line;\n\t        lastNote = _note;\n\t      }\n\t\n\t      state.left_shift += xWidthL;\n\t      state.right_shift += xWidthR;\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'frethandfinger';\n\t    }\n\t  }]);\n\t\n\t  function FretHandFinger(number) {\n\t    _classCallCheck(this, FretHandFinger);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FretHandFinger.__proto__ || Object.getPrototypeOf(FretHandFinger)).call(this));\n\t\n\t    _this.setAttribute('type', 'FretHandFinger');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.finger = number;\n\t    _this.width = 7;\n\t    _this.position = _modifier.Modifier.Position.LEFT; // Default position above stem or note head\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.x_offset = 0; // Horizontal offset from default\n\t    _this.y_offset = 0; // Vertical offset from default\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 9,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FretHandFinger, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return FretHandFinger.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setFretHandFinger',\n\t    value: function setFretHandFinger(number) {\n\t      this.finger = number;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetX',\n\t    value: function setOffsetX(x) {\n\t      this.x_offset = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetY',\n\t    value: function setOffsetY(y) {\n\t      this.y_offset = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note || this.index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var dot_x = start.x + this.x_shift + this.x_offset;\n\t      var dot_y = start.y + this.y_shift + this.y_offset + 5;\n\t\n\t      switch (this.position) {\n\t        case _modifier.Modifier.Position.ABOVE:\n\t          dot_x -= 4;\n\t          dot_y -= 12;\n\t          break;\n\t        case _modifier.Modifier.Position.BELOW:\n\t          dot_x -= 2;\n\t          dot_y += 10;\n\t          break;\n\t        case _modifier.Modifier.Position.LEFT:\n\t          dot_x -= this.width;\n\t          break;\n\t        case _modifier.Modifier.Position.RIGHT:\n\t          dot_x += 1;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPostion', 'The position ' + this.position + ' does not exist');\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      ctx.fillText('' + this.finger, dot_x, dot_y);\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return FretHandFinger;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Accidental = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t// @author Greg Ristow (modifications)\n\t//\n\t// ## Description\n\t//\n\t// This file implements accidentals as modifiers that can be attached to\n\t// notes. Support is included for both western and microtonal accidentals.\n\t//\n\t// See `tests/accidental_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Accidental.DEBUG) _vex.Vex.L('Vex.Flow.Accidental', args);\n\t}\n\t\n\tvar getGlyphWidth = function getGlyphWidth(glyph) {\n\t  return glyph.getMetrics().width;\n\t};\n\t\n\t// An `Accidental` inherits from `Modifier`, and is formatted within a\n\t// `ModifierContext`.\n\t\n\tvar Accidental = exports.Accidental = function (_Modifier) {\n\t  _inherits(Accidental, _Modifier);\n\t\n\t  _createClass(Accidental, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange accidentals inside a ModifierContext.\n\t    value: function format(accidentals, state) {\n\t      var _this2 = this;\n\t\n\t      var noteheadAccidentalPadding = 1;\n\t      var leftShift = state.left_shift + noteheadAccidentalPadding;\n\t      var accidentalSpacing = 3;\n\t\n\t      // If there are no accidentals, we needn't format their positions\n\t      if (!accidentals || accidentals.length === 0) return;\n\t\n\t      var accList = [];\n\t      var prevNote = null;\n\t      var shiftL = 0;\n\t\n\t      // First determine the accidentals' Y positions from the note.keys\n\t      var propsTemp = void 0;\n\t      for (var i = 0; i < accidentals.length; ++i) {\n\t        var acc = accidentals[i];\n\t        var note = acc.getNote();\n\t        var stave = note.getStave();\n\t        var props = note.getKeyProps()[acc.getIndex()];\n\t        if (note !== prevNote) {\n\t          // Iterate through all notes to get the displaced pixels\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            propsTemp = note.getKeyProps()[n];\n\t            shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n\t          }\n\t          prevNote = note;\n\t        }\n\t        if (stave !== null) {\n\t          var lineSpace = stave.options.spacing_between_lines_px;\n\t          var y = stave.getYForLine(props.line);\n\t          var accLine = Math.round(y / lineSpace * 2) / 2;\n\t          accList.push({ y: y, line: accLine, shift: shiftL, acc: acc, lineSpace: lineSpace });\n\t        } else {\n\t          accList.push({ line: props.line, shift: shiftL, acc: acc });\n\t        }\n\t      }\n\t\n\t      // Sort accidentals by line number.\n\t      accList.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      // FIXME: Confusing name. Each object in this array has a property called `line`.\n\t      // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n\t      var lineList = [];\n\t\n\t      // amount by which all accidentals must be shifted right or left for\n\t      // stem flipping, notehead shifting concerns.\n\t      var accShift = 0;\n\t      var previousLine = null;\n\t\n\t      // Create an array of unique line numbers (lineList) from accList\n\t      for (var _i = 0; _i < accList.length; _i++) {\n\t        var _acc = accList[_i];\n\t\n\t        // if this is the first line, or a new line, add a lineList\n\t        if (previousLine === null || previousLine !== _acc.line) {\n\t          lineList.push({\n\t            line: _acc.line,\n\t            flatLine: true,\n\t            dblSharpLine: true,\n\t            numAcc: 0,\n\t            width: 0\n\t          });\n\t        }\n\t        // if this accidental is not a flat, the accidental needs 3.0 lines lower\n\t        // clearance instead of 2.5 lines for b or bb.\n\t        // FIXME: Naming could use work. acc.acc is very awkward\n\t        if (_acc.acc.type !== 'b' && _acc.acc.type !== 'bb') {\n\t          lineList[lineList.length - 1].flatLine = false;\n\t        }\n\t\n\t        // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n\t        if (_acc.acc.type !== '##') {\n\t          lineList[lineList.length - 1].dblSharpLine = false;\n\t        }\n\t\n\t        // Track how many accidentals are on this line:\n\t        lineList[lineList.length - 1].numAcc++;\n\t\n\t        // Track the total x_offset needed for this line which will be needed\n\t        // for formatting lines w/ multiple accidentals:\n\t\n\t        // width = accidental width + universal spacing between accidentals\n\t        lineList[lineList.length - 1].width += _acc.acc.getWidth() + accidentalSpacing;\n\t\n\t        // if this accShift is larger, use it to keep first column accidentals in the same line\n\t        accShift = _acc.shift > accShift ? _acc.shift : accShift;\n\t\n\t        previousLine = _acc.line;\n\t      }\n\t\n\t      // ### Place Accidentals in Columns\n\t      //\n\t      // Default to a classic triangular layout (middle accidental farthest left),\n\t      // but follow exceptions as outlined in G. Read's _Music Notation_ and\n\t      // Elaine Gould's _Behind Bars_.\n\t      //\n\t      // Additionally, this implements different vertical collision rules for\n\t      // flats (only need 2.5 lines clearance below) and double sharps (only\n\t      // need 2.5 lines of clearance above or below).\n\t      //\n\t      // Classic layouts and exception patterns are found in the 'tables.js'\n\t      // in 'Vex.Flow.accidentalColumnsTable'\n\t      //\n\t      // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n\t      // using as few columns as possible for the verticle structure.\n\t      //\n\t      // TODO (?): Allow column to be specified for an accidental at run-time?\n\t\n\t      var totalColumns = 0;\n\t\n\t      // establish the boundaries for a group of notes with clashing accidentals:\n\t\n\t      var _loop = function _loop(_i3) {\n\t        var noFurtherConflicts = false;\n\t        var groupStart = _i3;\n\t        var groupEnd = _i3;\n\t\n\t        while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n\t          // if this note conflicts with the next:\n\t          if (_this2.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n\t            // include the next note in the group:\n\t            groupEnd++;\n\t          } else {\n\t            noFurtherConflicts = true;\n\t          }\n\t        }\n\t\n\t        // Gets an a line from the `lineList`, relative to the current group\n\t        var getGroupLine = function getGroupLine(index) {\n\t          return lineList[groupStart + index];\n\t        };\n\t        var getGroupLines = function getGroupLines(indexes) {\n\t          return indexes.map(getGroupLine);\n\t        };\n\t        var lineDifference = function lineDifference(indexA, indexB) {\n\t          var _getGroupLines$map = getGroupLines([indexA, indexB]).map(function (item) {\n\t            return item.line;\n\t          });\n\t\n\t          var _getGroupLines$map2 = _slicedToArray(_getGroupLines$map, 2);\n\t\n\t          var a = _getGroupLines$map2[0];\n\t          var b = _getGroupLines$map2[1];\n\t\n\t          return a - b;\n\t        };\n\t\n\t        var notColliding = function notColliding() {\n\t          for (var _len2 = arguments.length, indexPairs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t            indexPairs[_key2] = arguments[_key2];\n\t          }\n\t\n\t          return indexPairs.map(getGroupLines).every(function (lines) {\n\t            return !_this2.checkCollision.apply(_this2, _toConsumableArray(lines));\n\t          });\n\t        };\n\t\n\t        // Set columns for the lines in this group:\n\t        var groupLength = groupEnd - groupStart + 1;\n\t\n\t        // Set the accidental column for each line of the group\n\t        var endCase = _this2.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\t\n\t        switch (groupLength) {\n\t          case 3:\n\t            if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n\t              endCase = 'second_on_bottom';\n\t            }\n\t            break;\n\t          case 4:\n\t            if (notColliding([0, 2], [1, 3])) {\n\t              endCase = 'spaced_out_tetrachord';\n\t            }\n\t            break;\n\t          case 5:\n\t            if (endCase === 'b' && notColliding([1, 3])) {\n\t              endCase = 'spaced_out_pentachord';\n\t              if (notColliding([0, 2], [2, 4])) {\n\t                endCase = 'very_spaced_out_pentachord';\n\t              }\n\t            }\n\t            break;\n\t          case 6:\n\t            if (notColliding([0, 3], [1, 4], [2, 5])) {\n\t              endCase = 'spaced_out_hexachord';\n\t            }\n\t            if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n\t              endCase = 'very_spaced_out_hexachord';\n\t            }\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t\n\t        var groupMember = void 0;\n\t        var column = void 0;\n\t        // If the group contains more than seven members, use ascending parallel lines\n\t        // of accidentals, using as few columns as possible while avoiding collisions.\n\t        if (groupLength >= 7) {\n\t          // First, determine how many columns to use:\n\t          var patternLength = 2;\n\t          var collisionDetected = true;\n\t          while (collisionDetected === true) {\n\t            collisionDetected = false;\n\t            for (var line = 0; line + patternLength < lineList.length; line++) {\n\t              if (_this2.checkCollision(lineList[line], lineList[line + patternLength])) {\n\t                collisionDetected = true;\n\t                patternLength++;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          // Then, assign a column to each line of accidentals\n\t          for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n\t            column = (groupMember - _i3) % patternLength + 1;\n\t            lineList[groupMember].column = column;\n\t            totalColumns = totalColumns > column ? totalColumns : column;\n\t          }\n\t\n\t          // Otherwise, if the group contains fewer than seven members, use the layouts from\n\t          // the accidentalsColumnsTable housed in tables.js.\n\t        } else {\n\t          for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n\t            column = _tables.Flow.accidentalColumnsTable[groupLength][endCase][groupMember - _i3];\n\t            lineList[groupMember].column = column;\n\t            totalColumns = totalColumns > column ? totalColumns : column;\n\t          }\n\t        }\n\t\n\t        // Increment i to the last note that was set, so that if a lower set of notes\n\t        // does not conflict at all with this group, it can have its own classic shape.\n\t        _i3 = groupEnd;\n\t        _i2 = _i3;\n\t      };\n\t\n\t      for (var _i2 = 0; _i2 < lineList.length; _i2++) {\n\t        _loop(_i2);\n\t      }\n\t\n\t      // ### Convert Columns to x_offsets\n\t      //\n\t      // This keeps columns aligned, even if they have different accidentals within them\n\t      // which sometimes results in a larger x_offset than is an accidental might need\n\t      // to preserve the symmetry of the accidental shape.\n\t      //\n\t      // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n\t      // music with complex chord clusters.\n\t      //\n\t      // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n\t      // parallel columns.\n\t\n\t      // track each column's max width, which will be used as initial shift of later columns:\n\t      var columnWidths = [];\n\t      var columnXOffsets = [];\n\t      for (var _i4 = 0; _i4 <= totalColumns; _i4++) {\n\t        columnWidths[_i4] = 0;\n\t        columnXOffsets[_i4] = 0;\n\t      }\n\t\n\t      columnWidths[0] = accShift + leftShift;\n\t      columnXOffsets[0] = accShift + leftShift;\n\t\n\t      // Fill columnWidths with widest needed x-space;\n\t      // this is what keeps the columns parallel.\n\t      lineList.forEach(function (line) {\n\t        if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n\t      });\n\t\n\t      for (var _i5 = 1; _i5 < columnWidths.length; _i5++) {\n\t        // this column's offset = this column's width + previous column's offset\n\t        columnXOffsets[_i5] = columnWidths[_i5] + columnXOffsets[_i5 - 1];\n\t      }\n\t\n\t      var totalShift = columnXOffsets[columnXOffsets.length - 1];\n\t      // Set the xShift for each accidental according to column offsets:\n\t      var accCount = 0;\n\t      lineList.forEach(function (line) {\n\t        var lineWidth = 0;\n\t        var lastAccOnLine = accCount + line.numAcc;\n\t        // handle all of the accidentals on a given line:\n\t        for (accCount; accCount < lastAccOnLine; accCount++) {\n\t          var xShift = columnXOffsets[line.column - 1] + lineWidth;\n\t          accList[accCount].acc.setXShift(xShift);\n\t          // keep track of the width of accidentals we've added so far, so that when\n\t          // we loop, we add space for them.\n\t          lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n\t          L('Line, accCount, shift: ', line.line, accCount, xShift);\n\t        }\n\t      });\n\t\n\t      // update the overall layout with the full width of the accidental shapes:\n\t      state.left_shift += totalShift;\n\t    }\n\t\n\t    // Helper function to determine whether two lines of accidentals collide vertically\n\t\n\t  }, {\n\t    key: 'checkCollision',\n\t    value: function checkCollision(line1, line2) {\n\t      var clearance = line2.line - line1.line;\n\t      var clearanceRequired = 3;\n\t      // But less clearance is required for certain accidentals: b, bb and ##.\n\t      if (clearance > 0) {\n\t        // then line 2 is on top\n\t        clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n\t        if (line1.dblSharpLine) clearance -= 0.5;\n\t      } else {\n\t        // line 1 is on top\n\t        clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n\t        if (line2.dblSharpLine) clearance -= 0.5;\n\t      }\n\t      var collision = Math.abs(clearance) < clearanceRequired;\n\t      L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n\t      return collision;\n\t    }\n\t\n\t    // Use this method to automatically apply accidentals to a set of `voices`.\n\t    // The accidentals will be remembered between all the voices provided.\n\t    // Optionally, you can also provide an initial `keySignature`.\n\t\n\t  }, {\n\t    key: 'applyAccidentals',\n\t    value: function applyAccidentals(voices, keySignature) {\n\t      var tickPositions = [];\n\t      var tickNoteMap = {};\n\t\n\t      // Sort the tickables in each voice by their tick position in the voice\n\t      voices.forEach(function (voice) {\n\t        var tickPosition = new _fraction.Fraction(0, 1);\n\t        var notes = voice.getTickables();\n\t        notes.forEach(function (note) {\n\t          if (note.shouldIgnoreTicks()) return;\n\t\n\t          var notesAtPosition = tickNoteMap[tickPosition.value()];\n\t\n\t          if (!notesAtPosition) {\n\t            tickPositions.push(tickPosition.value());\n\t            tickNoteMap[tickPosition.value()] = [note];\n\t          } else {\n\t            notesAtPosition.push(note);\n\t          }\n\t\n\t          tickPosition.add(note.getTicks());\n\t        });\n\t      });\n\t\n\t      var music = new _music.Music();\n\t\n\t      // Default key signature is C major\n\t      if (!keySignature) keySignature = 'C';\n\t\n\t      // Get the scale map, which represents the current state of each pitch\n\t      var scaleMap = music.createScaleMap(keySignature);\n\t\n\t      tickPositions.forEach(function (tick) {\n\t        var notes = tickNoteMap[tick];\n\t\n\t        // Array to store all pitches that modified accidental states\n\t        // at this tick position\n\t        var modifiedPitches = [];\n\t\n\t        var processNote = function processNote(note) {\n\t          if (note.isRest() || note.shouldIgnoreTicks()) return;\n\t\n\t          // Go through each key and determine if an accidental should be\n\t          // applied\n\t          note.keys.forEach(function (keyString, keyIndex) {\n\t            var key = music.getNoteParts(keyString.split('/')[0]);\n\t\n\t            // Force a natural for every key without an accidental\n\t            var accidentalString = key.accidental || 'n';\n\t            var pitch = key.root + accidentalString;\n\t\n\t            // Determine if the current pitch has the same accidental\n\t            // as the scale state\n\t            var sameAccidental = scaleMap[key.root] === pitch;\n\t\n\t            // Determine if an identical pitch in the chord already\n\t            // modified the accidental state\n\t            var previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\t\n\t            // Add the accidental to the StaveNote\n\t            if (!sameAccidental || sameAccidental && previouslyModified) {\n\t              // Modify the scale map so that the root pitch has an\n\t              // updated state\n\t              scaleMap[key.root] = pitch;\n\t\n\t              // Create the accidental\n\t              var accidental = new Accidental(accidentalString);\n\t\n\t              // Attach the accidental to the StaveNote\n\t              note.addAccidental(keyIndex, accidental);\n\t\n\t              // Add the pitch to list of pitches that modified accidentals\n\t              modifiedPitches.push(pitch);\n\t            }\n\t          });\n\t\n\t          // process grace notes\n\t          note.getModifiers().forEach(function (modifier) {\n\t            if (modifier.getCategory() === 'gracenotegroups') {\n\t              modifier.getGraceNotes().forEach(processNote);\n\t            }\n\t          });\n\t        };\n\t\n\t        notes.forEach(processNote);\n\t      });\n\t    }\n\t\n\t    // Create accidental. `type` can be a value from the\n\t    // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n\t    // example: `#`, `##`, `b`, `n`, etc.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'accidentals';\n\t    }\n\t  }]);\n\t\n\t  function Accidental() {\n\t    var type = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t    _classCallCheck(this, Accidental);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Accidental.__proto__ || Object.getPrototypeOf(Accidental)).call(this));\n\t\n\t    _this.setAttribute('type', 'Accidental');\n\t\n\t    L('New accidental: ', type);\n\t\n\t    _this.note = null;\n\t    // The `index` points to a specific note in a chord.\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t\n\t    _this.render_options = {\n\t      // Font size for glyphs\n\t      font_scale: 38,\n\t\n\t      // Length of stroke across heads above or below the stave.\n\t      stroke_px: 3,\n\t\n\t      // Padding between accidental and parentheses on each side\n\t      parenLeftPadding: 2,\n\t      parenRightPadding: 2\n\t    };\n\t\n\t    _this.accidental = _tables.Flow.accidentalCodes(_this.type);\n\t    if (!_this.accidental) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Unknown accidental type: ' + type);\n\t    }\n\t\n\t    // Cautionary accidentals have parentheses around them\n\t    _this.cautionary = false;\n\t    _this.parenLeft = null;\n\t    _this.parenRight = null;\n\t\n\t    _this.reset();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Accidental, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var fontScale = this.render_options.font_scale;\n\t      this.glyph = new _glyph.Glyph(this.accidental.code, fontScale);\n\t      this.glyph.setOriginX(1.0);\n\t\n\t      if (this.cautionary) {\n\t        this.parenLeft = new _glyph.Glyph(_tables.Flow.accidentalCodes('{').code, fontScale);\n\t        this.parenRight = new _glyph.Glyph(_tables.Flow.accidentalCodes('}').code, fontScale);\n\t        this.parenLeft.setOriginX(1.0);\n\t        this.parenRight.setOriginX(1.0);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Accidental.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      var parenWidth = this.cautionary ? getGlyphWidth(this.parenLeft) + getGlyphWidth(this.parenRight) + this.render_options.parenLeftPadding + this.render_options.parenRightPadding : 0;\n\t\n\t      return getGlyphWidth(this.glyph) + parenWidth;\n\t    }\n\t\n\t    // Attach this accidental to `note`, which must be a `StaveNote`.\n\t\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      if (!note) {\n\t        throw new _vex.Vex.RERR('ArgumentError', 'Bad note value: ' + note);\n\t      }\n\t\n\t      this.note = note;\n\t\n\t      // Accidentals attached to grace notes are rendered smaller.\n\t      if (this.note.getCategory() === 'gracenotes') {\n\t        this.render_options.font_scale = 25;\n\t        this.reset();\n\t      }\n\t    }\n\t\n\t    // If called, draws parenthesis around accidental.\n\t\n\t  }, {\n\t    key: 'setAsCautionary',\n\t    value: function setAsCautionary() {\n\t      this.cautionary = true;\n\t      this.render_options.font_scale = 28;\n\t      this.reset();\n\t      return this;\n\t    }\n\t\n\t    // Render accidental onto canvas.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var context = this.context;\n\t      var type = this.type;\n\t      var position = this.position;\n\t      var note = this.note;\n\t      var index = this.index;\n\t      var cautionary = this.cautionary;\n\t      var x_shift = this.x_shift;\n\t      var y_shift = this.y_shift;\n\t      var glyph = this.glyph;\n\t      var parenLeft = this.parenLeft;\n\t      var parenRight = this.parenRight;\n\t      var _render_options = this.render_options;\n\t      var parenLeftPadding = _render_options.parenLeftPadding;\n\t      var parenRightPadding = _render_options.parenRightPadding;\n\t\n\t\n\t      this.checkContext();\n\t\n\t      if (!(note && index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n\t      }\n\t\n\t      // Figure out the start `x` and `y` coordinates for note and index.\n\t      var start = note.getModifierStartXY(position, index);\n\t      var accX = start.x + x_shift;\n\t      var accY = start.y + y_shift;\n\t      L('Rendering: ', type, accX, accY);\n\t\n\t      if (!cautionary) {\n\t        glyph.render(context, accX, accY);\n\t      } else {\n\t        // Render the accidental in parentheses.\n\t        parenRight.render(context, accX, accY);\n\t        accX -= getGlyphWidth(parenRight);\n\t        accX -= parenRightPadding;\n\t        accX -= this.accidental.parenRightPaddingAdjustment;\n\t        glyph.render(context, accX, accY);\n\t        accX -= getGlyphWidth(glyph);\n\t        accX -= parenLeftPadding;\n\t        parenLeft.render(context, accX, accY);\n\t      }\n\t\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return Accidental;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Music = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements some standard music theory routines.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Music = exports.Music = function () {\n\t  function Music() {\n\t    _classCallCheck(this, Music);\n\t  }\n\t\n\t  _createClass(Music, [{\n\t    key: 'isValidNoteValue',\n\t    value: function isValidNoteValue(note) {\n\t      if (note == null || note < 0 || note >= Music.NUM_TONES) {\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'isValidIntervalValue',\n\t    value: function isValidIntervalValue(interval) {\n\t      return this.isValidNoteValue(interval);\n\t    }\n\t  }, {\n\t    key: 'getNoteParts',\n\t    value: function getNoteParts(noteString) {\n\t      if (!noteString || noteString.length < 1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      if (noteString.length > 3) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      var note = noteString.toLowerCase();\n\t\n\t      var regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n\t      var match = regex.exec(note);\n\t\n\t      if (match != null) {\n\t        var root = match[1];\n\t        var accidental = match[2];\n\t\n\t        return {\n\t          root: root,\n\t          accidental: accidental\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getKeyParts',\n\t    value: function getKeyParts(keyString) {\n\t      if (!keyString || keyString.length < 1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n\t      }\n\t\n\t      var key = keyString.toLowerCase();\n\t\n\t      // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n\t      var regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n\t      var match = regex.exec(key);\n\t\n\t      if (match != null) {\n\t        var root = match[1];\n\t        var accidental = match[2];\n\t        var type = match[3];\n\t\n\t        // Unspecified type implies major\n\t        if (!type) type = 'M';\n\t\n\t        return {\n\t          root: root,\n\t          accidental: accidental,\n\t          type: type\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getNoteValue',\n\t    value: function getNoteValue(noteString) {\n\t      var value = Music.noteValues[noteString];\n\t      if (value == null) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      return value.int_val;\n\t    }\n\t  }, {\n\t    key: 'getIntervalValue',\n\t    value: function getIntervalValue(intervalString) {\n\t      var value = Music.intervals[intervalString];\n\t      if (value == null) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n\t      }\n\t\n\t      return value;\n\t    }\n\t  }, {\n\t    key: 'getCanonicalNoteName',\n\t    value: function getCanonicalNoteName(noteValue) {\n\t      if (!this.isValidNoteValue(noteValue)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note value: ' + noteValue);\n\t      }\n\t\n\t      return Music.canonical_notes[noteValue];\n\t    }\n\t  }, {\n\t    key: 'getCanonicalIntervalName',\n\t    value: function getCanonicalIntervalName(intervalValue) {\n\t      if (!this.isValidIntervalValue(intervalValue)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid interval value: ' + intervalValue);\n\t      }\n\t\n\t      return Music.diatonic_intervals[intervalValue];\n\t    }\n\t\n\t    /* Given a note, interval, and interval direction, product the\n\t     * relative note.\n\t     */\n\t\n\t  }, {\n\t    key: 'getRelativeNoteValue',\n\t    value: function getRelativeNoteValue(noteValue, intervalValue, direction) {\n\t      if (direction == null) direction = 1;\n\t\n\t      if (direction !== 1 && direction !== -1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid direction: ' + direction);\n\t      }\n\t\n\t      var sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n\t      if (sum < 0) sum += Music.NUM_TONES;\n\t\n\t      return sum;\n\t    }\n\t  }, {\n\t    key: 'getRelativeNoteName',\n\t    value: function getRelativeNoteName(root, noteValue) {\n\t      var parts = this.getNoteParts(root);\n\t      var rootValue = this.getNoteValue(parts.root);\n\t      var interval = noteValue - rootValue;\n\t\n\t      if (Math.abs(interval) > Music.NUM_TONES - 3) {\n\t        var multiplier = 1;\n\t        if (interval > 0) multiplier = -1;\n\t\n\t        // Possibly wrap around. (Add +1 for modulo operator)\n\t        var reverse_interval = (noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES * multiplier;\n\t\n\t        if (Math.abs(reverse_interval) > 2) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue + ')');\n\t        } else {\n\t          interval = reverse_interval;\n\t        }\n\t      }\n\t\n\t      if (Math.abs(interval) > 2) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue + ')');\n\t      }\n\t\n\t      var relativeNoteName = parts.root;\n\t      if (interval > 0) {\n\t        for (var i = 1; i <= interval; ++i) {\n\t          relativeNoteName += '#';\n\t        }\n\t      } else if (interval < 0) {\n\t        for (var _i = -1; _i >= interval; --_i) {\n\t          relativeNoteName += 'b';\n\t        }\n\t      }\n\t\n\t      return relativeNoteName;\n\t    }\n\t\n\t    /* Return scale tones, given intervals. Each successive interval is\n\t     * relative to the previous one, e.g., Major Scale:\n\t     *\n\t     *   TTSTTTS = [2,2,1,2,2,2,1]\n\t     *\n\t     * When used with key = 0, returns C scale (which is isomorphic to\n\t     * interval list).\n\t     */\n\t\n\t  }, {\n\t    key: 'getScaleTones',\n\t    value: function getScaleTones(key, intervals) {\n\t      var tones = [key];\n\t\n\t      var nextNote = key;\n\t      for (var i = 0; i < intervals.length; i += 1) {\n\t        nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n\t        if (nextNote !== key) tones.push(nextNote);\n\t      }\n\t\n\t      return tones;\n\t    }\n\t\n\t    /* Returns the interval of a note, given a diatonic scale.\n\t     *\n\t     * E.g., Given the scale C, and the note E, returns M3\n\t     */\n\t\n\t  }, {\n\t    key: 'getIntervalBetween',\n\t    value: function getIntervalBetween(note1, note2, direction) {\n\t      if (direction == null) direction = 1;\n\t\n\t      if (direction !== 1 && direction !== -1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid direction: ' + direction);\n\t      }\n\t\n\t      if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid notes: ' + note1 + ', ' + note2);\n\t      }\n\t\n\t      var difference = direction === 1 ? note2 - note1 : note1 - note2;\n\t\n\t      if (difference < 0) difference += Music.NUM_TONES;\n\t\n\t      return difference;\n\t    }\n\t\n\t    // Create a scale map that represents the pitch state for a\n\t    // `keySignature`. For example, passing a `G` to `keySignature` would\n\t    // return a scale map with every note naturalized except for `F` which\n\t    // has an `F#` state.\n\t\n\t  }, {\n\t    key: 'createScaleMap',\n\t    value: function createScaleMap(keySignature) {\n\t      var keySigParts = this.getKeyParts(keySignature);\n\t      var scaleName = Music.scaleTypes[keySigParts.type];\n\t\n\t      var keySigString = keySigParts.root;\n\t      if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\t\n\t      if (!scaleName) throw new _vex.Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\t\n\t      var scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n\t      var noteLocation = Music.root_indices[keySigParts.root];\n\t\n\t      var scaleMap = {};\n\t      for (var i = 0; i < Music.roots.length; ++i) {\n\t        var index = (noteLocation + i) % Music.roots.length;\n\t        var rootName = Music.roots[index];\n\t        var noteName = this.getRelativeNoteName(rootName, scale[i]);\n\t\n\t        if (noteName.length === 1) {\n\t          noteName += 'n';\n\t        }\n\t\n\t        scaleMap[rootName] = noteName;\n\t      }\n\t\n\t      return scaleMap;\n\t    }\n\t  }], [{\n\t    key: 'NUM_TONES',\n\t    get: function get() {\n\t      return 12;\n\t    }\n\t  }, {\n\t    key: 'roots',\n\t    get: function get() {\n\t      return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n\t    }\n\t  }, {\n\t    key: 'root_values',\n\t    get: function get() {\n\t      return [0, 2, 4, 5, 7, 9, 11];\n\t    }\n\t  }, {\n\t    key: 'root_indices',\n\t    get: function get() {\n\t      return {\n\t        'c': 0,\n\t        'd': 1,\n\t        'e': 2,\n\t        'f': 3,\n\t        'g': 4,\n\t        'a': 5,\n\t        'b': 6\n\t      };\n\t    }\n\t  }, {\n\t    key: 'canonical_notes',\n\t    get: function get() {\n\t      return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n\t    }\n\t  }, {\n\t    key: 'diatonic_intervals',\n\t    get: function get() {\n\t      return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n\t    }\n\t  }, {\n\t    key: 'diatonic_accidentals',\n\t    get: function get() {\n\t      return {\n\t        'unison': { note: 0, accidental: 0 },\n\t        'm2': { note: 1, accidental: -1 },\n\t        'M2': { note: 1, accidental: 0 },\n\t        'm3': { note: 2, accidental: -1 },\n\t        'M3': { note: 2, accidental: 0 },\n\t        'p4': { note: 3, accidental: 0 },\n\t        'dim5': { note: 4, accidental: -1 },\n\t        'p5': { note: 4, accidental: 0 },\n\t        'm6': { note: 5, accidental: -1 },\n\t        'M6': { note: 5, accidental: 0 },\n\t        'b7': { note: 6, accidental: -1 },\n\t        'M7': { note: 6, accidental: 0 },\n\t        'octave': { note: 7, accidental: 0 }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'intervals',\n\t    get: function get() {\n\t      return {\n\t        'u': 0, 'unison': 0,\n\t        'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n\t        '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n\t        'm3': 3, 'b3': 3, 'min3': 3,\n\t        'M3': 4, '3': 4, 'maj3': 4,\n\t        '4': 5, 'p4': 5,\n\t        '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n\t        '5': 7, 'p5': 7,\n\t        '#5': 8, 'b6': 8, 'aug5': 8,\n\t        '6': 9, 'M6': 9, 'maj6': 9,\n\t        'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n\t        'M7': 11, 'maj7': 11,\n\t        '8': 12, 'octave': 12\n\t      };\n\t    }\n\t  }, {\n\t    key: 'scales',\n\t    get: function get() {\n\t      return {\n\t        major: [2, 2, 1, 2, 2, 2, 1],\n\t        dorian: [2, 1, 2, 2, 2, 1, 2],\n\t        mixolydian: [2, 2, 1, 2, 2, 1, 2],\n\t        minor: [2, 1, 2, 2, 1, 2, 2]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'scaleTypes',\n\t    get: function get() {\n\t      return {\n\t        'M': Music.scales.major,\n\t        'm': Music.scales.minor\n\t      };\n\t    }\n\t  }, {\n\t    key: 'accidentals',\n\t    get: function get() {\n\t      return ['bb', 'b', 'n', '#', '##'];\n\t    }\n\t  }, {\n\t    key: 'noteValues',\n\t    get: function get() {\n\t      return {\n\t        'c': { root_index: 0, int_val: 0 },\n\t        'cn': { root_index: 0, int_val: 0 },\n\t        'c#': { root_index: 0, int_val: 1 },\n\t        'c##': { root_index: 0, int_val: 2 },\n\t        'cb': { root_index: 0, int_val: 11 },\n\t        'cbb': { root_index: 0, int_val: 10 },\n\t        'd': { root_index: 1, int_val: 2 },\n\t        'dn': { root_index: 1, int_val: 2 },\n\t        'd#': { root_index: 1, int_val: 3 },\n\t        'd##': { root_index: 1, int_val: 4 },\n\t        'db': { root_index: 1, int_val: 1 },\n\t        'dbb': { root_index: 1, int_val: 0 },\n\t        'e': { root_index: 2, int_val: 4 },\n\t        'en': { root_index: 2, int_val: 4 },\n\t        'e#': { root_index: 2, int_val: 5 },\n\t        'e##': { root_index: 2, int_val: 6 },\n\t        'eb': { root_index: 2, int_val: 3 },\n\t        'ebb': { root_index: 2, int_val: 2 },\n\t        'f': { root_index: 3, int_val: 5 },\n\t        'fn': { root_index: 3, int_val: 5 },\n\t        'f#': { root_index: 3, int_val: 6 },\n\t        'f##': { root_index: 3, int_val: 7 },\n\t        'fb': { root_index: 3, int_val: 4 },\n\t        'fbb': { root_index: 3, int_val: 3 },\n\t        'g': { root_index: 4, int_val: 7 },\n\t        'gn': { root_index: 4, int_val: 7 },\n\t        'g#': { root_index: 4, int_val: 8 },\n\t        'g##': { root_index: 4, int_val: 9 },\n\t        'gb': { root_index: 4, int_val: 6 },\n\t        'gbb': { root_index: 4, int_val: 5 },\n\t        'a': { root_index: 5, int_val: 9 },\n\t        'an': { root_index: 5, int_val: 9 },\n\t        'a#': { root_index: 5, int_val: 10 },\n\t        'a##': { root_index: 5, int_val: 11 },\n\t        'ab': { root_index: 5, int_val: 8 },\n\t        'abb': { root_index: 5, int_val: 7 },\n\t        'b': { root_index: 6, int_val: 11 },\n\t        'bn': { root_index: 6, int_val: 11 },\n\t        'b#': { root_index: 6, int_val: 0 },\n\t        'b##': { root_index: 6, int_val: 1 },\n\t        'bb': { root_index: 6, int_val: 10 },\n\t        'bbb': { root_index: 6, int_val: 9 }\n\t      };\n\t    }\n\t  }]);\n\n\t  return Music;\n\t}();\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NoteSubGroup = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2016\n\t//\n\t// ## Description\n\t//\n\t// This file implements `NoteSubGroup` which is used to format and\n\t// render notes as a `Modifier`\n\t// ex) ClefNote, TimeSigNote and BarNote.\n\t\n\tvar NoteSubGroup = exports.NoteSubGroup = function (_Modifier) {\n\t  _inherits(NoteSubGroup, _Modifier);\n\t\n\t  _createClass(NoteSubGroup, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange groups inside a `ModifierContext`\n\t    value: function format(groups, state) {\n\t      if (!groups || groups.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < groups.length; ++i) {\n\t        var group = groups[i];\n\t        group.preFormat();\n\t        width += group.getWidth();\n\t      }\n\t\n\t      state.left_shift += width;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'notesubgroup';\n\t    }\n\t  }]);\n\t\n\t  function NoteSubGroup(subNotes) {\n\t    var _ret;\n\t\n\t    _classCallCheck(this, NoteSubGroup);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NoteSubGroup.__proto__ || Object.getPrototypeOf(NoteSubGroup)).call(this));\n\t\n\t    _this.setAttribute('type', 'NoteSubGroup');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t    _this.subNotes = subNotes;\n\t    _this.subNotes.forEach(function (subNote) {\n\t      subNote.ignore_ticks = false;\n\t    });\n\t    _this.width = 0;\n\t    _this.preFormatted = false;\n\t\n\t    _this.formatter = new _formatter.Formatter();\n\t    _this.voice = new _voice.Voice({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }).setStrict(false);\n\t\n\t    _this.voice.addTickables(_this.subNotes);\n\t\n\t    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(NoteSubGroup, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return NoteSubGroup.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n\t      this.setWidth(this.formatter.getMinTotalWidth());\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t\n\t      var note = this.getNote();\n\t\n\t      if (!(note && this.index !== null)) {\n\t        throw new _vex.Vex.RuntimeError('NoAttachedNote', \"Can't draw notes without a parent note and parent note index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var alignSubNotesWithNote = function alignSubNotesWithNote(subNotes, note) {\n\t        // Shift over the tick contexts of each note\n\t        var tickContext = note.getTickContext();\n\t        var extraPx = tickContext.getExtraPx();\n\t        var x = tickContext.getX() - extraPx.left - extraPx.extraLeft + _this2.getSpacingFromNextModifier();\n\t\n\t        subNotes.forEach(function (subNote) {\n\t          var tick_context = subNote.getTickContext();\n\t          var x_offset = tick_context.getX();\n\t          subNote.setStave(note.stave);\n\t          tick_context.setX(x + x_offset);\n\t        });\n\t      };\n\t\n\t      alignSubNotesWithNote(this.subNotes, note, this.width);\n\t\n\t      // Draw notes\n\t      this.subNotes.forEach(function (subNote) {\n\t        return subNote.setContext(_this2.context).draw();\n\t      });\n\t    }\n\t  }]);\n\n\t  return NoteSubGroup;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceNoteGroup = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `GraceNoteGroup` which is used to format and\n\t// render grace notes.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (GraceNoteGroup.DEBUG) _vex.Vex.L('Vex.Flow.GraceNoteGroup', args);\n\t}\n\t\n\tvar GraceNoteGroup = exports.GraceNoteGroup = function (_Modifier) {\n\t  _inherits(GraceNoteGroup, _Modifier);\n\t\n\t  _createClass(GraceNoteGroup, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange groups inside a `ModifierContext`\n\t    value: function format(gracenote_groups, state) {\n\t      var group_spacing_stave = 4;\n\t      var group_spacing_tab = 0;\n\t\n\t      if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\t\n\t      var group_list = [];\n\t      var prev_note = null;\n\t      var shiftL = 0;\n\t\n\t      for (var i = 0; i < gracenote_groups.length; ++i) {\n\t        var gracenote_group = gracenote_groups[i];\n\t        var note = gracenote_group.getNote();\n\t        var is_stavenote = note.getCategory() === _stavenote.StaveNote.CATEGORY;\n\t        var spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n\t\n\t        if (is_stavenote && note !== prev_note) {\n\t          // Iterate through all notes to get the displaced pixels\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            var props_tmp = note.getKeyProps()[n];\n\t            shiftL = props_tmp.displaced ? note.getExtraLeftPx() : shiftL;\n\t          }\n\t          prev_note = note;\n\t        }\n\t\n\t        group_list.push({ shift: shiftL, gracenote_group: gracenote_group, spacing: spacing });\n\t      }\n\t\n\t      // If first note left shift in case it is displaced\n\t      var group_shift = group_list[0].shift;\n\t      var formatWidth = void 0;\n\t      for (var _i = 0; _i < group_list.length; ++_i) {\n\t        var _gracenote_group = group_list[_i].gracenote_group;\n\t        _gracenote_group.preFormat();\n\t        formatWidth = _gracenote_group.getWidth() + group_list[_i].spacing;\n\t        group_shift = Math.max(formatWidth, group_shift);\n\t      }\n\t\n\t      for (var _i2 = 0; _i2 < group_list.length; ++_i2) {\n\t        var _gracenote_group2 = group_list[_i2].gracenote_group;\n\t        formatWidth = _gracenote_group2.getWidth() + group_list[_i2].spacing;\n\t        _gracenote_group2.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n\t      }\n\t\n\t      state.left_shift += group_shift;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t    //\n\t    // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n\t    // `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracenotegroups';\n\t    }\n\t  }]);\n\t\n\t  function GraceNoteGroup(grace_notes, show_slur) {\n\t    var _ret;\n\t\n\t    _classCallCheck(this, GraceNoteGroup);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceNoteGroup.__proto__ || Object.getPrototypeOf(GraceNoteGroup)).call(this));\n\t\n\t    _this.setAttribute('type', 'GraceNoteGroup');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t    _this.grace_notes = grace_notes;\n\t    _this.width = 0;\n\t\n\t    _this.preFormatted = false;\n\t\n\t    _this.show_slur = show_slur;\n\t    _this.slur = null;\n\t\n\t    _this.formatter = new _formatter.Formatter();\n\t    _this.voice = new _voice.Voice({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }).setStrict(false);\n\t\n\t    _this.render_options = {\n\t      slur_y_shift: 0\n\t    };\n\t\n\t    _this.voice.addTickables(_this.grace_notes);\n\t\n\t    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(GraceNoteGroup, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceNoteGroup.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n\t      this.setWidth(this.formatter.getMinTotalWidth());\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'beamNotes',\n\t    value: function beamNotes() {\n\t      if (this.grace_notes.length > 1) {\n\t        var beam = new _beam.Beam(this.grace_notes);\n\t\n\t        beam.render_options.beam_width = 3;\n\t        beam.render_options.partial_beam_length = 4;\n\t\n\t        this.beam = beam;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getGraceNotes',\n\t    value: function getGraceNotes() {\n\t      return this.grace_notes;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t\n\t      var note = this.getNote();\n\t\n\t      L('Drawing grace note group for:', note);\n\t\n\t      if (!(note && this.index !== null)) {\n\t        throw new _vex.Vex.RuntimeError('NoAttachedNote', \"Can't draw grace note without a parent note and parent note index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var that = this;\n\t      function alignGraceNotesWithNote(grace_notes, note) {\n\t        // Shift over the tick contexts of each note\n\t        // So that th aligned with the note\n\t        var tickContext = note.getTickContext();\n\t        var extraPx = tickContext.getExtraPx();\n\t        var x = tickContext.getX() - extraPx.left - extraPx.extraLeft + that.getSpacingFromNextModifier();\n\t\n\t        grace_notes.forEach(function (graceNote) {\n\t          var tick_context = graceNote.getTickContext();\n\t          var x_offset = tick_context.getX();\n\t          graceNote.setStave(note.stave);\n\t          tick_context.setX(x + x_offset);\n\t        });\n\t      }\n\t\n\t      alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\t\n\t      // Draw notes\n\t      this.grace_notes.forEach(function (graceNote) {\n\t        graceNote.setContext(_this2.context).draw();\n\t      });\n\t\n\t      // Draw beam\n\t      if (this.beam) {\n\t        this.beam.setContext(this.context).draw();\n\t      }\n\t\n\t      if (this.show_slur) {\n\t        // Create and draw slur\n\t        var is_stavenote = this.getNote().getCategory() === _stavenote.StaveNote.CATEGORY;\n\t        var TieClass = is_stavenote ? _stavetie.StaveTie : _tabtie.TabTie;\n\t\n\t        this.slur = new TieClass({\n\t          last_note: this.grace_notes[0],\n\t          first_note: note,\n\t          first_indices: [0],\n\t          last_indices: [0]\n\t        });\n\t\n\t        this.slur.render_options.cp2 = 12;\n\t        this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n\t        this.slur.setContext(this.context).draw();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GraceNoteGroup;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveTie = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar StaveTie = exports.StaveTie = function (_Element) {\n\t  _inherits(StaveTie, _Element);\n\t\n\t  function StaveTie(notes, text) {\n\t    _classCallCheck(this, StaveTie);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveTie.__proto__ || Object.getPrototypeOf(StaveTie)).call(this));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'StaveTie');\n\t    _this.notes = notes;\n\t    _this.context = null;\n\t    _this.text = text;\n\t    _this.direction = null;\n\t\n\t    _this.render_options = {\n\t      cp1: 8, // Curve control point 1\n\t      cp2: 12, // Curve control point 2\n\t      text_shift_x: 0,\n\t      first_x_shift: 0,\n\t      last_x_shift: 0,\n\t      y_shift: 7,\n\t      tie_spacing: 0,\n\t      font: { family: 'Arial', size: 10, style: '' }\n\t    };\n\t\n\t    _this.font = _this.render_options.font;\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveTie, [{\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t  }, {\n\t    key: 'setDirection',\n\t    value: function setDirection(direction) {\n\t      this.direction = direction;return this;\n\t    }\n\t\n\t    /**\n\t     * Set the notes to attach this tie to.\n\t     *\n\t     * @param {!Object} notes The notes to tie up.\n\t     */\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      if (!notes.first_indices) notes.first_indices = [0];\n\t      if (!notes.last_indices) notes.last_indices = [0];\n\t\n\t      if (notes.first_indices.length !== notes.last_indices.length) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.first_indices = notes.first_indices;\n\t      this.last_note = notes.last_note;\n\t      this.last_indices = notes.last_indices;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @return {boolean} Returns true if this is a partial bar.\n\t     */\n\t\n\t  }, {\n\t    key: 'isPartial',\n\t    value: function isPartial() {\n\t      return !this.first_note || !this.last_note;\n\t    }\n\t  }, {\n\t    key: 'renderTie',\n\t    value: function renderTie(params) {\n\t      if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'No Y-values to render');\n\t      }\n\t\n\t      var ctx = this.context;\n\t      var cp1 = this.render_options.cp1;\n\t      var cp2 = this.render_options.cp2;\n\t\n\t      if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n\t        cp1 = 2;cp2 = 8;\n\t      }\n\t\n\t      var first_x_shift = this.render_options.first_x_shift;\n\t      var last_x_shift = this.render_options.last_x_shift;\n\t      var y_shift = this.render_options.y_shift * params.direction;\n\t\n\t      for (var i = 0; i < this.first_indices.length; ++i) {\n\t        var cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n\t        var first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n\t        var last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\t\n\t        if (isNaN(first_y_px) || isNaN(last_y_px)) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n\t        }\n\t\n\t        var top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n\t        var bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n\t        ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n\t        ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n\t        ctx.closePath();\n\t        ctx.fill();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderText',\n\t    value: function renderText(first_x_px, last_x_px) {\n\t      if (!this.text) return;\n\t      var center_x = (first_x_px + last_x_px) / 2;\n\t      center_x -= this.context.measureText(this.text).width / 2;\n\t\n\t      this.context.save();\n\t      this.context.setFont(this.font.family, this.font.size, this.font.style);\n\t      this.context.fillText(this.text, center_x + this.render_options.text_shift_x, (this.first_note || this.last_note).getStave().getYForTopText() - 1);\n\t      this.context.restore();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t\n\t      var first_x_px = void 0;\n\t      var last_x_px = void 0;\n\t      var first_ys = void 0;\n\t      var last_ys = void 0;\n\t      var stem_direction = void 0;\n\t      if (first_note) {\n\t        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n\t        stem_direction = first_note.getStemDirection();\n\t        first_ys = first_note.getYs();\n\t      } else {\n\t        first_x_px = last_note.getStave().getTieStartX();\n\t        first_ys = last_note.getYs();\n\t        this.first_indices = this.last_indices;\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n\t        stem_direction = last_note.getStemDirection();\n\t        last_ys = last_note.getYs();\n\t      } else {\n\t        last_x_px = first_note.getStave().getTieEndX();\n\t        last_ys = first_note.getYs();\n\t        this.last_indices = this.first_indices;\n\t      }\n\t\n\t      if (this.direction) {\n\t        stem_direction = this.direction;\n\t      }\n\t\n\t      this.renderTie({\n\t        first_x_px: first_x_px,\n\t        last_x_px: last_x_px,\n\t        first_ys: first_ys,\n\t        last_ys: last_ys,\n\t        direction: stem_direction\n\t      });\n\t\n\t      this.renderText(first_x_px, last_x_px);\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return StaveTie;\n\t}(_element.Element);\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabTie = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar TabTie = exports.TabTie = function (_StaveTie) {\n\t  _inherits(TabTie, _StaveTie);\n\t\n\t  _createClass(TabTie, null, [{\n\t    key: 'createHammeron',\n\t    value: function createHammeron(notes) {\n\t      return new TabTie(notes, 'H');\n\t    }\n\t  }, {\n\t    key: 'createPulloff',\n\t    value: function createPulloff(notes) {\n\t      return new TabTie(notes, 'P');\n\t    }\n\t  }]);\n\t\n\t  function TabTie(notes, text) {\n\t    _classCallCheck(this, TabTie);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabTie.__proto__ || Object.getPrototypeOf(TabTie)).call(this, notes, text));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'TabTie');\n\t\n\t    _this.render_options.cp1 = 9;\n\t    _this.render_options.cp2 = 11;\n\t    _this.render_options.y_shift = 3;\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabTie, [{\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t      var first_x_px = void 0;\n\t      var last_x_px = void 0;\n\t      var first_ys = void 0;\n\t      var last_ys = void 0;\n\t\n\t      if (first_note) {\n\t        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n\t        first_ys = first_note.getYs();\n\t      } else {\n\t        first_x_px = last_note.getStave().getTieStartX();\n\t        first_ys = last_note.getYs();\n\t        this.first_indices = this.last_indices;\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n\t        last_ys = last_note.getYs();\n\t      } else {\n\t        last_x_px = first_note.getStave().getTieEndX();\n\t        last_ys = first_note.getYs();\n\t        this.last_indices = this.first_indices;\n\t      }\n\t\n\t      this.renderTie({\n\t        first_x_px: first_x_px,\n\t        last_x_px: last_x_px,\n\t        first_ys: first_ys,\n\t        last_ys: last_ys,\n\t        direction: -1 });\n\t\n\t      this.renderText(first_x_px, last_x_px);\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return TabTie;\n\t}(_stavetie.StaveTie);\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stroke = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns\n\t//\n\t// ## Description\n\t// This file implements the `Stroke` class which renders chord strokes\n\t// that can be arpeggiated, brushed, rasquedo, etc.\n\t\n\tvar Stroke = exports.Stroke = function (_Modifier) {\n\t  _inherits(Stroke, _Modifier);\n\t\n\t  _createClass(Stroke, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange strokes inside `ModifierContext`\n\t    value: function format(strokes, state) {\n\t      var left_shift = state.left_shift;\n\t      var stroke_spacing = 0;\n\t\n\t      if (!strokes || strokes.length === 0) return this;\n\t\n\t      var strokeList = strokes.map(function (stroke) {\n\t        var note = stroke.getNote();\n\t        if (note instanceof _stavenote.StaveNote) {\n\t          var _note$getKeyProps$str = note.getKeyProps()[stroke.getIndex()];\n\t          var line = _note$getKeyProps$str.line;\n\t          var displaced = _note$getKeyProps$str.displaced;\n\t\n\t          var shift = displaced ? note.getExtraLeftPx() : 0;\n\t          return { line: line, shift: shift, stroke: stroke };\n\t        } else {\n\t          var string = note.getPositions()[stroke.getIndex()].str;\n\t\n\t          return { line: string, shift: 0, stroke: stroke };\n\t        }\n\t      });\n\t\n\t      var strokeShift = left_shift;\n\t\n\t      // There can only be one stroke .. if more than one, they overlay each other\n\t      var xShift = strokeList.reduce(function (xShift, _ref) {\n\t        var stroke = _ref.stroke;\n\t        var shift = _ref.shift;\n\t\n\t        stroke.setXShift(strokeShift + shift);\n\t        return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n\t      }, 0);\n\t\n\t      state.left_shift += xShift;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'strokes';\n\t    }\n\t  }, {\n\t    key: 'Type',\n\t    get: function get() {\n\t      return {\n\t        BRUSH_DOWN: 1,\n\t        BRUSH_UP: 2,\n\t        ROLL_DOWN: 3, // Arpegiated chord\n\t        ROLL_UP: 4, // Arpegiated chord\n\t        RASQUEDO_DOWN: 5,\n\t        RASQUEDO_UP: 6\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Stroke(type, options) {\n\t    _classCallCheck(this, Stroke);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stroke.__proto__ || Object.getPrototypeOf(Stroke)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stroke');\n\t\n\t    _this.note = null;\n\t    _this.options = _vex.Vex.Merge({}, options);\n\t\n\t    // multi voice - span stroke across all voices if true\n\t    _this.all_voices = 'all_voices' in _this.options ? _this.options.all_voices : true;\n\t\n\t    // multi voice - end note of stroke, set in draw()\n\t    _this.note_end = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t\n\t    _this.render_options = {\n\t      font_scale: 38,\n\t      stroke_px: 3,\n\t      stroke_spacing: 10\n\t    };\n\t\n\t    _this.font = {\n\t      family: 'serif',\n\t      size: 10,\n\t      weight: 'bold italic'\n\t    };\n\t\n\t    _this.setXShift(0);\n\t    _this.setWidth(10);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Stroke, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Stroke.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'addEndNote',\n\t    value: function addEndNote(note) {\n\t      this.note_end = note;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n\t      }\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var ys = this.note.getYs();\n\t      var topY = start.y;\n\t      var botY = start.y;\n\t      var x = start.x - 5;\n\t      var line_space = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var notes = this.getModifierContext().getModifiers(this.note.getCategory());\n\t      for (var i = 0; i < notes.length; i++) {\n\t        ys = notes[i].getYs();\n\t        for (var n = 0; n < ys.length; n++) {\n\t          if (this.note === notes[i] || this.all_voices) {\n\t            topY = _vex.Vex.Min(topY, ys[n]);\n\t            botY = _vex.Vex.Max(botY, ys[n]);\n\t          }\n\t        }\n\t      }\n\t\n\t      var arrow = void 0;\n\t      var arrow_shift_x = void 0;\n\t      var arrow_y = void 0;\n\t      var text_shift_x = void 0;\n\t      var text_y = void 0;\n\t      switch (this.type) {\n\t        case Stroke.Type.BRUSH_DOWN:\n\t          arrow = 'vc3';\n\t          arrow_shift_x = -3;\n\t          arrow_y = topY - line_space / 2 + 10;\n\t          botY += line_space / 2;\n\t          break;\n\t        case Stroke.Type.BRUSH_UP:\n\t          arrow = 'v11';\n\t          arrow_shift_x = 0.5;\n\t          arrow_y = botY + line_space / 2;\n\t          topY -= line_space / 2;\n\t          break;\n\t        case Stroke.Type.ROLL_DOWN:\n\t        case Stroke.Type.RASQUEDO_DOWN:\n\t          arrow = 'vc3';\n\t          arrow_shift_x = -3;\n\t          text_shift_x = this.x_shift + arrow_shift_x - 2;\n\t          if (this.note instanceof _stavenote.StaveNote) {\n\t            topY += 1.5 * line_space;\n\t            if ((botY - topY) % 2 !== 0) {\n\t              botY += 0.5 * line_space;\n\t            } else {\n\t              botY += line_space;\n\t            }\n\t            arrow_y = topY - line_space;\n\t            text_y = botY + line_space + 2;\n\t          } else {\n\t            topY += 1.5 * line_space;\n\t            botY += line_space;\n\t            arrow_y = topY - 0.75 * line_space;\n\t            text_y = botY + 0.25 * line_space;\n\t          }\n\t          break;\n\t        case Stroke.Type.ROLL_UP:\n\t        case Stroke.Type.RASQUEDO_UP:\n\t          arrow = 'v52';\n\t          arrow_shift_x = -4;\n\t          text_shift_x = this.x_shift + arrow_shift_x - 1;\n\t          if (this.note instanceof _stavenote.StaveNote) {\n\t            arrow_y = line_space / 2;\n\t            topY += 0.5 * line_space;\n\t            if ((botY - topY) % 2 === 0) {\n\t              botY += line_space / 2;\n\t            }\n\t            arrow_y = botY + 0.5 * line_space;\n\t            text_y = topY - 1.25 * line_space;\n\t          } else {\n\t            topY += 0.25 * line_space;\n\t            botY += 0.5 * line_space;\n\t            arrow_y = botY + 0.25 * line_space;\n\t            text_y = topY - line_space;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidType', 'The stroke type ' + this.type + ' does not exist');\n\t      }\n\t\n\t      // Draw the stroke\n\t      if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n\t        this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n\t      } else {\n\t        if (this.note instanceof _stavenote.StaveNote) {\n\t          for (var _i = topY; _i <= botY; _i += line_space) {\n\t            _glyph.Glyph.renderGlyph(this.context, x + this.x_shift - 4, _i, this.render_options.font_scale, 'va3');\n\t          }\n\t        } else {\n\t          var _i2 = void 0;\n\t          for (_i2 = topY; _i2 <= botY; _i2 += 10) {\n\t            _glyph.Glyph.renderGlyph(this.context, x + this.x_shift - 4, _i2, this.render_options.font_scale, 'va3');\n\t          }\n\t          if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n\t            text_y = _i2 + 0.25 * line_space;\n\t          }\n\t        }\n\t      }\n\t\n\t      // Draw the arrow head\n\t      _glyph.Glyph.renderGlyph(this.context, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow);\n\t\n\t      // Draw the rasquedo \"R\"\n\t      if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n\t        this.context.save();\n\t        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t        this.context.fillText('R', x + text_shift_x, text_y);\n\t        this.context.restore();\n\t      }\n\t    }\n\t  }]);\n\n\t  return Stroke;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StringNumber = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns\n\t//\n\t// ## Description\n\t// This file implements the `StringNumber` class which renders string\n\t// number annotations beside notes.\n\t\n\tvar StringNumber = exports.StringNumber = function (_Modifier) {\n\t  _inherits(StringNumber, _Modifier);\n\t\n\t  _createClass(StringNumber, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange string numbers inside a `ModifierContext`\n\t    value: function format(nums, state) {\n\t      var left_shift = state.left_shift;\n\t      var right_shift = state.right_shift;\n\t      var num_spacing = 1;\n\t\n\t      if (!nums || nums.length === 0) return this;\n\t\n\t      var nums_list = [];\n\t      var prev_note = null;\n\t      var shift_left = 0;\n\t      var shift_right = 0;\n\t\n\t      var i = void 0;\n\t      var num = void 0;\n\t      var note = void 0;\n\t      var pos = void 0;\n\t      var props_tmp = void 0;\n\t      for (i = 0; i < nums.length; ++i) {\n\t        num = nums[i];\n\t        note = num.getNote();\n\t\n\t        for (i = 0; i < nums.length; ++i) {\n\t          num = nums[i];\n\t          note = num.getNote();\n\t          pos = num.getPosition();\n\t          var props = note.getKeyProps()[num.getIndex()];\n\t\n\t          if (note !== prev_note) {\n\t            for (var n = 0; n < note.keys.length; ++n) {\n\t              props_tmp = note.getKeyProps()[n];\n\t              if (left_shift === 0) {\n\t                shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n\t              }\n\t              if (right_shift === 0) {\n\t                shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n\t              }\n\t            }\n\t            prev_note = note;\n\t          }\n\t\n\t          nums_list.push({\n\t            pos: pos,\n\t            note: note,\n\t            num: num,\n\t            line: props.line,\n\t            shiftL: shift_left,\n\t            shiftR: shift_right\n\t          });\n\t        }\n\t      }\n\t\n\t      // Sort string numbers by line number.\n\t      nums_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n\t      var num_shiftL = 0; // eslint-disable-line\n\t      var num_shiftR = 0;\n\t      var x_widthL = 0;\n\t      var x_widthR = 0;\n\t      var last_line = null;\n\t      var last_note = null;\n\t      for (i = 0; i < nums_list.length; ++i) {\n\t        var num_shift = 0;\n\t        note = nums_list[i].note;\n\t        pos = nums_list[i].pos;\n\t        num = nums_list[i].num;\n\t        var line = nums_list[i].line;\n\t        var shiftL = nums_list[i].shiftL;\n\t        var shiftR = nums_list[i].shiftR;\n\t\n\t        // Reset the position of the string number every line.\n\t        if (line !== last_line || note !== last_note) {\n\t          num_shiftL = left_shift + shiftL;\n\t          num_shiftR = right_shift + shiftR;\n\t        }\n\t\n\t        var num_width = num.getWidth() + num_spacing;\n\t        if (pos === _modifier.Modifier.Position.LEFT) {\n\t          num.setXShift(left_shift);\n\t          num_shift = shift_left + num_width; // spacing\n\t          x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n\t        } else if (pos === _modifier.Modifier.Position.RIGHT) {\n\t          num.setXShift(num_shiftR);\n\t          num_shift += num_width; // spacing\n\t          x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n\t        }\n\t        last_line = line;\n\t        last_note = note;\n\t      }\n\t\n\t      state.left_shift += x_widthL;\n\t      state.right_shift += x_widthR;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stringnumber';\n\t    }\n\t  }]);\n\t\n\t  function StringNumber(number) {\n\t    _classCallCheck(this, StringNumber);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StringNumber.__proto__ || Object.getPrototypeOf(StringNumber)).call(this));\n\t\n\t    _this.setAttribute('type', 'StringNumber');\n\t\n\t    _this.note = null;\n\t    _this.last_note = null;\n\t    _this.index = null;\n\t    _this.string_number = number;\n\t    _this.setWidth(20); // ???\n\t    _this.position = _modifier.Modifier.Position.ABOVE; // Default position above stem or note head\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.x_offset = 0; // Horizontal offset from default\n\t    _this.y_offset = 0; // Vertical offset from default\n\t    _this.dashed = true; // true - draw dashed extension  false - no extension\n\t    _this.leg = _renderer.Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n\t    _this.radius = 8;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 10,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StringNumber, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StringNumber.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getNote',\n\t    value: function getNote() {\n\t      return this.note;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;return this;\n\t    }\n\t  }, {\n\t    key: 'getIndex',\n\t    value: function getIndex() {\n\t      return this.index;\n\t    }\n\t  }, {\n\t    key: 'setIndex',\n\t    value: function setIndex(index) {\n\t      this.index = index;return this;\n\t    }\n\t  }, {\n\t    key: 'setLineEndType',\n\t    value: function setLineEndType(leg) {\n\t      if (leg >= _renderer.Renderer.LineEndType.NONE && leg <= _renderer.Renderer.LineEndType.DOWN) {\n\t        this.leg = leg;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStringNumber',\n\t    value: function setStringNumber(number) {\n\t      this.string_number = number;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetX',\n\t    value: function setOffsetX(x) {\n\t      this.x_offset = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetY',\n\t    value: function setOffsetY(y) {\n\t      this.y_offset = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setLastNote',\n\t    value: function setLastNote(note) {\n\t      this.last_note = note;return this;\n\t    }\n\t  }, {\n\t    key: 'setDashed',\n\t    value: function setDashed(dashed) {\n\t      this.dashed = dashed;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n\t      }\n\t      this.setRendered();\n\t\n\t      var line_space = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var dot_x = start.x + this.x_shift + this.x_offset;\n\t      var dot_y = start.y + this.y_shift + this.y_offset;\n\t\n\t      switch (this.position) {\n\t        case _modifier.Modifier.Position.ABOVE:\n\t        case _modifier.Modifier.Position.BELOW:\n\t          {\n\t            var stem_ext = this.note.getStemExtents();\n\t            var top = stem_ext.topY;\n\t            var bottom = stem_ext.baseY + 2;\n\t\n\t            if (this.note.stem_direction === _stavenote.StaveNote.STEM_DOWN) {\n\t              top = stem_ext.baseY;\n\t              bottom = stem_ext.topY - 2;\n\t            }\n\t\n\t            if (this.position === _modifier.Modifier.Position.ABOVE) {\n\t              dot_y = this.note.hasStem() ? top - line_space * 1.75 : start.y - line_space * 1.75;\n\t            } else {\n\t              dot_y = this.note.hasStem() ? bottom + line_space * 1.5 : start.y + line_space * 1.75;\n\t            }\n\t\n\t            dot_y += this.y_shift + this.y_offset;\n\t\n\t            break;\n\t          }case _modifier.Modifier.Position.LEFT:\n\t          dot_x -= this.radius / 2 + 5;\n\t          break;\n\t        case _modifier.Modifier.Position.RIGHT:\n\t          dot_x += this.radius / 2 + 6;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'The position ' + this.position + ' is invalid');\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n\t      ctx.lineWidth = 1.5;\n\t      ctx.stroke();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var x = dot_x - ctx.measureText(this.string_number).width / 2;\n\t      ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\t\n\t      if (this.last_note != null) {\n\t        var end = this.last_note.getStemX() - this.note.getX() + 5;\n\t        ctx.strokeStyle = '#000000';\n\t        ctx.lineCap = 'round';\n\t        ctx.lineWidth = 0.6;\n\t        if (this.dashed) {\n\t          _renderer.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n\t        } else {\n\t          _renderer.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n\t        }\n\t\n\t        var len = void 0;\n\t        var pattern = void 0;\n\t        switch (this.leg) {\n\t          case _renderer.Renderer.LineEndType.UP:\n\t            len = -10;\n\t            pattern = this.dashed ? [3, 3] : [3, 0];\n\t            _renderer.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n\t            break;\n\t          case _renderer.Renderer.LineEndType.DOWN:\n\t            len = 10;\n\t            pattern = this.dashed ? [3, 3] : [3, 0];\n\t            _renderer.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return StringNumber;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Articulation = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns.\n\t//\n\t// ## Description\n\t//\n\t// This file implements articulations and accents as modifiers that can be\n\t// attached to notes. The complete list of articulations is available in\n\t// `tables.js` under `Vex.Flow.articulationCodes`.\n\t//\n\t// See `tests/articulation_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Articulation.DEBUG) _vex.Vex.L('Vex.Flow.Articulation', args);\n\t}\n\t\n\tvar _Modifier$Position = _modifier.Modifier.Position;\n\tvar ABOVE = _Modifier$Position.ABOVE;\n\tvar BELOW = _Modifier$Position.BELOW;\n\t\n\t\n\tvar roundToNearestHalf = function roundToNearestHalf(mathFn, value) {\n\t  return mathFn(value / 0.5) * 0.5;\n\t};\n\t\n\t// This includes both staff and ledger lines\n\tvar isWithinLines = function isWithinLines(line, position) {\n\t  return position === ABOVE ? line <= 5 : line >= 1;\n\t};\n\t\n\tvar getRoundingFunction = function getRoundingFunction(line, position) {\n\t  if (isWithinLines(line, position)) {\n\t    if (position === ABOVE) {\n\t      return Math.ceil;\n\t    } else {\n\t      return Math.floor;\n\t    }\n\t  } else {\n\t    return Math.round;\n\t  }\n\t};\n\t\n\tvar snapLineToStaff = function snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n\t  // Initially, snap to nearest staff line or space\n\t  var snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n\t  var canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n\t  var onStaffLine = snappedLine % 1 === 0;\n\t\n\t  if (canSnapToStaffSpace && onStaffLine) {\n\t    var HALF_STAFF_SPACE = 0.5;\n\t    return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n\t  } else {\n\t    return snappedLine;\n\t  }\n\t};\n\t\n\tvar getTopY = function getTopY(note, textLine) {\n\t  var stave = note.getStave();\n\t  var stemDirection = note.getStemDirection();\n\t\n\t  var _note$getStemExtents = note.getStemExtents();\n\t\n\t  var stemTipY = _note$getStemExtents.topY;\n\t  var stemBaseY = _note$getStemExtents.baseY;\n\t\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemTipY;\n\t      } else {\n\t        return stemBaseY;\n\t      }\n\t    } else {\n\t      return Math.min.apply(Math, _toConsumableArray(note.getYs()));\n\t    }\n\t  } else if (note.getCategory() === 'tabnotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemTipY;\n\t      } else {\n\t        return stave.getYForTopText(textLine);\n\t      }\n\t    } else {\n\t      return stave.getYForTopText(textLine);\n\t    }\n\t  } else {\n\t    throw new _vex.Vex.RERR('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n\t  }\n\t};\n\t\n\tvar getBottomY = function getBottomY(note, textLine) {\n\t  var stave = note.getStave();\n\t  var stemDirection = note.getStemDirection();\n\t\n\t  var _note$getStemExtents2 = note.getStemExtents();\n\t\n\t  var stemTipY = _note$getStemExtents2.topY;\n\t  var stemBaseY = _note$getStemExtents2.baseY;\n\t\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemBaseY;\n\t      } else {\n\t        return stemTipY;\n\t      }\n\t    } else {\n\t      return Math.max.apply(Math, _toConsumableArray(note.getYs()));\n\t    }\n\t  } else if (note.getCategory() === 'tabnotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stave.getYForBottomText(textLine);\n\t      } else {\n\t        return stemTipY;\n\t      }\n\t    } else {\n\t      return stave.getYForBottomText(textLine);\n\t    }\n\t  } else {\n\t    throw new _vex.Vex.RERR('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n\t  }\n\t};\n\t\n\t// Gets the initial offset of the articulation from the y value of the starting position.\n\t// This is required because the top/bottom text positions already have spacing applied to\n\t// provide a \"visually pleasent\" default position. However the y values provided from\n\t// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n\t// normalizes this asymmetry.\n\tvar getInitialOffset = function getInitialOffset(note, position) {\n\t  var isOnStemTip = position === ABOVE && note.getStemDirection() === _stem.Stem.UP || position === BELOW && note.getStemDirection() === _stem.Stem.DOWN;\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem() && isOnStemTip) {\n\t      return 0.5;\n\t    } else {\n\t      // this amount is larger than the stem-tip offset because we start from\n\t      // the center of the notehead\n\t      return 1;\n\t    }\n\t  } else {\n\t    if (note.hasStem() && isOnStemTip) {\n\t      return 1;\n\t    } else {\n\t      return 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar Articulation = exports.Articulation = function (_Modifier) {\n\t  _inherits(Articulation, _Modifier);\n\t\n\t  _createClass(Articulation, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // FIXME:\n\t    // Most of the complex formatting logic (ie: snapping to space) is\n\t    // actually done in .render(). But that logic belongs in this method.\n\t    //\n\t    // Unfortunately, this isn't possible because, by this point, stem lengths\n\t    // have not yet been finalized. Finalized stem lengths are required to determine the\n\t    // initial position of any stem-side articulation.\n\t    //\n\t    // This indicates that all objects should have their stave set before being\n\t    // formatted. It can't be an optional if you want accurate vertical positioning.\n\t    // Consistently positioned articulations that play nice with other modifiers\n\t    // won't be possible until we stop relying on render-time formatting.\n\t    //\n\t    // Ideally, when this function has completed, the vertical articulation positions\n\t    // should be ready to render without further adjustment. But the current state\n\t    // is far from this ideal.\n\t    value: function format(articulations, state) {\n\t      if (!articulations || articulations.length === 0) return false;\n\t\n\t      var isAbove = function isAbove(artic) {\n\t        return artic.getPosition() === ABOVE;\n\t      };\n\t      var isBelow = function isBelow(artic) {\n\t        return artic.getPosition() === BELOW;\n\t      };\n\t      var margin = 0.5;\n\t      var getIncrement = function getIncrement(articulation, line, position) {\n\t        return roundToNearestHalf(getRoundingFunction(line, position), articulation.glyph.getMetrics().height / 10 + margin);\n\t      };\n\t\n\t      articulations.filter(isAbove).forEach(function (articulation) {\n\t        articulation.setTextLine(state.top_text_line);\n\t        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n\t      });\n\t\n\t      articulations.filter(isBelow).forEach(function (articulation) {\n\t        articulation.setTextLine(state.text_line);\n\t        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n\t      });\n\t\n\t      var width = articulations.map(function (articulation) {\n\t        return articulation.getWidth();\n\t      }).reduce(function (maxWidth, articWidth) {\n\t        return Math.max(articWidth, maxWidth);\n\t      });\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'easyScoreHook',\n\t    value: function easyScoreHook(_ref, note, builder) {\n\t      var articulations = _ref.articulations;\n\t\n\t      if (!articulations) return;\n\t\n\t      var articNameToCode = {\n\t        staccato: 'a.',\n\t        tenuto: 'a-'\n\t      };\n\t\n\t      articulations.split(',').map(function (articString) {\n\t        return articString.trim().split('.');\n\t      }).map(function (_ref2) {\n\t        var _ref3 = _slicedToArray(_ref2, 2);\n\t\n\t        var name = _ref3[0];\n\t        var position = _ref3[1];\n\t\n\t        var artic = { type: articNameToCode[name] };\n\t        if (position) artic.position = _modifier.Modifier.PositionString[position];\n\t        return builder.getFactory().Articulation(artic);\n\t      }).map(function (artic) {\n\t        return note.addModifier(0, artic);\n\t      });\n\t    }\n\t\n\t    // Create a new articulation of type `type`, which is an entry in\n\t    // `Vex.Flow.articulationCodes` in `tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'articulations';\n\t    }\n\t  }, {\n\t    key: 'INITIAL_OFFSET',\n\t    get: function get() {\n\t      return -0.5;\n\t    }\n\t  }]);\n\t\n\t  function Articulation(type) {\n\t    _classCallCheck(this, Articulation);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Articulation.__proto__ || Object.getPrototypeOf(Articulation)).call(this));\n\t\n\t    _this.setAttribute('type', 'Articulation');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = BELOW;\n\t    _this.render_options = {\n\t      font_scale: 38\n\t    };\n\t\n\t    _this.articulation = _tables.Flow.articulationCodes(_this.type);\n\t    if (!_this.articulation) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Articulation not found: ' + _this.type);\n\t    }\n\t\n\t    _this.glyph = new _glyph.Glyph(_this.articulation.code, _this.render_options.font_scale);\n\t\n\t    _this.setWidth(_this.glyph.getMetrics().width);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Articulation, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Articulation.CATEGORY;\n\t    }\n\t\n\t    // Render articulation in position next to note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _ABOVE$BELOW$position;\n\t\n\t      var note = this.note;\n\t      var index = this.index;\n\t      var position = this.position;\n\t      var glyph = this.glyph;\n\t      var canSitBetweenLines = this.articulation.between_lines;\n\t      var textLine = this.text_line;\n\t      var ctx = this.context;\n\t\n\t\n\t      this.checkContext();\n\t\n\t      if (!note || index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var stave = note.getStave();\n\t      var staffSpace = stave.getSpacingBetweenLines();\n\t      var isTab = note.getCategory() === 'tabnotes';\n\t\n\t      // Articulations are centered over/under the note head.\n\t\n\t      var _note$getModifierStar = note.getModifierStartXY(position, index);\n\t\n\t      var x = _note$getModifierStar.x;\n\t\n\t      var shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\t\n\t      var initialOffset = getInitialOffset(note, position);\n\t\n\t      var y = (_ABOVE$BELOW$position = {}, _defineProperty(_ABOVE$BELOW$position, ABOVE, function () {\n\t        glyph.setOrigin(0.5, 1);\n\t        var y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n\t        return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n\t      }), _defineProperty(_ABOVE$BELOW$position, BELOW, function () {\n\t        glyph.setOrigin(0.5, 0);\n\t        var y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n\t        return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n\t      }), _ABOVE$BELOW$position)[position]();\n\t\n\t      if (!isTab) {\n\t        var offsetDirection = position === ABOVE ? -1 : +1;\n\t        var noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n\t        var distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n\t        var articLine = distanceFromNote + noteLine;\n\t        var snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\t\n\t        if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\t\n\t        y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n\t      }\n\t\n\t      L('Rendering articulation at (x: ' + x + ', y: ' + y + ')');\n\t\n\t      glyph.render(ctx, x, y);\n\t    }\n\t  }]);\n\n\t  return Articulation;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Ornament = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implements ornaments as modifiers that can be\n\t// attached to notes. The complete list of ornaments is available in\n\t// `tables.js` under `Vex.Flow.ornamentCodes`.\n\t//\n\t// See `tests/ornament_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Ornament.DEBUG) _vex.Vex.L('Vex.Flow.Ornament', args);\n\t}\n\t\n\tvar Ornament = exports.Ornament = function (_Modifier) {\n\t  _inherits(Ornament, _Modifier);\n\t\n\t  _createClass(Ornament, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange ornaments inside `ModifierContext`\n\t    value: function format(ornaments, state) {\n\t      if (!ornaments || ornaments.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < ornaments.length; ++i) {\n\t        var ornament = ornaments[i];\n\t        var increment = 2;\n\t\n\t        width = Math.max(ornament.getWidth(), width);\n\t\n\t        if (ornament.getPosition() === _modifier.Modifier.Position.ABOVE) {\n\t          ornament.setTextLine(state.top_text_line);\n\t          state.top_text_line += increment;\n\t        } else {\n\t          ornament.setTextLine(state.text_line);\n\t          state.text_line += increment;\n\t        }\n\t      }\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t\n\t    // Create a new ornament of type `type`, which is an entry in\n\t    // `Vex.Flow.ornamentCodes` in `tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'ornaments';\n\t    }\n\t  }]);\n\t\n\t  function Ornament(type) {\n\t    _classCallCheck(this, Ornament);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Ornament.__proto__ || Object.getPrototypeOf(Ornament)).call(this));\n\t\n\t    _this.setAttribute('type', 'Ornament');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.ABOVE;\n\t    _this.delayed = false;\n\t\n\t    _this.accidentalUpper = null;\n\t    _this.accidentalLower = null;\n\t\n\t    _this.render_options = {\n\t      font_scale: 38,\n\t      accidentalLowerPadding: 3,\n\t      accidentalUpperPadding: 3\n\t    };\n\t\n\t    _this.ornament = _tables.Flow.ornamentCodes(_this.type);\n\t    if (!_this.ornament) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Ornament not found: \\'' + _this.type + '\\'');\n\t    }\n\t\n\t    _this.glyph = new _glyph.Glyph(_this.ornament.code, _this.render_options.font_scale);\n\t    _this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Ornament, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Ornament.CATEGORY;\n\t    }\n\t\n\t    // Set whether the ornament is to be delayed\n\t\n\t  }, {\n\t    key: 'setDelayed',\n\t    value: function setDelayed(delayed) {\n\t      this.delayed = delayed;return this;\n\t    }\n\t\n\t    // Set the upper accidental for the ornament\n\t\n\t  }, {\n\t    key: 'setUpperAccidental',\n\t    value: function setUpperAccidental(accid) {\n\t      var scale = this.render_options.font_scale / 1.3;\n\t      this.accidentalUpper = new _glyph.Glyph(_tables.Flow.accidentalCodes(accid).code, scale);\n\t      this.accidentalUpper.setOrigin(0.5, 1.0);\n\t      return this;\n\t    }\n\t\n\t    // Set the lower accidental for the ornament\n\t\n\t  }, {\n\t    key: 'setLowerAccidental',\n\t    value: function setLowerAccidental(accid) {\n\t      var scale = this.render_options.font_scale / 1.3;\n\t      this.accidentalLower = new _glyph.Glyph(_tables.Flow.accidentalCodes(accid).code, scale);\n\t      this.accidentalLower.setOrigin(0.5, 1.0);\n\t      return this;\n\t    }\n\t\n\t    // Render ornament in position next to note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note || this.index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var ctx = this.context;\n\t      var stemDir = this.note.getStemDirection();\n\t      var stave = this.note.getStave();\n\t\n\t      // Get stem extents\n\t      var stemExtents = this.note.getStem().getExtents();\n\t      var y = stemDir === _stavenote.StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\t\n\t      // TabNotes don't have stems attached to them. Tab stems are rendered\n\t      // outside the stave.\n\t      if (this.note.getCategory() === 'tabnotes') {\n\t        if (this.note.hasStem()) {\n\t          if (stemDir === _stavenote.StaveNote.STEM_DOWN) {\n\t            y = stave.getYForTopText(this.text_line);\n\t          }\n\t        } else {\n\t          // Without a stem\n\t          y = stave.getYForTopText(this.text_line);\n\t        }\n\t      }\n\t\n\t      var isPlacedOnNoteheadSide = stemDir === _stavenote.StaveNote.STEM_DOWN;\n\t      var spacing = stave.getSpacingBetweenLines();\n\t      var lineSpacing = 1;\n\t\n\t      // Beamed stems are longer than quarter note stems, adjust accordingly\n\t      if (!isPlacedOnNoteheadSide && this.note.beam) {\n\t        lineSpacing += 0.5;\n\t      }\n\t\n\t      var totalSpacing = spacing * (this.text_line + lineSpacing);\n\t      var glyphYBetweenLines = y - totalSpacing;\n\t\n\t      // Get initial coordinates for the modifier position\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var glyphX = start.x;\n\t      var glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n\t      glyphY += this.y_shift;\n\t\n\t      // Ajdust x position if ornament is delayed\n\t      if (this.delayed) {\n\t        glyphX += this.glyph.getMetrics().width;\n\t        var nextContext = _tickcontext.TickContext.getNextContext(this.note.getTickContext());\n\t        if (nextContext) {\n\t          glyphX += (nextContext.getX() - glyphX) * 0.5;\n\t        } else {\n\t          glyphX += (stave.x + stave.width - glyphX) * 0.5;\n\t        }\n\t      }\n\t\n\t      L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\t\n\t      if (this.accidentalLower) {\n\t        this.accidentalLower.render(ctx, glyphX, glyphY);\n\t        glyphY -= this.accidentalLower.getMetrics().height;\n\t        glyphY -= this.render_options.accidentalLowerPadding;\n\t      }\n\t\n\t      this.glyph.render(ctx, glyphX, glyphY);\n\t      glyphY -= this.glyph.getMetrics().height;\n\t\n\t      if (this.accidentalUpper) {\n\t        glyphY -= this.render_options.accidentalUpperPadding;\n\t        this.accidentalUpper.render(ctx, glyphX, glyphY);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Ornament;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TickContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tickable = __webpack_require__(23);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A formatter for abstract tickable objects, such as notes, chords,\n\t// tabs, etc.\n\t\n\tvar TickContext = exports.TickContext = function (_Tickable) {\n\t  _inherits(TickContext, _Tickable);\n\t\n\t  _createClass(TickContext, null, [{\n\t    key: 'getNextContext',\n\t    value: function getNextContext(tContext) {\n\t      var contexts = tContext.tContexts;\n\t      var index = contexts.indexOf(tContext);\n\t\n\t      return contexts[index + 1];\n\t    }\n\t  }]);\n\t\n\t  function TickContext() {\n\t    _classCallCheck(this, TickContext);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TickContext.__proto__ || Object.getPrototypeOf(TickContext)).call(this));\n\t\n\t    _this.setAttribute('type', 'TickContext');\n\t    _this.currentTick = new _fraction.Fraction(0, 1);\n\t    _this.maxTicks = new _fraction.Fraction(0, 1);\n\t    _this.minTicks = null;\n\t    _this.padding = 3; // padding on each side (width += padding * 2)\n\t    _this.x = 0;\n\t    _this.tickables = []; // Notes, tabs, chords, lyrics.\n\t    _this.notePx = 0; // width of widest note in this context\n\t    _this.extraLeftPx = 0; // Extra left pixels for modifers & displace notes\n\t    _this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n\t    _this.tContexts = []; // Parent array of tick contexts\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TickContext, [{\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width + this.padding * 2;\n\t    }\n\t  }, {\n\t    key: 'setPadding',\n\t    value: function setPadding(padding) {\n\t      this.padding = padding;return this;\n\t    }\n\t  }, {\n\t    key: 'getMaxTicks',\n\t    value: function getMaxTicks() {\n\t      return this.maxTicks;\n\t    }\n\t  }, {\n\t    key: 'getMinTicks',\n\t    value: function getMinTicks() {\n\t      return this.minTicks;\n\t    }\n\t  }, {\n\t    key: 'getTickables',\n\t    value: function getTickables() {\n\t      return this.tickables;\n\t    }\n\t  }, {\n\t    key: 'getCenterAlignedTickables',\n\t    value: function getCenterAlignedTickables() {\n\t      return this.tickables.filter(function (tickable) {\n\t        return tickable.isCenterAligned();\n\t      });\n\t    }\n\t\n\t    // Get widths context, note and left/right modifiers for formatting\n\t\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      var width = this.width;\n\t      var notePx = this.notePx;\n\t      var extraLeftPx = this.extraLeftPx;\n\t      var extraRightPx = this.extraRightPx;\n\t\n\t      return { width: width, notePx: notePx, extraLeftPx: extraLeftPx, extraRightPx: extraRightPx };\n\t    }\n\t  }, {\n\t    key: 'getCurrentTick',\n\t    value: function getCurrentTick() {\n\t      return this.currentTick;\n\t    }\n\t  }, {\n\t    key: 'setCurrentTick',\n\t    value: function setCurrentTick(tick) {\n\t      this.currentTick = tick;\n\t      this.preFormatted = false;\n\t    }\n\t\n\t    // ### DEPRECATED ###\n\t    // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n\t    // the getMetrics() method instead!\n\t\n\t  }, {\n\t    key: 'getExtraPx',\n\t    value: function getExtraPx() {\n\t      var left_shift = 0;\n\t      var right_shift = 0;\n\t      var extraLeftPx = 0;\n\t      var extraRightPx = 0;\n\t      for (var i = 0; i < this.tickables.length; i++) {\n\t        extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n\t        extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n\t        var mContext = this.tickables[i].modifierContext;\n\t        if (mContext && mContext != null) {\n\t          left_shift = Math.max(left_shift, mContext.state.left_shift);\n\t          right_shift = Math.max(right_shift, mContext.state.right_shift);\n\t        }\n\t      }\n\t      return {\n\t        left: left_shift,\n\t        right: right_shift,\n\t        extraLeft: extraLeftPx,\n\t        extraRight: extraRightPx\n\t      };\n\t    }\n\t  }, {\n\t    key: 'addTickable',\n\t    value: function addTickable(tickable) {\n\t      if (!tickable) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid tickable added.');\n\t      }\n\t\n\t      if (!tickable.shouldIgnoreTicks()) {\n\t        this.ignore_ticks = false;\n\t\n\t        var ticks = tickable.getTicks();\n\t\n\t        if (ticks.greaterThan(this.maxTicks)) {\n\t          this.maxTicks = ticks.clone();\n\t        }\n\t\n\t        if (this.minTicks == null) {\n\t          this.minTicks = ticks.clone();\n\t        } else if (ticks.lessThan(this.minTicks)) {\n\t          this.minTicks = ticks.clone();\n\t        }\n\t      }\n\t\n\t      tickable.setTickContext(this);\n\t      this.tickables.push(tickable);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return this;\n\t\n\t      for (var i = 0; i < this.tickables.length; ++i) {\n\t        var tickable = this.tickables[i];\n\t        tickable.preFormat();\n\t        var metrics = tickable.getMetrics();\n\t\n\t        // Maintain max extra pixels from all tickables in the context\n\t        this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n\t        this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\t\n\t        // Maintain the widest note for all tickables in the context\n\t        this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\t\n\t        // Recalculate the tick context total width\n\t        this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return this;\n\t      this.postFormatted = true;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return TickContext;\n\t}(_tickable.Tickable);\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Annotation = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements text annotations as modifiers that can be attached to\n\t// notes.\n\t//\n\t// See `tests/annotation_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Annotation.DEBUG) _vex.Vex.L('Vex.Flow.Annotation', args);\n\t}\n\t\n\tvar Annotation = exports.Annotation = function (_Modifier) {\n\t  _inherits(Annotation, _Modifier);\n\t\n\t  _createClass(Annotation, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange annotations within a `ModifierContext`\n\t    value: function format(annotations, state) {\n\t      if (!annotations || annotations.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < annotations.length; ++i) {\n\t        var annotation = annotations[i];\n\t        width = Math.max(annotation.getWidth(), width);\n\t        if (annotation.getPosition() === _modifier.Modifier.Position.ABOVE) {\n\t          annotation.setTextLine(state.top_text_line);\n\t          state.top_text_line++;\n\t        } else {\n\t          annotation.setTextLine(state.text_line);\n\t          state.text_line++;\n\t        }\n\t      }\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t    //\n\t    // Annotations inherit from `Modifier` and is positioned correctly when\n\t    // in a `ModifierContext`.\n\t    // Create a new `Annotation` with the string `text`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'annotations';\n\t    }\n\t\n\t    // Text annotations can be positioned and justified relative to the note.\n\t\n\t  }, {\n\t    key: 'Justify',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3,\n\t        CENTER_STEM: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'JustifyString',\n\t    get: function get() {\n\t      return {\n\t        left: Annotation.Justify.LEFT,\n\t        right: Annotation.Justify.RIGHT,\n\t        center: Annotation.Justify.CENTER,\n\t        centerStem: Annotation.Justify.CENTER_STEM\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VerticalJustify',\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        CENTER: 2,\n\t        BOTTOM: 3,\n\t        CENTER_STEM: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VerticalJustifyString',\n\t    get: function get() {\n\t      return {\n\t        above: Annotation.VerticalJustify.TOP,\n\t        top: Annotation.VerticalJustify.TOP,\n\t        below: Annotation.VerticalJustify.BOTTOM,\n\t        bottom: Annotation.VerticalJustify.BOTTOM,\n\t        center: Annotation.VerticalJustify.CENTER,\n\t        centerStem: Annotation.VerticalJustify.CENTER_STEM\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Annotation(text) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).call(this));\n\t\n\t    _this.setAttribute('type', 'Annotation');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.text = text;\n\t    _this.justification = Annotation.Justify.CENTER;\n\t    _this.vert_justification = Annotation.VerticalJustify.TOP;\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 10,\n\t      weight: ''\n\t    };\n\t\n\t    // The default width is calculated from the text.\n\t    _this.setWidth(_tables.Flow.textWidth(text));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Annotation.CATEGORY;\n\t    }\n\t\n\t    // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.font = { family: family, size: size, weight: weight };\n\t      return this;\n\t    }\n\t\n\t    // Set vertical position of text (above or below stave). `just` must be\n\t    // a value in `Annotation.VerticalJustify`.\n\t\n\t  }, {\n\t    key: 'setVerticalJustification',\n\t    value: function setVerticalJustification(just) {\n\t      this.vert_justification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n\t      return this;\n\t    }\n\t\n\t    // Get and set horizontal justification. `justification` is a value in\n\t    // `Annotation.Justify`.\n\t\n\t  }, {\n\t    key: 'getJustification',\n\t    value: function getJustification() {\n\t      return this.justification;\n\t    }\n\t  }, {\n\t    key: 'setJustification',\n\t    value: function setJustification(just) {\n\t      this.justification = typeof just === 'string' ? Annotation.JustifyString[just] : just;\n\t      return this;\n\t    }\n\t\n\t    // Render text beside the note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note) {\n\t        throw new _vex.Vex.RERR('NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.ABOVE, this.index);\n\t\n\t      // We're changing context parameters. Save current state.\n\t      this.context.save();\n\t      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = this.context.measureText(this.text).width;\n\t\n\t      // Estimate text height to be the same as the width of an 'm'.\n\t      //\n\t      // This is a hack to work around the inability to measure text height\n\t      // in HTML5 Canvas (and SVG).\n\t      var text_height = this.context.measureText('m').width;\n\t      var x = void 0;\n\t      var y = void 0;\n\t\n\t      if (this.justification === Annotation.Justify.LEFT) {\n\t        x = start.x;\n\t      } else if (this.justification === Annotation.Justify.RIGHT) {\n\t        x = start.x - text_width;\n\t      } else if (this.justification === Annotation.Justify.CENTER) {\n\t        x = start.x - text_width / 2;\n\t      } else /* CENTER_STEM */{\n\t          x = this.note.getStemX() - text_width / 2;\n\t        }\n\t\n\t      var stem_ext = void 0;\n\t      var spacing = void 0;\n\t      var has_stem = this.note.hasStem();\n\t      var stave = this.note.getStave();\n\t\n\t      // The position of the text varies based on whether or not the note\n\t      // has a stem.\n\t      if (has_stem) {\n\t        stem_ext = this.note.getStem().getExtents();\n\t        spacing = stave.getSpacingBetweenLines();\n\t      }\n\t\n\t      if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n\t        // HACK: We need to compensate for the text's height since its origin\n\t        // is bottom-right.\n\t        y = stave.getYForBottomText(this.text_line + _tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t        if (has_stem) {\n\t          var stem_base = this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n\t          y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n\t        }\n\t      } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n\t        var yt = this.note.getYForTopText(this.text_line) - 1;\n\t        var yb = stave.getYForBottomText(this.text_line);\n\t        y = yt + (yb - yt) / 2 + text_height / 2;\n\t      } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n\t        y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n\t        if (has_stem) {\n\t          y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n\t        }\n\t      } else /* CENTER_STEM */{\n\t          var extents = this.note.getStemExtents();\n\t          y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n\t        }\n\t\n\t      L('Rendering annotation: ', this.text, x, y);\n\t      this.context.fillText(this.text, x, y);\n\t      this.context.restore();\n\t    }\n\t  }]);\n\n\t  return Annotation;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Bend = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements tablature bends.\n\t\n\t/**\n\t   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n\t   @param release If true, render a release. (DEPRECATED)\n\t   @param phrase If set, ignore \"text\" and \"release\", and use the more\n\t                 sophisticated phrase specified.\n\t\n\t   Example of a phrase:\n\t\n\t     [{\n\t       type: UP,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: DOWN,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: UP,\n\t       text: \"half\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: UP,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: DOWN,\n\t       text: \"1 1/2\"\n\t       width: 8;\n\t     }]\n\t */\n\tvar Bend = exports.Bend = function (_Modifier) {\n\t  _inherits(Bend, _Modifier);\n\t\n\t  _createClass(Bend, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange bends in `ModifierContext`\n\t    value: function format(bends, state) {\n\t      if (!bends || bends.length === 0) return false;\n\t\n\t      var last_width = 0;\n\t      // Bends are always on top.\n\t      var text_line = state.top_text_line;\n\t\n\t      // Format Bends\n\t      for (var i = 0; i < bends.length; ++i) {\n\t        var bend = bends[i];\n\t        bend.setXShift(last_width);\n\t        last_width = bend.getWidth();\n\t        bend.setTextLine(text_line);\n\t      }\n\t\n\t      state.right_shift += last_width;\n\t      state.top_text_line += 1;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'bends';\n\t    }\n\t  }, {\n\t    key: 'UP',\n\t    get: function get() {\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'DOWN',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }]);\n\t\n\t  function Bend(text, release, phrase) {\n\t    _classCallCheck(this, Bend);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Bend.__proto__ || Object.getPrototypeOf(Bend)).call(this));\n\t\n\t    _this.setAttribute('type', 'Bend');\n\t\n\t    _this.text = text;\n\t    _this.x_shift = 0;\n\t    _this.release = release || false;\n\t    _this.font = '10pt Arial';\n\t    _this.render_options = {\n\t      line_width: 1.5,\n\t      line_style: '#777777',\n\t      bend_width: 8,\n\t      release_width: 8\n\t    };\n\t\n\t    if (phrase) {\n\t      _this.phrase = phrase;\n\t    } else {\n\t      // Backward compatibility\n\t      _this.phrase = [{ type: Bend.UP, text: _this.text }];\n\t      if (_this.release) _this.phrase.push({ type: Bend.DOWN, text: '' });\n\t    }\n\t\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Bend, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Bend.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(value) {\n\t      this.x_shift = value;\n\t      this.updateWidth();\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t  }, {\n\t    key: 'getText',\n\t    value: function getText() {\n\t      return this.text;\n\t    }\n\t  }, {\n\t    key: 'updateWidth',\n\t    value: function updateWidth() {\n\t      var that = this;\n\t\n\t      function measure_text(text) {\n\t        var text_width = void 0;\n\t        if (that.context) {\n\t          text_width = that.context.measureText(text).width;\n\t        } else {\n\t          text_width = _tables.Flow.textWidth(text);\n\t        }\n\t\n\t        return text_width;\n\t      }\n\t\n\t      var total_width = 0;\n\t      for (var i = 0; i < this.phrase.length; ++i) {\n\t        var bend = this.phrase[i];\n\t        if ('width' in bend) {\n\t          total_width += bend.width;\n\t        } else {\n\t          var additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n\t\n\t          bend.width = _vex.Vex.Max(additional_width, measure_text(bend.text)) + 3;\n\t          bend.draw_width = bend.width / 2;\n\t          total_width += bend.width;\n\t        }\n\t      }\n\t\n\t      this.setWidth(total_width + this.x_shift);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.RIGHT, this.index);\n\t      start.x += 3;\n\t      start.y += 0.5;\n\t      var x_shift = this.x_shift;\n\t\n\t      var ctx = this.context;\n\t      var bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n\t      var annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n\t      var that = this;\n\t\n\t      function renderBend(x, y, width, height) {\n\t        var cp_x = x + width;\n\t        var cp_y = y;\n\t\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.setLineWidth(that.render_options.line_width);\n\t        ctx.setStrokeStyle(that.render_options.line_style);\n\t        ctx.setFillStyle(that.render_options.line_style);\n\t        ctx.moveTo(x, y);\n\t        ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n\t        ctx.stroke();\n\t        ctx.restore();\n\t      }\n\t\n\t      function renderRelease(x, y, width, height) {\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.setLineWidth(that.render_options.line_width);\n\t        ctx.setStrokeStyle(that.render_options.line_style);\n\t        ctx.setFillStyle(that.render_options.line_style);\n\t        ctx.moveTo(x, height);\n\t        ctx.quadraticCurveTo(x + width, height, x + width, y);\n\t        ctx.stroke();\n\t        ctx.restore();\n\t      }\n\t\n\t      function renderArrowHead(x, y, direction) {\n\t        var width = 4;\n\t        var dir = direction || 1;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(x, y);\n\t        ctx.lineTo(x - width, y + width * dir);\n\t        ctx.lineTo(x + width, y + width * dir);\n\t        ctx.closePath();\n\t        ctx.fill();\n\t      }\n\t\n\t      function renderText(x, text) {\n\t        ctx.save();\n\t        ctx.setRawFont(that.font);\n\t        var render_x = x - ctx.measureText(text).width / 2;\n\t        ctx.fillText(text, render_x, annotation_y);\n\t        ctx.restore();\n\t      }\n\t\n\t      var last_bend = null;\n\t      var last_drawn_width = 0;\n\t      for (var i = 0; i < this.phrase.length; ++i) {\n\t        var bend = this.phrase[i];\n\t        if (i === 0) bend.draw_width += x_shift;\n\t\n\t        last_drawn_width = bend.draw_width + (last_bend ? last_bend.draw_width : 0) - (i === 1 ? x_shift : 0);\n\t        if (bend.type === Bend.UP) {\n\t          if (last_bend && last_bend.type === Bend.UP) {\n\t            renderArrowHead(start.x, bend_height);\n\t          }\n\t\n\t          renderBend(start.x, start.y, last_drawn_width, bend_height);\n\t        }\n\t\n\t        if (bend.type === Bend.DOWN) {\n\t          if (last_bend && last_bend.type === Bend.UP) {\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t\n\t          if (last_bend && last_bend.type === Bend.DOWN) {\n\t            renderArrowHead(start.x, start.y, -1);\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t\n\t          if (last_bend === null) {\n\t            last_drawn_width = bend.draw_width;\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t        }\n\t\n\t        renderText(start.x + last_drawn_width, bend.text);\n\t        last_bend = bend;\n\t        last_bend.x = start.x;\n\t\n\t        start.x += last_drawn_width;\n\t      }\n\t\n\t      // Final arrowhead and text\n\t      if (last_bend.type === Bend.UP) {\n\t        renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n\t      } else if (last_bend.type === Bend.DOWN) {\n\t        renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Bend;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Vibrato = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements vibratos.\n\t\n\tvar Vibrato = exports.Vibrato = function (_Modifier) {\n\t  _inherits(Vibrato, _Modifier);\n\t\n\t  _createClass(Vibrato, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange vibratos inside a `ModifierContext`.\n\t    value: function format(vibratos, state, context) {\n\t      if (!vibratos || vibratos.length === 0) return false;\n\t\n\t      // Vibratos are always on top.\n\t      var text_line = state.top_text_line;\n\t      var width = 0;\n\t      var shift = state.right_shift - 7;\n\t\n\t      // If there's a bend, drop the text line\n\t      var bends = context.getModifiers(_bend.Bend.CATEGORY);\n\t      if (bends && bends.length > 0) {\n\t        text_line--;\n\t      }\n\t\n\t      // Format Vibratos\n\t      for (var i = 0; i < vibratos.length; ++i) {\n\t        var vibrato = vibratos[i];\n\t        vibrato.setXShift(shift);\n\t        vibrato.setTextLine(text_line);\n\t        width += vibrato.getWidth();\n\t        shift += width;\n\t      }\n\t\n\t      state.right_shift += width;\n\t      state.top_text_line += 1;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'vibratos';\n\t    }\n\t  }]);\n\t\n\t  function Vibrato() {\n\t    _classCallCheck(this, Vibrato);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Vibrato.__proto__ || Object.getPrototypeOf(Vibrato)).call(this));\n\t\n\t    _this.setAttribute('type', 'Vibrato');\n\t\n\t    _this.position = _modifier.Modifier.Position.RIGHT;\n\t    _this.render_options = {\n\t      harsh: false,\n\t      vibrato_width: 20,\n\t      wave_height: 6,\n\t      wave_width: 4,\n\t      wave_girth: 2\n\t    };\n\t\n\t    _this.setVibratoWidth(_this.render_options.vibrato_width);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Vibrato, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Vibrato.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setHarsh',\n\t    value: function setHarsh(harsh) {\n\t      this.render_options.harsh = harsh;return this;\n\t    }\n\t  }, {\n\t    key: 'setVibratoWidth',\n\t    value: function setVibratoWidth(width) {\n\t      this.render_options.vibrato_width = width;\n\t      this.setWidth(width);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t\n\t      if (!this.note) {\n\t        throw new _vex.Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.RIGHT, this.index);\n\t\n\t      var vx = start.x + this.x_shift;\n\t      var vy = this.note.getYForTopText(this.text_line) + 2;\n\t\n\t      Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n\t    }\n\t\n\t    // Static rendering method that can be called from\n\t    // other classes (e.g. VibratoBracket)\n\t\n\t  }], [{\n\t    key: 'renderVibrato',\n\t    value: function renderVibrato(ctx, x, y, opts) {\n\t      var harsh = opts.harsh;\n\t      var vibrato_width = opts.vibrato_width;\n\t      var wave_width = opts.wave_width;\n\t      var wave_girth = opts.wave_girth;\n\t      var wave_height = opts.wave_height;\n\t\n\t      var num_waves = vibrato_width / wave_width;\n\t\n\t      ctx.beginPath();\n\t\n\t      var i = void 0;\n\t      if (harsh) {\n\t        ctx.moveTo(x, y + wave_girth + 1);\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.lineTo(x + wave_width, y - wave_height / 2);\n\t          x += wave_width;\n\t          ctx.lineTo(x + wave_width, y + wave_height / 2);\n\t          x += wave_width;\n\t        }\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n\t          x -= wave_width;\n\t          ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n\t          x -= wave_width;\n\t        }\n\t        ctx.fill();\n\t      } else {\n\t        ctx.moveTo(x, y + wave_girth);\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n\t          x += wave_width;\n\t          ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n\t          x += wave_width;\n\t        }\n\t\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n\t          x -= wave_width;\n\t          ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n\t          x -= wave_width;\n\t        }\n\t        ctx.fill();\n\t      }\n\t    }\n\t  }]);\n\n\t  return Vibrato;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stave = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _staverepetition = __webpack_require__(46);\n\t\n\tvar _stavesection = __webpack_require__(47);\n\t\n\tvar _stavetempo = __webpack_require__(48);\n\t\n\tvar _stavetext = __webpack_require__(49);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _keysignature = __webpack_require__(52);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tvar _stavevolta = __webpack_require__(54);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar Stave = exports.Stave = function (_Element) {\n\t  _inherits(Stave, _Element);\n\t\n\t  function Stave(x, y, width, options) {\n\t    _classCallCheck(this, Stave);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stave.__proto__ || Object.getPrototypeOf(Stave)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stave');\n\t\n\t    _this.x = x;\n\t    _this.y = y;\n\t    _this.width = width;\n\t    _this.formatted = false;\n\t    _this.start_x = x + 5;\n\t    _this.end_x = x + width;\n\t    _this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n\t    _this.measure = 0;\n\t    _this.clef = 'treble';\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 8,\n\t      weight: ''\n\t    };\n\t    _this.options = {\n\t      vertical_bar_width: 10, // Width around vertical bar end-marker\n\t      glyph_spacing_px: 10,\n\t      num_lines: 5,\n\t      fill_style: '#999999',\n\t      left_bar: true, // draw vertical bar on left\n\t      right_bar: true, // draw vertical bar on right\n\t      spacing_between_lines_px: 10, // in pixels\n\t      space_above_staff_ln: 4, // in staff lines\n\t      space_below_staff_ln: 4, // in staff lines\n\t      top_text_position: 1 };\n\t    _this.bounds = { x: _this.x, y: _this.y, w: _this.width, h: 0 };\n\t    _vex.Vex.Merge(_this.options, options);\n\t\n\t    _this.resetLines();\n\t\n\t    var BARTYPE = _stavebarline.Barline.type;\n\t    // beg bar\n\t    _this.addModifier(new _stavebarline.Barline(_this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n\t    // end bar\n\t    _this.addEndModifier(new _stavebarline.Barline(_this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Stave, [{\n\t    key: 'space',\n\t    value: function space(spacing) {\n\t      return this.options.spacing_between_lines_px * spacing;\n\t    }\n\t  }, {\n\t    key: 'resetLines',\n\t    value: function resetLines() {\n\t      this.options.line_config = [];\n\t      for (var i = 0; i < this.options.num_lines; i++) {\n\t        this.options.line_config.push({ visible: true });\n\t      }\n\t      this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n\t      this.options.bottom_text_position = this.options.num_lines;\n\t    }\n\t  }, {\n\t    key: 'getOptions',\n\t    value: function getOptions() {\n\t      return this.options;\n\t    }\n\t  }, {\n\t    key: 'setNoteStartX',\n\t    value: function setNoteStartX(x) {\n\t      if (!this.formatted) this.format();\n\t\n\t      this.start_x = x;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getNoteStartX',\n\t    value: function getNoteStartX() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.start_x;\n\t    }\n\t  }, {\n\t    key: 'getNoteEndX',\n\t    value: function getNoteEndX() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.end_x;\n\t    }\n\t  }, {\n\t    key: 'getTieStartX',\n\t    value: function getTieStartX() {\n\t      return this.start_x;\n\t    }\n\t  }, {\n\t    key: 'getTieEndX',\n\t    value: function getTieEndX() {\n\t      return this.x + this.width;\n\t    }\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'getNumLines',\n\t    value: function getNumLines() {\n\t      return this.options.num_lines;\n\t    }\n\t  }, {\n\t    key: 'setNumLines',\n\t    value: function setNumLines(lines) {\n\t      this.options.num_lines = parseInt(lines, 10);\n\t      this.resetLines();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setY',\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'getTopLineTopY',\n\t    value: function getTopLineTopY() {\n\t      return this.getYForLine(0) - _tables.Flow.STAVE_LINE_THICKNESS / 2;\n\t    }\n\t  }, {\n\t    key: 'getBottomLineBottomY',\n\t    value: function getBottomLineBottomY() {\n\t      return this.getYForLine(this.getNumLines() - 1) + _tables.Flow.STAVE_LINE_THICKNESS / 2;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      var shift = x - this.x;\n\t      this.formatted = false;\n\t      this.x = x;\n\t      this.start_x += shift;\n\t      this.end_x += shift;\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        var mod = this.modifiers[i];\n\t        if (mod.x !== undefined) {\n\t          mod.x += shift;\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.formatted = false;\n\t      this.width = width;\n\t      this.end_x = this.x + width;\n\t\n\t      // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n\t      // this.modifiers[1].setX(this.end_x);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      return _extends({\n\t        fillStyle: this.options.fill_style,\n\t        strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n\t        lineWidth: _tables.Flow.STAVE_LINE_THICKNESS\n\t      }, this.style || {});\n\t    }\n\t  }, {\n\t    key: 'setMeasure',\n\t    value: function setMeasure(measure) {\n\t      this.measure = measure;return this;\n\t    }\n\t\n\t    /**\n\t     * Gets the pixels to shift from the beginning of the stave\n\t     * following the modifier at the provided index\n\t     * @param  {Number} index The index from which to determine the shift\n\t     * @return {Number}       The amount of pixels shifted\n\t     */\n\t\n\t  }, {\n\t    key: 'getModifierXShift',\n\t    value: function getModifierXShift() {\n\t      var index = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t      if (typeof index !== 'number') {\n\t        throw new _vex.Vex.RERR('InvalidIndex', 'Must be of number type');\n\t      }\n\t\n\t      if (!this.formatted) this.format();\n\t\n\t      if (this.getModifiers(_stavemodifier.StaveModifier.Position.BEGIN).length === 1) {\n\t        return 0;\n\t      }\n\t\n\t      var start_x = this.start_x - this.x;\n\t      var begBarline = this.modifiers[0];\n\t      if (begBarline.getType() === _stavebarline.Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n\t        start_x -= begBarline.getWidth();\n\t      }\n\t\n\t      return start_x;\n\t    }\n\t\n\t    // Coda & Segno Symbol functions\n\t\n\t  }, {\n\t    key: 'setRepetitionTypeLeft',\n\t    value: function setRepetitionTypeLeft(type, y) {\n\t      this.modifiers.push(new _staverepetition.Repetition(type, this.x, y));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRepetitionTypeRight',\n\t    value: function setRepetitionTypeRight(type, y) {\n\t      this.modifiers.push(new _staverepetition.Repetition(type, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Volta functions\n\t\n\t  }, {\n\t    key: 'setVoltaType',\n\t    value: function setVoltaType(type, number_t, y) {\n\t      this.modifiers.push(new _stavevolta.Volta(type, number_t, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Section functions\n\t\n\t  }, {\n\t    key: 'setSection',\n\t    value: function setSection(section, y) {\n\t      this.modifiers.push(new _stavesection.StaveSection(section, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Tempo functions\n\t\n\t  }, {\n\t    key: 'setTempo',\n\t    value: function setTempo(tempo, y) {\n\t      this.modifiers.push(new _stavetempo.StaveTempo(tempo, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Text functions\n\t\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text, position, options) {\n\t      this.modifiers.push(new _stavetext.StaveText(text, position, options));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getHeight',\n\t    value: function getHeight() {\n\t      return this.height;\n\t    }\n\t  }, {\n\t    key: 'getSpacingBetweenLines',\n\t    value: function getSpacingBetweenLines() {\n\t      return this.options.spacing_between_lines_px;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n\t    }\n\t  }, {\n\t    key: 'getBottomY',\n\t    value: function getBottomY() {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n\t\n\t      return score_bottom;\n\t    }\n\t  }, {\n\t    key: 'getBottomLineY',\n\t    value: function getBottomLineY() {\n\t      return this.getYForLine(this.options.num_lines);\n\t    }\n\t\n\t    // This returns the y for the *center* of a staff line\n\t\n\t  }, {\n\t    key: 'getYForLine',\n\t    value: function getYForLine(line) {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t\n\t      var y = this.y + line * spacing + headroom * spacing;\n\t\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'getLineForY',\n\t    value: function getLineForY(y) {\n\t      // Does the reverse of getYForLine - somewhat dumb and just calls\n\t      // getYForLine until the right value is reaches\n\t\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t      return (y - this.y) / spacing - headroom;\n\t    }\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(line) {\n\t      var l = line || 0;\n\t      return this.getYForLine(-l - this.options.top_text_position);\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(line) {\n\t      var l = line || 0;\n\t      return this.getYForLine(this.options.bottom_text_position + l);\n\t    }\n\t  }, {\n\t    key: 'getYForNote',\n\t    value: function getYForNote(line) {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t      var y = this.y + headroom * spacing + 5 * spacing - line * spacing;\n\t\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'getYForGlyphs',\n\t    value: function getYForGlyphs() {\n\t      return this.getYForLine(3);\n\t    }\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier, position) {\n\t      if (position !== undefined) {\n\t        modifier.setPosition(position);\n\t      }\n\t\n\t      modifier.setStave(this);\n\t      this.formatted = false;\n\t      this.modifiers.push(modifier);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndModifier',\n\t    value: function addEndModifier(modifier) {\n\t      this.addModifier(modifier, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t\n\t    // Bar Line functions\n\t\n\t  }, {\n\t    key: 'setBegBarType',\n\t    value: function setBegBarType(type) {\n\t      // Only valid bar types at beginning of stave is none, single or begin repeat\n\t      var _Barline$type = _stavebarline.Barline.type;\n\t      var SINGLE = _Barline$type.SINGLE;\n\t      var REPEAT_BEGIN = _Barline$type.REPEAT_BEGIN;\n\t      var NONE = _Barline$type.NONE;\n\t\n\t      if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n\t        this.modifiers[0].setType(type);\n\t        this.formatted = false;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndBarType',\n\t    value: function setEndBarType(type) {\n\t      // Repeat end not valid at end of stave\n\t      if (type !== _stavebarline.Barline.type.REPEAT_BEGIN) {\n\t        this.modifiers[1].setType(type);\n\t        this.formatted = false;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setClef',\n\t    value: function setClef(clefSpec, size, annotation, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      this.clef = clefSpec;\n\t      var clefs = this.getModifiers(position, _clef.Clef.CATEGORY);\n\t      if (clefs.length === 0) {\n\t        this.addClef(clefSpec, size, annotation, position);\n\t      } else {\n\t        clefs[0].setType(clefSpec, size, annotation);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndClef',\n\t    value: function setEndClef(clefSpec, size, annotation) {\n\t      this.setClef(clefSpec, size, annotation, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setKeySignature',\n\t    value: function setKeySignature(keySpec, cancelKeySpec, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      var keySignatures = this.getModifiers(position, _keysignature.KeySignature.CATEGORY);\n\t      if (keySignatures.length === 0) {\n\t        this.addKeySignature(keySpec, cancelKeySpec, position);\n\t      } else {\n\t        keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndKeySignature',\n\t    value: function setEndKeySignature(keySpec, cancelKeySpec) {\n\t      this.setKeySignature(keySpec, cancelKeySpec, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setTimeSignature',\n\t    value: function setTimeSignature(timeSpec, customPadding, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      var timeSignatures = this.getModifiers(position, _timesignature.TimeSignature.CATEGORY);\n\t      if (timeSignatures.length === 0) {\n\t        this.addTimeSignature(timeSpec, customPadding, position);\n\t      } else {\n\t        timeSignatures[0].setTimeSig(timeSpec);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndTimeSignature',\n\t    value: function setEndTimeSignature(timeSpec, customPadding) {\n\t      this.setTimeSignature(timeSpec, customPadding, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addKeySignature',\n\t    value: function addKeySignature(keySpec, cancelKeySpec, position) {\n\t      this.addModifier(new _keysignature.KeySignature(keySpec, cancelKeySpec), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addClef',\n\t    value: function addClef(clef, size, annotation, position) {\n\t      if (position === undefined || position === _stavemodifier.StaveModifier.Position.BEGIN) {\n\t        this.clef = clef;\n\t      }\n\t\n\t      this.addModifier(new _clef.Clef(clef, size, annotation), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndClef',\n\t    value: function addEndClef(clef, size, annotation) {\n\t      this.addClef(clef, size, annotation, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addTimeSignature',\n\t    value: function addTimeSignature(timeSpec, customPadding, position) {\n\t      this.addModifier(new _timesignature.TimeSignature(timeSpec, customPadding), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndTimeSignature',\n\t    value: function addEndTimeSignature(timeSpec, customPadding) {\n\t      this.addTimeSignature(timeSpec, customPadding, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addTrebleGlyph',\n\t    value: function addTrebleGlyph() {\n\t      this.addClef('treble');\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers(position, category) {\n\t      if (position === undefined) return this.modifiers;\n\t\n\t      return this.modifiers.filter(function (modifier) {\n\t        return position === modifier.getPosition() && (category === undefined || category === modifier.getCategory());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'sortByCategory',\n\t    value: function sortByCategory(items, order) {\n\t      for (var i = items.length - 1; i >= 0; i--) {\n\t        for (var j = 0; j < i; j++) {\n\t          if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n\t            var temp = items[j];\n\t            items[j] = items[j + 1];\n\t            items[j + 1] = temp;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      var begBarline = this.modifiers[0];\n\t      var endBarline = this.modifiers[1];\n\t\n\t      var begModifiers = this.getModifiers(_stavemodifier.StaveModifier.Position.BEGIN);\n\t      var endModifiers = this.getModifiers(_stavemodifier.StaveModifier.Position.END);\n\t\n\t      this.sortByCategory(begModifiers, {\n\t        barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3\n\t      });\n\t\n\t      this.sortByCategory(endModifiers, {\n\t        timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3\n\t      });\n\t\n\t      if (begModifiers.length > 1 && begBarline.getType() === _stavebarline.Barline.type.REPEAT_BEGIN) {\n\t        begModifiers.push(begModifiers.splice(0, 1)[0]);\n\t        begModifiers.splice(0, 0, new _stavebarline.Barline(_stavebarline.Barline.type.SINGLE));\n\t      }\n\t\n\t      if (endModifiers.indexOf(endBarline) > 0) {\n\t        endModifiers.splice(0, 0, new _stavebarline.Barline(_stavebarline.Barline.type.NONE));\n\t      }\n\t\n\t      var width = void 0;\n\t      var padding = void 0;\n\t      var modifier = void 0;\n\t      var offset = 0;\n\t      var x = this.x;\n\t      for (var i = 0; i < begModifiers.length; i++) {\n\t        modifier = begModifiers[i];\n\t        padding = modifier.getPadding(i + offset);\n\t        width = modifier.getWidth();\n\t\n\t        x += padding;\n\t        modifier.setX(x);\n\t        x += width;\n\t\n\t        if (padding + width === 0) offset--;\n\t      }\n\t\n\t      this.start_x = x;\n\t      x = this.x + this.width;\n\t\n\t      for (var _i = 0; _i < endModifiers.length; _i++) {\n\t        modifier = endModifiers[_i];\n\t        x -= modifier.getPadding(_i);\n\t        if (_i !== 0) {\n\t          x -= modifier.getWidth();\n\t        }\n\t\n\t        modifier.setX(x);\n\t\n\t        if (_i === 0) {\n\t          x -= modifier.getWidth();\n\t        }\n\t      }\n\t\n\t      this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n\t      this.formatted = true;\n\t    }\n\t\n\t    /**\n\t     * All drawing functions below need the context to be set.\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.formatted) this.format();\n\t\n\t      var num_lines = this.options.num_lines;\n\t      var width = this.width;\n\t      var x = this.x;\n\t      var y = void 0;\n\t\n\t      // Render lines\n\t      for (var line = 0; line < num_lines; line++) {\n\t        y = this.getYForLine(line);\n\t\n\t        this.applyStyle();\n\t        if (this.options.line_config[line].visible) {\n\t          this.context.beginPath();\n\t          this.context.moveTo(x, y);\n\t          this.context.lineTo(x + width, y);\n\t          this.context.stroke();\n\t        }\n\t        this.restoreStyle();\n\t      }\n\t\n\t      // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        // Only draw modifier if it has a draw function\n\t        if (typeof this.modifiers[i].draw === 'function') {\n\t          this.modifiers[i].draw(this, this.getModifierXShift(i));\n\t        }\n\t      }\n\t\n\t      // Render measure numbers\n\t      if (this.measure > 0) {\n\t        this.context.save();\n\t        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t        var text_width = this.context.measureText('' + this.measure).width;\n\t        y = this.getYForTopText(0) + 3;\n\t        this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n\t        this.context.restore();\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Draw Simple barlines for backward compatability\n\t    // Do not delete - draws the beginning bar of the stave\n\t\n\t  }, {\n\t    key: 'drawVertical',\n\t    value: function drawVertical(x, isDouble) {\n\t      this.drawVerticalFixed(this.x + x, isDouble);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalFixed',\n\t    value: function drawVerticalFixed(x, isDouble) {\n\t      this.checkContext();\n\t\n\t      var top_line = this.getYForLine(0);\n\t      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n\t      if (isDouble) {\n\t        this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n\t      }\n\t      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBar',\n\t    value: function drawVerticalBar(x) {\n\t      this.drawVerticalBarFixed(this.x + x, false);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBarFixed',\n\t    value: function drawVerticalBarFixed(x) {\n\t      this.checkContext();\n\t\n\t      var top_line = this.getYForLine(0);\n\t      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n\t      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n\t    }\n\t\n\t    /**\n\t     * Get the current configuration for the Stave.\n\t     * @return {Array} An array of configuration objects.\n\t     */\n\t\n\t  }, {\n\t    key: 'getConfigForLines',\n\t    value: function getConfigForLines() {\n\t      return this.options.line_config;\n\t    }\n\t\n\t    /**\n\t     * Configure properties of the lines in the Stave\n\t     * @param line_number The index of the line to configure.\n\t     * @param line_config An configuration object for the specified line.\n\t     * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n\t     *   range of the number of lines specified in the constructor.\n\t     */\n\t\n\t  }, {\n\t    key: 'setConfigForLine',\n\t    value: function setConfigForLine(line_number, line_config) {\n\t      if (line_number >= this.options.num_lines || line_number < 0) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n\t      }\n\t\n\t      if (line_config.visible === undefined) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n\t      }\n\t\n\t      if (typeof line_config.visible !== 'boolean') {\n\t        throw new _vex.Vex.RERR('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n\t      }\n\t\n\t      this.options.line_config[line_number] = line_config;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the staff line configuration array for all of the lines at once.\n\t     * @param lines_configuration An array of line configuration objects.  These objects\n\t     *   are of the same format as the single one passed in to setLineConfiguration().\n\t     *   The caller can set null for any line config entry if it is desired that the default be used\n\t     * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n\t     *   exactly the same number of elements as the num_lines configuration object set in\n\t     *   the constructor.\n\t     */\n\t\n\t  }, {\n\t    key: 'setConfigForLines',\n\t    value: function setConfigForLines(lines_configuration) {\n\t      if (lines_configuration.length !== this.options.num_lines) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n\t      }\n\t\n\t      // Make sure the defaults are present in case an incomplete set of\n\t      //  configuration options were supplied.\n\t      for (var line_config in lines_configuration) {\n\t        // Allow 'null' to be used if the caller just wants the default for a particular node.\n\t        if (!lines_configuration[line_config]) {\n\t          lines_configuration[line_config] = this.options.line_config[line_config];\n\t        }\n\t        _vex.Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n\t      }\n\t\n\t      this.options.line_config = lines_configuration;\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Stave;\n\t}(_element.Element);\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Barline = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// Author Larry Kuhns 2011\n\t\n\tvar Barline = exports.Barline = function (_StaveModifier) {\n\t  _inherits(Barline, _StaveModifier);\n\t\n\t  _createClass(Barline, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'barlines';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        SINGLE: 1,\n\t        DOUBLE: 2,\n\t        END: 3,\n\t        REPEAT_BEGIN: 4,\n\t        REPEAT_END: 5,\n\t        REPEAT_BOTH: 6,\n\t        NONE: 7\n\t      };\n\t    }\n\t  }, {\n\t    key: 'typeString',\n\t    get: function get() {\n\t      return {\n\t        single: Barline.type.SINGLE,\n\t        double: Barline.type.DOUBLE,\n\t        end: Barline.type.END,\n\t        repeatBegin: Barline.type.REPEAT_BEGIN,\n\t        repeatEnd: Barline.type.REPEAT_END,\n\t        repeatBoth: Barline.type.REPEAT_BOTH,\n\t        none: Barline.type.NONE\n\t      };\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     */\n\t\n\t  }]);\n\t\n\t  function Barline(type) {\n\t    _classCallCheck(this, Barline);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Barline.__proto__ || Object.getPrototypeOf(Barline)).call(this));\n\t\n\t    _this.setAttribute('type', 'Barline');\n\t    _this.thickness = _tables.Flow.STAVE_LINE_THICKNESS;\n\t\n\t    var TYPE = Barline.type;\n\t    _this.widths = {};\n\t    _this.widths[TYPE.SINGLE] = 5;\n\t    _this.widths[TYPE.DOUBLE] = 5;\n\t    _this.widths[TYPE.END] = 5;\n\t    _this.widths[TYPE.REPEAT_BEGIN] = 5;\n\t    _this.widths[TYPE.REPEAT_END] = 5;\n\t    _this.widths[TYPE.REPEAT_BOTH] = 5;\n\t    _this.widths[TYPE.NONE] = 5;\n\t\n\t    _this.paddings = {};\n\t    _this.paddings[TYPE.SINGLE] = 0;\n\t    _this.paddings[TYPE.DOUBLE] = 0;\n\t    _this.paddings[TYPE.END] = 0;\n\t    _this.paddings[TYPE.REPEAT_BEGIN] = 15;\n\t    _this.paddings[TYPE.REPEAT_END] = 15;\n\t    _this.paddings[TYPE.REPEAT_BOTH] = 15;\n\t    _this.paddings[TYPE.NONE] = 0;\n\t\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setType(type);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Barline, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Barline.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\t\n\t      this.setWidth(this.widths[this.type]);\n\t      this.setPadding(this.paddings[this.type]);\n\t      return this;\n\t    }\n\t\n\t    // Draw barlines\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave) {\n\t      stave.checkContext();\n\t      this.setRendered();\n\t\n\t      switch (this.type) {\n\t        case Barline.type.SINGLE:\n\t          this.drawVerticalBar(stave, this.x, false);\n\t          break;\n\t        case Barline.type.DOUBLE:\n\t          this.drawVerticalBar(stave, this.x, true);\n\t          break;\n\t        case Barline.type.END:\n\t          this.drawVerticalEndBar(stave, this.x);\n\t          break;\n\t        case Barline.type.REPEAT_BEGIN:\n\t          // If the barline is shifted over (in front of clef/time/key)\n\t          // Draw vertical bar at the beginning.\n\t          this.drawRepeatBar(stave, this.x, true);\n\t          if (stave.getX() !== this.x) {\n\t            this.drawVerticalBar(stave, stave.getX());\n\t          }\n\t\n\t          break;\n\t        case Barline.type.REPEAT_END:\n\t          this.drawRepeatBar(stave, this.x, false);\n\t          break;\n\t        case Barline.type.REPEAT_BOTH:\n\t          this.drawRepeatBar(stave, this.x, false);\n\t          this.drawRepeatBar(stave, this.x, true);\n\t          break;\n\t        default:\n\t          // Default is NONE, so nothing to draw\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBar',\n\t    value: function drawVerticalBar(stave, x, double_bar) {\n\t      stave.checkContext();\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      if (double_bar) {\n\t        stave.context.fillRect(x - 3, topY, 1, botY - topY);\n\t      }\n\t      stave.context.fillRect(x, topY, 1, botY - topY);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalEndBar',\n\t    value: function drawVerticalEndBar(stave, x) {\n\t      stave.checkContext();\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      stave.context.fillRect(x - 5, topY, 1, botY - topY);\n\t      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\t    }\n\t  }, {\n\t    key: 'drawRepeatBar',\n\t    value: function drawRepeatBar(stave, x, begin) {\n\t      stave.checkContext();\n\t\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      var x_shift = 3;\n\t\n\t      if (!begin) {\n\t        x_shift = -5;\n\t      }\n\t\n\t      stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n\t      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\t\n\t      var dot_radius = 2;\n\t\n\t      // Shift dots left or right\n\t      if (begin) {\n\t        x_shift += 4;\n\t      } else {\n\t        x_shift -= 4;\n\t      }\n\t\n\t      var dot_x = x + x_shift + dot_radius / 2;\n\t\n\t      // calculate the y offset based on number of stave lines\n\t      var y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n\t      y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n\t      var dot_y = topY + y_offset + dot_radius / 2;\n\t\n\t      // draw the top repeat dot\n\t      stave.context.beginPath();\n\t      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n\t      stave.context.fill();\n\t\n\t      // draw the bottom repeat dot\n\t      dot_y += stave.getSpacingBetweenLines();\n\t      stave.context.beginPath();\n\t      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n\t      stave.context.fill();\n\t    }\n\t  }]);\n\n\t  return Barline;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveModifier = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A base class for stave modifiers (e.g. clefs, key signatures)\n\t\n\tvar StaveModifier = exports.StaveModifier = function (_Element) {\n\t  _inherits(StaveModifier, _Element);\n\t\n\t  _createClass(StaveModifier, null, [{\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        RIGHT: 2,\n\t        ABOVE: 3,\n\t        BELOW: 4,\n\t        BEGIN: 5,\n\t        END: 6\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveModifier() {\n\t    _classCallCheck(this, StaveModifier);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveModifier.__proto__ || Object.getPrototypeOf(StaveModifier)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveModifier');\n\t\n\t    _this.padding = 10;\n\t    _this.position = StaveModifier.Position.ABOVE;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveModifier, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      this.position = position;return this;\n\t    }\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;return this;\n\t    }\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return '';\n\t    }\n\t  }, {\n\t    key: 'makeSpacer',\n\t    value: function makeSpacer(padding) {\n\t      // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n\t      // instead of this hack.\n\t\n\t      return {\n\t        getContext: function getContext() {\n\t          return true;\n\t        },\n\t        setStave: function setStave() {},\n\t        renderToStave: function renderToStave() {},\n\t        getMetrics: function getMetrics() {\n\t          return { width: padding };\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'placeGlyphOnLine',\n\t    value: function placeGlyphOnLine(glyph, stave, line) {\n\t      glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n\t    }\n\t  }, {\n\t    key: 'getPadding',\n\t    value: function getPadding(index) {\n\t      return index !== undefined && index < 2 ? 0 : this.padding;\n\t    }\n\t  }, {\n\t    key: 'setPadding',\n\t    value: function setPadding(padding) {\n\t      this.padding = padding;return this;\n\t    }\n\t  }]);\n\n\t  return StaveModifier;\n\t}(_element.Element);\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Repetition = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar Repetition = exports.Repetition = function (_StaveModifier) {\n\t  _inherits(Repetition, _StaveModifier);\n\t\n\t  _createClass(Repetition, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'repetitions';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1, // no coda or segno\n\t        CODA_LEFT: 2, // coda at beginning of stave\n\t        CODA_RIGHT: 3, // coda at end of stave\n\t        SEGNO_LEFT: 4, // segno at beginning of stave\n\t        SEGNO_RIGHT: 5, // segno at end of stave\n\t        DC: 6, // D.C. at end of stave\n\t        DC_AL_CODA: 7, // D.C. al coda at end of stave\n\t        DC_AL_FINE: 8, // D.C. al Fine end of stave\n\t        DS: 9, // D.S. at end of stave\n\t        DS_AL_CODA: 10, // D.S. al coda at end of stave\n\t        DS_AL_FINE: 11, // D.S. al Fine at end of stave\n\t        FINE: 12 };\n\t    }\n\t  }]);\n\t\n\t  function Repetition(type, x, y_shift) {\n\t    _classCallCheck(this, Repetition);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Repetition.__proto__ || Object.getPrototypeOf(Repetition)).call(this));\n\t\n\t    _this.setAttribute('type', 'Repetition');\n\t\n\t    _this.symbol_type = type;\n\t    _this.x = x;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = y_shift;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 12,\n\t      weight: 'bold italic'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Repetition, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Repetition.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.x_shift = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, x) {\n\t      this.setRendered();\n\t\n\t      switch (this.symbol_type) {\n\t        case Repetition.type.CODA_RIGHT:\n\t          this.drawCodaFixed(stave, x + stave.width);\n\t          break;\n\t        case Repetition.type.CODA_LEFT:\n\t          this.drawSymbolText(stave, x, 'Coda', true);\n\t          break;\n\t        case Repetition.type.SEGNO_LEFT:\n\t          this.drawSignoFixed(stave, x);\n\t          break;\n\t        case Repetition.type.SEGNO_RIGHT:\n\t          this.drawSignoFixed(stave, x + stave.width);\n\t          break;\n\t        case Repetition.type.DC:\n\t          this.drawSymbolText(stave, x, 'D.C.', false);\n\t          break;\n\t        case Repetition.type.DC_AL_CODA:\n\t          this.drawSymbolText(stave, x, 'D.C. al', true);\n\t          break;\n\t        case Repetition.type.DC_AL_FINE:\n\t          this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n\t          break;\n\t        case Repetition.type.DS:\n\t          this.drawSymbolText(stave, x, 'D.S.', false);\n\t          break;\n\t        case Repetition.type.DS_AL_CODA:\n\t          this.drawSymbolText(stave, x, 'D.S. al', true);\n\t          break;\n\t        case Repetition.type.DS_AL_FINE:\n\t          this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n\t          break;\n\t        case Repetition.type.FINE:\n\t          this.drawSymbolText(stave, x, 'Fine', false);\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawCodaFixed',\n\t    value: function drawCodaFixed(stave, x) {\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      _glyph.Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawSignoFixed',\n\t    value: function drawSignoFixed(stave, x) {\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      _glyph.Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawSymbolText',\n\t    value: function drawSymbolText(stave, x, text, draw_coda) {\n\t      var ctx = stave.checkContext();\n\t\n\t      ctx.save();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      // Default to right symbol\n\t      var text_x = 0 + this.x_shift;\n\t      var symbol_x = x + this.x_shift;\n\t      if (this.symbol_type === Repetition.type.CODA_LEFT) {\n\t        // Offset Coda text to right of stave beginning\n\t        text_x = this.x + stave.options.vertical_bar_width;\n\t        symbol_x = text_x + ctx.measureText(text).width + 12;\n\t      } else {\n\t        // Offset Signo text to left stave end\n\t        symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n\t        text_x = symbol_x - +ctx.measureText(text).width - 12;\n\t      }\n\t\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      if (draw_coda) {\n\t        _glyph.Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n\t      }\n\t\n\t      ctx.fillText(text, text_x, y + 5);\n\t      ctx.restore();\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Repetition;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveSection = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar StaveSection = exports.StaveSection = function (_StaveModifier) {\n\t  _inherits(StaveSection, _StaveModifier);\n\t\n\t  _createClass(StaveSection, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavesection';\n\t    }\n\t  }]);\n\t\n\t  function StaveSection(section, x, shift_y) {\n\t    _classCallCheck(this, StaveSection);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveSection.__proto__ || Object.getPrototypeOf(StaveSection)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveSection');\n\t\n\t    _this.setWidth(16);\n\t    _this.section = section;\n\t    _this.x = x;\n\t    _this.shift_x = 0;\n\t    _this.shift_y = shift_y;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 12,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveSection, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveSection.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setStaveSection',\n\t    value: function setStaveSection(section) {\n\t      this.section = section;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, shift_x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = ctx.measureText('' + this.section).width;\n\t      var width = text_width + 6; // add left & right padding\n\t      if (width < 18) width = 18;\n\t      var height = 20;\n\t      //  Seems to be a good default y\n\t      var y = stave.getYForTopText(3) + this.shift_y;\n\t      var x = this.x + shift_x;\n\t      ctx.beginPath();\n\t      ctx.lineWidth = 2;\n\t      ctx.rect(x, y, width, height);\n\t      ctx.stroke();\n\t      x += (width - text_width) / 2;\n\t      ctx.fillText('' + this.section, x, y + 16);\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveSection;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveTempo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Radosaw Eichler 2012\n\t\n\tvar StaveTempo = exports.StaveTempo = function (_StaveModifier) {\n\t  _inherits(StaveTempo, _StaveModifier);\n\t\n\t  _createClass(StaveTempo, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavetempo';\n\t    }\n\t  }]);\n\t\n\t  function StaveTempo(tempo, x, shift_y) {\n\t    _classCallCheck(this, StaveTempo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveTempo.__proto__ || Object.getPrototypeOf(StaveTempo)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveTempo');\n\t\n\t    _this.tempo = tempo;\n\t    _this.position = _modifier.Modifier.Position.ABOVE;\n\t    _this.x = x;\n\t    _this.shift_x = 10;\n\t    _this.shift_y = shift_y;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 14,\n\t      weight: 'bold'\n\t    };\n\t    _this.render_options = {\n\t      glyph_font_scale: 30 };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveTempo, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveTempo.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setTempo',\n\t    value: function setTempo(tempo) {\n\t      this.tempo = tempo;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, shift_x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      var options = this.render_options;\n\t      // FIXME: What does the '38' mean? Why 38? Is that supposed to\n\t      // be the default font size for standard notation?\n\t      var scale = options.glyph_font_scale / 38;\n\t      var name = this.tempo.name;\n\t      var duration = this.tempo.duration;\n\t      var dots = this.tempo.dots;\n\t      var bpm = this.tempo.bpm;\n\t      var font = this.font;\n\t      var x = this.x + this.shift_x + shift_x;\n\t      var y = stave.getYForTopText(1) + this.shift_y;\n\t\n\t      ctx.save();\n\t\n\t      if (name) {\n\t        ctx.setFont(font.family, font.size, font.weight);\n\t        ctx.fillText(name, x, y);\n\t        x += ctx.measureText(name).width;\n\t      }\n\t\n\t      if (duration && bpm) {\n\t        ctx.setFont(font.family, font.size, 'normal');\n\t\n\t        if (name) {\n\t          x += ctx.measureText(' ').width;\n\t          ctx.fillText('(', x, y);\n\t          x += ctx.measureText('(').width;\n\t        }\n\t\n\t        var code = _tables.Flow.durationToGlyph(duration);\n\t\n\t        x += 3 * scale;\n\t        _glyph.Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n\t        x += code.getWidth() * scale;\n\t\n\t        // Draw stem and flags\n\t        if (code.stem) {\n\t          var stem_height = 30;\n\t\n\t          if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\t\n\t          stem_height *= scale;\n\t\n\t          var y_top = y - stem_height;\n\t          ctx.fillRect(x - scale, y_top, scale, stem_height);\n\t\n\t          if (code.flag) {\n\t            _glyph.Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\t\n\t            if (!dots) x += 6 * scale;\n\t          }\n\t        }\n\t\n\t        // Draw dot\n\t        for (var i = 0; i < dots; i++) {\n\t          x += 6 * scale;\n\t          ctx.beginPath();\n\t          ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n\t          ctx.fill();\n\t        }\n\t\n\t        ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveTempo;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveText = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2014\n\t\n\tvar StaveText = exports.StaveText = function (_StaveModifier) {\n\t  _inherits(StaveText, _StaveModifier);\n\t\n\t  _createClass(StaveText, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavetext';\n\t    }\n\t  }]);\n\t\n\t  function StaveText(text, position, options) {\n\t    _classCallCheck(this, StaveText);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveText.__proto__ || Object.getPrototypeOf(StaveText)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveText');\n\t\n\t    _this.setWidth(16);\n\t    _this.text = text;\n\t    _this.position = position;\n\t    _this.options = {\n\t      shift_x: 0,\n\t      shift_y: 0,\n\t      justification: _textnote.TextNote.Justification.CENTER\n\t    };\n\t    _vex.Vex.Merge(_this.options, options);\n\t\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 16,\n\t      weight: 'normal'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveText, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveText.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setStaveText',\n\t    value: function setStaveText(text) {\n\t      this.text = text;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      _vex.Vex.Merge(this.font, font);\n\t    }\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text) {\n\t      this.text = text;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = ctx.measureText('' + this.text).width;\n\t\n\t      var x = void 0;\n\t      var y = void 0;\n\t      var Position = _stavemodifier.StaveModifier.Position;\n\t      var Justification = _textnote.TextNote.Justification;\n\t      switch (this.position) {\n\t        case Position.LEFT:\n\t        case Position.RIGHT:\n\t          y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n\t          if (this.position === Position.LEFT) {\n\t            x = stave.getX() - text_width - 24 + this.options.shift_x;\n\t          } else {\n\t            x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n\t          }\n\t          break;\n\t        case Position.ABOVE:\n\t        case Position.BELOW:\n\t          x = stave.getX() + this.options.shift_x;\n\t          if (this.options.justification === Justification.CENTER) {\n\t            x += stave.getWidth() / 2 - text_width / 2;\n\t          } else if (this.options.justification === Justification.RIGHT) {\n\t            x += stave.getWidth() - text_width;\n\t          }\n\t\n\t          if (this.position === Position.ABOVE) {\n\t            y = stave.getYForTopText(2) + this.options.shift_y;\n\t          } else {\n\t            y = stave.getYForBottomText(2) + this.options.shift_y;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n\t      }\n\t\n\t      ctx.fillText('' + this.text, x, y + 4);\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveText;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// `TextNote` is a notation element that is positioned in time. Generally\n\t// meant for objects that sit above/below the staff and inline with each other.\n\t// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\t\n\tvar TextNote = exports.TextNote = function (_Note) {\n\t  _inherits(TextNote, _Note);\n\t\n\t  _createClass(TextNote, null, [{\n\t    key: 'Justification',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3\n\t      };\n\t    }\n\t\n\t    // Glyph data\n\t\n\t  }, {\n\t    key: 'GLYPHS',\n\t    get: function get() {\n\t      return {\n\t        'segno': {\n\t          code: 'v8c',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: -10\n\t        },\n\t        'tr': {\n\t          code: 'v1f',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'mordent_upper': {\n\t          code: 'v1e',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'mordent_lower': {\n\t          code: 'v45',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'f': {\n\t          code: 'vba',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'p': {\n\t          code: 'vbf',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'm': {\n\t          code: 'v62',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        's': {\n\t          code: 'v4a',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'z': {\n\t          code: 'v80',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'coda': {\n\t          code: 'v4d',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: -8\n\t        },\n\t        'pedal_open': {\n\t          code: 'v36',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'pedal_close': {\n\t          code: 'v5d',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 3\n\t        },\n\t        'caesura_straight': {\n\t          code: 'v34',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 2\n\t        },\n\t        'caesura_curved': {\n\t          code: 'v4b',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 2\n\t        },\n\t        'breath': {\n\t          code: 'v6c',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'tick': {\n\t          code: 'v6f',\n\t          point: 50,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'turn': {\n\t          code: 'v72',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'turn_inverted': {\n\t          code: 'v33',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t\n\t        // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n\t        'mordent': {\n\t          code: 'v1e',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TextNote(text_struct) {\n\t    _classCallCheck(this, TextNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextNote.__proto__ || Object.getPrototypeOf(TextNote)).call(this, text_struct));\n\t\n\t    _this.setAttribute('type', 'TextNote');\n\t\n\t    // Note properties\n\t    _this.text = text_struct.text;\n\t    _this.superscript = text_struct.superscript;\n\t    _this.subscript = text_struct.subscript;\n\t    _this.glyph_type = text_struct.glyph;\n\t    _this.glyph = null;\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 12,\n\t      weight: ''\n\t    };\n\t\n\t    // Set font\n\t    if (text_struct.font) _this.font = text_struct.font;\n\t\n\t    // Determine and set initial note width. Note that the text width is\n\t    // an approximation and isn't very accurate. The only way to accurately\n\t    // measure the length of text is with `canvasmeasureText()`\n\t    if (_this.glyph_type) {\n\t      var struct = TextNote.GLYPHS[_this.glyph_type];\n\t      if (!struct) throw new _vex.Vex.RERR('Invalid glyph type: ' + _this.glyph_type);\n\t\n\t      _this.glyph = new _glyph.Glyph(struct.code, struct.point, { cache: false });\n\t\n\t      if (struct.width) {\n\t        _this.setWidth(struct.width);\n\t      } else {\n\t        _this.setWidth(_this.glyph.getMetrics().width);\n\t      }\n\t\n\t      _this.glyph_struct = struct;\n\t    } else {\n\t      _this.setWidth(_tables.Flow.textWidth(_this.text));\n\t    }\n\t    _this.line = text_struct.line || 0;\n\t    _this.smooth = text_struct.smooth || false;\n\t    _this.ignore_ticks = text_struct.ignore_ticks || false;\n\t    _this.justification = TextNote.Justification.LEFT;\n\t    return _this;\n\t  }\n\t\n\t  // Set the horizontal justification of the TextNote\n\t\n\t\n\t  _createClass(TextNote, [{\n\t    key: 'setJustification',\n\t    value: function setJustification(just) {\n\t      this.justification = just;\n\t      return this;\n\t    }\n\t\n\t    // Set the Stave line on which the note should be placed\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;\n\t      return this;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.checkContext();\n\t\n\t      if (this.preFormatted) return;\n\t\n\t      if (this.smooth) {\n\t        this.setWidth(0);\n\t      } else {\n\t        if (this.glyph) {\n\t          // Width already set.\n\t        } else {\n\t          this.setWidth(this.context.measureText(this.text).width);\n\t        }\n\t      }\n\t\n\t      if (this.justification === TextNote.Justification.CENTER) {\n\t        this.extraLeftPx = this.width / 2;\n\t      } else if (this.justification === TextNote.Justification.RIGHT) {\n\t        this.extraLeftPx = this.width;\n\t      }\n\t\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    // Renders the TextNote\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var x = this.getAbsoluteX();\n\t      if (this.justification === TextNote.Justification.CENTER) {\n\t        x -= this.getWidth() / 2;\n\t      } else if (this.justification === TextNote.Justification.RIGHT) {\n\t        x -= this.getWidth();\n\t      }\n\t\n\t      var y = void 0;\n\t      if (this.glyph) {\n\t        y = this.stave.getYForLine(this.line + -3);\n\t        this.glyph.render(this.context, x + this.glyph_struct.x_shift, y + this.glyph_struct.y_shift);\n\t      } else {\n\t        y = this.stave.getYForLine(this.line + -3);\n\t        ctx.save();\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t        ctx.fillText(this.text, x, y);\n\t\n\t        // Width of the letter M gives us the approximate height of the text\n\t        var height = ctx.measureText('M').width;\n\t        // Get accurate width of text\n\t        var width = ctx.measureText(this.text).width;\n\t\n\t        // Write superscript\n\t        if (this.superscript) {\n\t          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n\t          ctx.fillText(this.superscript, x + width + 2, y - height / 2.2);\n\t        }\n\t\n\t        // Write subscript\n\t        if (this.subscript) {\n\t          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n\t          ctx.fillText(this.subscript, x + width + 2, y + height / 2.2 - 1);\n\t        }\n\t\n\t        ctx.restore();\n\t      }\n\t    }\n\t  }]);\n\n\t  return TextNote;\n\t}(_note.Note);\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Clef = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n\t// Co-author: Benjamin W. Bohl\n\t//\n\t// ## Description\n\t//\n\t// This file implements various types of clefs that can be rendered on a stave.\n\t//\n\t// See `tests/clef_tests.js` for usage examples.\n\t\n\t// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Clef.DEBUG) _vex.Vex.L('Vex.Flow.Clef', args);\n\t}\n\t\n\tvar Clef = exports.Clef = function (_StaveModifier) {\n\t  _inherits(Clef, _StaveModifier);\n\t\n\t  _createClass(Clef, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'clefs';\n\t    }\n\t\n\t    // Every clef name is associated with a glyph code from the font file\n\t    // and a default stave line number.\n\t\n\t  }, {\n\t    key: 'types',\n\t    get: function get() {\n\t      return {\n\t        'treble': {\n\t          code: 'v83',\n\t          line: 3\n\t        },\n\t        'bass': {\n\t          code: 'v79',\n\t          line: 1\n\t        },\n\t        'alto': {\n\t          code: 'vad',\n\t          line: 2\n\t        },\n\t        'tenor': {\n\t          code: 'vad',\n\t          line: 1\n\t        },\n\t        'percussion': {\n\t          code: 'v59',\n\t          line: 2\n\t        },\n\t        'soprano': {\n\t          code: 'vad',\n\t          line: 4\n\t        },\n\t        'mezzo-soprano': {\n\t          code: 'vad',\n\t          line: 3\n\t        },\n\t        'baritone-c': {\n\t          code: 'vad',\n\t          line: 0\n\t        },\n\t        'baritone-f': {\n\t          code: 'v79',\n\t          line: 2\n\t        },\n\t        'subbass': {\n\t          code: 'v79',\n\t          line: 0\n\t        },\n\t        'french': {\n\t          code: 'v83',\n\t          line: 4\n\t        },\n\t        'tab': {\n\t          code: 'v2f'\n\t        }\n\t      };\n\t    }\n\t\n\t    // Sizes affect the point-size of the clef.\n\t\n\t  }, {\n\t    key: 'sizes',\n\t    get: function get() {\n\t      return {\n\t        'default': 40,\n\t        'small': 32\n\t      };\n\t    }\n\t\n\t    // Annotations attach to clefs -- such as \"8\" for octave up or down.\n\t\n\t  }, {\n\t    key: 'annotations',\n\t    get: function get() {\n\t      return {\n\t        '8va': {\n\t          code: 'v8',\n\t          sizes: {\n\t            'default': {\n\t              point: 20,\n\t              attachments: {\n\t                'treble': {\n\t                  line: -1.2,\n\t                  x_shift: 11\n\t                }\n\t              }\n\t            },\n\t            'small': {\n\t              point: 18,\n\t              attachments: {\n\t                'treble': {\n\t                  line: -0.4,\n\t                  x_shift: 8\n\t                }\n\t              }\n\t            }\n\t          }\n\t        },\n\t        '8vb': {\n\t          code: 'v8',\n\t          sizes: {\n\t            'default': {\n\t              point: 20,\n\t              attachments: {\n\t                'treble': {\n\t                  line: 6.3,\n\t                  x_shift: 10\n\t                },\n\t                'bass': {\n\t                  line: 4,\n\t                  x_shift: 1\n\t                }\n\t              }\n\t            },\n\t            'small': {\n\t              point: 18,\n\t              attachments: {\n\t                'treble': {\n\t                  line: 5.8,\n\t                  x_shift: 6\n\t                },\n\t                'bass': {\n\t                  line: 3.5,\n\t                  x_shift: 0.5\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    // Create a new clef. The parameter `clef` must be a key from\n\t    // `Clef.types`.\n\t\n\t  }]);\n\t\n\t  function Clef(type, size, annotation) {\n\t    _classCallCheck(this, Clef);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Clef.__proto__ || Object.getPrototypeOf(Clef)).call(this));\n\t\n\t    _this.setAttribute('type', 'Clef');\n\t\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setType(type, size, annotation);\n\t    _this.setWidth(_this.glyph.getMetrics().width);\n\t    L('Creating clef:', type);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Clef, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Clef.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type, size, annotation) {\n\t      this.type = type;\n\t      this.clef = Clef.types[type];\n\t      if (size === undefined) {\n\t        this.size = 'default';\n\t      } else {\n\t        this.size = size;\n\t      }\n\t      this.clef.point = Clef.sizes[this.size];\n\t      this.glyph = new _glyph.Glyph(this.clef.code, this.clef.point);\n\t\n\t      // If an annotation, such as 8va, is specified, add it to the Clef object.\n\t      if (annotation !== undefined) {\n\t        var anno_dict = Clef.annotations[annotation];\n\t        this.annotation = {\n\t          code: anno_dict.code,\n\t          point: anno_dict.sizes[this.size].point,\n\t          line: anno_dict.sizes[this.size].attachments[this.type].line,\n\t          x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift\n\t        };\n\t\n\t        this.attachment = new _glyph.Glyph(this.annotation.code, this.annotation.point);\n\t        this.attachment.metrics.x_max = 0;\n\t        this.attachment.setXShift(this.annotation.x_shift);\n\t      } else {\n\t        this.annotation = undefined;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (this.type === 'tab' && !this.stave) {\n\t        throw new _vex.Vex.RERR('ClefError', \"Can't get width without stave.\");\n\t      }\n\t\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t\n\t      if (this.type !== 'tab') return this;\n\t\n\t      var glyphScale = void 0;\n\t      var glyphOffset = void 0;\n\t      var numLines = this.stave.getOptions().num_lines;\n\t      switch (numLines) {\n\t        case 8:\n\t          glyphScale = 55;\n\t          glyphOffset = 14;\n\t          break;\n\t        case 7:\n\t          glyphScale = 47;\n\t          glyphOffset = 8;\n\t          break;\n\t        case 6:\n\t          glyphScale = 40;\n\t          glyphOffset = 1;\n\t          break;\n\t        case 5:\n\t          glyphScale = 30;\n\t          glyphOffset = -6;\n\t          break;\n\t        case 4:\n\t          glyphScale = 23;\n\t          glyphOffset = -12;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('ClefError', 'Invalid number of lines: ' + numLines);\n\t      }\n\t\n\t      this.glyph.setPoint(glyphScale);\n\t      this.glyph.setYShift(glyphOffset);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) throw new _vex.Vex.RERR('ClefError', \"Can't draw clef without x.\");\n\t      if (!this.stave) throw new _vex.Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n\t      this.setRendered();\n\t\n\t      this.glyph.setStave(this.stave);\n\t      this.glyph.setContext(this.stave.context);\n\t      if (this.clef.line !== undefined) {\n\t        this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n\t      }\n\t\n\t      this.glyph.renderToStave(this.x);\n\t\n\t      if (this.annotation !== undefined) {\n\t        this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n\t        this.attachment.setStave(this.stave);\n\t        this.attachment.setContext(this.stave.context);\n\t        this.attachment.renderToStave(this.x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Clef;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.KeySignature = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implements key signatures. A key signature sits on a stave\n\t// and indicates the notes with implicit accidentals.\n\t\n\tvar KeySignature = exports.KeySignature = function (_StaveModifier) {\n\t  _inherits(KeySignature, _StaveModifier);\n\t\n\t  _createClass(KeySignature, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'keysignatures';\n\t    }\n\t\n\t    // Space between natural and following accidental depending\n\t    // on vertical position\n\t\n\t  }, {\n\t    key: 'accidentalSpacing',\n\t    get: function get() {\n\t      return {\n\t        '#': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'b': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'n': {\n\t          above: 4,\n\t          below: 1\n\t        },\n\t        '##': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'bb': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'db': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'd': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'bbs': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        '++': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '+': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '+-': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '++-': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'bs': {\n\t          above: 4,\n\t          below: 10\n\t        },\n\t        'bss': {\n\t          above: 4,\n\t          below: 10\n\t        }\n\t      };\n\t    }\n\t\n\t    // Create a new Key Signature based on a `key_spec`\n\t\n\t  }]);\n\t\n\t  function KeySignature(keySpec, cancelKeySpec, alterKeySpec) {\n\t    _classCallCheck(this, KeySignature);\n\t\n\t    var _this = _possibleConstructorReturn(this, (KeySignature.__proto__ || Object.getPrototypeOf(KeySignature)).call(this));\n\t\n\t    _this.setAttribute('type', 'KeySignature');\n\t\n\t    _this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n\t    _this.glyphs = [];\n\t    _this.xPositions = []; // relative to this.x\n\t    _this.paddingForced = false;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(KeySignature, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return KeySignature.CATEGORY;\n\t    }\n\t\n\t    // Add an accidental glyph to the `KeySignature` instance which represents\n\t    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n\t    // spacing will be included in the glyph's position\n\t\n\t  }, {\n\t    key: 'convertToGlyph',\n\t    value: function convertToGlyph(acc, nextAcc) {\n\t      var accGlyphData = _tables.Flow.accidentalCodes(acc.type);\n\t      var glyph = new _glyph.Glyph(accGlyphData.code, this.glyphFontScale);\n\t\n\t      // Determine spacing between current accidental and the next accidental\n\t      var extraWidth = 1;\n\t      if (acc.type === 'n' && nextAcc) {\n\t        var spacing = KeySignature.accidentalSpacing[nextAcc.type];\n\t        if (spacing) {\n\t          var isAbove = nextAcc.line >= acc.line;\n\t          extraWidth = isAbove ? spacing.above : spacing.below;\n\t        }\n\t      }\n\t\n\t      // Place the glyph on the stave\n\t      this.placeGlyphOnLine(glyph, this.stave, acc.line);\n\t      this.glyphs.push(glyph);\n\t\n\t      var xPosition = this.xPositions[this.xPositions.length - 1];\n\t      var glyphWidth = glyph.getMetrics().width + extraWidth;\n\t      // Store the next accidental's x position\n\t      this.xPositions.push(xPosition + glyphWidth);\n\t      // Expand size of key signature\n\t      this.width += glyphWidth;\n\t    }\n\t\n\t    // Cancel out a key signature provided in the `spec` parameter. This will\n\t    // place appropriate natural accidentals before the key signature.\n\t\n\t  }, {\n\t    key: 'cancelKey',\n\t    value: function cancelKey(spec) {\n\t      this.formatted = false;\n\t      this.cancelKeySpec = spec;\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'convertToCancelAccList',\n\t    value: function convertToCancelAccList(spec) {\n\t      // Get the accidental list for the cancelled key signature\n\t      var cancel_accList = _tables.Flow.keySignature(spec);\n\t\n\t      // If the cancelled key has a different accidental type, ie: # vs b\n\t      var different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n\t\n\t      // Determine how many naturals needed to add\n\t      var naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n\t\n\t      // Return if no naturals needed\n\t      if (naturals < 1) return;\n\t\n\t      // Get the line position for each natural\n\t      var cancelled = [];\n\t      for (var i = 0; i < naturals; i++) {\n\t        var index = i;\n\t        if (!different_types) {\n\t          index = cancel_accList.length - naturals + i;\n\t        }\n\t\n\t        var acc = cancel_accList[index];\n\t        cancelled.push({ type: 'n', line: acc.line });\n\t      }\n\t\n\t      // Combine naturals with main accidental list for the key signature\n\t      this.accList = cancelled.concat(this.accList);\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addToStave',\n\t    value: function addToStave(stave) {\n\t      this.paddingForced = true;\n\t      stave.addModifier(this);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Apply the accidental staff line placement based on the `clef` and\n\t    // the  accidental `type` for the key signature ('# or 'b').\n\t\n\t  }, {\n\t    key: 'convertAccLines',\n\t    value: function convertAccLines(clef, type) {\n\t      var offset = 0.0; // if clef === \"treble\"\n\t      var customLines = void 0; // when clef doesn't follow treble key sig shape\n\t\n\t      switch (clef) {\n\t        // Treble & Subbass both have offsets of 0, so are not included.\n\t        case 'soprano':\n\t          if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];else offset = -1;\n\t          break;\n\t        case 'mezzo-soprano':\n\t          if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];else offset = 1.5;\n\t          break;\n\t        case 'alto':\n\t          offset = 0.5;\n\t          break;\n\t        case 'tenor':\n\t          if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];else offset = -0.5;\n\t          break;\n\t        case 'baritone-f':\n\t        case 'baritone-c':\n\t          if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];else offset = 2;\n\t          break;\n\t        case 'bass':\n\t        case 'french':\n\t          offset = 1;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      // If there's a special case, assign those lines/spaces:\n\t      var i = void 0;\n\t      if (typeof customLines !== 'undefined') {\n\t        for (i = 0; i < this.accList.length; ++i) {\n\t          this.accList[i].line = customLines[i];\n\t        }\n\t      } else if (offset !== 0) {\n\t        for (i = 0; i < this.accList.length; ++i) {\n\t          this.accList[i].line += offset;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getPadding',\n\t    value: function getPadding(index) {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.glyphs.length === 0 || !this.paddingForced && index < 2 ? 0 : this.padding;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setKeySig',\n\t    value: function setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n\t      this.formatted = false;\n\t      this.keySpec = keySpec;\n\t      this.cancelKeySpec = cancelKeySpec;\n\t      this.alterKeySpec = alterKeySpec;\n\t\n\t      return this;\n\t    }\n\t\n\t    // Alter the accidentals of a key spec one by one.\n\t    // Each alteration is a new accidental that replaces the\n\t    // original accidental (or the canceled one).\n\t\n\t  }, {\n\t    key: 'alterKey',\n\t    value: function alterKey(alterKeySpec) {\n\t      this.formatted = false;\n\t      this.alterKeySpec = alterKeySpec;\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'convertToAlterAccList',\n\t    value: function convertToAlterAccList(alterKeySpec) {\n\t      var max = Math.min(alterKeySpec.length, this.accList.length);\n\t      for (var i = 0; i < max; ++i) {\n\t        if (alterKeySpec[i]) {\n\t          this.accList[i].type = alterKeySpec[i];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n\t      }\n\t\n\t      this.width = 0;\n\t      this.glyphs = [];\n\t      this.xPositions = [0]; // initialize with initial x position\n\t      this.accList = _tables.Flow.keySignature(this.keySpec);\n\t      if (this.cancelKeySpec) {\n\t        this.convertToCancelAccList(this.cancelKeySpec);\n\t      }\n\t      var firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n\t      if (this.alterKeySpec) {\n\t        this.convertToAlterAccList(this.alterKeySpec);\n\t      }\n\t\n\t      if (this.accList.length > 0) {\n\t        this.convertAccLines(this.stave.clef, firstAccidentalType);\n\t        for (var i = 0; i < this.accList.length; ++i) {\n\t          this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n\t        }\n\t      }\n\t\n\t      this.formatted = true;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n\t      }\n\t\n\t      if (!this.formatted) this.format();\n\t      this.setRendered();\n\t\n\t      for (var i = 0; i < this.glyphs.length; i++) {\n\t        var glyph = this.glyphs[i];\n\t        var x = this.x + this.xPositions[i];\n\t        glyph.setStave(this.stave);\n\t        glyph.setContext(this.stave.context);\n\t        glyph.renderToStave(x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return KeySignature;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TimeSignature = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _glyph3 = __webpack_require__(4);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Implements time signatures glyphs for staffs\n\t// See tables.js for the internal time signatures\n\t// representation\n\t\n\tvar assertIsValidFraction = function assertIsValidFraction(timeSpec) {\n\t  var numbers = timeSpec.split('/').filter(function (number) {\n\t    return number !== '';\n\t  });\n\t\n\t  if (numbers.length !== 2) {\n\t    throw new _vex.Vex.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec + '. Must be in the form \"<numerator>/<denominator>\"');\n\t  }\n\t\n\t  numbers.forEach(function (number) {\n\t    if (isNaN(Number(number))) {\n\t      throw new _vex.Vex.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec + '. Must contain two valid numbers.');\n\t    }\n\t  });\n\t};\n\t\n\tvar TimeSignature = exports.TimeSignature = function (_StaveModifier) {\n\t  _inherits(TimeSignature, _StaveModifier);\n\t\n\t  _createClass(TimeSignature, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'timesignatures';\n\t    }\n\t  }, {\n\t    key: 'glyphs',\n\t    get: function get() {\n\t      return {\n\t        'C': {\n\t          code: 'v41',\n\t          point: 40,\n\t          line: 2\n\t        },\n\t        'C|': {\n\t          code: 'vb6',\n\t          point: 40,\n\t          line: 2\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TimeSignature() {\n\t    var timeSpec = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t    var customPadding = arguments.length <= 1 || arguments[1] === undefined ? 15 : arguments[1];\n\t\n\t    _classCallCheck(this, TimeSignature);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TimeSignature.__proto__ || Object.getPrototypeOf(TimeSignature)).call(this));\n\t\n\t    _this.setAttribute('type', 'TimeSignature');\n\t\n\t    if (timeSpec === null) return _possibleConstructorReturn(_this);\n\t\n\t    var padding = customPadding;\n\t\n\t    _this.point = 40;\n\t    _this.topLine = 2;\n\t    _this.bottomLine = 4;\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setTimeSig(timeSpec);\n\t    _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n\t    _this.setPadding(padding);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TimeSignature, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return TimeSignature.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'parseTimeSpec',\n\t    value: function parseTimeSpec(timeSpec) {\n\t      if (timeSpec === 'C' || timeSpec === 'C|') {\n\t        var _TimeSignature$glyphs = TimeSignature.glyphs[timeSpec];\n\t        var line = _TimeSignature$glyphs.line;\n\t        var code = _TimeSignature$glyphs.code;\n\t        var point = _TimeSignature$glyphs.point;\n\t\n\t        return {\n\t          line: line,\n\t          num: false,\n\t          glyph: new _glyph3.Glyph(code, point)\n\t        };\n\t      }\n\t\n\t      assertIsValidFraction(timeSpec);\n\t\n\t      var _timeSpec$split$map = timeSpec.split('/').map(function (number) {\n\t        return number.split('');\n\t      });\n\t\n\t      var _timeSpec$split$map2 = _slicedToArray(_timeSpec$split$map, 2);\n\t\n\t      var topDigits = _timeSpec$split$map2[0];\n\t      var botDigits = _timeSpec$split$map2[1];\n\t\n\t\n\t      return {\n\t        num: true,\n\t        glyph: this.makeTimeSignatureGlyph(topDigits, botDigits)\n\t      };\n\t    }\n\t  }, {\n\t    key: 'makeTimeSignatureGlyph',\n\t    value: function makeTimeSignatureGlyph(topDigits, botDigits) {\n\t      var glyph = new _glyph3.Glyph('v0', this.point);\n\t      glyph.topGlyphs = [];\n\t      glyph.botGlyphs = [];\n\t\n\t      var topWidth = 0;\n\t      for (var i = 0; i < topDigits.length; ++i) {\n\t        var num = topDigits[i];\n\t        var topGlyph = new _glyph3.Glyph('v' + num, this.point);\n\t\n\t        glyph.topGlyphs.push(topGlyph);\n\t        topWidth += topGlyph.getMetrics().width;\n\t      }\n\t\n\t      var botWidth = 0;\n\t      for (var _i = 0; _i < botDigits.length; ++_i) {\n\t        var _num = botDigits[_i];\n\t        var botGlyph = new _glyph3.Glyph('v' + _num, this.point);\n\t\n\t        glyph.botGlyphs.push(botGlyph);\n\t        botWidth += botGlyph.getMetrics().width;\n\t      }\n\t\n\t      var width = topWidth > botWidth ? topWidth : botWidth;\n\t      var xMin = glyph.getMetrics().x_min;\n\t\n\t      glyph.getMetrics = function () {\n\t        return {\n\t          x_min: xMin,\n\t          x_max: xMin + width,\n\t          width: width\n\t        };\n\t      };\n\t\n\t      var topStartX = (width - topWidth) / 2.0;\n\t      var botStartX = (width - botWidth) / 2.0;\n\t\n\t      var that = this;\n\t      glyph.renderToStave = function renderToStave(x) {\n\t        var start_x = x + topStartX;\n\t        for (var _i2 = 0; _i2 < this.topGlyphs.length; ++_i2) {\n\t          var _glyph = this.topGlyphs[_i2];\n\t          _glyph3.Glyph.renderOutline(this.context, _glyph.metrics.outline, _glyph.scale, start_x + _glyph.x_shift, this.stave.getYForLine(that.topLine) + 1);\n\t          start_x += _glyph.getMetrics().width;\n\t        }\n\t\n\t        start_x = x + botStartX;\n\t        for (var _i3 = 0; _i3 < this.botGlyphs.length; ++_i3) {\n\t          var _glyph2 = this.botGlyphs[_i3];\n\t          that.placeGlyphOnLine(_glyph2, this.stave, _glyph2.line);\n\t          _glyph3.Glyph.renderOutline(this.context, _glyph2.metrics.outline, _glyph2.scale, start_x + _glyph2.x_shift, this.stave.getYForLine(that.bottomLine) + 1);\n\t          start_x += _glyph2.getMetrics().width;\n\t        }\n\t      };\n\t\n\t      return glyph;\n\t    }\n\t  }, {\n\t    key: 'getTimeSig',\n\t    value: function getTimeSig() {\n\t      return this.timeSig;\n\t    }\n\t  }, {\n\t    key: 'setTimeSig',\n\t    value: function setTimeSig(timeSpec) {\n\t      this.timeSig = this.parseTimeSpec(timeSpec);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) {\n\t        throw new _vex.Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      this.timeSig.glyph.setStave(this.stave);\n\t      this.timeSig.glyph.setContext(this.stave.context);\n\t      this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n\t      this.timeSig.glyph.renderToStave(this.x);\n\t    }\n\t  }]);\n\n\t  return TimeSignature;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Volta = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar Volta = exports.Volta = function (_StaveModifier) {\n\t  _inherits(Volta, _StaveModifier);\n\t\n\t  _createClass(Volta, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'voltas';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1,\n\t        BEGIN: 2,\n\t        MID: 3,\n\t        END: 4,\n\t        BEGIN_END: 5\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Volta(type, number, x, y_shift) {\n\t    _classCallCheck(this, Volta);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Volta.__proto__ || Object.getPrototypeOf(Volta)).call(this));\n\t\n\t    _this.setAttribute('type', 'Volta');\n\t    _this.volta = type;\n\t    _this.x = x;\n\t    _this.y_shift = y_shift;\n\t    _this.number = number;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 9,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Volta, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Volta.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      var width = stave.width;\n\t      var top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      var vert_height = 1.5 * stave.options.spacing_between_lines_px;\n\t      switch (this.volta) {\n\t        case Volta.type.BEGIN:\n\t          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n\t          break;\n\t        case Volta.type.END:\n\t          width -= 5;\n\t          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n\t          break;\n\t        case Volta.type.BEGIN_END:\n\t          width -= 3;\n\t          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n\t          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      // If the beginning of a volta, draw measure number\n\t      if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n\t        ctx.save();\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t        ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n\t        ctx.restore();\n\t      }\n\t\n\t      ctx.fillRect(this.x + x, top_y, width, 1);\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Volta;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabStave = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar TabStave = exports.TabStave = function (_Stave) {\n\t  _inherits(TabStave, _Stave);\n\t\n\t  function TabStave(x, y, width, options) {\n\t    _classCallCheck(this, TabStave);\n\t\n\t    var tab_options = {\n\t      spacing_between_lines_px: 13,\n\t      num_lines: 6,\n\t      top_text_position: 1\n\t    };\n\t\n\t    _vex.Vex.Merge(tab_options, options);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabStave.__proto__ || Object.getPrototypeOf(TabStave)).call(this, x, y, width, tab_options));\n\t\n\t    _this.setAttribute('type', 'TabStave');\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabStave, [{\n\t    key: 'getYForGlyphs',\n\t    value: function getYForGlyphs() {\n\t      return this.getYForLine(2.5);\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addTabGlyph',\n\t    value: function addTabGlyph() {\n\t      this.addClef('tab');\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return TabStave;\n\t}(_stave.Stave);\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabNote = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tvar _glyph2 = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// The file implements notes for Tablature notation. This consists of one or\n\t// more fret positions, and can either be drawn with or without stems.\n\t//\n\t// See `tests/tabnote_tests.js` for usage examples\n\t\n\t// Gets the unused strings grouped together if consecutive.\n\t//\n\t// Parameters:\n\t// * num_lines - The number of lines\n\t// * strings_used - An array of numbers representing which strings have fret positions\n\tfunction getUnusedStringGroups(num_lines, strings_used) {\n\t  var stem_through = [];\n\t  var group = [];\n\t  for (var string = 1; string <= num_lines; string++) {\n\t    var is_used = strings_used.indexOf(string) > -1;\n\t\n\t    if (!is_used) {\n\t      group.push(string);\n\t    } else {\n\t      stem_through.push(group);\n\t      group = [];\n\t    }\n\t  }\n\t  if (group.length > 0) stem_through.push(group);\n\t\n\t  return stem_through;\n\t}\n\t\n\t// Gets groups of points that outline the partial stem lines\n\t// between fret positions\n\t//\n\t// Parameters:\n\t// * stem_Y - The `y` coordinate the stem is located on\n\t// * unused_strings - An array of groups of unused strings\n\t// * stave - The stave to use for reference\n\t// * stem_direction - The direction of the stem\n\tfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n\t  var up_stem = stem_direction !== 1;\n\t  var down_stem = stem_direction !== -1;\n\t\n\t  var line_spacing = stave.getSpacingBetweenLines();\n\t  var total_lines = stave.getNumLines();\n\t\n\t  var stem_lines = [];\n\t\n\t  unused_strings.forEach(function (strings) {\n\t    var containsLastString = strings.indexOf(total_lines) > -1;\n\t    var containsFirstString = strings.indexOf(1) > -1;\n\t\n\t    if (up_stem && containsFirstString || down_stem && containsLastString) {\n\t      return;\n\t    }\n\t\n\t    // If there's only one string in the group, push a duplicate value.\n\t    // We do this because we need 2 strings to convert into upper/lower y\n\t    // values.\n\t    if (strings.length === 1) {\n\t      strings.push(strings[0]);\n\t    }\n\t\n\t    var line_ys = [];\n\t    // Iterate through each group string and store it's y position\n\t    strings.forEach(function (string, index, strings) {\n\t      var isTopBound = string === 1;\n\t      var isBottomBound = string === total_lines;\n\t\n\t      // Get the y value for the appropriate staff line,\n\t      // we adjust for a 0 index array, since string numbers are index 1\n\t      var y = stave.getYForLine(string - 1);\n\t\n\t      // Unless the string is the first or last, add padding to each side\n\t      // of the line\n\t      if (index === 0 && !isTopBound) {\n\t        y -= line_spacing / 2 - 1;\n\t      } else if (index === strings.length - 1 && !isBottomBound) {\n\t        y += line_spacing / 2 - 1;\n\t      }\n\t\n\t      // Store the y value\n\t      line_ys.push(y);\n\t\n\t      // Store a subsequent y value connecting this group to the main\n\t      // stem above/below the stave if it's the top/bottom string\n\t      if (stem_direction === 1 && isTopBound) {\n\t        line_ys.push(stem_y - 2);\n\t      } else if (stem_direction === -1 && isBottomBound) {\n\t        line_ys.push(stem_y + 2);\n\t      }\n\t    });\n\t\n\t    // Add the sorted y values to the\n\t    stem_lines.push(line_ys.sort(function (a, b) {\n\t      return a - b;\n\t    }));\n\t  });\n\t\n\t  return stem_lines;\n\t}\n\t\n\tvar TabNote = exports.TabNote = function (_StemmableNote) {\n\t  _inherits(TabNote, _StemmableNote);\n\t\n\t  _createClass(TabNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'tabnotes';\n\t    }\n\t\n\t    // Initialize the TabNote with a `tab_struct` full of properties\n\t    // and whether to `draw_stem` when rendering the note\n\t\n\t  }]);\n\t\n\t  function TabNote(tab_struct, draw_stem) {\n\t    _classCallCheck(this, TabNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabNote.__proto__ || Object.getPrototypeOf(TabNote)).call(this, tab_struct));\n\t\n\t    _this.setAttribute('type', 'TabNote');\n\t\n\t    _this.ghost = false; // Renders parenthesis around notes\n\t    // Note properties\n\t    //\n\t    // The fret positions in the note. An array of `{ str: X, fret: X }`\n\t    _this.positions = tab_struct.positions;\n\t\n\t    // Render Options\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads and rests\n\t      glyph_font_scale: _tables.Flow.DEFAULT_TABLATURE_FONT_SCALE,\n\t      // Flag to draw a stem\n\t      draw_stem: draw_stem,\n\t      // Flag to draw dot modifiers\n\t      draw_dots: draw_stem,\n\t      // Flag to extend the main stem through the stave and fret positions\n\t      draw_stem_through_stave: false,\n\t      // vertical shift from stave line\n\t      y_shift: 0,\n\t      // normal glyph scale\n\t      scale: 1.0,\n\t      // default tablature font\n\t      font: '10pt Arial'\n\t    });\n\t\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(tab_struct));\n\t    }\n\t\n\t    _this.buildStem();\n\t\n\t    if (tab_struct.stem_direction) {\n\t      _this.setStemDirection(tab_struct.stem_direction);\n\t    } else {\n\t      _this.setStemDirection(_stem.Stem.UP);\n\t    }\n\t\n\t    // Renders parenthesis around notes\n\t    _this.ghost = false;\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabNote, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      if (this.stave) this.setStave(this.stave);\n\t    }\n\t\n\t    // The ModifierContext category\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return TabNote.CATEGORY;\n\t    }\n\t\n\t    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n\t    // Often used for indicating frets that are being bent to\n\t\n\t  }, {\n\t    key: 'setGhost',\n\t    value: function setGhost(ghost) {\n\t      this.ghost = ghost;\n\t      this.updateWidth();\n\t      return this;\n\t    }\n\t\n\t    // Determine if the note has a stem\n\t\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return this.render_options.draw_stem;\n\t    }\n\t\n\t    // Get the default stem extension for the note\n\t\n\t  }, {\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stem_extension_override != null) {\n\t        return this.stem_extension_override;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t\n\t    // Add a dot to the note\n\t\n\t  }, {\n\t    key: 'addDot',\n\t    value: function addDot() {\n\t      var dot = new _dot.Dot();\n\t      this.dots += 1;\n\t      return this.addModifier(dot, 0);\n\t    }\n\t\n\t    // Calculate and store the width of the note\n\t\n\t  }, {\n\t    key: 'updateWidth',\n\t    value: function updateWidth() {\n\t      var _this2 = this;\n\t\n\t      this.glyphs = [];\n\t      this.width = 0;\n\t      for (var i = 0; i < this.positions.length; ++i) {\n\t        var fret = this.positions[i].fret;\n\t        if (this.ghost) fret = '(' + fret + ')';\n\t        var glyph = _tables.Flow.tabToGlyph(fret, this.render_options.scale);\n\t        this.glyphs.push(glyph);\n\t        this.width = Math.max(glyph.getWidth(), this.width);\n\t      }\n\t      // For some reason we associate a notehead glyph with a TabNote, and this\n\t      // glyph is used for certain width calculations. Of course, this is totally\n\t      // incorrect since a notehead is a poor approximation for the dimensions of\n\t      // a fret number which can have multiple digits. As a result, we must\n\t      // overwrite getWidth() to return the correct width\n\t      this.glyph.getWidth = function () {\n\t        return _this2.width;\n\t      };\n\t    }\n\t\n\t    // Set the `stave` to the note\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      var _this3 = this;\n\t\n\t      _get(TabNote.prototype.__proto__ || Object.getPrototypeOf(TabNote.prototype), 'setStave', this).call(this, stave);\n\t      this.context = stave.context;\n\t\n\t      // Calculate the fret number width based on font used\n\t      var i = void 0;\n\t      if (this.context) {\n\t        var ctx = this.context;\n\t        this.width = 0;\n\t\n\t        var _loop = function _loop() {\n\t          var glyph = _this3.glyphs[i];\n\t          var text = '' + glyph.text;\n\t          if (text.toUpperCase() !== 'X') {\n\t            ctx.save();\n\t            ctx.setRawFont(_this3.render_options.font);\n\t            glyph.width = ctx.measureText(text).width;\n\t            ctx.restore();\n\t            glyph.getWidth = function () {\n\t              return glyph.width;\n\t            };\n\t          }\n\t          _this3.width = Math.max(glyph.getWidth(), _this3.width);\n\t        };\n\t\n\t        for (i = 0; i < this.glyphs.length; ++i) {\n\t          _loop();\n\t        }\n\t        this.glyph.getWidth = function () {\n\t          return _this3.width;\n\t        };\n\t      }\n\t\n\t      // we subtract 1 from `line` because getYForLine expects a 0-based index,\n\t      // while the position.str is a 1-based index\n\t      var ys = this.positions.map(function (_ref) {\n\t        var line = _ref.str;\n\t        return stave.getYForLine(line - 1);\n\t      });\n\t\n\t      this.setYs(ys);\n\t\n\t      if (this.stem) {\n\t        this.stem.setYBounds(this.getStemY(), this.getStemY());\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Get the fret positions for the note\n\t\n\t  }, {\n\t    key: 'getPositions',\n\t    value: function getPositions() {\n\t      return this.positions;\n\t    }\n\t\n\t    // Add self to the provided modifier context `mc`\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mc) {\n\t      this.setModifierContext(mc);\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        this.modifierContext.addModifier(this.modifiers[i]);\n\t      }\n\t      this.modifierContext.addModifier(this);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Get the `x` coordinate to the right of the note\n\t\n\t  }, {\n\t    key: 'getTieRightX',\n\t    value: function getTieRightX() {\n\t      var tieStartX = this.getAbsoluteX();\n\t      var note_glyph_width = this.glyph.getWidth();\n\t      tieStartX += note_glyph_width / 2;\n\t      tieStartX += -this.width / 2 + this.width + 2;\n\t\n\t      return tieStartX;\n\t    }\n\t\n\t    // Get the `x` coordinate to the left of the note\n\t\n\t  }, {\n\t    key: 'getTieLeftX',\n\t    value: function getTieLeftX() {\n\t      var tieEndX = this.getAbsoluteX();\n\t      var note_glyph_width = this.glyph.getWidth();\n\t      tieEndX += note_glyph_width / 2;\n\t      tieEndX -= this.width / 2 + 2;\n\t\n\t      return tieEndX;\n\t    }\n\t\n\t    // Get the default `x` and `y` coordinates for a modifier at a specific\n\t    // `position` at a fret position `index`\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY(position, index) {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n\t      }\n\t\n\t      var x = 0;\n\t      if (position === _modifier.Modifier.Position.LEFT) {\n\t        x = -1 * 2; // extra_left_px\n\t      } else if (position === _modifier.Modifier.Position.RIGHT) {\n\t        x = this.width + 2; // extra_right_px\n\t      } else if (position === _modifier.Modifier.Position.BELOW || position === _modifier.Modifier.Position.ABOVE) {\n\t        var note_glyph_width = this.glyph.getWidth();\n\t        x = note_glyph_width / 2;\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX() + x,\n\t        y: this.ys[index]\n\t      };\n\t    }\n\t\n\t    // Get the default line for rest\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      return this.positions[0].str;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t      if (this.modifierContext) this.modifierContext.preFormat();\n\t      // width is already set during init()\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    // Get the x position for the stem\n\t\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      return this.getCenterGlyphX();\n\t    }\n\t\n\t    // Get the y position for the stem\n\t\n\t  }, {\n\t    key: 'getStemY',\n\t    value: function getStemY() {\n\t      var num_lines = this.stave.getNumLines();\n\t\n\t      // The decimal staff line amounts provide optimal spacing between the\n\t      // fret number and the stem\n\t      var stemUpLine = -0.5;\n\t      var stemDownLine = num_lines - 0.5;\n\t      var stemStartLine = _stem.Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\t\n\t      return this.stave.getYForLine(stemStartLine);\n\t    }\n\t\n\t    // Get the stem extents for the tabnote\n\t\n\t  }, {\n\t    key: 'getStemExtents',\n\t    value: function getStemExtents() {\n\t      return this.stem.getExtents();\n\t    }\n\t\n\t    // Draw the fal onto the context\n\t\n\t  }, {\n\t    key: 'drawFlag',\n\t    value: function drawFlag() {\n\t      var beam = this.beam;\n\t      var glyph = this.glyph;\n\t      var context = this.context;\n\t      var stem = this.stem;\n\t      var stem_direction = this.stem_direction;\n\t      var _render_options = this.render_options;\n\t      var draw_stem = _render_options.draw_stem;\n\t      var glyph_font_scale = _render_options.glyph_font_scale;\n\t\n\t\n\t      var shouldDrawFlag = beam == null && draw_stem;\n\t\n\t      // Now it's the flag's turn.\n\t      if (glyph.flag && shouldDrawFlag) {\n\t        var flag_x = this.getStemX() + 1;\n\t        var flag_y = this.getStemY() - stem.getHeight();\n\t\n\t        var flag_code = stem_direction === _stem.Stem.DOWN ? glyph.code_flag_downstem // Down stems have flags on the left.\n\t        : glyph.code_flag_upstem;\n\t\n\t        // Draw the Flag\n\t        _glyph2.Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n\t      }\n\t    }\n\t\n\t    // Render the modifiers onto the context\n\t\n\t  }, {\n\t    key: 'drawModifiers',\n\t    value: function drawModifiers() {\n\t      var _this4 = this;\n\t\n\t      // Draw the modifiers\n\t      this.modifiers.forEach(function (modifier) {\n\t        // Only draw the dots if enabled\n\t        if (modifier.getCategory() === 'dots' && !_this4.render_options.draw_dots) return;\n\t\n\t        modifier.setContext(_this4.context);\n\t        modifier.draw();\n\t      });\n\t    }\n\t\n\t    // Render the stem extension through the fret positions\n\t\n\t  }, {\n\t    key: 'drawStemThrough',\n\t    value: function drawStemThrough() {\n\t      var stem_x = this.getStemX();\n\t      var stem_y = this.getStemY();\n\t      var ctx = this.context;\n\t\n\t      var stem_through = this.render_options.draw_stem_through_stave;\n\t      var draw_stem = this.render_options.draw_stem;\n\t      if (draw_stem && stem_through) {\n\t        var total_lines = this.stave.getNumLines();\n\t        var strings_used = this.positions.map(function (position) {\n\t          return position.str;\n\t        });\n\t\n\t        var unused_strings = getUnusedStringGroups(total_lines, strings_used);\n\t        var stem_lines = getPartialStemLines(stem_y, unused_strings, this.getStave(), this.getStemDirection());\n\t\n\t        ctx.save();\n\t        ctx.setLineWidth(_stem.Stem.WIDTH);\n\t        stem_lines.forEach(function (bounds) {\n\t          if (bounds.length === 0) return;\n\t\n\t          ctx.beginPath();\n\t          ctx.moveTo(stem_x, bounds[0]);\n\t          ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n\t          ctx.stroke();\n\t          ctx.closePath();\n\t        });\n\t        ctx.restore();\n\t      }\n\t    }\n\t\n\t    // Render the fret positions onto the context\n\t\n\t  }, {\n\t    key: 'drawPositions',\n\t    value: function drawPositions() {\n\t      var ctx = this.context;\n\t      var x = this.getAbsoluteX();\n\t      var ys = this.ys;\n\t      for (var i = 0; i < this.positions.length; ++i) {\n\t        var y = ys[i] + this.render_options.y_shift;\n\t        var _glyph = this.glyphs[i];\n\t\n\t        // Center the fret text beneath the notation note head\n\t        var note_glyph_width = this.glyph.getWidth();\n\t        var tab_x = x + note_glyph_width / 2 - _glyph.getWidth() / 2;\n\t\n\t        // FIXME: Magic numbers.\n\t        ctx.clearRect(tab_x - 2, y - 3, _glyph.getWidth() + 4, 6);\n\t\n\t        if (_glyph.code) {\n\t          _glyph2.Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, _glyph.code);\n\t        } else {\n\t          ctx.save();\n\t          ctx.setRawFont(this.render_options.font);\n\t          var _text = _glyph.text.toString();\n\t          ctx.fillText(_text, tab_x, y + 5 * this.render_options.scale);\n\t          ctx.restore();\n\t        }\n\t      }\n\t    }\n\t\n\t    // The main rendering function for the entire note\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var render_stem = this.beam == null && this.render_options.draw_stem;\n\t\n\t      this.drawPositions();\n\t      this.drawStemThrough();\n\t\n\t      var stem_x = this.getStemX();\n\t\n\t      this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\t\n\t      if (render_stem) {\n\t        this.context.openGroup('stem', null, { pointerBBox: true });\n\t        this.stem.setContext(this.context).draw();\n\t        this.context.closeGroup();\n\t      }\n\t\n\t      this.drawFlag();\n\t      this.drawModifiers();\n\t    }\n\t  }]);\n\n\t  return TabNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.VibratoBracket = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Balazs Forian-Szabo\n\t//\n\t// ## Description\n\t//\n\t// This file implements `VibratoBrackets`\n\t// that renders vibrato effect between two notes.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (VibratoBracket.DEBUG) _vex.Vex.L('Vex.Flow.VibratoBracket', args);\n\t}\n\t\n\tvar VibratoBracket = exports.VibratoBracket = function (_Element) {\n\t  _inherits(VibratoBracket, _Element);\n\t\n\t  // bracket_data = {\n\t  //   start: Vex.Flow.Note (optional)\n\t  //   stop: Vex.Flow.Note (optional)\n\t  // };\n\t  // Either the stop or start note must be set, or both of them.\n\t  // A null value for the start or stop note indicates that the vibrato\n\t  // is drawn from the beginning or until the end of the stave accordingly.\n\t  function VibratoBracket(bracket_data) {\n\t    _classCallCheck(this, VibratoBracket);\n\t\n\t    var _this = _possibleConstructorReturn(this, (VibratoBracket.__proto__ || Object.getPrototypeOf(VibratoBracket)).call(this));\n\t\n\t    _this.setAttribute('type', 'VibratoBracket');\n\t\n\t    _this.start = bracket_data.start;\n\t    _this.stop = bracket_data.stop;\n\t\n\t    _this.line = 1;\n\t\n\t    _this.render_options = {\n\t      harsh: false,\n\t      wave_height: 6,\n\t      wave_width: 4,\n\t      wave_girth: 2\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Set line position of the vibrato bracket\n\t\n\t\n\t  _createClass(VibratoBracket, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t  }, {\n\t    key: 'setHarsh',\n\t    value: function setHarsh(harsh) {\n\t      this.render_options.harsh = harsh;return this;\n\t    }\n\t\n\t    // Draw the vibrato bracket on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.context;\n\t      this.setRendered();\n\t\n\t      var y = this.start ? this.start.getStave().getYForTopText(this.line) : this.stop.getStave().getYForTopText(this.line);\n\t\n\t      // If start note is not set then vibrato will be drawn\n\t      // from the beginning of the stave\n\t      var start_x = this.start ? this.start.getAbsoluteX() : this.stop.getStave().getTieStartX();\n\t\n\t      // If stop note is not set then vibrato will be drawn\n\t      // until the end of the stave\n\t      var stop_x = this.stop ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5 : this.start.getStave().getTieEndX() - 10;\n\t\n\t      this.render_options.vibrato_width = stop_x - start_x;\n\t\n\t      L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\t\n\t      _vibrato.Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n\t    }\n\t  }]);\n\n\t  return VibratoBracket;\n\t}(_element.Element);\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ClefNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// Author Taehoon Moon 2014\n\t\n\t/** @constructor */\n\tvar ClefNote = exports.ClefNote = function (_Note) {\n\t  _inherits(ClefNote, _Note);\n\t\n\t  _createClass(ClefNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'clefnote';\n\t    }\n\t  }]);\n\t\n\t  function ClefNote(type, size, annotation) {\n\t    _classCallCheck(this, ClefNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ClefNote.__proto__ || Object.getPrototypeOf(ClefNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'ClefNote');\n\t\n\t    _this.setType(type, size, annotation);\n\t\n\t    // Note properties\n\t    _this.ignore_ticks = true;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ClefNote, [{\n\t    key: 'setType',\n\t    value: function setType(type, size, annotation) {\n\t      this.type = type;\n\t      this.clef_obj = new _clef.Clef(type, size, annotation);\n\t      this.clef = this.clef_obj.clef;\n\t      this.glyph = new _glyph.Glyph(this.clef.code, this.clef.point);\n\t      this.setWidth(this.glyph.getMetrics().width);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getClef',\n\t    value: function getClef() {\n\t      return this.clef;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;\n\t      this.glyph.setContext(this.context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return ClefNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t\n\t      if (!this.glyph.getContext()) {\n\t        this.glyph.setContext(this.context);\n\t      }\n\t\n\t      this.setRendered();\n\t      var abs_x = this.getAbsoluteX();\n\t\n\t      this.glyph.setStave(this.stave);\n\t      this.glyph.setYShift(this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n\t      this.glyph.renderToStave(abs_x);\n\t\n\t      // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n\t      if (this.clef_obj.annotation !== undefined) {\n\t        var attachment = new _glyph.Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n\t        if (!attachment.getContext()) {\n\t          attachment.setContext(this.context);\n\t        }\n\t        attachment.setStave(this.stave);\n\t        attachment.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n\t        attachment.setXShift(this.clef_obj.annotation.x_shift);\n\t        attachment.renderToStave(abs_x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return ClefNote;\n\t}(_note.Note);\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TimeSigNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2014\n\t\n\tvar TimeSigNote = exports.TimeSigNote = function (_Note) {\n\t  _inherits(TimeSigNote, _Note);\n\t\n\t  function TimeSigNote(timeSpec, customPadding) {\n\t    _classCallCheck(this, TimeSigNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TimeSigNote.__proto__ || Object.getPrototypeOf(TimeSigNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'TimeSigNote');\n\t\n\t    var timeSignature = new _timesignature.TimeSignature(timeSpec, customPadding);\n\t    _this.timeSig = timeSignature.getTimeSig();\n\t    _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n\t\n\t    // Note properties\n\t    _this.ignore_ticks = true;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TimeSigNote, [{\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.stave.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.timeSig.glyph.getContext()) {\n\t        this.timeSig.glyph.setContext(this.context);\n\t      }\n\t\n\t      this.timeSig.glyph.setStave(this.stave);\n\t      this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n\t      this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n\t    }\n\t  }]);\n\n\t  return TimeSigNote;\n\t}(_note.Note);\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabSlide = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar TabSlide = exports.TabSlide = function (_TabTie) {\n\t  _inherits(TabSlide, _TabTie);\n\t\n\t  _createClass(TabSlide, null, [{\n\t    key: 'createSlideUp',\n\t    value: function createSlideUp(notes) {\n\t      return new TabSlide(notes, TabSlide.SLIDE_UP);\n\t    }\n\t  }, {\n\t    key: 'createSlideDown',\n\t    value: function createSlideDown(notes) {\n\t      return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n\t    }\n\t  }, {\n\t    key: 'SLIDE_UP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'SLIDE_DOWN',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t  }]);\n\t\n\t  function TabSlide(notes, direction) {\n\t    _classCallCheck(this, TabSlide);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabSlide.__proto__ || Object.getPrototypeOf(TabSlide)).call(this, notes, 'sl.'));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'TabSlide');\n\t\n\t    if (!direction) {\n\t      var first_fret = notes.first_note.getPositions()[0].fret;\n\t      var last_fret = notes.last_note.getPositions()[0].fret;\n\t\n\t      direction = parseInt(first_fret, 10) > parseInt(last_fret, 10) ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n\t    }\n\t\n\t    _this.slide_direction = direction;\n\t    _this.render_options.cp1 = 11;\n\t    _this.render_options.cp2 = 14;\n\t    _this.render_options.y_shift = 0.5;\n\t\n\t    _this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabSlide, [{\n\t    key: 'renderTie',\n\t    value: function renderTie(params) {\n\t      if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'No Y-values to render');\n\t      }\n\t\n\t      var ctx = this.context;\n\t      var first_x_px = params.first_x_px;\n\t      var first_ys = params.first_ys;\n\t      var last_x_px = params.last_x_px;\n\t\n\t      var direction = this.slide_direction;\n\t      if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n\t        throw new _vex.Vex.RERR('BadSlide', 'Invalid slide direction');\n\t      }\n\t\n\t      for (var i = 0; i < this.first_indices.length; ++i) {\n\t        var slide_y = first_ys[this.first_indices[i]] + this.render_options.y_shift;\n\t\n\t        if (isNaN(slide_y)) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n\t        }\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(first_x_px, slide_y + 3 * direction);\n\t        ctx.lineTo(last_x_px, slide_y - 3 * direction);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return TabSlide;\n\t}(_tabtie.TabTie);\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceNote = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar GraceNote = exports.GraceNote = function (_StaveNote) {\n\t  _inherits(GraceNote, _StaveNote);\n\t\n\t  _createClass(GraceNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracenotes';\n\t    }\n\t  }, {\n\t    key: 'LEDGER_LINE_OFFSET',\n\t    get: function get() {\n\t      return 2;\n\t    }\n\t  }, {\n\t    key: 'SCALE',\n\t    get: function get() {\n\t      return 0.66;\n\t    }\n\t  }]);\n\t\n\t  function GraceNote(note_struct) {\n\t    _classCallCheck(this, GraceNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceNote.__proto__ || Object.getPrototypeOf(GraceNote)).call(this, _extends(note_struct, {\n\t      glyph_font_scale: _tables.Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n\t      stroke_px: GraceNote.LEDGER_LINE_OFFSET\n\t    })));\n\t\n\t    _this.setAttribute('type', 'GraceNote');\n\t\n\t    _this.slash = note_struct.slash;\n\t    _this.slur = true;\n\t\n\t    _this.buildNoteHeads();\n\t\n\t    _this.width = 3;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GraceNote, [{\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stem_extension_override != null) {\n\t        return this.stem_extension_override;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.gracenote_stem_up_extension : glyph.gracenote_stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      _get(GraceNote.prototype.__proto__ || Object.getPrototypeOf(GraceNote.prototype), 'draw', this).call(this);\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var stem_direction = this.getStemDirection();\n\t\n\t      if (this.slash) {\n\t        ctx.beginPath();\n\t\n\t        var x = this.getAbsoluteX();\n\t        var y = this.getYs()[0] - this.stem.getHeight() / 2.8;\n\t        if (stem_direction === 1) {\n\t          x += 1;\n\t          ctx.moveTo(x, y);\n\t          ctx.lineTo(x + 13, y - 9);\n\t        } else if (stem_direction === -1) {\n\t          x -= 4;\n\t          y += 1;\n\t          ctx.moveTo(x, y);\n\t          ctx.lineTo(x + 13, y + 9);\n\t        }\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GraceNote;\n\t}(_stavenote.StaveNote);\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceTabNote = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Balazs Forian-Szabo\n\t//\n\t// ## Description\n\t//\n\t// A basic implementation of grace notes\n\t// to be rendered on a tab stave.\n\t//\n\t// See `tests/gracetabnote_tests.js` for usage examples.\n\t\n\tvar GraceTabNote = exports.GraceTabNote = function (_TabNote) {\n\t  _inherits(GraceTabNote, _TabNote);\n\t\n\t  _createClass(GraceTabNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracetabnotes';\n\t    }\n\t  }]);\n\t\n\t  function GraceTabNote(note_struct) {\n\t    _classCallCheck(this, GraceTabNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceTabNote.__proto__ || Object.getPrototypeOf(GraceTabNote)).call(this, note_struct, false));\n\t\n\t    _this.setAttribute('type', 'GraceTabNote');\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // vertical shift from stave line\n\t      y_shift: 0.3,\n\t      // grace glyph scale\n\t      scale: 0.6,\n\t      // grace tablature font\n\t      font: '7.5pt Arial'\n\t    });\n\t\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GraceTabNote, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceTabNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      _get(GraceTabNote.prototype.__proto__ || Object.getPrototypeOf(GraceTabNote.prototype), 'draw', this).call(this);\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return GraceTabNote;\n\t}(_tabnote.TabNote);\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tuning = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of tunings for tablature.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tuning = exports.Tuning = function () {\n\t  _createClass(Tuning, null, [{\n\t    key: 'names',\n\t    get: function get() {\n\t      return {\n\t        'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n\t        'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n\t        'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n\t        'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n\t        'standardBanjo': 'D/5,B/4,G/4,D/4,G/5'\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Tuning() {\n\t    var tuningString = arguments.length <= 0 || arguments[0] === undefined ? 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2' : arguments[0];\n\t\n\t    _classCallCheck(this, Tuning);\n\t\n\t    // Default to standard tuning.\n\t    this.setTuning(tuningString);\n\t  }\n\t\n\t  _createClass(Tuning, [{\n\t    key: 'noteToInteger',\n\t    value: function noteToInteger(noteString) {\n\t      return _tables.Flow.keyProperties(noteString).int_value;\n\t    }\n\t  }, {\n\t    key: 'setTuning',\n\t    value: function setTuning(noteString) {\n\t      if (Tuning.names[noteString]) {\n\t        noteString = Tuning.names[noteString];\n\t      }\n\t\n\t      this.tuningString = noteString;\n\t      this.tuningValues = [];\n\t      this.numStrings = 0;\n\t\n\t      var keys = noteString.split(/\\s*,\\s*/);\n\t      if (keys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n\t      }\n\t\n\t      this.numStrings = keys.length;\n\t      for (var i = 0; i < this.numStrings; ++i) {\n\t        this.tuningValues[i] = this.noteToInteger(keys[i]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getValueForString',\n\t    value: function getValueForString(stringNum) {\n\t      var s = parseInt(stringNum, 10);\n\t      if (s < 1 || s > this.numStrings) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'String number must be between 1 and ' + this.numStrings + ':' + stringNum);\n\t      }\n\t\n\t      return this.tuningValues[s - 1];\n\t    }\n\t  }, {\n\t    key: 'getValueForFret',\n\t    value: function getValueForFret(fretNum, stringNum) {\n\t      var stringValue = this.getValueForString(stringNum);\n\t      var f = parseInt(fretNum, 10);\n\t\n\t      if (f < 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' + fretNum);\n\t      }\n\t\n\t      return stringValue + f;\n\t    }\n\t  }, {\n\t    key: 'getNoteForFret',\n\t    value: function getNoteForFret(fretNum, stringNum) {\n\t      var noteValue = this.getValueForFret(fretNum, stringNum);\n\t\n\t      var octave = Math.floor(noteValue / 12);\n\t      var value = noteValue % 12;\n\t\n\t      return _tables.Flow.integerToNote(value) + '/' + octave;\n\t    }\n\t  }]);\n\n\t  return Tuning;\n\t}();\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.KeyManager = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This class implements diatonic key management.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar KeyManager = exports.KeyManager = function () {\n\t  function KeyManager(key) {\n\t    _classCallCheck(this, KeyManager);\n\t\n\t    this.music = new _music.Music();\n\t    this.setKey(key);\n\t  }\n\t\n\t  _createClass(KeyManager, [{\n\t    key: 'setKey',\n\t    value: function setKey(key) {\n\t      this.key = key;\n\t      this.reset();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getKey',\n\t    value: function getKey() {\n\t      return this.key;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.keyParts = this.music.getKeyParts(this.key);\n\t\n\t      this.keyString = this.keyParts.root;\n\t      if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\t\n\t      var is_supported_type = _music.Music.scaleTypes[this.keyParts.type];\n\t      if (!is_supported_type) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Unsupported key type: ' + this.key);\n\t      }\n\t\n\t      this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), _music.Music.scaleTypes[this.keyParts.type]);\n\t\n\t      this.scaleMap = {};\n\t      this.scaleMapByValue = {};\n\t      this.originalScaleMapByValue = {};\n\t\n\t      var noteLocation = _music.Music.root_indices[this.keyParts.root];\n\t\n\t      for (var i = 0; i < _music.Music.roots.length; ++i) {\n\t        var index = (noteLocation + i) % _music.Music.roots.length;\n\t        var rootName = _music.Music.roots[index];\n\t\n\t        var noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n\t        this.scaleMap[rootName] = noteName;\n\t        this.scaleMapByValue[this.scale[i]] = noteName;\n\t        this.originalScaleMapByValue[this.scale[i]] = noteName;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getAccidental',\n\t    value: function getAccidental(key) {\n\t      var root = this.music.getKeyParts(key).root;\n\t      var parts = this.music.getNoteParts(this.scaleMap[root]);\n\t\n\t      return {\n\t        note: this.scaleMap[root],\n\t        accidental: parts.accidental\n\t      };\n\t    }\n\t  }, {\n\t    key: 'selectNote',\n\t    value: function selectNote(note) {\n\t      note = note.toLowerCase();\n\t      var parts = this.music.getNoteParts(note);\n\t\n\t      // First look for matching note in our altered scale\n\t      var scaleNote = this.scaleMap[parts.root];\n\t      var modparts = this.music.getNoteParts(scaleNote);\n\t\n\t      if (scaleNote === note) {\n\t        return {\n\t          'note': scaleNote,\n\t          'accidental': parts.accidental,\n\t          'change': false\n\t        };\n\t      }\n\t\n\t      // Then search for a note of equivalent value in our altered scale\n\t      var valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n\t      if (valueNote != null) {\n\t        return {\n\t          'note': valueNote,\n\t          'accidental': this.music.getNoteParts(valueNote).accidental,\n\t          'change': false\n\t        };\n\t      }\n\t\n\t      // Then search for a note of equivalent value in the original scale\n\t      var originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n\t      if (originalValueNote != null) {\n\t        this.scaleMap[modparts.root] = originalValueNote;\n\t        delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n\t        this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n\t        return {\n\t          'note': originalValueNote,\n\t          'accidental': this.music.getNoteParts(originalValueNote).accidental,\n\t          'change': true\n\t        };\n\t      }\n\t\n\t      // Then try to unmodify a currently modified note.\n\t      if (modparts.root === note) {\n\t        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n\t        this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n\t        this.scaleMap[modparts.root] = modparts.root;\n\t        return {\n\t          'note': modparts.root,\n\t          'accidental': null,\n\t          'change': true\n\t        };\n\t      }\n\t\n\t      // Last resort -- shitshoot\n\t      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n\t      this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\t\n\t      delete this.scaleMap[modparts.root];\n\t      this.scaleMap[modparts.root] = note;\n\t\n\t      return {\n\t        note: note,\n\t        'accidental': parts.accidental,\n\t        'change': true\n\t      };\n\t    }\n\t  }]);\n\n\t  return KeyManager;\n\t}();\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveHairpin = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n\t//\n\t// This class implements hairpins between notes.\n\t// Hairpins can be either Crescendo or Descrescendo.\n\t\n\tvar StaveHairpin = exports.StaveHairpin = function (_Element) {\n\t  _inherits(StaveHairpin, _Element);\n\t\n\t  _createClass(StaveHairpin, null, [{\n\t    key: 'FormatByTicksAndDraw',\n\t\n\t\n\t    /* Helper function to convert ticks into pixels.\n\t     * Requires a Formatter with voices joined and formatted (to\n\t     * get pixels per tick)\n\t     *\n\t     * options is struct that has:\n\t     *\n\t     *  {\n\t     *   height: px,\n\t     *   y_shift: px, //vertical offset\n\t     *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n\t     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n\t     *  }\n\t     *\n\t     **/\n\t    value: function FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n\t      var ppt = formatter.pixelsPerTick;\n\t\n\t      if (ppt == null) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n\t      }\n\t\n\t      var l_shift_px = ppt * options.left_shift_ticks;\n\t      var r_shift_px = ppt * options.right_shift_ticks;\n\t\n\t      var hairpin_options = {\n\t        height: options.height,\n\t        y_shift: options.y_shift,\n\t        left_shift_px: l_shift_px,\n\t        right_shift_px: r_shift_px };\n\t\n\t      new StaveHairpin({\n\t        first_note: notes.first_note,\n\t        last_note: notes.last_note\n\t      }, type).setContext(ctx).setRenderOptions(hairpin_options).setPosition(position).draw();\n\t    }\n\t\n\t    /**\n\t     * Create a new hairpin from the specified notes.\n\t     *\n\t     * @constructor\n\t     * @param {!Object} notes The notes to tie up.\n\t     * @param {!Object} type The type of hairpin\n\t     */\n\t\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        CRESC: 1,\n\t        DECRESC: 2\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveHairpin(notes, type) {\n\t    _classCallCheck(this, StaveHairpin);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveHairpin.__proto__ || Object.getPrototypeOf(StaveHairpin)).call(this));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'StaveHairpin');\n\t    _this.notes = notes;\n\t    _this.hairpin = type;\n\t    _this.position = _modifier.Modifier.Position.BELOW;\n\t\n\t    _this.render_options = {\n\t      height: 10,\n\t      y_shift: 0, // vertical offset\n\t      left_shift_px: 0, // left horizontal offset\n\t      right_shift_px: 0 };\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveHairpin, [{\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      if (position === _modifier.Modifier.Position.ABOVE || position === _modifier.Modifier.Position.BELOW) {\n\t        this.position = position;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRenderOptions',\n\t    value: function setRenderOptions(options) {\n\t      if (options.height != null && options.y_shift != null && options.left_shift_px != null && options.right_shift_px != null) {\n\t        this.render_options = options;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the notes to attach this hairpin to.\n\t     *\n\t     * @param {!Object} notes The start and end notes.\n\t     */\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.last_note = notes.last_note;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'renderHairpin',\n\t    value: function renderHairpin(params) {\n\t      var ctx = this.checkContext();\n\t      var dis = this.render_options.y_shift + 20;\n\t      var y_shift = params.first_y;\n\t\n\t      if (this.position === _modifier.Modifier.Position.ABOVE) {\n\t        dis = -dis + 30;\n\t        y_shift = params.first_y - params.staff_height;\n\t      }\n\t\n\t      var l_shift = this.render_options.left_shift_px;\n\t      var r_shift = this.render_options.right_shift_px;\n\t\n\t      ctx.beginPath();\n\t\n\t      switch (this.hairpin) {\n\t        case StaveHairpin.type.CRESC:\n\t          ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n\t          ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n\t          ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n\t          break;\n\t        case StaveHairpin.type.DECRESC:\n\t          ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n\t          ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n\t          ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n\t          break;\n\t        default:\n\t          // Default is NONE, so nothing to draw\n\t          break;\n\t      }\n\t\n\t      ctx.stroke();\n\t      ctx.closePath();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var firstNote = this.first_note;\n\t      var lastNote = this.last_note;\n\t\n\t      var start = firstNote.getModifierStartXY(this.position, 0);\n\t      var end = lastNote.getModifierStartXY(this.position, 0);\n\t\n\t      this.renderHairpin({\n\t        first_x: start.x,\n\t        last_x: end.x,\n\t        first_y: firstNote.getStave().y + firstNote.getStave().height,\n\t        last_y: lastNote.getStave().y + lastNote.getStave().height,\n\t        staff_height: firstNote.getStave().height\n\t      });\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return StaveHairpin;\n\t}(_element.Element);\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Curve = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// This class implements curves (for slurs)\n\t\n\tvar Curve = exports.Curve = function (_Element) {\n\t  _inherits(Curve, _Element);\n\t\n\t  _createClass(Curve, null, [{\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        NEAR_HEAD: 1,\n\t        NEAR_TOP: 2\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        nearHead: Curve.Position.NEAR_HEAD,\n\t        nearTop: Curve.Position.NEAR_TOP\n\t      };\n\t    }\n\t\n\t    // from: Start note\n\t    // to: End note\n\t    // options:\n\t    //    cps: List of control points\n\t    //    x_shift: pixels to shift\n\t    //    y_shift: pixels to shift\n\t\n\t  }]);\n\t\n\t  function Curve(from, to, options) {\n\t    _classCallCheck(this, Curve);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Curve.__proto__ || Object.getPrototypeOf(Curve)).call(this));\n\t\n\t    _this.setAttribute('type', 'Curve');\n\t\n\t    _this.render_options = {\n\t      spacing: 2,\n\t      thickness: 2,\n\t      x_shift: 0,\n\t      y_shift: 10,\n\t      position: Curve.Position.NEAR_HEAD,\n\t      position_end: Curve.Position.NEAR_HEAD,\n\t      invert: false,\n\t      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }]\n\t    };\n\t\n\t    _vex.Vex.Merge(_this.render_options, options);\n\t    _this.setNotes(from, to);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Curve, [{\n\t    key: 'setNotes',\n\t    value: function setNotes(from, to) {\n\t      if (!from && !to) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Curve needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      this.from = from;\n\t      this.to = to;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @return {boolean} Returns true if this is a partial bar.\n\t     */\n\t\n\t  }, {\n\t    key: 'isPartial',\n\t    value: function isPartial() {\n\t      return !this.from || !this.to;\n\t    }\n\t  }, {\n\t    key: 'renderCurve',\n\t    value: function renderCurve(params) {\n\t      var ctx = this.context;\n\t      var cps = this.render_options.cps;\n\t\n\t      var x_shift = this.render_options.x_shift;\n\t      var y_shift = this.render_options.y_shift * params.direction;\n\t\n\t      var first_x = params.first_x + x_shift;\n\t      var first_y = params.first_y + y_shift;\n\t      var last_x = params.last_x - x_shift;\n\t      var last_y = params.last_y + y_shift;\n\t      var thickness = this.render_options.thickness;\n\t\n\t      var cp_spacing = (last_x - first_x) / (cps.length + 2);\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(first_x, first_y);\n\t      ctx.bezierCurveTo(first_x + cp_spacing + cps[0].x, first_y + cps[0].y * params.direction, last_x - cp_spacing + cps[1].x, last_y + cps[1].y * params.direction, last_x, last_y);\n\t      ctx.bezierCurveTo(last_x - cp_spacing + cps[1].x, last_y + (cps[1].y + thickness) * params.direction, first_x + cp_spacing + cps[0].x, first_y + (cps[0].y + thickness) * params.direction, first_x, first_y);\n\t      ctx.stroke();\n\t      ctx.closePath();\n\t      ctx.fill();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.from;\n\t      var last_note = this.to;\n\t      var first_x = void 0;\n\t      var last_x = void 0;\n\t      var first_y = void 0;\n\t      var last_y = void 0;\n\t      var stem_direction = void 0;\n\t\n\t      var metric = 'baseY';\n\t      var end_metric = 'baseY';\n\t\n\t      function getPosition(position) {\n\t        return typeof position === 'string' ? Curve.PositionString[position] : position;\n\t      }\n\t      var position = getPosition(this.render_options.position);\n\t      var position_end = getPosition(this.render_options.position_end);\n\t\n\t      if (position === Curve.Position.NEAR_TOP) {\n\t        metric = 'topY';\n\t        end_metric = 'topY';\n\t      }\n\t\n\t      if (position_end === Curve.Position.NEAR_HEAD) {\n\t        end_metric = 'baseY';\n\t      } else if (position_end === Curve.Position.NEAR_TOP) {\n\t        end_metric = 'topY';\n\t      }\n\t\n\t      if (first_note) {\n\t        first_x = first_note.getTieRightX();\n\t        stem_direction = first_note.getStemDirection();\n\t        first_y = first_note.getStemExtents()[metric];\n\t      } else {\n\t        first_x = last_note.getStave().getTieStartX();\n\t        first_y = last_note.getStemExtents()[metric];\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x = last_note.getTieLeftX();\n\t        stem_direction = last_note.getStemDirection();\n\t        last_y = last_note.getStemExtents()[end_metric];\n\t      } else {\n\t        last_x = first_note.getStave().getTieEndX();\n\t        last_y = first_note.getStemExtents()[end_metric];\n\t      }\n\t\n\t      this.renderCurve({\n\t        first_x: first_x,\n\t        last_x: last_x,\n\t        first_y: first_y,\n\t        last_y: last_y,\n\t        direction: stem_direction * (this.render_options.invert === true ? -1 : 1)\n\t      });\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return Curve;\n\t}(_element.Element);\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextDynamics = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements the `TextDynamics` which renders traditional\n\t// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n\t//\n\t// You can render any dynamics string that contains a combination of\n\t// the following letters:  P, M, F, Z, R, S\n\t\n\t// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (TextDynamics.DEBUG) _vex.Vex.L('Vex.Flow.TextDynamics', args);\n\t}\n\t\n\tvar TextDynamics = exports.TextDynamics = function (_Note) {\n\t  _inherits(TextDynamics, _Note);\n\t\n\t  _createClass(TextDynamics, null, [{\n\t    key: 'GLYPHS',\n\t\n\t    // The glyph data for each dynamics letter\n\t    get: function get() {\n\t      return {\n\t        'f': {\n\t          code: 'vba',\n\t          width: 12\n\t        },\n\t        'p': {\n\t          code: 'vbf',\n\t          width: 14\n\t        },\n\t        'm': {\n\t          code: 'v62',\n\t          width: 17\n\t        },\n\t        's': {\n\t          code: 'v4a',\n\t          width: 10\n\t        },\n\t        'z': {\n\t          code: 'v80',\n\t          width: 12\n\t        },\n\t        'r': {\n\t          code: 'vb1',\n\t          width: 12\n\t        }\n\t      };\n\t    }\n\t\n\t    // A `TextDynamics` object inherits from `Note` so that it can be formatted\n\t    // within a `Voice`.\n\t    // Create the dynamics marking. `text_struct` is an object\n\t    // that contains a `duration` property and a `sequence` of\n\t    // letters that represents the letters to render\n\t\n\t  }]);\n\t\n\t  function TextDynamics(text_struct) {\n\t    _classCallCheck(this, TextDynamics);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextDynamics.__proto__ || Object.getPrototypeOf(TextDynamics)).call(this, text_struct));\n\t\n\t    _this.setAttribute('type', 'TextDynamics');\n\t\n\t    _this.sequence = text_struct.text.toLowerCase();\n\t    _this.line = text_struct.line || 0;\n\t    _this.glyphs = [];\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      glyph_font_size: 40\n\t    });\n\t\n\t    L('New Dynamics Text: ', _this.sequence);\n\t    return _this;\n\t  }\n\t\n\t  // Set the Stave line on which the note should be placed\n\t\n\t\n\t  _createClass(TextDynamics, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;\n\t      return this;\n\t    }\n\t\n\t    // Preformat the dynamics text\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this2 = this;\n\t\n\t      var total_width = 0;\n\t      // Iterate through each letter\n\t      this.sequence.split('').forEach(function (letter) {\n\t        // Get the glyph data for the letter\n\t        var glyph_data = TextDynamics.GLYPHS[letter];\n\t        if (!glyph_data) throw new _vex.Vex.RERR('Invalid dynamics character: ' + letter);\n\t\n\t        var size = _this2.render_options.glyph_font_size;\n\t        var glyph = new _glyph.Glyph(glyph_data.code, size);\n\t\n\t        // Add the glyph\n\t        _this2.glyphs.push(glyph);\n\t\n\t        total_width += glyph_data.width;\n\t      });\n\t\n\t      // Store the width of the text\n\t      this.setWidth(total_width);\n\t      this.preFormatted = true;\n\t      return this;\n\t    }\n\t\n\t    // Draw the dynamics text on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this3 = this;\n\t\n\t      this.setRendered();\n\t      var x = this.getAbsoluteX();\n\t      var y = this.stave.getYForLine(this.line + -3);\n\t\n\t      L('Rendering Dynamics: ', this.sequence);\n\t\n\t      var letter_x = x;\n\t      this.glyphs.forEach(function (glyph, index) {\n\t        var current_letter = _this3.sequence[index];\n\t        glyph.render(_this3.context, letter_x, y);\n\t        letter_x += TextDynamics.GLYPHS[current_letter].width;\n\t      });\n\t    }\n\t  }]);\n\n\t  return TextDynamics;\n\t}(_note.Note);\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveLine = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `StaveLine` which are simply lines that connect\n\t// two notes. This object is highly configurable, see the `render_options`.\n\t// A simple line is often used for notating glissando articulations, but you\n\t// can format a `StaveLine` with arrows or colors for more pedagogical\n\t// purposes, such as diagrams.\n\t\n\t\n\t// Attribution: Arrow rendering implementations based off of\n\t// Patrick Horgan's article, \"Drawing lines and arcs with\n\t// arrow heads on  HTML5 Canvas\"\n\t//\n\t// Draw an arrow head that connects between 3 coordinates\n\tfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n\t  // all cases do this.\n\t  ctx.beginPath();\n\t  ctx.moveTo(x0, y0);\n\t  ctx.lineTo(x1, y1);\n\t  ctx.lineTo(x2, y2);\n\t  ctx.lineTo(x0, y0);\n\t  ctx.closePath();\n\t\n\t  ctx.fill();\n\t}\n\t\n\t// Helper function to draw a line with arrow heads\n\tfunction drawArrowLine(ctx, point1, point2, config) {\n\t  var both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\t\n\t  var x1 = point1.x;\n\t  var y1 = point1.y;\n\t  var x2 = point2.x;\n\t  var y2 = point2.y;\n\t\n\t  // For ends with arrow we actually want to stop before we get to the arrow\n\t  // so that wide lines won't put a flat end on the arrow.\n\t  var distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\t  var ratio = (distance - config.arrowhead_length / 3) / distance;\n\t  var end_x = void 0;\n\t  var end_y = void 0;\n\t  var start_x = void 0;\n\t  var start_y = void 0;\n\t  if (config.draw_end_arrow || both_arrows) {\n\t    end_x = Math.round(x1 + (x2 - x1) * ratio);\n\t    end_y = Math.round(y1 + (y2 - y1) * ratio);\n\t  } else {\n\t    end_x = x2;\n\t    end_y = y2;\n\t  }\n\t\n\t  if (config.draw_start_arrow || both_arrows) {\n\t    start_x = x1 + (x2 - x1) * (1 - ratio);\n\t    start_y = y1 + (y2 - y1) * (1 - ratio);\n\t  } else {\n\t    start_x = x1;\n\t    start_y = y1;\n\t  }\n\t\n\t  if (config.color) {\n\t    ctx.setStrokeStyle(config.color);\n\t    ctx.setFillStyle(config.color);\n\t  }\n\t\n\t  // Draw the shaft of the arrow\n\t  ctx.beginPath();\n\t  ctx.moveTo(start_x, start_y);\n\t  ctx.lineTo(end_x, end_y);\n\t  ctx.stroke();\n\t  ctx.closePath();\n\t\n\t  // calculate the angle of the line\n\t  var line_angle = Math.atan2(y2 - y1, x2 - x1);\n\t  // h is the line length of a side of the arrow head\n\t  var h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\t\n\t  var angle1 = void 0;\n\t  var angle2 = void 0;\n\t  var top_x = void 0;\n\t  var top_y = void 0;\n\t  var bottom_x = void 0;\n\t  var bottom_y = void 0;\n\t\n\t  if (config.draw_end_arrow || both_arrows) {\n\t    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n\t    top_x = x2 + Math.cos(angle1) * h;\n\t    top_y = y2 + Math.sin(angle1) * h;\n\t\n\t    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n\t    bottom_x = x2 + Math.cos(angle2) * h;\n\t    bottom_y = y2 + Math.sin(angle2) * h;\n\t\n\t    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n\t  }\n\t\n\t  if (config.draw_start_arrow || both_arrows) {\n\t    angle1 = line_angle + config.arrowhead_angle;\n\t    top_x = x1 + Math.cos(angle1) * h;\n\t    top_y = y1 + Math.sin(angle1) * h;\n\t\n\t    angle2 = line_angle - config.arrowhead_angle;\n\t    bottom_x = x1 + Math.cos(angle2) * h;\n\t    bottom_y = y1 + Math.sin(angle2) * h;\n\t\n\t    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n\t  }\n\t}\n\t\n\tvar StaveLine = exports.StaveLine = function (_Element) {\n\t  _inherits(StaveLine, _Element);\n\t\n\t  _createClass(StaveLine, null, [{\n\t    key: 'TextVerticalPosition',\n\t\n\t    // Text Positioning\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        BOTTOM: 2\n\t      };\n\t    }\n\t  }, {\n\t    key: 'TextJustification',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3\n\t      };\n\t    }\n\t\n\t    // Initialize the StaveLine with the given `notes`.\n\t    //\n\t    // `notes` is a struct that has:\n\t    //\n\t    //  ```\n\t    //  {\n\t    //    first_note: Note,\n\t    //    last_note: Note,\n\t    //    first_indices: [n1, n2, n3],\n\t    //    last_indices: [n1, n2, n3]\n\t    //  }\n\t    //  ```\n\t\n\t  }]);\n\t\n\t  function StaveLine(notes) {\n\t    _classCallCheck(this, StaveLine);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveLine.__proto__ || Object.getPrototypeOf(StaveLine)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveLine');\n\t\n\t    _this.notes = notes;\n\t\n\t    _this.text = '';\n\t\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 10,\n\t      weight: ''\n\t    };\n\t\n\t    _this.render_options = {\n\t      // Space to add to the left or the right\n\t      padding_left: 4,\n\t      padding_right: 3,\n\t\n\t      // The width of the line in pixels\n\t      line_width: 1,\n\t      // An array of line/space lengths. Unsupported with Raphael (SVG)\n\t      line_dash: null,\n\t      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n\t      rounded_end: true,\n\t      // The color of the line and arrowheads\n\t      color: null,\n\t\n\t      // Flags to draw arrows on each end of the line\n\t      draw_start_arrow: false,\n\t      draw_end_arrow: false,\n\t\n\t      // The length of the arrowhead sides\n\t      arrowhead_length: 10,\n\t      // The angle of the arrowhead\n\t      arrowhead_angle: Math.PI / 8,\n\t\n\t      // The position of the text\n\t      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n\t      text_justification: StaveLine.TextJustification.CENTER\n\t    };\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  // Set the font for the `StaveLine` text\n\t\n\t\n\t  _createClass(StaveLine, [{\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t    // The the annotation for the `StaveLine`\n\t\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text) {\n\t      this.text = text;return this;\n\t    }\n\t\n\t    // Set the notes for the `StaveLine`\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      if (!notes.first_indices) notes.first_indices = [0];\n\t      if (!notes.last_indices) notes.last_indices = [0];\n\t\n\t      if (notes.first_indices.length !== notes.last_indices.length) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Connected notes must have similar index sizes');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.first_indices = notes.first_indices;\n\t      this.last_note = notes.last_note;\n\t      this.last_indices = notes.last_indices;\n\t      return this;\n\t    }\n\t\n\t    // Apply the style of the `StaveLine` to the context\n\t\n\t  }, {\n\t    key: 'applyLineStyle',\n\t    value: function applyLineStyle() {\n\t      var ctx = this.checkContext();\n\t      var render_options = this.render_options;\n\t\n\t      if (render_options.line_dash) {\n\t        ctx.setLineDash(render_options.line_dash);\n\t      }\n\t\n\t      if (render_options.line_width) {\n\t        ctx.setLineWidth(render_options.line_width);\n\t      }\n\t\n\t      if (render_options.rounded_end) {\n\t        ctx.setLineCap('round');\n\t      } else {\n\t        ctx.setLineCap('square');\n\t      }\n\t    }\n\t\n\t    // Apply the text styling to the context\n\t\n\t  }, {\n\t    key: 'applyFontStyle',\n\t    value: function applyFontStyle() {\n\t      var ctx = this.checkContext();\n\t\n\t      if (this.font) {\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      }\n\t\n\t      if (this.render_options.color) {\n\t        ctx.setStrokeStyle(this.render_options.color);\n\t        ctx.setFillStyle(this.render_options.color);\n\t      }\n\t    }\n\t\n\t    // Renders the `StaveLine` on the context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t      var render_options = this.render_options;\n\t\n\t      ctx.save();\n\t      this.applyLineStyle();\n\t\n\t      // Cycle through each set of indices and draw lines\n\t      var start_position = void 0;\n\t      var end_position = void 0;\n\t      this.first_indices.forEach(function (first_index, i) {\n\t        var last_index = _this2.last_indices[i];\n\t\n\t        // Get initial coordinates for the start/end of the line\n\t        start_position = first_note.getModifierStartXY(2, first_index);\n\t        end_position = last_note.getModifierStartXY(1, last_index);\n\t        var upwards_slope = start_position.y > end_position.y;\n\t\n\t        // Adjust `x` coordinates for modifiers\n\t        start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n\t        end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\t\n\t        // Adjust first `x` coordinates for displacements\n\t        var notehead_width = first_note.getGlyph().getWidth();\n\t        var first_displaced = first_note.getKeyProps()[first_index].displaced;\n\t        if (first_displaced && first_note.getStemDirection() === 1) {\n\t          start_position.x += notehead_width + render_options.padding_left;\n\t        }\n\t\n\t        // Adjust last `x` coordinates for displacements\n\t        var last_displaced = last_note.getKeyProps()[last_index].displaced;\n\t        if (last_displaced && last_note.getStemDirection() === -1) {\n\t          end_position.x -= notehead_width + render_options.padding_right;\n\t        }\n\t\n\t        // Adjust y position better if it's not coming from the center of the note\n\t        start_position.y += upwards_slope ? -3 : 1;\n\t        end_position.y += upwards_slope ? 2 : 0;\n\t\n\t        drawArrowLine(ctx, start_position, end_position, _this2.render_options);\n\t      });\n\t\n\t      ctx.restore();\n\t\n\t      // Determine the x coordinate where to start the text\n\t      var text_width = ctx.measureText(this.text).width;\n\t      var justification = render_options.text_justification;\n\t      var x = 0;\n\t      if (justification === StaveLine.TextJustification.LEFT) {\n\t        x = start_position.x;\n\t      } else if (justification === StaveLine.TextJustification.CENTER) {\n\t        var delta_x = end_position.x - start_position.x;\n\t        var center_x = delta_x / 2 + start_position.x;\n\t        x = center_x - text_width / 2;\n\t      } else if (justification === StaveLine.TextJustification.RIGHT) {\n\t        x = end_position.x - text_width;\n\t      }\n\t\n\t      // Determine the y value to start the text\n\t      var y = void 0;\n\t      var vertical_position = render_options.text_position_vertical;\n\t      if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n\t        y = first_note.getStave().getYForTopText();\n\t      } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n\t        y = first_note.getStave().getYForBottomText(_tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t      }\n\t\n\t      // Draw the text\n\t      ctx.save();\n\t      this.applyFontStyle();\n\t      ctx.fillText(this.text, x, y);\n\t      ctx.restore();\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveLine;\n\t}(_element.Element);\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PedalMarking = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements different types of pedal markings. These notation\n\t// elements indicate to the performer when to depress and release the a pedal.\n\t//\n\t// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n\t// custom text for the release/depress pedal markings.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (PedalMarking.DEBUG) _vex.Vex.L('Vex.Flow.PedalMarking', args);\n\t}\n\t\n\t// Draws a pedal glyph with the provided `name` on a rendering `context`\n\t// at the coordinates `x` and `y. Takes into account the glyph data\n\t// coordinate shifts.\n\tfunction drawPedalGlyph(name, context, x, y, point) {\n\t  var glyph_data = PedalMarking.GLYPHS[name];\n\t  var glyph = new _glyph.Glyph(glyph_data.code, point);\n\t  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n\t}\n\t\n\tvar PedalMarking = exports.PedalMarking = function (_Element) {\n\t  _inherits(PedalMarking, _Element);\n\t\n\t  _createClass(PedalMarking, null, [{\n\t    key: 'createSustain',\n\t\n\t\n\t    // Create a sustain pedal marking. Returns the defaults PedalMarking.\n\t    // Which uses the traditional \"Ped\" and \"*\"\" markings.\n\t    value: function createSustain(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      return pedal;\n\t    }\n\t\n\t    // Create a sostenuto pedal marking\n\t\n\t  }, {\n\t    key: 'createSostenuto',\n\t    value: function createSostenuto(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      pedal.setStyle(PedalMarking.Styles.MIXED);\n\t      pedal.setCustomText('Sost. Ped.');\n\t      return pedal;\n\t    }\n\t\n\t    // Create an una corda pedal marking\n\t\n\t  }, {\n\t    key: 'createUnaCorda',\n\t    value: function createUnaCorda(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      pedal.setStyle(PedalMarking.Styles.TEXT);\n\t      pedal.setCustomText('una corda', 'tre corda');\n\t      return pedal;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'GLYPHS',\n\t\n\t    // Glyph data\n\t    get: function get() {\n\t      return {\n\t        'pedal_depress': {\n\t          code: 'v36',\n\t          x_shift: -10,\n\t          y_shift: 0\n\t        },\n\t        'pedal_release': {\n\t          code: 'v5d',\n\t          x_shift: -2,\n\t          y_shift: 3\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'Styles',\n\t    get: function get() {\n\t      return {\n\t        TEXT: 1,\n\t        BRACKET: 2,\n\t        MIXED: 3\n\t      };\n\t    }\n\t  }, {\n\t    key: 'StylesString',\n\t    get: function get() {\n\t      return {\n\t        text: PedalMarking.Styles.TEXT,\n\t        bracket: PedalMarking.Styles.BRACKET,\n\t        mixed: PedalMarking.Styles.MIXED\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function PedalMarking(notes) {\n\t    _classCallCheck(this, PedalMarking);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PedalMarking.__proto__ || Object.getPrototypeOf(PedalMarking)).call(this));\n\t\n\t    _this.setAttribute('type', 'PedalMarking');\n\t\n\t    _this.notes = notes;\n\t    _this.style = PedalMarking.TEXT;\n\t    _this.line = 0;\n\t\n\t    // Custom text for the release/depress markings\n\t    _this.custom_depress_text = '';\n\t    _this.custom_release_text = '';\n\t\n\t    _this.font = {\n\t      family: 'Times New Roman',\n\t      size: 12,\n\t      weight: 'italic bold'\n\t    };\n\t\n\t    _this.render_options = {\n\t      bracket_height: 10,\n\t      text_margin_right: 6,\n\t      bracket_line_width: 1,\n\t      glyph_point_size: 40,\n\t      color: 'black'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Set custom text for the `depress`/`release` pedal markings. No text is\n\t  // set if the parameter is falsy.\n\t\n\t\n\t  _createClass(PedalMarking, [{\n\t    key: 'setCustomText',\n\t    value: function setCustomText(depress, release) {\n\t      this.custom_depress_text = depress || '';\n\t      this.custom_release_text = release || '';\n\t      return this;\n\t    }\n\t\n\t    // Set the pedal marking style\n\t\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      if (style < 1 && style > 3) {\n\t        throw new _vex.Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n\t      }\n\t\n\t      this.style = style;\n\t      return this;\n\t    }\n\t\n\t    // Set the staff line to render the markings on\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Draw the bracket based pedal markings\n\t\n\t  }, {\n\t    key: 'drawBracketed',\n\t    value: function drawBracketed() {\n\t      var ctx = this.context;\n\t      var is_pedal_depressed = false;\n\t      var prev_x = void 0;\n\t      var prev_y = void 0;\n\t      var pedal = this;\n\t\n\t      // Iterate through each note\n\t      this.notes.forEach(function (note, index, notes) {\n\t        // Each note triggers the opposite pedal action\n\t        is_pedal_depressed = !is_pedal_depressed;\n\t\n\t        // Get the initial coordinates for the note\n\t        var x = note.getAbsoluteX();\n\t        var y = note.getStave().getYForBottomText(pedal.line + 3);\n\t\n\t        // Throw if current note is positioned before the previous note\n\t        if (x < prev_x) {\n\t          throw new _vex.Vex.RERR('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n\t        }\n\t\n\t        // Determine if the previous or next note are the same\n\t        // as the current note. We need to keep track of this for\n\t        // when adjustments are made for the release+depress action\n\t        var next_is_same = notes[index + 1] === note;\n\t        var prev_is_same = notes[index - 1] === note;\n\t\n\t        var x_shift = 0;\n\t        if (is_pedal_depressed) {\n\t          // Adjustment for release+depress\n\t          x_shift = prev_is_same ? 5 : 0;\n\t\n\t          if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n\t            // For MIXED style, start with text instead of bracket\n\t            if (pedal.custom_depress_text) {\n\t              // If we have custom text, use instead of the default \"Ped\" glyph\n\t              var text_width = ctx.measureText(pedal.custom_depress_text).width;\n\t              ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n\t              x_shift = text_width / 2 + pedal.render_options.text_margin_right;\n\t            } else {\n\t              // Render the Ped glyph in position\n\t              drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n\t              x_shift = 20 + pedal.render_options.text_margin_right;\n\t            }\n\t          } else {\n\t            // Draw start bracket\n\t            ctx.beginPath();\n\t            ctx.moveTo(x, y - pedal.render_options.bracket_height);\n\t            ctx.lineTo(x + x_shift, y);\n\t            ctx.stroke();\n\t            ctx.closePath();\n\t          }\n\t        } else {\n\t          // Adjustment for release+depress\n\t          x_shift = next_is_same ? -5 : 0;\n\t\n\t          // Draw end bracket\n\t          ctx.beginPath();\n\t          ctx.moveTo(prev_x, prev_y);\n\t          ctx.lineTo(x + x_shift, y);\n\t          ctx.lineTo(x, y - pedal.render_options.bracket_height);\n\t          ctx.stroke();\n\t          ctx.closePath();\n\t        }\n\t\n\t        // Store previous coordinates\n\t        prev_x = x + x_shift;\n\t        prev_y = y;\n\t      });\n\t    }\n\t\n\t    // Draw the text based pedal markings. This defaults to the traditional\n\t    // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n\t\n\t  }, {\n\t    key: 'drawText',\n\t    value: function drawText() {\n\t      var ctx = this.context;\n\t      var is_pedal_depressed = false;\n\t      var pedal = this;\n\t\n\t      // The glyph point size\n\t      var point = pedal.render_options.glyph_point_size;\n\t\n\t      // Iterate through each note, placing glyphs or custom text accordingly\n\t      this.notes.forEach(function (note) {\n\t        is_pedal_depressed = !is_pedal_depressed;\n\t        var stave = note.getStave();\n\t        var x = note.getAbsoluteX();\n\t        var y = stave.getYForBottomText(pedal.line + 3);\n\t\n\t        var text_width = 0;\n\t        if (is_pedal_depressed) {\n\t          if (pedal.custom_depress_text) {\n\t            text_width = ctx.measureText(pedal.custom_depress_text).width;\n\t            ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n\t          } else {\n\t            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n\t          }\n\t        } else {\n\t          if (pedal.custom_release_text) {\n\t            text_width = ctx.measureText(pedal.custom_release_text).width;\n\t            ctx.fillText(pedal.custom_release_text, x - text_width / 2, y);\n\t          } else {\n\t            drawPedalGlyph('pedal_release', ctx, x, y, point);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    // Render the pedal marking in position on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.setStrokeStyle(this.render_options.color);\n\t      ctx.setFillStyle(this.render_options.color);\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t\n\t      L('Rendering Pedal Marking');\n\t\n\t      if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n\t        ctx.setLineWidth(this.render_options.bracket_line_width);\n\t        this.drawBracketed();\n\t      } else if (this.style === PedalMarking.Styles.TEXT) {\n\t        this.drawText();\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return PedalMarking;\n\t}(_element.Element);\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextBracket = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implement `TextBrackets` which extend between two notes.\n\t// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n\t// using this class.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (TextBracket.DEBUG) _vex.Vex.L('Vex.Flow.TextBracket', args);\n\t}\n\t\n\tvar TextBracket = exports.TextBracket = function (_Element) {\n\t  _inherits(TextBracket, _Element);\n\t\n\t  _createClass(TextBracket, null, [{\n\t    key: 'Positions',\n\t\n\t    // FIXME: Modifier.Position is singular while this is plural, make consistent\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        BOTTOM: -1\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        top: TextBracket.Positions.TOP,\n\t        bottom: TextBracket.Positions.BOTTOM\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TextBracket(_ref) {\n\t    var start = _ref.start;\n\t    var stop = _ref.stop;\n\t    var _ref$text = _ref.text;\n\t    var text = _ref$text === undefined ? '' : _ref$text;\n\t    var _ref$superscript = _ref.superscript;\n\t    var superscript = _ref$superscript === undefined ? '' : _ref$superscript;\n\t    var _ref$position = _ref.position;\n\t    var position = _ref$position === undefined ? TextBracket.Positions.TOP : _ref$position;\n\t\n\t    _classCallCheck(this, TextBracket);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextBracket.__proto__ || Object.getPrototypeOf(TextBracket)).call(this));\n\t\n\t    _this.setAttribute('type', 'TextBracket');\n\t\n\t    _this.start = start;\n\t    _this.stop = stop;\n\t\n\t    _this.text = text;\n\t    _this.superscript = superscript;\n\t\n\t    _this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n\t\n\t    _this.line = 1;\n\t\n\t    _this.font = {\n\t      family: 'Serif',\n\t      size: 15,\n\t      weight: 'italic'\n\t    };\n\t\n\t    _this.render_options = {\n\t      dashed: true,\n\t      dash: [5],\n\t      color: 'black',\n\t      line_width: 1,\n\t      show_bracket: true,\n\t      bracket_height: 8,\n\t\n\t      // In the BOTTOM position, the bracket line can extend\n\t      // under the superscript.\n\t      underline_superscript: true\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Apply the text backet styling to the provided `context`\n\t\n\t\n\t  _createClass(TextBracket, [{\n\t    key: 'applyStyle',\n\t    value: function applyStyle(context) {\n\t      // Apply style for the octave bracket\n\t      context.setFont(this.font.family, this.font.size, this.font.weight);\n\t      context.setStrokeStyle(this.render_options.color);\n\t      context.setFillStyle(this.render_options.color);\n\t      context.setLineWidth(this.render_options.line_width);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Set whether the bracket line should be `dashed`. You can also\n\t    // optionally set the `dash` pattern by passing in an array of numbers\n\t\n\t  }, {\n\t    key: 'setDashed',\n\t    value: function setDashed(dashed, dash) {\n\t      this.render_options.dashed = dashed;\n\t      if (dash) this.render_options.dash = dash;\n\t      return this;\n\t    }\n\t\n\t    // Set the font for the text\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      // We use Object.assign to support partial updates to the font object\n\t      this.font = _extends({}, this.font, font);\n\t      return this;\n\t    }\n\t    // Set the rendering `context` for the octave bracket\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Draw the octave bracket on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.context;\n\t      this.setRendered();\n\t\n\t      var y = 0;\n\t      switch (this.position) {\n\t        case TextBracket.Positions.TOP:\n\t          y = this.start.getStave().getYForTopText(this.line);\n\t          break;\n\t        case TextBracket.Positions.BOTTOM:\n\t          y = this.start.getStave().getYForBottomText(this.line + _tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'The position ' + this.position + ' is invalid');\n\t      }\n\t\n\t      // Get the preliminary start and stop coordintates for the bracket\n\t      var start = { x: this.start.getAbsoluteX(), y: y };\n\t      var stop = { x: this.stop.getAbsoluteX(), y: y };\n\t\n\t      L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\t\n\t      var bracket_height = this.render_options.bracket_height * this.position;\n\t\n\t      ctx.save();\n\t      this.applyStyle(ctx);\n\t\n\t      // Draw text\n\t      ctx.fillText(this.text, start.x, start.y);\n\t\n\t      // Get the width and height for the octave number\n\t      var main_width = ctx.measureText(this.text).width;\n\t      var main_height = ctx.measureText('M').width;\n\t\n\t      // Calculate the y position for the super script\n\t      var super_y = start.y - main_height / 2.5;\n\t\n\t      // Draw the superscript\n\t      ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n\t      ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\t\n\t      // Determine width and height of the superscript\n\t      var superscript_width = ctx.measureText(this.superscript).width;\n\t      var super_height = ctx.measureText('M').width;\n\t\n\t      // Setup initial coordinates for the bracket line\n\t      var start_x = start.x;\n\t      var line_y = super_y;\n\t      var end_x = stop.x + this.stop.getGlyph().getWidth();\n\t\n\t      // Adjust x and y coordinates based on position\n\t      if (this.position === TextBracket.Positions.TOP) {\n\t        start_x += main_width + superscript_width + 5;\n\t        line_y -= super_height / 2.7;\n\t      } else if (this.position === TextBracket.Positions.BOTTOM) {\n\t        line_y += super_height / 2.7;\n\t        start_x += main_width + 2;\n\t\n\t        if (!this.render_options.underline_superscript) {\n\t          start_x += superscript_width;\n\t        }\n\t      }\n\t\n\t      if (this.render_options.dashed) {\n\t        // Main line\n\t        _renderer.Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n\t        // Ending Bracket\n\t        if (this.render_options.show_bracket) {\n\t          _renderer.Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n\t        }\n\t      } else {\n\t        ctx.beginPath();\n\t        ctx.moveTo(start_x, line_y);\n\t        // Main line\n\t        ctx.lineTo(end_x, line_y);\n\t        if (this.render_options.show_bracket) {\n\t          // Ending bracket\n\t          ctx.lineTo(end_x, line_y + bracket_height);\n\t        }\n\t        ctx.stroke();\n\t        ctx.closePath();\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return TextBracket;\n\t}(_element.Element);\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.BarNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n\t// be added to a voice and rendered in the middle of a stave. Since it has no\n\t// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n\t//\n\t// See `tests/barnote_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (BarNote.DEBUG) _vex.Vex.L('Vex.Flow.BarNote', args);\n\t}\n\t\n\tvar BarNote = exports.BarNote = function (_Note) {\n\t  _inherits(BarNote, _Note);\n\t\n\t  function BarNote() {\n\t    var _this$metrics$widths;\n\t\n\t    var type = arguments.length <= 0 || arguments[0] === undefined ? _stavebarline.Barline.type.SINGLE : arguments[0];\n\t\n\t    _classCallCheck(this, BarNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BarNote.__proto__ || Object.getPrototypeOf(BarNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'BarNote');\n\t\n\t    _this.metrics = {\n\t      widths: {}\n\t    };\n\t\n\t    var TYPE = _stavebarline.Barline.type;\n\t    _this.metrics.widths = (_this$metrics$widths = {}, _defineProperty(_this$metrics$widths, TYPE.SINGLE, 8), _defineProperty(_this$metrics$widths, TYPE.DOUBLE, 12), _defineProperty(_this$metrics$widths, TYPE.END, 15), _defineProperty(_this$metrics$widths, TYPE.REPEAT_BEGIN, 14), _defineProperty(_this$metrics$widths, TYPE.REPEAT_END, 14), _defineProperty(_this$metrics$widths, TYPE.REPEAT_BOTH, 18), _defineProperty(_this$metrics$widths, TYPE.NONE, 0), _this$metrics$widths);\n\t\n\t    // Tell the formatter that bar notes have no duration.\n\t    _this.ignore_ticks = true;\n\t    _this.setType(type);\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n\t\n\t\n\t  _createClass(BarNote, [{\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = typeof type === 'string' ? _stavebarline.Barline.typeString[type] : type;\n\t\n\t      // Set width to width of relevant `Barline`.\n\t      this.setWidth(this.metrics.widths[this.type]);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      /* overridden to ignore */\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t\n\t    // Render note to stave.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      L('Rendering bar line at: ', this.getAbsoluteX());\n\t      var barline = new _stavebarline.Barline(this.type);\n\t      barline.setX(this.getAbsoluteX());\n\t      barline.draw(this.stave);\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return BarNote;\n\t}(_note.Note);\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GhostNote = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t\n\tvar GhostNote = exports.GhostNote = function (_StemmableNote) {\n\t  _inherits(GhostNote, _StemmableNote);\n\t\n\t  /** @constructor */\n\t  function GhostNote(parameter) {\n\t    _classCallCheck(this, GhostNote);\n\t\n\t    // Sanity check\n\t    if (!parameter) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Ghost note must have valid initialization data to identify ' + 'duration.');\n\t    }\n\t\n\t    var note_struct = void 0;\n\t\n\t    // Preserve backwards-compatibility\n\t    if (typeof parameter === 'string') {\n\t      note_struct = { duration: parameter };\n\t    } else if ((typeof parameter === 'undefined' ? 'undefined' : _typeof(parameter)) === 'object') {\n\t      note_struct = parameter;\n\t    } else {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Ghost note must have valid initialization data to identify ' + 'duration.');\n\t    }\n\t\n\t    var _this = _possibleConstructorReturn(this, (GhostNote.__proto__ || Object.getPrototypeOf(GhostNote)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'GhostNote');\n\t\n\t    // Note properties\n\t    _this.setWidth(0);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GhostNote, [{\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      _get(GhostNote.prototype.__proto__ || Object.getPrototypeOf(GhostNote.prototype), 'setStave', this).call(this, stave);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* intentionally overridden */return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t\n\t      // Draw the modifiers\n\t      this.setRendered();\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        var modifier = this.modifiers[i];\n\t        modifier.setContext(this.context);\n\t        modifier.draw();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GhostNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tremolo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Mike Corrigan <corrigan@gmail.com>\n\t//\n\t// This class implements tremolo notation.\n\t\n\tvar Tremolo = exports.Tremolo = function (_Modifier) {\n\t  _inherits(Tremolo, _Modifier);\n\t\n\t  _createClass(Tremolo, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'tremolo';\n\t    }\n\t  }]);\n\t\n\t  function Tremolo(num) {\n\t    _classCallCheck(this, Tremolo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tremolo.__proto__ || Object.getPrototypeOf(Tremolo)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tremolo');\n\t\n\t    _this.num = num;\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.CENTER;\n\t    _this.code = 'v74';\n\t    _this.shift_right = -2;\n\t    _this.y_spacing = 4;\n\t\n\t    _this.render_options = {\n\t      font_scale: 35,\n\t      stroke_px: 3,\n\t      stroke_spacing: 10\n\t    };\n\t\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 16,\n\t      weight: ''\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tremolo, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Tremolo.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var x = start.x;\n\t      var y = start.y;\n\t\n\t      x += this.shift_right;\n\t      for (var i = 0; i < this.num; ++i) {\n\t        _glyph.Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n\t        y += this.y_spacing;\n\t      }\n\t    }\n\t  }]);\n\n\t  return Tremolo;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Crescendo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the `Crescendo` object which draws crescendos and\n\t// decrescendo dynamics markings. A `Crescendo` is initialized with a\n\t// duration and formatted as part of a `Voice` like any other `Note`\n\t// type in VexFlow. This object would most likely be formatted in a Voice\n\t// with `TextNotes` - which are used to represent other dynamics markings.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Crescendo.DEBUG) _vex.Vex.L('Vex.Flow.Crescendo', args);\n\t}\n\t\n\t// Private helper to draw the hairpin\n\tfunction renderHairpin(ctx, params) {\n\t  var begin_x = params.begin_x;\n\t  var end_x = params.end_x;\n\t  var y = params.y;\n\t  var half_height = params.height / 2;\n\t\n\t  ctx.beginPath();\n\t\n\t  if (params.reverse) {\n\t    ctx.moveTo(begin_x, y - half_height);\n\t    ctx.lineTo(end_x, y);\n\t    ctx.lineTo(begin_x, y + half_height);\n\t  } else {\n\t    ctx.moveTo(end_x, y - half_height);\n\t    ctx.lineTo(begin_x, y);\n\t    ctx.lineTo(end_x, y + half_height);\n\t  }\n\t\n\t  ctx.stroke();\n\t  ctx.closePath();\n\t}\n\t\n\tvar Crescendo = exports.Crescendo = function (_Note) {\n\t  _inherits(Crescendo, _Note);\n\t\n\t  // Initialize the crescendo's properties\n\t  function Crescendo(note_struct) {\n\t    _classCallCheck(this, Crescendo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Crescendo.__proto__ || Object.getPrototypeOf(Crescendo)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'Crescendo');\n\t\n\t    // Whether the object is a decrescendo\n\t    _this.decrescendo = false;\n\t\n\t    // The staff line to be placed on\n\t    _this.line = note_struct.line || 0;\n\t\n\t    // The height at the open end of the cresc/decresc\n\t    _this.height = 15;\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // Extensions to the length of the crescendo on either side\n\t      extend_left: 0,\n\t      extend_right: 0,\n\t      // Vertical shift\n\t      y_shift: 0\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  // Set the line to center the element on\n\t\n\t\n\t  _createClass(Crescendo, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Set the full height at the open end\n\t\n\t  }, {\n\t    key: 'setHeight',\n\t    value: function setHeight(height) {\n\t      this.height = height;return this;\n\t    }\n\t\n\t    // Set whether the sign should be a descresendo by passing a bool\n\t    // to `decresc`\n\t\n\t  }, {\n\t    key: 'setDecrescendo',\n\t    value: function setDecrescendo(decresc) {\n\t      this.decrescendo = decresc;\n\t      return this;\n\t    }\n\t\n\t    // Preformat the note\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.preFormatted = true;return this;\n\t    }\n\t\n\t    // Render the Crescendo object onto the canvas\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var tick_context = this.getTickContext();\n\t      var next_context = _tickcontext.TickContext.getNextContext(tick_context);\n\t\n\t      var begin_x = this.getAbsoluteX();\n\t      var end_x = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n\t      var y = this.stave.getYForLine(this.line + -3) + 1;\n\t\n\t      L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n\t\n\t      renderHairpin(this.context, {\n\t        begin_x: begin_x - this.render_options.extend_left,\n\t        end_x: end_x + this.render_options.extend_right,\n\t        y: y + this.render_options.y_shift,\n\t        height: this.height,\n\t        reverse: this.decrescendo\n\t      });\n\t    }\n\t  }]);\n\n\t  return Crescendo;\n\t}(_note.Note);\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.System = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// This class implements a musical system, which is a collection of staves,\n\t// each which can have one or more voices. All voices across all staves in\n\t// the system are formatted together.\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _factory = __webpack_require__(76);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction setDefaults(params, defaults) {\n\t  var default_options = defaults.options;\n\t  params = _extends(defaults, params);\n\t  params.options = _extends(default_options, params.options);\n\t  return params;\n\t}\n\t\n\tvar System = exports.System = function (_Element) {\n\t  _inherits(System, _Element);\n\t\n\t  function System() {\n\t    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, System);\n\t\n\t    var _this = _possibleConstructorReturn(this, (System.__proto__ || Object.getPrototypeOf(System)).call(this));\n\t\n\t    _this.setAttribute('type', 'System');\n\t    _this.setOptions(params);\n\t    _this.parts = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(System, [{\n\t    key: 'setOptions',\n\t    value: function setOptions() {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      this.options = setDefaults(options, {\n\t        x: 10,\n\t        y: 10,\n\t        width: 500,\n\t        connector: null,\n\t        spaceBetweenStaves: 12, // stave spaces\n\t        factory: null,\n\t        debugFormatter: false,\n\t        formatIterations: 0, // number of formatter tuning steps\n\t        options: {}\n\t      });\n\t\n\t      this.factory = this.options.factory || new _factory.Factory({ renderer: { el: null } });\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      _get(System.prototype.__proto__ || Object.getPrototypeOf(System.prototype), 'setContext', this).call(this, context);\n\t      this.factory.setContext(context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addConnector',\n\t    value: function addConnector() {\n\t      var type = arguments.length <= 0 || arguments[0] === undefined ? 'double' : arguments[0];\n\t\n\t      this.connector = this.factory.StaveConnector({\n\t        top_stave: this.parts[0].stave,\n\t        bottom_stave: this.parts[this.parts.length - 1].stave,\n\t        type: type\n\t      });\n\t      return this.connector;\n\t    }\n\t  }, {\n\t    key: 'addStave',\n\t    value: function addStave(params) {\n\t      var _this2 = this;\n\t\n\t      params = setDefaults(params, {\n\t        stave: null,\n\t        voices: [],\n\t        spaceAbove: 0, // stave spaces\n\t        spaceBelow: 0, // stave spaces\n\t        debugNoteMetrics: false,\n\t        options: {}\n\t      });\n\t\n\t      if (!params.stave) {\n\t        var options = { left_bar: false };\n\t        params.stave = this.factory.Stave({\n\t          x: this.options.x,\n\t          y: this.options.y,\n\t          width: this.options.width,\n\t          options: options\n\t        });\n\t      }\n\t\n\t      params.voices.forEach(function (voice) {\n\t        return voice.setContext(_this2.context).setStave(params.stave).getTickables().forEach(function (tickable) {\n\t          return tickable.setStave(params.stave);\n\t        });\n\t      });\n\t\n\t      this.parts.push(params);\n\t      return params.stave;\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      var _this3 = this;\n\t\n\t      var formatter = new _formatter.Formatter();\n\t      this.formatter = formatter;\n\t\n\t      var y = this.options.y;\n\t      var startX = 0;\n\t      var allVoices = [];\n\t      var debugNoteMetricsYs = [];\n\t\n\t      // Join the voices for each stave.\n\t      this.parts.forEach(function (part) {\n\t        y = y + part.stave.space(part.spaceAbove);\n\t        part.stave.setY(y);\n\t        formatter.joinVoices(part.voices);\n\t        y = y + part.stave.space(part.spaceBelow);\n\t        y = y + part.stave.space(_this3.options.spaceBetweenStaves);\n\t        if (part.debugNoteMetrics) {\n\t          debugNoteMetricsYs.push({ y: y, voice: part.voices[0] });\n\t          y += 15;\n\t        }\n\t        allVoices = allVoices.concat(part.voices);\n\t\n\t        startX = Math.max(startX, part.stave.getNoteStartX());\n\t      });\n\t\n\t      // Update the start position of all staves.\n\t      this.parts.forEach(function (part) {\n\t        return part.stave.setNoteStartX(startX);\n\t      });\n\t      var justifyWidth = this.options.width - (startX - this.options.x) - _note.Note.STAVEPADDING;\n\t      formatter.format(allVoices, justifyWidth);\n\t\n\t      for (var i = 0; i < this.options.formatIterations; i++) {\n\t        formatter.tune();\n\t      }\n\t\n\t      this.startX = startX;\n\t      this.debugNoteMetricsYs = debugNoteMetricsYs;\n\t      this.lastY = y;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      // Render debugging information, if requested.\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (this.options.debugFormatter) {\n\t        _formatter.Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n\t      }\n\t\n\t      this.debugNoteMetricsYs.forEach(function (d) {\n\t        d.voice.getTickables().forEach(function (note) {\n\t          return _note.Note.plotMetrics(ctx, note, d.y);\n\t        });\n\t      });\n\t    }\n\t  }]);\n\n\t  return System;\n\t}(_element.Element);\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Factory = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a high level API around VexFlow. It will eventually\n\t// become the canonical way to use VexFlow.\n\t//\n\t// *This API is currently DRAFT*\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _textdynamics = __webpack_require__(67);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _staveline = __webpack_require__(68);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _system = __webpack_require__(75);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _curve = __webpack_require__(66);\n\t\n\tvar _gracenote = __webpack_require__(61);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _easyscore = __webpack_require__(77);\n\t\n\tvar _timesignote = __webpack_require__(59);\n\t\n\tvar _clefnote = __webpack_require__(58);\n\t\n\tvar _pedalmarking = __webpack_require__(69);\n\t\n\tvar _textbracket = __webpack_require__(70);\n\t\n\tvar _vibratobracket = __webpack_require__(57);\n\t\n\tvar _ghostnote = __webpack_require__(72);\n\t\n\tvar _barnote = __webpack_require__(71);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tvar _tabstave = __webpack_require__(55);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Factory.DEBUG) _vex.Vex.L('Vex.Flow.Factory', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('FactoryError');\n\t\n\tfunction setDefaults() {\n\t  var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t  var defaults = arguments[1];\n\t\n\t  var default_options = defaults.options;\n\t  params = _extends(defaults, params);\n\t  params.options = _extends(default_options, params.options);\n\t  return params;\n\t}\n\t\n\tvar Factory = exports.Factory = function () {\n\t  function Factory(options) {\n\t    _classCallCheck(this, Factory);\n\t\n\t    L('New factory: ', options);\n\t    var defaults = {\n\t      stave: {\n\t        space: 10\n\t      },\n\t      renderer: {\n\t        context: null,\n\t        elementId: '',\n\t        backend: _renderer.Renderer.Backends.SVG,\n\t        width: 500,\n\t        height: 200,\n\t        background: '#FFF'\n\t      },\n\t      font: {\n\t        face: 'Arial',\n\t        point: 10,\n\t        style: ''\n\t      }\n\t    };\n\t\n\t    this.options = defaults;\n\t    this.setOptions(options);\n\t  }\n\t\n\t  _createClass(Factory, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.renderQ = [];\n\t      this.systems = [];\n\t      this.staves = [];\n\t      this.voices = [];\n\t      this.stave = null; // current stave\n\t    }\n\t  }, {\n\t    key: 'getOptions',\n\t    value: function getOptions() {\n\t      return this.options;\n\t    }\n\t  }, {\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      var _arr = ['stave', 'renderer', 'font'];\n\t\n\t      for (var _i = 0; _i < _arr.length; _i++) {\n\t        var key = _arr[_i];\n\t        _extends(this.options[key], options[key]);\n\t      }\n\t      if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n\t        this.initRenderer();\n\t      }\n\t\n\t      this.reset();\n\t    }\n\t  }, {\n\t    key: 'initRenderer',\n\t    value: function initRenderer() {\n\t      var _options$renderer = this.options.renderer;\n\t      var elementId = _options$renderer.elementId;\n\t      var backend = _options$renderer.backend;\n\t      var width = _options$renderer.width;\n\t      var height = _options$renderer.height;\n\t      var background = _options$renderer.background;\n\t\n\t      if (elementId === '') {\n\t        throw new X('HTML DOM element not set in Factory');\n\t      }\n\t\n\t      this.context = _renderer.Renderer.buildContext(elementId, backend, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.context;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'getVoices',\n\t    value: function getVoices() {\n\t      return this.voices;\n\t    }\n\t\n\t    // Returns pixels from current stave spacing.\n\t\n\t  }, {\n\t    key: 'space',\n\t    value: function space(spacing) {\n\t      return this.options.stave.space * spacing;\n\t    }\n\t  }, {\n\t    key: 'Stave',\n\t    value: function Stave(params) {\n\t      params = setDefaults(params, {\n\t        x: 0,\n\t        y: 0,\n\t        width: this.options.renderer.width - this.space(1),\n\t        options: {\n\t          spacing_between_lines_px: this.options.stave.space\n\t        }\n\t      });\n\t\n\t      var stave = new _stave.Stave(params.x, params.y, params.width, params.options);\n\t      this.staves.push(stave);\n\t      stave.setContext(this.context);\n\t      this.stave = stave;\n\t      return stave;\n\t    }\n\t  }, {\n\t    key: 'TabStave',\n\t    value: function TabStave(params) {\n\t      params = setDefaults(params, {\n\t        x: 0,\n\t        y: 0,\n\t        width: this.options.renderer.width - this.space(1),\n\t        options: {\n\t          spacing_between_lines_px: this.options.stave.space * 1.3\n\t        }\n\t      });\n\t\n\t      var stave = new _tabstave.TabStave(params.x, params.y, params.width, params.options);\n\t      this.staves.push(stave);\n\t      stave.setContext(this.context);\n\t      this.stave = stave;\n\t      return stave;\n\t    }\n\t  }, {\n\t    key: 'StaveNote',\n\t    value: function StaveNote(noteStruct) {\n\t      var note = new _stavenote.StaveNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      this.renderQ.push(note);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GhostNote',\n\t    value: function GhostNote(noteStruct) {\n\t      var ghostNote = new _ghostnote.GhostNote(noteStruct);\n\t      if (this.stave) ghostNote.setStave(this.stave);\n\t      ghostNote.setContext(this.context);\n\t      this.renderQ.push(ghostNote);\n\t      return ghostNote;\n\t    }\n\t  }, {\n\t    key: 'TextNote',\n\t    value: function TextNote(textNoteStruct) {\n\t      var textNote = new _textnote.TextNote(textNoteStruct);\n\t      if (this.stave) textNote.setStave(this.stave);\n\t      textNote.setContext(this.context);\n\t      this.renderQ.push(textNote);\n\t      return textNote;\n\t    }\n\t  }, {\n\t    key: 'BarNote',\n\t    value: function BarNote(params) {\n\t      params = setDefaults(params, {\n\t        type: 'single',\n\t        options: {}\n\t      });\n\t\n\t      var barNote = new _barnote.BarNote(params.type);\n\t      if (this.stave) barNote.setStave(this.stave);\n\t      barNote.setContext(this.context);\n\t      this.renderQ.push(barNote);\n\t      return barNote;\n\t    }\n\t  }, {\n\t    key: 'ClefNote',\n\t    value: function ClefNote(params) {\n\t      params = setDefaults(params, {\n\t        type: 'treble',\n\t        options: {\n\t          size: 'default'\n\t        }\n\t      });\n\t\n\t      var clefNote = new _clefnote.ClefNote(params.type, params.options.size, params.options.annotation);\n\t      if (this.stave) clefNote.setStave(this.stave);\n\t      clefNote.setContext(this.context);\n\t      this.renderQ.push(clefNote);\n\t      return clefNote;\n\t    }\n\t  }, {\n\t    key: 'TimeSigNote',\n\t    value: function TimeSigNote(params) {\n\t      params = setDefaults(params, {\n\t        time: '4/4',\n\t        options: {}\n\t      });\n\t\n\t      var timeSigNote = new _timesignote.TimeSigNote(params.time);\n\t      if (this.stave) timeSigNote.setStave(this.stave);\n\t      timeSigNote.setContext(this.context);\n\t      this.renderQ.push(timeSigNote);\n\t      return timeSigNote;\n\t    }\n\t  }, {\n\t    key: 'TabNote',\n\t    value: function TabNote(noteStruct) {\n\t      var note = new _tabnote.TabNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      this.renderQ.push(note);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GraceNote',\n\t    value: function GraceNote(noteStruct) {\n\t      var note = new _gracenote.GraceNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GraceNoteGroup',\n\t    value: function GraceNoteGroup(params) {\n\t      var group = new _gracenotegroup.GraceNoteGroup(params.notes, params.slur);\n\t      group.setContext(this.context);\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'Accidental',\n\t    value: function Accidental(params) {\n\t      params = setDefaults(params, {\n\t        type: null,\n\t        options: {}\n\t      });\n\t\n\t      var accid = new _accidental.Accidental(params.type);\n\t      accid.setContext(this.context);\n\t      return accid;\n\t    }\n\t  }, {\n\t    key: 'Annotation',\n\t    value: function Annotation(params) {\n\t      params = setDefaults(params, {\n\t        text: 'p',\n\t        vJustify: 'below',\n\t        hJustify: 'center',\n\t        fontFamily: 'Times',\n\t        fontSize: 14,\n\t        fontWeight: 'bold italic',\n\t        options: {}\n\t      });\n\t\n\t      var annotation = new _annotation.Annotation(params.text);\n\t      annotation.setJustification(params.hJustify);\n\t      annotation.setVerticalJustification(params.vJustify);\n\t      annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n\t      annotation.setContext(this.context);\n\t      return annotation;\n\t    }\n\t  }, {\n\t    key: 'Articulation',\n\t    value: function Articulation(params) {\n\t      params = setDefaults(params, {\n\t        type: 'a.',\n\t        position: 'above',\n\t        options: {}\n\t      });\n\t\n\t      var articulation = new _articulation.Articulation(params.type);\n\t      articulation.setPosition(params.position);\n\t      articulation.setContext(this.context);\n\t      return articulation;\n\t    }\n\t  }, {\n\t    key: 'TextDynamics',\n\t    value: function TextDynamics(params) {\n\t      params = setDefaults(params, {\n\t        text: 'p',\n\t        duration: 'q',\n\t        dots: 0,\n\t        line: 0,\n\t        options: {}\n\t      });\n\t\n\t      var text = new _textdynamics.TextDynamics({\n\t        text: params.text,\n\t        line: params.line,\n\t        duration: params.duration,\n\t        dots: params.dots\n\t      });\n\t\n\t      if (this.stave) text.setStave(this.stave);\n\t      text.setContext(this.context);\n\t      this.renderQ.push(text);\n\t      return text;\n\t    }\n\t  }, {\n\t    key: 'Fingering',\n\t    value: function Fingering(params) {\n\t      params = setDefaults(params, {\n\t        number: '0',\n\t        position: 'left',\n\t        options: {}\n\t      });\n\t\n\t      var fingering = new _frethandfinger.FretHandFinger(params.number);\n\t      fingering.setPosition(params.position);\n\t      fingering.setContext(this.context);\n\t      return fingering;\n\t    }\n\t  }, {\n\t    key: 'StringNumber',\n\t    value: function StringNumber(params) {\n\t      params = setDefaults(params, {\n\t        number: '0',\n\t        position: 'left',\n\t        options: {}\n\t      });\n\t\n\t      var stringNumber = new _stringnumber.StringNumber(params.number);\n\t      stringNumber.setPosition(params.position);\n\t      stringNumber.setContext(this.context);\n\t      return stringNumber;\n\t    }\n\t  }, {\n\t    key: 'TickContext',\n\t    value: function TickContext() {\n\t      return new _tickcontext.TickContext().setContext(this.context);\n\t    }\n\t  }, {\n\t    key: 'ModifierContext',\n\t    value: function ModifierContext() {\n\t      return new _modifiercontext.ModifierContext();\n\t    }\n\t  }, {\n\t    key: 'Voice',\n\t    value: function Voice(params) {\n\t      params = setDefaults(params, {\n\t        time: '4/4',\n\t        options: {}\n\t      });\n\t      var voice = new _voice.Voice(params.time);\n\t      this.voices.push(voice);\n\t      return voice;\n\t    }\n\t  }, {\n\t    key: 'StaveConnector',\n\t    value: function StaveConnector(params) {\n\t      params = setDefaults(params, {\n\t        top_stave: null,\n\t        bottom_stave: null,\n\t        type: 'double',\n\t        options: {}\n\t      });\n\t      var connector = new _staveconnector.StaveConnector(params.top_stave, params.bottom_stave);\n\t      connector.setType(params.type).setContext(this.context);\n\t      this.renderQ.push(connector);\n\t      return connector;\n\t    }\n\t  }, {\n\t    key: 'Formatter',\n\t    value: function Formatter() {\n\t      return new _formatter.Formatter();\n\t    }\n\t  }, {\n\t    key: 'Tuplet',\n\t    value: function Tuplet(params) {\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {}\n\t      });\n\t\n\t      var tuplet = new _tuplet.Tuplet(params.notes, params.options).setContext(this.context);\n\t      this.renderQ.push(tuplet);\n\t      return tuplet;\n\t    }\n\t  }, {\n\t    key: 'Beam',\n\t    value: function Beam(params) {\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {\n\t          autoStem: false,\n\t          secondaryBeamBreaks: []\n\t        }\n\t      });\n\t\n\t      var beam = new _beam.Beam(params.notes, params.options.autoStem).setContext(this.context);\n\t      beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n\t      this.renderQ.push(beam);\n\t      return beam;\n\t    }\n\t  }, {\n\t    key: 'Curve',\n\t    value: function Curve(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        options: {}\n\t      });\n\t\n\t      var curve = new _curve.Curve(params.from, params.to, params.options).setContext(this.context);\n\t      this.renderQ.push(curve);\n\t      return curve;\n\t    }\n\t  }, {\n\t    key: 'StaveTie',\n\t    value: function StaveTie(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        first_indices: [0],\n\t        last_indices: [0],\n\t        text: null,\n\t        options: {\n\t          direction: undefined\n\t        }\n\t      });\n\t\n\t      var tie = new _stavetie.StaveTie({\n\t        first_note: params.from,\n\t        last_note: params.to,\n\t        first_indices: params.first_indices,\n\t        last_indices: params.last_indices\n\t      }, params.text);\n\t\n\t      if (params.options.direction) tie.setDirection(params.options.direction);\n\t      tie.setContext(this.context);\n\t      this.renderQ.push(tie);\n\t      return tie;\n\t    }\n\t  }, {\n\t    key: 'StaveLine',\n\t    value: function StaveLine(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        first_indices: [0],\n\t        last_indices: [0],\n\t        options: {}\n\t      });\n\t\n\t      var line = new _staveline.StaveLine({\n\t        first_note: params.from,\n\t        last_note: params.to,\n\t        first_indices: params.first_indices,\n\t        last_indices: params.last_indices\n\t      });\n\t\n\t      if (params.options.text) line.setText(params.options.text);\n\t      if (params.options.font) line.setFont(params.options.font);\n\t\n\t      line.setContext(this.context);\n\t      this.renderQ.push(line);\n\t      return line;\n\t    }\n\t  }, {\n\t    key: 'VibratoBracket',\n\t    value: function VibratoBracket(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        options: {\n\t          harsh: false\n\t        }\n\t      });\n\t\n\t      var vibratoBracket = new _vibratobracket.VibratoBracket({\n\t        start: params.from,\n\t        stop: params.to\n\t      });\n\t\n\t      if (params.options.line) vibratoBracket.setLine(params.options.line);\n\t      if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\t\n\t      vibratoBracket.setContext(this.context);\n\t      this.renderQ.push(vibratoBracket);\n\t\n\t      return vibratoBracket;\n\t    }\n\t  }, {\n\t    key: 'TextBracket',\n\t    value: function TextBracket(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        text: '',\n\t        options: {\n\t          superscript: '',\n\t          position: 1\n\t        }\n\t      });\n\t\n\t      var textBracket = new _textbracket.TextBracket({\n\t        start: params.from,\n\t        stop: params.to,\n\t        text: params.text,\n\t        superscript: params.options.superscript,\n\t        position: params.options.position\n\t      });\n\t\n\t      if (params.options.line) textBracket.setLine(params.options.line);\n\t      if (params.options.font) textBracket.setFont(params.options.font);\n\t\n\t      textBracket.setContext(this.context);\n\t      this.renderQ.push(textBracket);\n\t      return textBracket;\n\t    }\n\t  }, {\n\t    key: 'System',\n\t    value: function System() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params.factory = this;\n\t      var system = new _system.System(params).setContext(this.context);\n\t      this.systems.push(system);\n\t      return system;\n\t    }\n\t  }, {\n\t    key: 'EasyScore',\n\t    value: function EasyScore() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params.factory = this;\n\t      return new _easyscore.EasyScore(params);\n\t    }\n\t  }, {\n\t    key: 'PedalMarking',\n\t    value: function PedalMarking() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {\n\t          style: 'mixed'\n\t        }\n\t      });\n\t\n\t      var pedal = new _pedalmarking.PedalMarking(params.notes);\n\t      pedal.setStyle(_pedalmarking.PedalMarking.StylesString[params.options.style]);\n\t      pedal.setContext(this.context);\n\t      this.renderQ.push(pedal);\n\t      return pedal;\n\t    }\n\t  }, {\n\t    key: 'NoteSubGroup',\n\t    value: function NoteSubGroup() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {}\n\t      });\n\t\n\t      var group = new _notesubgroup.NoteSubGroup(params.notes);\n\t      group.setContext(this.context);\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this = this;\n\t\n\t      this.systems.forEach(function (i) {\n\t        return i.setContext(_this.context).format();\n\t      });\n\t      this.staves.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.voices.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.renderQ.forEach(function (i) {\n\t        if (!i.isRendered()) i.setContext(_this.context).draw();\n\t      });\n\t      this.systems.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.reset();\n\t    }\n\t  }], [{\n\t    key: 'newFromElementId',\n\t    value: function newFromElementId(elementId) {\n\t      var width = arguments.length <= 1 || arguments[1] === undefined ? 500 : arguments[1];\n\t      var height = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];\n\t\n\t      return new Factory({ renderer: { elementId: elementId, width: width, height: height } });\n\t    }\n\t  }]);\n\n\t  return Factory;\n\t}();\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.EasyScore = exports.X = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// This class implements a parser for a simple language to generate\n\t// VexFlow objects.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _parser = __webpack_require__(78);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (EasyScore.DEBUG) _vex.Vex.L('Vex.Flow.EasyScore', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('EasyScoreError');\n\t\n\tvar Grammar = function () {\n\t  function Grammar(builder) {\n\t    _classCallCheck(this, Grammar);\n\t\n\t    this.builder = builder;\n\t  }\n\t\n\t  _createClass(Grammar, [{\n\t    key: 'begin',\n\t    value: function begin() {\n\t      return this.LINE;\n\t    }\n\t  }, {\n\t    key: 'LINE',\n\t    value: function LINE() {\n\t      return {\n\t        expect: [this.PIECE, this.PIECES, this.EOL]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PIECE',\n\t    value: function PIECE() {\n\t      var _this = this;\n\t\n\t      return {\n\t        expect: [this.CHORDORNOTE, this.PARAMS],\n\t        run: function run() {\n\t          return _this.builder.commitPiece();\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PIECES',\n\t    value: function PIECES() {\n\t      return {\n\t        expect: [this.COMMA, this.PIECE],\n\t        zeroOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PARAMS',\n\t    value: function PARAMS() {\n\t      return {\n\t        expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'CHORDORNOTE',\n\t    value: function CHORDORNOTE() {\n\t      return {\n\t        expect: [this.CHORD, this.SINGLENOTE],\n\t        or: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'CHORD',\n\t    value: function CHORD() {\n\t      var _this2 = this;\n\t\n\t      return {\n\t        expect: [this.LPAREN, this.NOTES, this.RPAREN],\n\t        run: function run(state) {\n\t          return _this2.builder.addChord(state.matches[1]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'NOTES',\n\t    value: function NOTES() {\n\t      return {\n\t        expect: [this.NOTE],\n\t        oneOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'NOTE',\n\t    value: function NOTE() {\n\t      return {\n\t        expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'SINGLENOTE',\n\t    value: function SINGLENOTE() {\n\t      var _this3 = this;\n\t\n\t      return {\n\t        expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n\t        run: function run(state) {\n\t          return _this3.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'ACCIDENTAL',\n\t    value: function ACCIDENTAL() {\n\t      return {\n\t        expect: [this.ACCIDENTALS],\n\t        maybe: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'DOTS',\n\t    value: function DOTS() {\n\t      var _this4 = this;\n\t\n\t      return {\n\t        expect: [this.DOT],\n\t        zeroOrMore: true,\n\t        run: function run(state) {\n\t          return _this4.builder.setNoteDots(state.matches[0]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'TYPE',\n\t    value: function TYPE() {\n\t      var _this5 = this;\n\t\n\t      return {\n\t        expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n\t        maybe: true,\n\t        run: function run(state) {\n\t          return _this5.builder.setNoteType(state.matches[2]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'DURATION',\n\t    value: function DURATION() {\n\t      var _this6 = this;\n\t\n\t      return {\n\t        expect: [this.SLASH, this.DURATIONS],\n\t        maybe: true,\n\t        run: function run(state) {\n\t          return _this6.builder.setNoteDuration(state.matches[1]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'OPTS',\n\t    value: function OPTS() {\n\t      return {\n\t        expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n\t        maybe: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEYVALS',\n\t    value: function KEYVALS() {\n\t      return {\n\t        expect: [this.COMMA, this.KEYVAL],\n\t        zeroOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEYVAL',\n\t    value: function KEYVAL() {\n\t      var _this7 = this;\n\t\n\t      var unquote = function unquote(str) {\n\t        return str.slice(1, -1);\n\t      };\n\t\n\t      return {\n\t        expect: [this.KEY, this.EQUALS, this.VAL],\n\t        run: function run(state) {\n\t          return _this7.builder.addNoteOption(state.matches[0], unquote(state.matches[2]));\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VAL',\n\t    value: function VAL() {\n\t      return {\n\t        expect: [this.SVAL, this.DVAL],\n\t        or: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEY',\n\t    value: function KEY() {\n\t      return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n\t    }\n\t  }, {\n\t    key: 'DVAL',\n\t    value: function DVAL() {\n\t      return { token: '[\"][^\"]*[\"]' };\n\t    }\n\t  }, {\n\t    key: 'SVAL',\n\t    value: function SVAL() {\n\t      return { token: \"['][^']*[']\" };\n\t    }\n\t  }, {\n\t    key: 'NOTENAME',\n\t    value: function NOTENAME() {\n\t      return { token: '[a-gA-G]' };\n\t    }\n\t  }, {\n\t    key: 'OCTAVE',\n\t    value: function OCTAVE() {\n\t      return { token: '[0-9]+' };\n\t    }\n\t  }, {\n\t    key: 'ACCIDENTALS',\n\t    value: function ACCIDENTALS() {\n\t      return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n\t    }\n\t  }, {\n\t    key: 'DURATIONS',\n\t    value: function DURATIONS() {\n\t      return { token: '[0-9whq]+' };\n\t    }\n\t  }, {\n\t    key: 'TYPES',\n\t    value: function TYPES() {\n\t      return { token: '[rRsSxX]' };\n\t    }\n\t  }, {\n\t    key: 'LPAREN',\n\t    value: function LPAREN() {\n\t      return { token: '[(]' };\n\t    }\n\t  }, {\n\t    key: 'RPAREN',\n\t    value: function RPAREN() {\n\t      return { token: '[)]' };\n\t    }\n\t  }, {\n\t    key: 'COMMA',\n\t    value: function COMMA() {\n\t      return { token: '[,]' };\n\t    }\n\t  }, {\n\t    key: 'DOT',\n\t    value: function DOT() {\n\t      return { token: '[.]' };\n\t    }\n\t  }, {\n\t    key: 'SLASH',\n\t    value: function SLASH() {\n\t      return { token: '[/]' };\n\t    }\n\t  }, {\n\t    key: 'MAYBESLASH',\n\t    value: function MAYBESLASH() {\n\t      return { token: '[/]?' };\n\t    }\n\t  }, {\n\t    key: 'EQUALS',\n\t    value: function EQUALS() {\n\t      return { token: '[=]' };\n\t    }\n\t  }, {\n\t    key: 'LBRACKET',\n\t    value: function LBRACKET() {\n\t      return { token: '\\\\[' };\n\t    }\n\t  }, {\n\t    key: 'RBRACKET',\n\t    value: function RBRACKET() {\n\t      return { token: '\\\\]' };\n\t    }\n\t  }, {\n\t    key: 'EOL',\n\t    value: function EOL() {\n\t      return { token: '$' };\n\t    }\n\t  }]);\n\t\n\t  return Grammar;\n\t}();\n\t\n\tvar Builder = function () {\n\t  function Builder(factory) {\n\t    _classCallCheck(this, Builder);\n\t\n\t    this.factory = factory;\n\t    this.commitHooks = [];\n\t    this.reset();\n\t  }\n\t\n\t  _createClass(Builder, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      this.options = {\n\t        stem: 'auto',\n\t        clef: 'treble'\n\t      };\n\t      this.elements = {\n\t        notes: [],\n\t        accidentals: []\n\t      };\n\t      this.rollingDuration = '8';\n\t      this.resetPiece();\n\t      _extends(this.options, options);\n\t    }\n\t  }, {\n\t    key: 'getFactory',\n\t    value: function getFactory() {\n\t      return this.factory;\n\t    }\n\t  }, {\n\t    key: 'getElements',\n\t    value: function getElements() {\n\t      return this.elements;\n\t    }\n\t  }, {\n\t    key: 'addCommitHook',\n\t    value: function addCommitHook(commitHook) {\n\t      this.commitHooks.push(commitHook);\n\t    }\n\t  }, {\n\t    key: 'resetPiece',\n\t    value: function resetPiece() {\n\t      L('resetPiece');\n\t      this.piece = {\n\t        chord: [],\n\t        duration: this.rollingDuration,\n\t        dots: 0,\n\t        type: undefined,\n\t        options: {}\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setNoteDots',\n\t    value: function setNoteDots(dots) {\n\t      L('setNoteDots:', dots);\n\t      if (dots) this.piece.dots = dots.length;\n\t    }\n\t  }, {\n\t    key: 'setNoteDuration',\n\t    value: function setNoteDuration(duration) {\n\t      L('setNoteDuration:', duration);\n\t      this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n\t    }\n\t  }, {\n\t    key: 'setNoteType',\n\t    value: function setNoteType(type) {\n\t      L('setNoteType:', type);\n\t      if (type) this.piece.type = type;\n\t    }\n\t  }, {\n\t    key: 'addNoteOption',\n\t    value: function addNoteOption(key, value) {\n\t      L('addNoteOption: key:', key, 'value:', value);\n\t      this.piece.options[key] = value;\n\t    }\n\t  }, {\n\t    key: 'addNote',\n\t    value: function addNote(key, accid, octave) {\n\t      L('addNote:', key, accid, octave);\n\t      this.piece.chord.push({ key: key, accid: accid, octave: octave });\n\t    }\n\t  }, {\n\t    key: 'addSingleNote',\n\t    value: function addSingleNote(key, accid, octave) {\n\t      L('addSingleNote:', key, accid, octave);\n\t      this.addNote(key, accid, octave);\n\t    }\n\t  }, {\n\t    key: 'addChord',\n\t    value: function addChord(notes) {\n\t      var _this8 = this;\n\t\n\t      L('startChord');\n\t      if (_typeof(notes[0]) !== 'object') {\n\t        this.addSingleNote(notes[0]);\n\t      } else {\n\t        notes.forEach(function (n) {\n\t          if (n) _this8.addNote.apply(_this8, _toConsumableArray(n));\n\t        });\n\t      }\n\t      L('endChord');\n\t    }\n\t  }, {\n\t    key: 'commitPiece',\n\t    value: function commitPiece() {\n\t      var _this9 = this;\n\t\n\t      L('commitPiece');\n\t      var factory = this.factory;\n\t\n\t\n\t      if (!factory) return;\n\t\n\t      var options = _extends({}, this.options, this.piece.options);\n\t      var stem = options.stem;\n\t      var clef = options.clef;\n\t\n\t      var autoStem = stem.toLowerCase() === 'auto';\n\t      var stemDirection = !autoStem && stem.toLowerCase() === 'up' ? _stavenote.StaveNote.STEM_UP : _stavenote.StaveNote.STEM_DOWN;\n\t\n\t      // Build StaveNotes.\n\t      var _piece = this.piece;\n\t      var chord = _piece.chord;\n\t      var duration = _piece.duration;\n\t      var dots = _piece.dots;\n\t      var type = _piece.type;\n\t\n\t      var keys = chord.map(function (note) {\n\t        return note.key + '/' + note.octave;\n\t      });\n\t      var note = factory.StaveNote({\n\t        keys: keys,\n\t        duration: duration,\n\t        dots: dots,\n\t        type: type,\n\t        clef: clef,\n\t        auto_stem: autoStem\n\t      });\n\t      if (!autoStem) note.setStemDirection(stemDirection);\n\t\n\t      // Attach accidentals.\n\t      var accids = chord.map(function (note) {\n\t        return note.accid || null;\n\t      });\n\t      accids.forEach(function (accid, i) {\n\t        if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n\t      });\n\t\n\t      // Attach dots.\n\t      for (var i = 0; i < dots; i++) {\n\t        note.addDotToAll();\n\t      }this.commitHooks.forEach(function (fn) {\n\t        return fn(options, note, _this9);\n\t      });\n\t\n\t      this.elements.notes.push(note);\n\t      this.elements.accidentals.concat(accids);\n\t      this.resetPiece();\n\t    }\n\t  }]);\n\t\n\t  return Builder;\n\t}();\n\t\n\tfunction setId(_ref, note) {\n\t  var id = _ref.id;\n\t\n\t  if (id === undefined) return;\n\t\n\t  note.setAttribute('id', id);\n\t}\n\t\n\tfunction setClass(options, note) {\n\t  if (!options.class) return;\n\t\n\t  var commaSeparatedRegex = /\\s*,\\s*/;\n\t\n\t  options.class.split(commaSeparatedRegex).forEach(function (className) {\n\t    return note.addClass(className);\n\t  });\n\t}\n\t\n\tvar EasyScore = exports.EasyScore = function () {\n\t  function EasyScore() {\n\t    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, EasyScore);\n\t\n\t    this.setOptions(options);\n\t    this.defaults = {\n\t      clef: 'treble',\n\t      time: '4/4',\n\t      stem: 'auto'\n\t    };\n\t  }\n\t\n\t  _createClass(EasyScore, [{\n\t    key: 'set',\n\t    value: function set(defaults) {\n\t      _extends(this.defaults, defaults);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      var _this10 = this;\n\t\n\t      this.options = _extends({\n\t        factory: null,\n\t        builder: null,\n\t        commitHooks: [setId, setClass, _articulation.Articulation.easyScoreHook],\n\t        throwOnError: false\n\t      }, options);\n\t\n\t      this.factory = this.options.factory;\n\t      this.builder = this.options.builder || new Builder(this.factory);\n\t      this.grammar = new Grammar(this.builder);\n\t      this.parser = new _parser.Parser(this.grammar);\n\t      this.options.commitHooks.forEach(function (commitHook) {\n\t        return _this10.addCommitHook(commitHook);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      if (this.factory) this.factory.setContext(context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(line) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.builder.reset(options);\n\t      var result = this.parser.parse(line);\n\t      if (!result.success && this.options.throwOnError) {\n\t        throw new X('Error parsing line: ' + line, result);\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'beam',\n\t    value: function beam(notes) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.factory.Beam({ notes: notes, options: options });\n\t      return notes;\n\t    }\n\t  }, {\n\t    key: 'tuplet',\n\t    value: function tuplet(notes) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.factory.Tuplet({ notes: notes, options: options });\n\t      return notes;\n\t    }\n\t  }, {\n\t    key: 'notes',\n\t    value: function notes(line) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      options = _extends({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n\t      this.parse(line, options);\n\t      return this.builder.getElements().notes;\n\t    }\n\t  }, {\n\t    key: 'voice',\n\t    value: function voice(notes, voiceOptions) {\n\t      voiceOptions = _extends({ time: this.defaults.time }, voiceOptions);\n\t      return this.factory.Voice(voiceOptions).addTickables(notes);\n\t    }\n\t  }, {\n\t    key: 'addCommitHook',\n\t    value: function addCommitHook(commitHook) {\n\t      return this.builder.addCommitHook(commitHook);\n\t    }\n\t  }]);\n\n\t  return EasyScore;\n\t}();\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Parser = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// A generic text parsing class for VexFlow.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Parser.DEBUG) _vex.Vex.L('Vex.Flow.Parser', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('ParserError');\n\t\n\t// Converts parser results into an easy to reference list that can be\n\t// used in triggers.\n\tfunction flattenMatches(results) {\n\t  if (results.matchedString !== undefined) return results.matchedString;\n\t  if (results.results) return flattenMatches(results.results);\n\t  if (results.length === 1) return flattenMatches(results[0]);\n\t  if (results.length === 0) return null;\n\t  return results.map(flattenMatches);\n\t}\n\t\n\t// This is the base parser class. Given an arbitrary context-free grammar, it\n\t// can parse any line and execute code when specific rules are met (e.g.,\n\t// when a string is terminated.)\n\t\n\tvar Parser = exports.Parser = function () {\n\t  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n\t  // the EasyScore grammar in easyscore.js.\n\t  function Parser(grammar) {\n\t    _classCallCheck(this, Parser);\n\t\n\t    this.grammar = grammar;\n\t  }\n\t\n\t  // Parse `line` using current grammar. Returns {success: true} if the\n\t  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n\t  // where `errorPos` is the location of the error in the string.\n\t\n\t\n\t  _createClass(Parser, [{\n\t    key: 'parse',\n\t    value: function parse(line) {\n\t      this.line = line;\n\t      this.pos = 0;\n\t      this.errorPos = -1;\n\t      var results = this.expect(this.grammar.begin());\n\t      results.errorPos = this.errorPos;\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'matchFail',\n\t    value: function matchFail(returnPos) {\n\t      if (this.errorPos === -1) this.errorPos = this.pos;\n\t      this.pos = returnPos;\n\t    }\n\t  }, {\n\t    key: 'matchSuccess',\n\t    value: function matchSuccess() {\n\t      this.errorPos = -1;\n\t    }\n\t\n\t    // Look for `token` in this.line[this.pos], and return success\n\t    // if one is found. `token` is specified as a regular expression.\n\t\n\t  }, {\n\t    key: 'matchToken',\n\t    value: function matchToken(token) {\n\t      var noSpace = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n\t      var workingLine = this.line.slice(this.pos);\n\t      var result = workingLine.match(regexp);\n\t      if (result !== null) {\n\t        return {\n\t          success: true,\n\t          matchedString: result[2],\n\t          incrementPos: result[1].length,\n\t          pos: this.pos\n\t        };\n\t      } else {\n\t        return {\n\t          success: false,\n\t          pos: this.pos\n\t        };\n\t      }\n\t    }\n\t\n\t    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n\t    // set, then return success even if the token is not found, but reset\n\t    // the position before exiting.\n\t\n\t  }, {\n\t    key: 'expectOne',\n\t    value: function expectOne(rule) {\n\t      var maybe = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var results = [];\n\t      var pos = this.pos;\n\t\n\t      var allMatches = true;\n\t      var oneMatch = false;\n\t      maybe = maybe === true || rule.maybe === true;\n\t\n\t      // Execute all sub rules in sequence.\n\t      for (var i = 0; i < rule.expect.length; i++) {\n\t        var next = rule.expect[i];\n\t        var localPos = this.pos;\n\t        var result = this.expect(next);\n\t\n\t        // If `rule.or` is set, then return success if any one\n\t        // of the subrules match, else all subrules must match.\n\t        if (result.success) {\n\t          results.push(result);\n\t          oneMatch = true;\n\t          if (rule.or) break;\n\t        } else {\n\t          allMatches = false;\n\t          if (!rule.or) {\n\t            this.pos = localPos;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var gotOne = rule.or && oneMatch || allMatches;\n\t      var success = gotOne || maybe === true;\n\t      if (maybe && !gotOne) this.pos = pos;\n\t      if (success) this.matchSuccess();else this.matchFail(pos);\n\t      return { success: success, results: results, numMatches: gotOne ? 1 : 0 };\n\t    }\n\t\n\t    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n\t    // then a failed match is also a success (but the position is reset).\n\t\n\t  }, {\n\t    key: 'expectOneOrMore',\n\t    value: function expectOneOrMore(rule) {\n\t      var maybe = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var results = [];\n\t      var pos = this.pos;\n\t      var numMatches = 0;\n\t      var more = true;\n\t\n\t      do {\n\t        var result = this.expectOne(rule);\n\t        if (result.success) {\n\t          numMatches++;\n\t          results.push(result.results);\n\t        } else {\n\t          more = false;\n\t        }\n\t      } while (more);\n\t\n\t      var success = numMatches > 0 || maybe === true;\n\t      if (maybe && !(numMatches > 0)) this.pos = pos;\n\t      if (success) this.matchSuccess();else this.matchFail(pos);\n\t      return { success: success, results: results, numMatches: numMatches };\n\t    }\n\t\n\t    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n\t\n\t  }, {\n\t    key: 'expectZeroOrMore',\n\t    value: function expectZeroOrMore(rule) {\n\t      return this.expectOneOrMore(rule, true);\n\t    }\n\t\n\t    // Execute the rule produced by the provided the `rules` function. This\n\t    // ofloads to one of the above matchers and consolidates the results. It is also\n\t    // responsible for executing any code triggered by the rule (in `rule.run`.)\n\t\n\t  }, {\n\t    key: 'expect',\n\t    value: function expect(rules) {\n\t      L('Evaluating rules:', rules);\n\t      var result = void 0;\n\t      if (!rules) {\n\t        throw new X('Invalid Rule: ' + rules, rules);\n\t      }\n\t\n\t      // Get rule from Grammar class.\n\t      var rule = rules.bind(this.grammar)();\n\t\n\t      if (rule.token) {\n\t        // Base case: parse the regex and throw an error if the\n\t        // line doesn't match.\n\t        result = this.matchToken(rule.token, rule.noSpace === true);\n\t        if (result.success) {\n\t          // Token match! Update position and throw away parsed portion\n\t          // of string.\n\t          this.pos += result.incrementPos;\n\t        }\n\t      } else if (rule.expect) {\n\t        if (rule.oneOrMore) {\n\t          result = this.expectOneOrMore(rule);\n\t        } else if (rule.zeroOrMore) {\n\t          result = this.expectZeroOrMore(rule);\n\t        } else {\n\t          result = this.expectOne(rule);\n\t        }\n\t      } else {\n\t        throw new X('Bad grammar! No `token` or `expect` property', rule);\n\t      }\n\t\n\t      // If there's a trigger attached to this rule, then pull it.\n\t      result.matches = [];\n\t      if (result.results) result.results.forEach(function (r) {\n\t        return result.matches.push(flattenMatches(r));\n\t      });\n\t      if (rule.run && result.success) rule.run(result);\n\t      return result;\n\t    }\n\t  }]);\n\n\t  return Parser;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=vexflow-debug.js.map\n\n/***/ }),\n\n/***/ \"7+uW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.functionalOptions = undefined;\n  this.functionalScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var componentOptions = vnode.componentOptions;\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep) {\n    if (vnode.children) {\n      cloned.children = cloneVNodes(vnode.children, true);\n    }\n    if (componentOptions && componentOptions.children) {\n      componentOptions.children = cloneVNodes(componentOptions.children, true);\n    }\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if (inBrowser && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both micro and macro tasks.\n// In < 2.4 we used micro tasks everywhere, but there are some scenarios where\n// micro tasks have too high a priority and fires in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using macro tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use micro task by default, but expose a way to force macro task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) Task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine MicroTask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a Task instead of a MicroTask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (false) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias,\n  eventKeyName\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (keyCodes) {\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  // static trees can be rendered once and cached on the contructor options\n  // so every instance shares the same cached trees\n  var options = this.$options;\n  var cached = options.cached || (options.cached = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = options.staticRenderFns[index].call(this._renderProxy, null, this);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm = Object.create(parent);\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode) {\n        vnode.functionalScopeId = options._scopeId;\n        vnode.functionalContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = contextVm;\n    vnode.functionalOptions = options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && cached$$1 !== current) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.exclude && matches(this.exclude, name)) ||\n        (this.include && !matches(this.include, name))\n      )) {\n        return vnode\n      }\n\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.5.3';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(\n            config.ignoredElements.length &&\n            config.ignoredElements.some(function (ignore) {\n              return isRegExp(ignore)\n                ? ignore.test(tag)\n                : ignore === tag\n            })\n          ) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.functionalScopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setAttribute(vnode.elm, i, '');\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.functionalContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nVue$3.nextTick(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$1 = 0; i$1 < postTransforms.length; i$1++) {\n        postTransforms[i$1](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\n      var typeBinding = getBindingAttr(el, 'type');\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var code = keyCodes[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(code)) + \",\" +\n    \"$event.key)\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"DuR2\"), __webpack_require__(\"162o\").setImmediate))\n\n/***/ }),\n\n/***/ \"DuR2\":\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ \"FZ+f\":\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ \"NYxO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export install */\n/* unused harmony export mapState */\n/* unused harmony export mapMutations */\n/* unused harmony export mapGetters */\n/* unused harmony export mapActions */\n/* unused harmony export createNamespacedHelpers */\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (false) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (false) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (false) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (false) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (false) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    false\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (false) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (false) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (false) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (false) {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (false) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (false) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (false) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n\n/***/ \"VU/8\":\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ \"W2nU\":\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ \"c+8m\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-class-component v6.1.0\n  * (c) 2015-2017 Evan You\n  * @license MIT\n  */\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(__webpack_require__(\"7+uW\"));\n\nfunction createDecorator(factory) {\n    return function (target, key, index) {\n        var Ctor = typeof target === 'function'\n            ? target\n            : target.constructor;\n        if (!Ctor.__decorators__) {\n            Ctor.__decorators__ = [];\n        }\n        if (typeof index !== 'number') {\n            index = undefined;\n        }\n        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });\n    };\n}\nfunction warn(message) {\n    if (typeof console !== 'undefined') {\n        console.warn('[vue-class-component] ' + message);\n    }\n}\n\nfunction collectDataFromConstructor(vm, Component) {\n    Component.prototype._init = function () {\n        var _this = this;\n        var keys = Object.getOwnPropertyNames(vm);\n        if (vm.$options.props) {\n            for (var key in vm.$options.props) {\n                if (!vm.hasOwnProperty(key)) {\n                    keys.push(key);\n                }\n            }\n        }\n        keys.forEach(function (key) {\n            if (key.charAt(0) !== '_') {\n                Object.defineProperty(_this, key, {\n                    get: function () { return vm[key]; },\n                    set: function (value) { return vm[key] = value; },\n                    configurable: true\n                });\n            }\n        });\n    };\n    var data = new Component();\n    var plainData = {};\n    Object.keys(data).forEach(function (key) {\n        if (data[key] !== undefined) {\n            plainData[key] = data[key];\n        }\n    });\n    if (false) {\n        if (!(Component.prototype instanceof Vue) && Object.keys(plainData).length > 0) {\n            warn('Component class must inherit Vue or its descendant class ' +\n                'when class property is used.');\n        }\n    }\n    return plainData;\n}\n\nvar $internalHooks = [\n    'data',\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeDestroy',\n    'destroyed',\n    'beforeUpdate',\n    'updated',\n    'activated',\n    'deactivated',\n    'render',\n    'errorCaptured'\n];\nfunction componentFactory(Component, options) {\n    if (options === void 0) { options = {}; }\n    options.name = options.name || Component._componentTag || Component.name;\n    var proto = Component.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n            return;\n        }\n        if ($internalHooks.indexOf(key) > -1) {\n            options[key] = proto[key];\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (typeof descriptor.value === 'function') {\n            (options.methods || (options.methods = {}))[key] = descriptor.value;\n        }\n        else if (descriptor.get || descriptor.set) {\n            (options.computed || (options.computed = {}))[key] = {\n                get: descriptor.get,\n                set: descriptor.set\n            };\n        }\n    });\n    (options.mixins || (options.mixins = [])).push({\n        data: function () {\n            return collectDataFromConstructor(this, Component);\n        }\n    });\n    var decorators = Component.__decorators__;\n    if (decorators) {\n        decorators.forEach(function (fn) { return fn(options); });\n    }\n    var superProto = Object.getPrototypeOf(Component.prototype);\n    var Super = superProto instanceof Vue\n        ? superProto.constructor\n        : Vue;\n    var Extended = Super.extend(options);\n    for (var staticKey in Component) {\n        if (Component.hasOwnProperty(staticKey)) {\n            Extended[staticKey] = Component[staticKey];\n        }\n    }\n    return Extended;\n}\n\nfunction Component(options) {\n    if (typeof options === 'function') {\n        return componentFactory(options);\n    }\n    return function (Component) {\n        return componentFactory(Component, options);\n    };\n}\n(function (Component) {\n    function registerHooks(keys) {\n        $internalHooks.push.apply($internalHooks, keys);\n    }\n    Component.registerHooks = registerHooks;\n})(Component || (Component = {}));\nvar Component$1 = Component;\n\nexports['default'] = Component$1;\nexports.createDecorator = createDecorator;\n\n\n/***/ }),\n\n/***/ \"mypn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\"), __webpack_require__(\"W2nU\")))\n\n/***/ }),\n\n/***/ \"rjj0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(\"tTVk\")\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ \"tTVk\":\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.3b5a73c4add847a8bac2.js","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 1","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 162o\n// module chunks = 1","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _tabstave = __webpack_require__(55);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tvar _vibratobracket = __webpack_require__(57);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _notehead = __webpack_require__(21);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _clefnote = __webpack_require__(58);\n\t\n\tvar _keysignature = __webpack_require__(52);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tvar _timesignote = __webpack_require__(59);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _tabslide = __webpack_require__(60);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _gracenote = __webpack_require__(61);\n\t\n\tvar _gracetabnote = __webpack_require__(62);\n\t\n\tvar _tuning = __webpack_require__(63);\n\t\n\tvar _keymanager = __webpack_require__(64);\n\t\n\tvar _stavehairpin = __webpack_require__(65);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _strokes = __webpack_require__(35);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tvar _curve = __webpack_require__(66);\n\t\n\tvar _textdynamics = __webpack_require__(67);\n\t\n\tvar _staveline = __webpack_require__(68);\n\t\n\tvar _ornament = __webpack_require__(38);\n\t\n\tvar _pedalmarking = __webpack_require__(69);\n\t\n\tvar _textbracket = __webpack_require__(70);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _staverepetition = __webpack_require__(46);\n\t\n\tvar _barnote = __webpack_require__(71);\n\t\n\tvar _ghostnote = __webpack_require__(72);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _tremolo = __webpack_require__(73);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _crescendo = __webpack_require__(74);\n\t\n\tvar _stavevolta = __webpack_require__(54);\n\t\n\tvar _vexflow_font = __webpack_require__(9);\n\t\n\tvar _system = __webpack_require__(75);\n\t\n\tvar _factory = __webpack_require__(76);\n\t\n\tvar _parser = __webpack_require__(78);\n\t\n\tvar _easyscore = __webpack_require__(77);\n\t\n\tvar _registry = __webpack_require__(6);\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t_vex.Vex.Flow = _tables.Flow;\n\t_vex.Vex.Flow.Element = _element.Element;\n\t_vex.Vex.Flow.Fraction = _fraction.Fraction;\n\t_vex.Vex.Flow.Renderer = _renderer.Renderer;\n\t_vex.Vex.Flow.Formatter = _formatter.Formatter;\n\t_vex.Vex.Flow.Music = _music.Music;\n\t_vex.Vex.Flow.Glyph = _glyph.Glyph;\n\t_vex.Vex.Flow.Stave = _stave.Stave;\n\t_vex.Vex.Flow.StaveNote = _stavenote.StaveNote;\n\t_vex.Vex.Flow.StaveModifier = _stavemodifier.StaveModifier;\n\t_vex.Vex.Flow.Voice = _voice.Voice;\n\t_vex.Vex.Flow.Accidental = _accidental.Accidental;\n\t_vex.Vex.Flow.Beam = _beam.Beam;\n\t_vex.Vex.Flow.StaveTie = _stavetie.StaveTie;\n\t_vex.Vex.Flow.TabStave = _tabstave.TabStave;\n\t_vex.Vex.Flow.TabNote = _tabnote.TabNote;\n\t_vex.Vex.Flow.Bend = _bend.Bend;\n\t_vex.Vex.Flow.Vibrato = _vibrato.Vibrato;\n\t_vex.Vex.Flow.VibratoBracket = _vibratobracket.VibratoBracket;\n\t_vex.Vex.Flow.Note = _note.Note;\n\t_vex.Vex.Flow.ModifierContext = _modifiercontext.ModifierContext;\n\t_vex.Vex.Flow.TickContext = _tickcontext.TickContext;\n\t_vex.Vex.Flow.Articulation = _articulation.Articulation;\n\t_vex.Vex.Flow.Annotation = _annotation.Annotation;\n\t_vex.Vex.Flow.Barline = _stavebarline.Barline;\n\t_vex.Vex.Flow.NoteHead = _notehead.NoteHead;\n\t_vex.Vex.Flow.StaveConnector = _staveconnector.StaveConnector;\n\t_vex.Vex.Flow.ClefNote = _clefnote.ClefNote;\n\t_vex.Vex.Flow.KeySignature = _keysignature.KeySignature;\n\t_vex.Vex.Flow.TimeSignature = _timesignature.TimeSignature;\n\t_vex.Vex.Flow.TimeSigNote = _timesignote.TimeSigNote;\n\t_vex.Vex.Flow.Stem = _stem.Stem;\n\t_vex.Vex.Flow.TabTie = _tabtie.TabTie;\n\t_vex.Vex.Flow.Clef = _clef.Clef;\n\t_vex.Vex.Flow.Modifier = _modifier.Modifier;\n\t_vex.Vex.Flow.TabSlide = _tabslide.TabSlide;\n\t_vex.Vex.Flow.Tuplet = _tuplet.Tuplet;\n\t_vex.Vex.Flow.GraceNote = _gracenote.GraceNote;\n\t_vex.Vex.Flow.GraceTabNote = _gracetabnote.GraceTabNote;\n\t_vex.Vex.Flow.Tuning = _tuning.Tuning;\n\t_vex.Vex.Flow.KeyManager = _keymanager.KeyManager;\n\t_vex.Vex.Flow.StaveHairpin = _stavehairpin.StaveHairpin;\n\t_vex.Vex.Flow.BoundingBox = _boundingbox.BoundingBox;\n\t_vex.Vex.Flow.Stroke = _strokes.Stroke;\n\t_vex.Vex.Flow.TextNote = _textnote.TextNote;\n\t_vex.Vex.Flow.Curve = _curve.Curve;\n\t_vex.Vex.Flow.TextDynamics = _textdynamics.TextDynamics;\n\t_vex.Vex.Flow.StaveLine = _staveline.StaveLine;\n\t_vex.Vex.Flow.Ornament = _ornament.Ornament;\n\t_vex.Vex.Flow.PedalMarking = _pedalmarking.PedalMarking;\n\t_vex.Vex.Flow.TextBracket = _textbracket.TextBracket;\n\t_vex.Vex.Flow.FretHandFinger = _frethandfinger.FretHandFinger;\n\t_vex.Vex.Flow.Repetition = _staverepetition.Repetition;\n\t_vex.Vex.Flow.BarNote = _barnote.BarNote;\n\t_vex.Vex.Flow.GhostNote = _ghostnote.GhostNote;\n\t_vex.Vex.Flow.NoteSubGroup = _notesubgroup.NoteSubGroup;\n\t_vex.Vex.Flow.GraceNoteGroup = _gracenotegroup.GraceNoteGroup;\n\t_vex.Vex.Flow.Tremolo = _tremolo.Tremolo;\n\t_vex.Vex.Flow.StringNumber = _stringnumber.StringNumber;\n\t_vex.Vex.Flow.Crescendo = _crescendo.Crescendo;\n\t_vex.Vex.Flow.Volta = _stavevolta.Volta;\n\t_vex.Vex.Flow.Font = _vexflow_font.Font;\n\t_vex.Vex.Flow.System = _system.System;\n\t_vex.Vex.Flow.Factory = _factory.Factory;\n\t_vex.Vex.Flow.Parser = _parser.Parser;\n\t_vex.Vex.Flow.EasyScore = _easyscore.EasyScore;\n\t_vex.Vex.Flow.Registry = _registry.Registry;\n\t\n\texports.default = _vex.Vex;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements utility methods used by the rest of the VexFlow\n\t// codebase.\n\t//\n\t\n\tvar Vex = function Vex() {};\n\t\n\t// Default log function sends all arguments to console.\n\tVex.L = function (block, args) {\n\t  if (!args) return;\n\t  var line = Array.prototype.slice.call(args).join(' ');\n\t  window.console.log(block + ': ' + line);\n\t};\n\t\n\tVex.MakeException = function (name) {\n\t  var exception = function (_Error) {\n\t    _inherits(exception, _Error);\n\t\n\t    function exception(message, data) {\n\t      _classCallCheck(this, exception);\n\t\n\t      var _this = _possibleConstructorReturn(this, (exception.__proto__ || Object.getPrototypeOf(exception)).call(this, message));\n\t\n\t      _this.name = name;\n\t      _this.message = message;\n\t      _this.data = data;\n\t      return _this;\n\t    }\n\t\n\t    return exception;\n\t  }(Error);\n\t\n\t  return exception;\n\t};\n\t\n\t// Default runtime exception.\n\t\n\tvar RuntimeError = function () {\n\t  function RuntimeError(code, message) {\n\t    _classCallCheck(this, RuntimeError);\n\t\n\t    this.code = code;\n\t    this.message = message;\n\t  }\n\t\n\t  _createClass(RuntimeError, [{\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return '[RuntimeError] ' + this.code + ':' + this.message;\n\t    }\n\t  }]);\n\t\n\t  return RuntimeError;\n\t}();\n\t\n\t// Shortcut method for `RuntimeError`.\n\t\n\t\n\tVex.RuntimeError = RuntimeError;\n\tVex.RERR = Vex.RuntimeError;\n\t\n\t// Merge `destination` hash with `source` hash, overwriting like keys\n\t// in `source` if necessary.\n\tVex.Merge = function (destination, source) {\n\t  for (var property in source) {\n\t    // eslint-disable-line guard-for-in\n\t    destination[property] = source[property];\n\t  }\n\t  return destination;\n\t};\n\t\n\t// DEPRECATED. Use `Math.*`.\n\tVex.Min = Math.min;\n\tVex.Max = Math.max;\n\tVex.forEach = function (a, fn) {\n\t  for (var i = 0; i < a.length; i++) {\n\t    fn(a[i], i);\n\t  }\n\t};\n\t\n\t// Round number to nearest fractional value (`.5`, `.25`, etc.)\n\tVex.RoundN = function (x, n) {\n\t  return x % n >= n / 2 ? parseInt(x / n, 10) * n + n : parseInt(x / n, 10) * n;\n\t};\n\t\n\t// Locate the mid point between stave lines. Returns a fractional line if a space.\n\tVex.MidLine = function (a, b) {\n\t  var mid_line = b + (a - b) / 2;\n\t  if (mid_line % 2 > 0) {\n\t    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n\t  }\n\t  return mid_line;\n\t};\n\t\n\t// Take `arr` and return a new list consisting of the sorted, unique,\n\t// contents of arr. Does not modify `arr`.\n\tVex.SortAndUnique = function (arr, cmp, eq) {\n\t  if (arr.length > 1) {\n\t    var newArr = [];\n\t    var last = void 0;\n\t    arr.sort(cmp);\n\t\n\t    for (var i = 0; i < arr.length; ++i) {\n\t      if (i === 0 || !eq(arr[i], last)) {\n\t        newArr.push(arr[i]);\n\t      }\n\t      last = arr[i];\n\t    }\n\t\n\t    return newArr;\n\t  } else {\n\t    return arr;\n\t  }\n\t};\n\t\n\t// Check if array `a` contains `obj`.\n\tVex.Contains = function (a, obj) {\n\t  var i = a.length;\n\t  while (i--) {\n\t    if (a[i] === obj) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\t// Get the 2D Canvas context from DOM element `canvas_sel`.\n\tVex.getCanvasContext = function (canvas_sel) {\n\t  if (!canvas_sel) {\n\t    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n\t  }\n\t\n\t  var canvas = document.getElementById(canvas_sel);\n\t  if (!(canvas && canvas.getContext)) {\n\t    throw new Vex.RERR('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n\t  }\n\t\n\t  return canvas.getContext('2d');\n\t};\n\t\n\t// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n\t//\n\t// `ctx`: Canvas context.\n\t// `x`, `y`: Dot coordinates.\n\tVex.drawDot = function (ctx, x, y) {\n\t  var color = arguments.length <= 3 || arguments[3] === undefined ? '#55' : arguments[3];\n\t\n\t  ctx.save();\n\t  ctx.setFillStyle(color);\n\t\n\t  // draw a circle\n\t  ctx.beginPath();\n\t  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n\t  ctx.closePath();\n\t  ctx.fill();\n\t  ctx.restore();\n\t};\n\t\n\t// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\n\tVex.BM = function (s, f) {\n\t  var start_time = new Date().getTime();\n\t  f();\n\t  var elapsed = new Date().getTime() - start_time;\n\t  Vex.L(s + elapsed + 'ms');\n\t};\n\t\n\t// Get stack trace.\n\tVex.StackTrace = function () {\n\t  var err = new Error();\n\t  return err.stack;\n\t};\n\t\n\t// Dump warning to console.\n\tVex.W = function () {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  var line = args.join(' ');\n\t  window.console.log('Warning: ', line, Vex.StackTrace());\n\t};\n\t\n\t// Used by various classes (e.g., SVGContext) to provide a\n\t// unique prefix to element names (or other keys in shared namespaces).\n\tVex.Prefix = function (text) {\n\t  return Vex.Prefix.prefix + text;\n\t};\n\tVex.Prefix.prefix = 'vf-';\n\t\n\texports.Vex = Vex;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Flow = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t/* eslint-disable key-spacing */\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar Flow = {\n\t  STEM_WIDTH: 1.5,\n\t  STEM_HEIGHT: 35,\n\t  STAVE_LINE_THICKNESS: 1,\n\t  RESOLUTION: 16384,\n\t  DEFAULT_NOTATION_FONT_SCALE: 39,\n\t  DEFAULT_TABLATURE_FONT_SCALE: 39,\n\t  SLASH_NOTEHEAD_WIDTH: 15,\n\t\n\t  // HACK:\n\t  // Since text origins are positioned at the baseline, we must\n\t  // compensate for the ascender of the text. Of course, 1 staff space is\n\t  // a very poor approximation.\n\t  //\n\t  // This will be deprecated in the future. This is a temporary solution until\n\t  // we have more robust text metrics.\n\t  TEXT_HEIGHT_OFFSET_HACK: 1,\n\t\n\t  /* Kerning (DEPRECATED) */\n\t  IsKerned: true\n\t};\n\t\n\tFlow.clefProperties = function (clef) {\n\t  if (!clef) throw new _vex.Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\t\n\t  var props = Flow.clefProperties.values[clef];\n\t  if (!props) throw new _vex.Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\t\n\t  return props;\n\t};\n\t\n\tFlow.clefProperties.values = {\n\t  'treble': { line_shift: 0 },\n\t  'bass': { line_shift: 6 },\n\t  'tenor': { line_shift: 4 },\n\t  'alto': { line_shift: 3 },\n\t  'soprano': { line_shift: 1 },\n\t  'percussion': { line_shift: 0 },\n\t  'mezzo-soprano': { line_shift: 2 },\n\t  'baritone-c': { line_shift: 5 },\n\t  'baritone-f': { line_shift: 5 },\n\t  'subbass': { line_shift: 7 },\n\t  'french': { line_shift: -1 }\n\t};\n\t\n\t/*\n\t  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\t\n\t  The last argument, params, is a struct the currently can contain one option,\n\t  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n\t*/\n\tFlow.keyProperties = function (key, clef, params) {\n\t  if (clef === undefined) {\n\t    clef = 'treble';\n\t  }\n\t\n\t  var options = { octave_shift: 0 };\n\t\n\t  if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t    _vex.Vex.Merge(options, params);\n\t  }\n\t\n\t  var pieces = key.split('/');\n\t\n\t  if (pieces.length < 2) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Key must have note + octave and an optional glyph: ' + key);\n\t  }\n\t\n\t  var k = pieces[0].toUpperCase();\n\t  var value = Flow.keyProperties.note_values[k];\n\t  if (!value) throw new _vex.Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n\t  if (value.octave) pieces[1] = value.octave;\n\t\n\t  var octave = parseInt(pieces[1], 10);\n\t\n\t  // Octave_shift is the shift to compensate for clef 8va/8vb.\n\t  octave += -1 * options.octave_shift;\n\t\n\t  var base_index = octave * 7 - 4 * 7;\n\t  var line = (base_index + value.index) / 2;\n\t  line += Flow.clefProperties(clef).line_shift;\n\t\n\t  var stroke = 0;\n\t\n\t  if (line <= 0 && line * 2 % 2 === 0) stroke = 1; // stroke up\n\t  if (line >= 6 && line * 2 % 2 === 0) stroke = -1; // stroke down\n\t\n\t  // Integer value for note arithmetic.\n\t  var int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : null;\n\t\n\t  /* Check if the user specified a glyph. */\n\t  var code = value.code;\n\t  var shift_right = value.shift_right;\n\t  if (pieces.length > 2 && pieces[2]) {\n\t    var glyph_name = pieces[2].toUpperCase();\n\t    var note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n\t    if (note_glyph) {\n\t      code = note_glyph.code;\n\t      shift_right = note_glyph.shift_right;\n\t    }\n\t  }\n\t\n\t  return {\n\t    key: k,\n\t    octave: octave,\n\t    line: line,\n\t    int_value: int_value,\n\t    accidental: value.accidental,\n\t    code: code,\n\t    stroke: stroke,\n\t    shift_right: shift_right,\n\t    displaced: false\n\t  };\n\t};\n\t\n\tFlow.keyProperties.note_values = {\n\t  'C': { index: 0, int_val: 0, accidental: null },\n\t  'CN': { index: 0, int_val: 0, accidental: 'n' },\n\t  'C#': { index: 0, int_val: 1, accidental: '#' },\n\t  'C##': { index: 0, int_val: 2, accidental: '##' },\n\t  'CB': { index: 0, int_val: -1, accidental: 'b' },\n\t  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n\t  'D': { index: 1, int_val: 2, accidental: null },\n\t  'DN': { index: 1, int_val: 2, accidental: 'n' },\n\t  'D#': { index: 1, int_val: 3, accidental: '#' },\n\t  'D##': { index: 1, int_val: 4, accidental: '##' },\n\t  'DB': { index: 1, int_val: 1, accidental: 'b' },\n\t  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n\t  'E': { index: 2, int_val: 4, accidental: null },\n\t  'EN': { index: 2, int_val: 4, accidental: 'n' },\n\t  'E#': { index: 2, int_val: 5, accidental: '#' },\n\t  'E##': { index: 2, int_val: 6, accidental: '##' },\n\t  'EB': { index: 2, int_val: 3, accidental: 'b' },\n\t  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n\t  'F': { index: 3, int_val: 5, accidental: null },\n\t  'FN': { index: 3, int_val: 5, accidental: 'n' },\n\t  'F#': { index: 3, int_val: 6, accidental: '#' },\n\t  'F##': { index: 3, int_val: 7, accidental: '##' },\n\t  'FB': { index: 3, int_val: 4, accidental: 'b' },\n\t  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n\t  'G': { index: 4, int_val: 7, accidental: null },\n\t  'GN': { index: 4, int_val: 7, accidental: 'n' },\n\t  'G#': { index: 4, int_val: 8, accidental: '#' },\n\t  'G##': { index: 4, int_val: 9, accidental: '##' },\n\t  'GB': { index: 4, int_val: 6, accidental: 'b' },\n\t  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n\t  'A': { index: 5, int_val: 9, accidental: null },\n\t  'AN': { index: 5, int_val: 9, accidental: 'n' },\n\t  'A#': { index: 5, int_val: 10, accidental: '#' },\n\t  'A##': { index: 5, int_val: 11, accidental: '##' },\n\t  'AB': { index: 5, int_val: 8, accidental: 'b' },\n\t  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n\t  'B': { index: 6, int_val: 11, accidental: null },\n\t  'BN': { index: 6, int_val: 11, accidental: 'n' },\n\t  'B#': { index: 6, int_val: 12, accidental: '#' },\n\t  'B##': { index: 6, int_val: 13, accidental: '##' },\n\t  'BB': { index: 6, int_val: 10, accidental: 'b' },\n\t  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n\t  'R': { index: 6, int_val: 9, rest: true }, // Rest\n\t  'X': {\n\t    index: 6,\n\t    accidental: '',\n\t    octave: 4,\n\t    code: 'v3e',\n\t    shift_right: 5.5\n\t  }\n\t};\n\t\n\tFlow.keyProperties.note_glyph = {\n\t  /* Diamond */\n\t  'D0': { code: 'v27', shift_right: -0.5 },\n\t  'D1': { code: 'v2d', shift_right: -0.5 },\n\t  'D2': { code: 'v22', shift_right: -0.5 },\n\t  'D3': { code: 'v70', shift_right: -0.5 },\n\t\n\t  /* Triangle */\n\t  'T0': { code: 'v49', shift_right: -2 },\n\t  'T1': { code: 'v93', shift_right: 0.5 },\n\t  'T2': { code: 'v40', shift_right: 0.5 },\n\t  'T3': { code: 'v7d', shift_right: 0.5 },\n\t\n\t  /* Cross */\n\t  'X0': { code: 'v92', shift_right: -2 },\n\t  'X1': { code: 'v95', shift_right: -0.5 },\n\t  'X2': { code: 'v7f', shift_right: 0.5 },\n\t  'X3': { code: 'v3b', shift_right: -2 }\n\t};\n\t\n\tFlow.integerToNote = function (integer) {\n\t  if (typeof integer === 'undefined') {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n\t  }\n\t\n\t  if (integer < -2) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'integerToNote requires integer > -2: ' + integer);\n\t  }\n\t\n\t  var noteValue = Flow.integerToNote.table[integer];\n\t  if (!noteValue) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'Unknown note value for integer: ' + integer);\n\t  }\n\t\n\t  return noteValue;\n\t};\n\t\n\tFlow.integerToNote.table = {\n\t  0: 'C',\n\t  1: 'C#',\n\t  2: 'D',\n\t  3: 'D#',\n\t  4: 'E',\n\t  5: 'F',\n\t  6: 'F#',\n\t  7: 'G',\n\t  8: 'G#',\n\t  9: 'A',\n\t  10: 'A#',\n\t  11: 'B'\n\t};\n\t\n\tFlow.tabToGlyph = function (fret) {\n\t  var scale = arguments.length <= 1 || arguments[1] === undefined ? 1.0 : arguments[1];\n\t\n\t  var glyph = null;\n\t  var width = 0;\n\t  var shift_y = 0;\n\t\n\t  if (fret.toString().toUpperCase() === 'X') {\n\t    var glyphMetrics = new _glyph.Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n\t    glyph = 'v7f';\n\t    width = glyphMetrics.width;\n\t    shift_y = -glyphMetrics.height / 2;\n\t  } else {\n\t    width = Flow.textWidth(fret.toString());\n\t  }\n\t\n\t  return {\n\t    text: fret,\n\t    code: glyph,\n\t    getWidth: function getWidth() {\n\t      return width * scale;\n\t    },\n\t    shift_y: shift_y\n\t  };\n\t};\n\t\n\tFlow.textWidth = function (text) {\n\t  return 7 * text.toString().length;\n\t};\n\t\n\tFlow.articulationCodes = function (artic) {\n\t  return Flow.articulationCodes.articulations[artic];\n\t};\n\t\n\tFlow.articulationCodes.articulations = {\n\t  'a.': { code: 'v23', between_lines: true }, // Staccato\n\t  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n\t  'a>': { code: 'v42', between_lines: true }, // Accent\n\t  'a-': { code: 'v25', between_lines: true }, // Tenuto\n\t  'a^': { code: 'va', between_lines: false }, // Marcato\n\t  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n\t  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n\t  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n\t  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n\t  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n\t  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n\t  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n\t  'a,': { code: 'vb3', between_lines: false } };\n\t\n\tFlow.accidentalCodes = function (acc) {\n\t  return Flow.accidentalCodes.accidentals[acc];\n\t};\n\t\n\tFlow.accidentalCodes.accidentals = {\n\t  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n\t  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n\t  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n\t  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n\t  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n\t  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n\t  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n\t  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n\t  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n\t  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n\t  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n\t  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n\t  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n\t  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n\t  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n\t  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n\t  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n\t  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 }\n\t};\n\t\n\tFlow.accidentalColumnsTable = {\n\t  1: {\n\t    a: [1],\n\t    b: [1]\n\t  },\n\t  2: {\n\t    a: [1, 2]\n\t  },\n\t  3: {\n\t    a: [1, 3, 2],\n\t    b: [1, 2, 1],\n\t    second_on_bottom: [1, 2, 3]\n\t  },\n\t  4: {\n\t    a: [1, 3, 4, 2],\n\t    b: [1, 2, 3, 1],\n\t    spaced_out_tetrachord: [1, 2, 1, 2]\n\t  },\n\t  5: {\n\t    a: [1, 3, 5, 4, 2],\n\t    b: [1, 2, 4, 3, 1],\n\t    spaced_out_pentachord: [1, 2, 3, 2, 1],\n\t    very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n\t  6: {\n\t    a: [1, 3, 5, 6, 4, 2],\n\t    b: [1, 2, 4, 5, 3, 1],\n\t    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n\t    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2]\n\t  }\n\t};\n\t\n\tFlow.ornamentCodes = function (acc) {\n\t  return Flow.ornamentCodes.ornaments[acc];\n\t};\n\t\n\tFlow.ornamentCodes.ornaments = {\n\t  'mordent': { code: 'v1e' },\n\t  'mordent_inverted': { code: 'v45' },\n\t  'turn': { code: 'v72' },\n\t  'turn_inverted': { code: 'v33' },\n\t  'tr': { code: 'v1f' },\n\t  'upprall': { code: 'v60' },\n\t  'downprall': { code: 'vb4' },\n\t  'prallup': { code: 'v6d' },\n\t  'pralldown': { code: 'v2c' },\n\t  'upmordent': { code: 'v29' },\n\t  'downmordent': { code: 'v68' },\n\t  'lineprall': { code: 'v20' },\n\t  'prallprall': { code: 'v86' }\n\t};\n\t\n\tFlow.keySignature = function (spec) {\n\t  var keySpec = Flow.keySignature.keySpecs[spec];\n\t\n\t  if (!keySpec) {\n\t    throw new _vex.Vex.RERR('BadKeySignature', 'Bad key signature spec: \\'' + spec + '\\'');\n\t  }\n\t\n\t  if (!keySpec.acc) {\n\t    return [];\n\t  }\n\t\n\t  var notes = Flow.keySignature.accidentalList(keySpec.acc);\n\t\n\t  var acc_list = [];\n\t  for (var i = 0; i < keySpec.num; ++i) {\n\t    var line = notes[i];\n\t    acc_list.push({ type: keySpec.acc, line: line });\n\t  }\n\t\n\t  return acc_list;\n\t};\n\t\n\tFlow.keySignature.keySpecs = {\n\t  'C': { acc: null, num: 0 },\n\t  'Am': { acc: null, num: 0 },\n\t  'F': { acc: 'b', num: 1 },\n\t  'Dm': { acc: 'b', num: 1 },\n\t  'Bb': { acc: 'b', num: 2 },\n\t  'Gm': { acc: 'b', num: 2 },\n\t  'Eb': { acc: 'b', num: 3 },\n\t  'Cm': { acc: 'b', num: 3 },\n\t  'Ab': { acc: 'b', num: 4 },\n\t  'Fm': { acc: 'b', num: 4 },\n\t  'Db': { acc: 'b', num: 5 },\n\t  'Bbm': { acc: 'b', num: 5 },\n\t  'Gb': { acc: 'b', num: 6 },\n\t  'Ebm': { acc: 'b', num: 6 },\n\t  'Cb': { acc: 'b', num: 7 },\n\t  'Abm': { acc: 'b', num: 7 },\n\t  'G': { acc: '#', num: 1 },\n\t  'Em': { acc: '#', num: 1 },\n\t  'D': { acc: '#', num: 2 },\n\t  'Bm': { acc: '#', num: 2 },\n\t  'A': { acc: '#', num: 3 },\n\t  'F#m': { acc: '#', num: 3 },\n\t  'E': { acc: '#', num: 4 },\n\t  'C#m': { acc: '#', num: 4 },\n\t  'B': { acc: '#', num: 5 },\n\t  'G#m': { acc: '#', num: 5 },\n\t  'F#': { acc: '#', num: 6 },\n\t  'D#m': { acc: '#', num: 6 },\n\t  'C#': { acc: '#', num: 7 },\n\t  'A#m': { acc: '#', num: 7 }\n\t};\n\t\n\tFlow.unicode = {\n\t  // Unicode accidentals\n\t  'sharp': String.fromCharCode(parseInt('266F', 16)),\n\t  'flat': String.fromCharCode(parseInt('266D', 16)),\n\t  'natural': String.fromCharCode(parseInt('266E', 16)),\n\t  // Major Chord\n\t  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n\t  // half-diminished\n\t  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n\t  // Diminished\n\t  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n\t  'circle': String.fromCharCode(parseInt('25CB', 16))\n\t};\n\t\n\tFlow.keySignature.accidentalList = function (acc) {\n\t  var patterns = {\n\t    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n\t    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2]\n\t  };\n\t\n\t  return patterns[acc];\n\t};\n\t\n\tFlow.parseNoteDurationString = function (durationString) {\n\t  if (typeof durationString !== 'string') {\n\t    return null;\n\t  }\n\t\n\t  var regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\t\n\t  var result = regexp.exec(durationString);\n\t  if (!result) {\n\t    return null;\n\t  }\n\t\n\t  var duration = result[1];\n\t  var dots = result[2].length;\n\t  var type = result[3];\n\t\n\t  if (type.length === 0) {\n\t    type = 'n';\n\t  }\n\t\n\t  return {\n\t    duration: duration,\n\t    dots: dots,\n\t    type: type\n\t  };\n\t};\n\t\n\tFlow.parseNoteData = function (noteData) {\n\t  var duration = noteData.duration;\n\t\n\t  // Preserve backwards-compatibility\n\t  var durationStringData = Flow.parseNoteDurationString(duration);\n\t  if (!durationStringData) {\n\t    return null;\n\t  }\n\t\n\t  var ticks = Flow.durationToTicks(durationStringData.duration);\n\t  if (ticks == null) {\n\t    return null;\n\t  }\n\t\n\t  var type = noteData.type;\n\t\n\t  if (type) {\n\t    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n\t      return null;\n\t    }\n\t  } else {\n\t    type = durationStringData.type;\n\t    if (!type) {\n\t      type = 'n';\n\t    }\n\t  }\n\t\n\t  var dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\t\n\t  if (typeof dots !== 'number') {\n\t    return null;\n\t  }\n\t\n\t  var currentTicks = ticks;\n\t\n\t  for (var i = 0; i < dots; i++) {\n\t    if (currentTicks <= 1) return null;\n\t\n\t    currentTicks = currentTicks / 2;\n\t    ticks += currentTicks;\n\t  }\n\t\n\t  return {\n\t    duration: durationStringData.duration,\n\t    type: type,\n\t    dots: dots,\n\t    ticks: ticks\n\t  };\n\t};\n\t\n\t// Used to convert duration aliases to the number based duration.\n\t// If the input isn't an alias, simply return the input.\n\t//\n\t// example: 'q' -> '4', '8' -> '8'\n\tFlow.sanitizeDuration = function (duration) {\n\t  var alias = Flow.durationAliases[duration];\n\t  if (alias !== undefined) {\n\t    duration = alias;\n\t  }\n\t\n\t  if (Flow.durationToTicks.durations[duration] === undefined) {\n\t    throw new _vex.Vex.RERR('BadArguments', 'The provided duration is not valid: ' + duration);\n\t  }\n\t\n\t  return duration;\n\t};\n\t\n\t// Convert the `duration` to an fraction\n\tFlow.durationToFraction = function (duration) {\n\t  return new _fraction.Fraction().parse(Flow.sanitizeDuration(duration));\n\t};\n\t\n\t// Convert the `duration` to an number\n\tFlow.durationToNumber = function (duration) {\n\t  return Flow.durationToFraction(duration).value();\n\t};\n\t\n\t// Convert the `duration` to total ticks\n\tFlow.durationToTicks = function (duration) {\n\t  duration = Flow.sanitizeDuration(duration);\n\t\n\t  var ticks = Flow.durationToTicks.durations[duration];\n\t  if (ticks === undefined) {\n\t    return null;\n\t  }\n\t\n\t  return ticks;\n\t};\n\t\n\tFlow.durationToTicks.durations = {\n\t  '1/2': Flow.RESOLUTION * 2,\n\t  '1': Flow.RESOLUTION / 1,\n\t  '2': Flow.RESOLUTION / 2,\n\t  '4': Flow.RESOLUTION / 4,\n\t  '8': Flow.RESOLUTION / 8,\n\t  '16': Flow.RESOLUTION / 16,\n\t  '32': Flow.RESOLUTION / 32,\n\t  '64': Flow.RESOLUTION / 64,\n\t  '128': Flow.RESOLUTION / 128,\n\t  '256': Flow.RESOLUTION / 256\n\t};\n\t\n\tFlow.durationAliases = {\n\t  'w': '1',\n\t  'h': '2',\n\t  'q': '4',\n\t\n\t  // This is the default duration used to render bars (BarNote). Bars no longer\n\t  // consume ticks, so this should be a no-op.\n\t  //\n\t  // TODO(0xfe): This needs to be cleaned up.\n\t  'b': '256'\n\t};\n\t\n\tFlow.durationToGlyph = function (duration, type) {\n\t  duration = Flow.sanitizeDuration(duration);\n\t\n\t  var code = Flow.durationToGlyph.duration_codes[duration];\n\t  if (code === undefined) {\n\t    return null;\n\t  }\n\t\n\t  if (!type) {\n\t    type = 'n';\n\t  }\n\t\n\t  var glyphTypeProperties = code.type[type];\n\t  if (glyphTypeProperties === undefined) {\n\t    return null;\n\t  }\n\t\n\t  return _vex.Vex.Merge(_vex.Vex.Merge({}, code.common), glyphTypeProperties);\n\t};\n\t\n\tFlow.durationToGlyph.duration_codes = {\n\t  '1/2': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v53', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: false,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: -Flow.STEM_HEIGHT,\n\t      stem_down_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Breve note\n\t        code_head: 'v53'\n\t      },\n\t      'h': { // Breve note harmonic\n\t        code_head: 'v59'\n\t      },\n\t      'm': { // Breve note muted -\n\t        code_head: 'vf',\n\t        stem_offset: 0\n\t      },\n\t      'r': { // Breve rest\n\t        code_head: 'v31',\n\t        rest: true,\n\t        position: 'B/5',\n\t        dot_shiftY: 0.5\n\t      },\n\t      's': { // Breve note slash -\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '1': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: false,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: -Flow.STEM_HEIGHT,\n\t      stem_down_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n\t      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Whole note\n\t        code_head: 'v1d'\n\t      },\n\t      'h': { // Whole note harmonic\n\t        code_head: 'v46'\n\t      },\n\t      'm': { // Whole note muted\n\t        code_head: 'v92',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Whole rest\n\t        code_head: 'v5c',\n\t        rest: true,\n\t        position: 'D/5',\n\t        dot_shiftY: 0.5\n\t      },\n\t      's': { // Whole note slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '2': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'v81', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Half note\n\t        code_head: 'v81'\n\t      },\n\t      'h': { // Half note harmonic\n\t        code_head: 'v2d'\n\t      },\n\t      'm': { // Half note muted\n\t        code_head: 'v95',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Half rest\n\t        code_head: 'vc',\n\t        stem: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5\n\t      },\n\t      's': { // Half note slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '4': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: false,\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Quarter note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Quarter harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Quarter muted\n\t        code_head: 'v3e',\n\t        stem_offset: -3\n\t      },\n\t      'r': { // Quarter rest\n\t        code_head: 'v7c',\n\t        stem: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.5,\n\t        line_below: 1.5\n\t      },\n\t      's': { // Quarter slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '8': {\n\t    common: {\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      beam_count: 1,\n\t      code_flag_upstem: 'v54',\n\t      code_flag_downstem: 'v9a',\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Eighth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Eighth note harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Eighth note muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Eighth rest\n\t        code_head: 'va5',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.0,\n\t        line_below: 1.0\n\t      },\n\t      's': { // Eight slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '16': {\n\t    common: {\n\t      beam_count: 2,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v3f',\n\t      code_flag_downstem: 'v8f',\n\t      stem_up_extension: 0,\n\t      stem_down_extension: 0,\n\t      gracenote_stem_up_extension: -14,\n\t      gracenote_stem_down_extension: -14,\n\t      tabnote_stem_up_extension: 0,\n\t      tabnote_stem_down_extension: 0,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Sixteenth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Sixteenth note harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Sixteenth note muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Sixteenth rest\n\t        code_head: 'v3c',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -0.5,\n\t        line_above: 1.0,\n\t        line_below: 2.0\n\t      },\n\t      's': { // Sixteenth slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '32': {\n\t    common: {\n\t      beam_count: 3,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v47',\n\t      code_flag_downstem: 'v2a',\n\t      stem_up_extension: 9,\n\t      stem_down_extension: 9,\n\t      gracenote_stem_up_extension: -12,\n\t      gracenote_stem_down_extension: -12,\n\t      tabnote_stem_up_extension: 8,\n\t      tabnote_stem_down_extension: 5,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Thirty-second note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Thirty-second harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Thirty-second muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Thirty-second rest\n\t        code_head: 'v55',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -1.5,\n\t        line_above: 2.0,\n\t        line_below: 2.0\n\t      },\n\t      's': { // Thirty-second slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '64': {\n\t    common: {\n\t      beam_count: 4,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'va9',\n\t      code_flag_downstem: 'v58',\n\t      stem_up_extension: 13,\n\t      stem_down_extension: 13,\n\t      gracenote_stem_up_extension: -10,\n\t      gracenote_stem_down_extension: -10,\n\t      tabnote_stem_up_extension: 12,\n\t      tabnote_stem_down_extension: 9,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Sixty-fourth note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Sixty-fourth harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Sixty-fourth muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Sixty-fourth rest\n\t        code_head: 'v38',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: -1.5,\n\t        line_above: 2.0,\n\t        line_below: 3.0\n\t      },\n\t      's': { // Sixty-fourth slash\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  },\n\t  '128': {\n\t    common: {\n\t      beam_count: 5,\n\t      getWidth: function getWidth() {\n\t        var scale = arguments.length <= 0 || arguments[0] === undefined ? Flow.DEFAULT_NOTATION_FONT_SCALE : arguments[0];\n\t\n\t        return new _glyph.Glyph(this.code_head || 'vb', scale).getMetrics().width;\n\t      },\n\t\n\t      stem: true,\n\t      stem_offset: 0,\n\t      flag: true,\n\t      code_flag_upstem: 'v9b',\n\t      code_flag_downstem: 'v30',\n\t      stem_up_extension: 22,\n\t      stem_down_extension: 22,\n\t      gracenote_stem_up_extension: -8,\n\t      gracenote_stem_down_extension: -8,\n\t      tabnote_stem_up_extension: 21,\n\t      tabnote_stem_down_extension: 18,\n\t      dot_shiftY: 0,\n\t      line_above: 0,\n\t      line_below: 0\n\t    },\n\t    type: {\n\t      'n': { // Hundred-twenty-eight note\n\t        code_head: 'vb'\n\t      },\n\t      'h': { // Hundred-twenty-eight harmonic\n\t        code_head: 'v22'\n\t      },\n\t      'm': { // Hundred-twenty-eight muted\n\t        code_head: 'v3e'\n\t      },\n\t      'r': { // Hundred-twenty-eight rest\n\t        code_head: 'vaa',\n\t        stem: false,\n\t        flag: false,\n\t        rest: true,\n\t        position: 'B/4',\n\t        dot_shiftY: 1.5,\n\t        line_above: 3.0,\n\t        line_below: 3.0\n\t      },\n\t      's': { // Hundred-twenty-eight rest\n\t        // Drawn with canvas primitives\n\t        getWidth: function getWidth() {\n\t          return Flow.SLASH_NOTEHEAD_WIDTH;\n\t        },\n\t        position: 'B/4'\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t// Some defaults\n\tFlow.TIME4_4 = {\n\t  num_beats: 4,\n\t  beat_value: 4,\n\t  resolution: Flow.RESOLUTION\n\t};\n\texports.Flow = Flow;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Fraction = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Fraction class that represents a rational number\n\t//\n\t// @author zz85\n\t// @author incompleteopus (modifications)\n\t\n\t/* eslint-disable no-underscore-dangle */\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Fraction = function () {\n\t  _createClass(Fraction, null, [{\n\t    key: 'GCD',\n\t\n\t\n\t    /**\n\t     * GCD: Find greatest common divisor using Euclidean algorithm\n\t     */\n\t    value: function GCD(a, b) {\n\t      if (typeof a !== 'number' || typeof b !== 'number') {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid numbers: ' + a + ', ' + b);\n\t      }\n\t\n\t      var t = void 0;\n\t\n\t      while (b !== 0) {\n\t        t = b;\n\t        b = a % b;\n\t        a = t;\n\t      }\n\t\n\t      return a;\n\t    }\n\t\n\t    /**\n\t     * LCM: Lowest common multiple\n\t     */\n\t\n\t  }, {\n\t    key: 'LCM',\n\t    value: function LCM(a, b) {\n\t      return a * b / Fraction.GCD(a, b);\n\t    }\n\t\n\t    /**\n\t     * LCMM: Lowest common multiple for more than two numbers\n\t     */\n\t\n\t  }, {\n\t    key: 'LCMM',\n\t    value: function LCMM(args) {\n\t      if (args.length === 0) {\n\t        return 0;\n\t      } else if (args.length === 1) {\n\t        return args[0];\n\t      } else if (args.length === 2) {\n\t        return Fraction.LCM(args[0], args[1]);\n\t      } else {\n\t        var arg0 = args[0];\n\t        args.shift();\n\t        return Fraction.LCM(arg0, Fraction.LCMM(args));\n\t      }\n\t    }\n\t  }]);\n\t\n\t  function Fraction(numerator, denominator) {\n\t    _classCallCheck(this, Fraction);\n\t\n\t    this.set(numerator, denominator);\n\t  }\n\t\n\t  _createClass(Fraction, [{\n\t    key: 'set',\n\t    value: function set(numerator, denominator) {\n\t      this.numerator = numerator === undefined ? 1 : numerator;\n\t      this.denominator = denominator === undefined ? 1 : denominator;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'value',\n\t    value: function value() {\n\t      return this.numerator / this.denominator;\n\t    }\n\t  }, {\n\t    key: 'simplify',\n\t    value: function simplify() {\n\t      var u = this.numerator;\n\t      var d = this.denominator;\n\t\n\t      var gcd = Fraction.GCD(u, d);\n\t      u /= gcd;\n\t      d /= gcd;\n\t\n\t      if (d < 0) {\n\t        d = -d;\n\t        u = -u;\n\t      }\n\t      return this.set(u, d);\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 0;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      var lcm = Fraction.LCM(this.denominator, otherDenominator);\n\t      var a = lcm / this.denominator;\n\t      var b = lcm / otherDenominator;\n\t\n\t      var u = this.numerator * a + otherNumerator * b;\n\t      return this.set(u, lcm);\n\t    }\n\t  }, {\n\t    key: 'subtract',\n\t    value: function subtract(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 0;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      var lcm = Fraction.LCM(this.denominator, otherDenominator);\n\t      var a = lcm / this.denominator;\n\t      var b = lcm / otherDenominator;\n\t\n\t      var u = this.numerator * a - otherNumerator * b;\n\t      return this.set(u, lcm);\n\t    }\n\t  }, {\n\t    key: 'multiply',\n\t    value: function multiply(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 1;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n\t    }\n\t  }, {\n\t    key: 'divide',\n\t    value: function divide(param1, param2) {\n\t      var otherNumerator = void 0;\n\t      var otherDenominator = void 0;\n\t\n\t      if (param1 instanceof Fraction) {\n\t        otherNumerator = param1.numerator;\n\t        otherDenominator = param1.denominator;\n\t      } else {\n\t        if (param1 !== undefined) {\n\t          otherNumerator = param1;\n\t        } else {\n\t          otherNumerator = 1;\n\t        }\n\t\n\t        if (param2 !== undefined) {\n\t          otherDenominator = param2;\n\t        } else {\n\t          otherDenominator = 1;\n\t        }\n\t      }\n\t\n\t      return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n\t    }\n\t\n\t    // Simplifies both sides and checks if they are equal.\n\t\n\t  }, {\n\t    key: 'equals',\n\t    value: function equals(compare) {\n\t      var a = Fraction.__compareA.copy(compare).simplify();\n\t      var b = Fraction.__compareB.copy(this).simplify();\n\t\n\t      return a.numerator === b.numerator && a.denominator === b.denominator;\n\t    }\n\t\n\t    // Greater than operator.\n\t\n\t  }, {\n\t    key: 'greaterThan',\n\t    value: function greaterThan(compare) {\n\t      var a = Fraction.__compareB.copy(this);\n\t      a.subtract(compare);\n\t      return a.numerator > 0;\n\t    }\n\t\n\t    // Greater than or equals operator.\n\t\n\t  }, {\n\t    key: 'greaterThanEquals',\n\t    value: function greaterThanEquals(compare) {\n\t      var a = Fraction.__compareB.copy(this);\n\t      a.subtract(compare);\n\t      return a.numerator >= 0;\n\t    }\n\t\n\t    // Less than operator.\n\t\n\t  }, {\n\t    key: 'lessThan',\n\t    value: function lessThan(compare) {\n\t      return !this.greaterThanEquals(compare);\n\t    }\n\t\n\t    // Less than or equals operator.\n\t\n\t  }, {\n\t    key: 'lessThanEquals',\n\t    value: function lessThanEquals(compare) {\n\t      return !this.greaterThan(compare);\n\t    }\n\t\n\t    // Creates a new copy with this current values.\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      return new Fraction(this.numerator, this.denominator);\n\t    }\n\t\n\t    // Copies value of another Fraction into itself.\n\t\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy(_copy) {\n\t      return this.set(_copy.numerator, _copy.denominator);\n\t    }\n\t\n\t    // Returns the integer component eg. (4/2) == 2\n\t\n\t  }, {\n\t    key: 'quotient',\n\t    value: function quotient() {\n\t      return Math.floor(this.numerator / this.denominator);\n\t    }\n\t\n\t    // Returns the fraction component when reduced to a mixed number\n\t\n\t  }, {\n\t    key: 'fraction',\n\t    value: function fraction() {\n\t      return this.numerator % this.denominator;\n\t    }\n\t\n\t    // Returns the absolute value\n\t\n\t  }, {\n\t    key: 'abs',\n\t    value: function abs() {\n\t      this.denominator = Math.abs(this.denominator);\n\t      this.numerator = Math.abs(this.numerator);\n\t      return this;\n\t    }\n\t\n\t    // Returns a raw string representation\n\t\n\t  }, {\n\t    key: 'toString',\n\t    value: function toString() {\n\t      return this.numerator + '/' + this.denominator;\n\t    }\n\t\n\t    // Returns a simplified string respresentation\n\t\n\t  }, {\n\t    key: 'toSimplifiedString',\n\t    value: function toSimplifiedString() {\n\t      return Fraction.__tmp.copy(this).simplify().toString();\n\t    }\n\t\n\t    // Returns string representation in mixed form\n\t\n\t  }, {\n\t    key: 'toMixedString',\n\t    value: function toMixedString() {\n\t      var s = '';\n\t      var q = this.quotient();\n\t      var f = Fraction.__tmp.copy(this);\n\t\n\t      if (q < 0) {\n\t        f.abs().fraction();\n\t      } else {\n\t        f.fraction();\n\t      }\n\t\n\t      if (q !== 0) {\n\t        s += q;\n\t\n\t        if (f.numerator !== 0) {\n\t          s += ' ' + f.toSimplifiedString();\n\t        }\n\t      } else {\n\t        if (f.numerator === 0) {\n\t          s = '0';\n\t        } else {\n\t          s = f.toSimplifiedString();\n\t        }\n\t      }\n\t\n\t      return s;\n\t    }\n\t\n\t    // Parses a fraction string\n\t\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(str) {\n\t      var i = str.split('/');\n\t      var n = parseInt(i[0], 10);\n\t      var d = i[1] ? parseInt(i[1], 10) : 1;\n\t\n\t      return this.set(n, d);\n\t    }\n\t  }]);\n\t\n\t  return Fraction;\n\t}();\n\t\n\t// Temporary cached objects\n\t\n\t\n\texports.Fraction = Fraction;\n\tFraction.__compareA = new Fraction();\n\tFraction.__compareB = new Fraction();\n\tFraction.__tmp = new Fraction();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Glyph = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _boundingboxcomputation = __webpack_require__(7);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _vexflow_font = __webpack_require__(9);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n\t  var command = void 0;\n\t  var x = void 0;\n\t  var y = void 0;\n\t  var i = 0;\n\t\n\t  function nextX() {\n\t    return originX + outline[i++] * scaleX;\n\t  }\n\t  function nextY() {\n\t    return originY + outline[i++] * scaleY;\n\t  }\n\t\n\t  while (i < outline.length) {\n\t    command = outline[i++];\n\t    switch (command) {\n\t      case 'm':\n\t      case 'l':\n\t        outlineFns[command](nextX(), nextY());\n\t        break;\n\t      case 'q':\n\t        x = nextX();\n\t        y = nextY();\n\t        outlineFns.q(nextX(), nextY(), x, y);\n\t        break;\n\t      case 'b':\n\t        x = nextX();\n\t        y = nextY();\n\t        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  }\n\t}\n\t\n\tvar Glyph = exports.Glyph = function (_Element) {\n\t  _inherits(Glyph, _Element);\n\t\n\t  _createClass(Glyph, null, [{\n\t    key: 'loadMetrics',\n\t\n\t    /* Static methods used to implement loading / unloading of glyphs */\n\t    value: function loadMetrics(font, code, cache) {\n\t      var glyph = font.glyphs[code];\n\t      if (!glyph) {\n\t        throw new _vex.Vex.RERR('BadGlyph', 'Glyph ' + code + ' does not exist in font.');\n\t      }\n\t\n\t      var x_min = glyph.x_min;\n\t      var x_max = glyph.x_max;\n\t      var ha = glyph.ha;\n\t\n\t      var outline = void 0;\n\t\n\t      if (glyph.o) {\n\t        if (cache) {\n\t          if (glyph.cached_outline) {\n\t            outline = glyph.cached_outline;\n\t          } else {\n\t            outline = glyph.o.split(' ');\n\t            glyph.cached_outline = outline;\n\t          }\n\t        } else {\n\t          if (glyph.cached_outline) delete glyph.cached_outline;\n\t          outline = glyph.o.split(' ');\n\t        }\n\t\n\t        return {\n\t          x_min: x_min,\n\t          x_max: x_max,\n\t          ha: ha,\n\t          outline: outline\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadGlyph', 'Glyph ' + code + ' has no outline defined.');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * A quick and dirty static glyph renderer. Renders glyphs from the default\n\t     * font defined in Vex.Flow.Font.\n\t     *\n\t     * @param {!Object} ctx The canvas context.\n\t     * @param {number} x_pos X coordinate.\n\t     * @param {number} y_pos Y coordinate.\n\t     * @param {number} point The point size to use.\n\t     * @param {string} val The glyph code in Vex.Flow.Font.\n\t     * @param {boolean} nocache If set, disables caching of font outline.\n\t     */\n\t\n\t  }, {\n\t    key: 'renderGlyph',\n\t    value: function renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n\t      var scale = point * 72.0 / (_vexflow_font.Font.resolution * 100.0);\n\t      var metrics = Glyph.loadMetrics(_vexflow_font.Font, val, !nocache);\n\t      Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n\t    }\n\t  }, {\n\t    key: 'renderOutline',\n\t    value: function renderOutline(ctx, outline, scale, x_pos, y_pos) {\n\t      ctx.beginPath();\n\t      ctx.moveTo(x_pos, y_pos);\n\t      processOutline(outline, x_pos, y_pos, scale, -scale, {\n\t        m: ctx.moveTo.bind(ctx),\n\t        l: ctx.lineTo.bind(ctx),\n\t        q: ctx.quadraticCurveTo.bind(ctx),\n\t        b: ctx.bezierCurveTo.bind(ctx)\n\t      });\n\t      ctx.fill();\n\t    }\n\t  }, {\n\t    key: 'getOutlineBoundingBox',\n\t    value: function getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n\t      var bboxComp = new _boundingboxcomputation.BoundingBoxComputation();\n\t\n\t      processOutline(outline, x_pos, y_pos, scale, -scale, {\n\t        m: bboxComp.addPoint.bind(bboxComp),\n\t        l: bboxComp.addPoint.bind(bboxComp),\n\t        q: bboxComp.addQuadraticCurve.bind(bboxComp),\n\t        b: bboxComp.addBezierCurve.bind(bboxComp)\n\t      });\n\t\n\t      return new _boundingbox.BoundingBox(bboxComp.x1, bboxComp.y1, bboxComp.width(), bboxComp.height());\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     */\n\t\n\t  }]);\n\t\n\t  function Glyph(code, point, options) {\n\t    _classCallCheck(this, Glyph);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Glyph.__proto__ || Object.getPrototypeOf(Glyph)).call(this));\n\t\n\t    _this.setAttribute('type', 'Glyph');\n\t\n\t    _this.code = code;\n\t    _this.point = point;\n\t    _this.options = {\n\t      cache: true,\n\t      font: _vexflow_font.Font\n\t    };\n\t\n\t    _this.metrics = null;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t\n\t    _this.originShift = {\n\t      x: 0,\n\t      y: 0\n\t    };\n\t\n\t    if (options) {\n\t      _this.setOptions(options);\n\t    } else {\n\t      _this.reset();\n\t    }\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Glyph, [{\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      _vex.Vex.Merge(this.options, options);\n\t      this.reset();\n\t    }\n\t  }, {\n\t    key: 'setPoint',\n\t    value: function setPoint(point) {\n\t      this.point = point;return this;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;return this;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x_shift) {\n\t      this.x_shift = x_shift;return this;\n\t    }\n\t  }, {\n\t    key: 'setYShift',\n\t    value: function setYShift(y_shift) {\n\t      this.y_shift = y_shift;return this;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.scale = this.point * 72 / (this.options.font.resolution * 100);\n\t      this.metrics = Glyph.loadMetrics(this.options.font, this.code, this.options.cache);\n\t      this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.scale, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      return {\n\t        x_min: this.metrics.x_min * this.scale,\n\t        x_max: this.metrics.x_max * this.scale,\n\t        width: this.bbox.getW(),\n\t        height: this.bbox.getH()\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setOriginX',\n\t    value: function setOriginX(x) {\n\t      var bbox = this.bbox;\n\t\n\t      var originX = Math.abs(bbox.getX() / bbox.getW());\n\t      var xShift = (x - originX) * bbox.getW();\n\t      this.originShift.x = -xShift;\n\t    }\n\t  }, {\n\t    key: 'setOriginY',\n\t    value: function setOriginY(y) {\n\t      var bbox = this.bbox;\n\t\n\t      var originY = Math.abs(bbox.getY() / bbox.getH());\n\t      var yShift = (y - originY) * bbox.getH();\n\t      this.originShift.y = -yShift;\n\t    }\n\t  }, {\n\t    key: 'setOrigin',\n\t    value: function setOrigin(x, y) {\n\t      this.setOriginX(x);\n\t      this.setOriginY(y);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render(ctx, x, y) {\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      var outline = this.metrics.outline;\n\t      var scale = this.scale;\n\t\n\t      this.setRendered();\n\t      this.applyStyle(ctx);\n\t      Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n\t      this.restoreStyle(ctx);\n\t    }\n\t  }, {\n\t    key: 'renderToStave',\n\t    value: function renderToStave(x) {\n\t      this.checkContext();\n\t\n\t      if (!this.metrics) {\n\t        throw new _vex.Vex.RuntimeError('BadGlyph', 'Glyph ' + this.code + ' is not initialized.');\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RuntimeError('GlyphError', 'No valid stave');\n\t      }\n\t\n\t      var outline = this.metrics.outline;\n\t      var scale = this.scale;\n\t\n\t      this.setRendered();\n\t      this.applyStyle();\n\t      Glyph.renderOutline(this.context, outline, scale, x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n\t      this.restoreStyle();\n\t    }\n\t  }]);\n\n\t  return Glyph;\n\t}(_element.Element);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Element = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a generic base class for VexFlow, with implementations\n\t// of general functions and properties that can be inherited by all VexFlow elements.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _registry = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Element = exports.Element = function () {\n\t  _createClass(Element, null, [{\n\t    key: 'newID',\n\t    value: function newID() {\n\t      return 'auto' + Element.ID++;\n\t    }\n\t  }]);\n\t\n\t  function Element() {\n\t    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var type = _ref.type;\n\t\n\t    _classCallCheck(this, Element);\n\t\n\t    this.attrs = {\n\t      id: Element.newID(),\n\t      el: null,\n\t      type: type || 'Base',\n\t      classes: {}\n\t    };\n\t\n\t    this.boundingBox = null;\n\t    this.context = null;\n\t    this.rendered = false;\n\t\n\t    // If a default registry exist, then register with it right away.\n\t    if (_registry.Registry.getDefaultRegistry()) {\n\t      _registry.Registry.getDefaultRegistry().register(this);\n\t    }\n\t  }\n\t\n\t  // set the draw style of a stemmable note:\n\t\n\t\n\t  _createClass(Element, [{\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      this.style = style;return this;\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      return this.style;\n\t    }\n\t\n\t    // Apply current style to Canvas `context`\n\t\n\t  }, {\n\t    key: 'applyStyle',\n\t    value: function applyStyle() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var style = arguments.length <= 1 || arguments[1] === undefined ? this.getStyle() : arguments[1];\n\t\n\t      if (!style) return this;\n\t\n\t      context.save();\n\t      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n\t      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n\t      if (style.fillStyle) context.setFillStyle(style.fillStyle);\n\t      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n\t      if (style.lineWidth) context.setLineWidth(style.lineWidth);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restoreStyle',\n\t    value: function restoreStyle() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var style = arguments.length <= 1 || arguments[1] === undefined ? this.getStyle() : arguments[1];\n\t\n\t      if (!style) return this;\n\t      context.restore();\n\t      return this;\n\t    }\n\t\n\t    // An element can have multiple class labels.\n\t\n\t  }, {\n\t    key: 'hasClass',\n\t    value: function hasClass(className) {\n\t      return this.attrs.classes[className] === true;\n\t    }\n\t  }, {\n\t    key: 'addClass',\n\t    value: function addClass(className) {\n\t      this.attrs.classes[className] = true;\n\t      if (this.registry) {\n\t        this.registry.onUpdate({\n\t          id: this.getAttribute('id'),\n\t          name: 'class',\n\t          value: className,\n\t          oldValue: null\n\t        });\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'removeClass',\n\t    value: function removeClass(className) {\n\t      delete this.attrs.classes[className];\n\t      if (this.registry) {\n\t        this.registry.onUpdate({\n\t          id: this.getAttribute('id'),\n\t          name: 'class',\n\t          value: null,\n\t          oldValue: className\n\t        });\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // This is called by the registry after the element is registered.\n\t\n\t  }, {\n\t    key: 'onRegister',\n\t    value: function onRegister(registry) {\n\t      this.registry = registry;return this;\n\t    }\n\t  }, {\n\t    key: 'isRendered',\n\t    value: function isRendered() {\n\t      return this.rendered;\n\t    }\n\t  }, {\n\t    key: 'setRendered',\n\t    value: function setRendered() {\n\t      var rendered = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t      this.rendered = rendered;return this;\n\t    }\n\t  }, {\n\t    key: 'getAttributes',\n\t    value: function getAttributes() {\n\t      return this.attrs;\n\t    }\n\t  }, {\n\t    key: 'getAttribute',\n\t    value: function getAttribute(name) {\n\t      return this.attrs[name];\n\t    }\n\t  }, {\n\t    key: 'setAttribute',\n\t    value: function setAttribute(name, value) {\n\t      var id = this.attrs.id;\n\t      var oldValue = this.attrs[name];\n\t      this.attrs[name] = value;\n\t      if (this.registry) {\n\t        // Register with old id to support id changes.\n\t        this.registry.onUpdate({ id: id, name: name, value: value, oldValue: oldValue });\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.context;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return this.boundingBox;\n\t    }\n\t\n\t    // Validators\n\t\n\t  }, {\n\t    key: 'checkContext',\n\t    value: function checkContext() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoContext', 'No rendering context attached to instance');\n\t      }\n\t      return this.context;\n\t    }\n\t  }]);\n\t\n\t  return Element;\n\t}();\n\t\n\tElement.ID = 1000;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Registry = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a registry for VexFlow elements. It allows users\n\t// to track, query, and manage some subset of generated elements, and\n\t// dynamically get and set attributes.\n\t//\n\t// There are two ways to regiser with a registry:\n\t//\n\t// 1) Explicitly call `element.register(registry)`, or,\n\t// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n\t//    elements will automatically register with it.\n\t//\n\t// Once an element is registered, selected attributes are tracked and indexed by\n\t// the registry. This allows fast look up of elements by attributes like id, type,\n\t// and class.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('RegistryError');\n\t\n\tfunction setIndexValue(index, name, value, id, elem) {\n\t  if (!index[name][value]) index[name][value] = {};\n\t  index[name][value][id] = elem;\n\t}\n\t\n\tvar Registry = exports.Registry = function () {\n\t  _createClass(Registry, null, [{\n\t    key: 'INDEXES',\n\t    get: function get() {\n\t      return ['type'];\n\t    }\n\t  }]);\n\t\n\t  function Registry() {\n\t    _classCallCheck(this, Registry);\n\t\n\t    this.clear();\n\t  }\n\t\n\t  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n\t  // the provided registry as soon as they're constructed.\n\t\n\t\n\t  _createClass(Registry, [{\n\t    key: 'clear',\n\t    value: function clear() {\n\t      // Indexes are represented as maps of maps (of maps). This allows\n\t      // for both multi-labeling (e.g., an element can have multiple classes)\n\t      // and efficient lookup.\n\t      this.index = {\n\t        id: {},\n\t        type: {},\n\t        class: {}\n\t      };\n\t      return this;\n\t    }\n\t\n\t    // Updates the indexes for element 'id'. If an element's attribute changes\n\t    // from A -> B, make sure to remove the element from A.\n\t\n\t  }, {\n\t    key: 'updateIndex',\n\t    value: function updateIndex(_ref) {\n\t      var id = _ref.id;\n\t      var name = _ref.name;\n\t      var value = _ref.value;\n\t      var oldValue = _ref.oldValue;\n\t\n\t      var elem = this.getElementById(id);\n\t      if (oldValue !== null && this.index[name][oldValue]) {\n\t        delete this.index[name][oldValue][id];\n\t      }\n\t      if (value !== null) {\n\t        setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n\t      }\n\t    }\n\t\n\t    // Register element `elem` with this registry. This adds the element to its index and watches\n\t    // it for attribute changes.\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(elem, id) {\n\t      var _this = this;\n\t\n\t      id = id || elem.getAttribute('id');\n\t\n\t      if (!id) {\n\t        throw new X('Can\\'t add element without `id` attribute to registry', elem);\n\t      }\n\t\n\t      // Manually add id to index, then update other indexes.\n\t      elem.setAttribute('id', id);\n\t      setIndexValue(this.index, 'id', id, id, elem);\n\t      Registry.INDEXES.forEach(function (name) {\n\t        _this.updateIndex({ id: id, name: name, value: elem.getAttribute(name), oldValue: null });\n\t      });\n\t      elem.onRegister(this);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getElementById',\n\t    value: function getElementById(id) {\n\t      return this.index.id[id] ? this.index.id[id][id] : null;\n\t    }\n\t  }, {\n\t    key: 'getElementsByAttribute',\n\t    value: function getElementsByAttribute(attrName, value) {\n\t      var index = this.index[attrName];\n\t      if (index && index[value]) {\n\t        return Object.keys(index[value]).map(function (i) {\n\t          return index[value][i];\n\t        });\n\t      } else {\n\t        return [];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getElementsByType',\n\t    value: function getElementsByType(type) {\n\t      return this.getElementsByAttribute('type', type);\n\t    }\n\t  }, {\n\t    key: 'getElementsByClass',\n\t    value: function getElementsByClass(className) {\n\t      return this.getElementsByAttribute('class', className);\n\t    }\n\t\n\t    // This is called by the element when an attribute value changes. If an indexed\n\t    // attribute changes, then update the local index.\n\t\n\t  }, {\n\t    key: 'onUpdate',\n\t    value: function onUpdate(_ref2) {\n\t      var id = _ref2.id;\n\t      var name = _ref2.name;\n\t      var value = _ref2.value;\n\t      var oldValue = _ref2.oldValue;\n\t\n\t      function includes(array, value) {\n\t        return array.filter(function (x) {\n\t          return x === value;\n\t        }).length > 0;\n\t      }\n\t\n\t      if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n\t      this.updateIndex({ id: id, name: name, value: value, oldValue: oldValue });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'enableDefaultRegistry',\n\t    value: function enableDefaultRegistry(registry) {\n\t      Registry.defaultRegistry = registry;\n\t    }\n\t  }, {\n\t    key: 'getDefaultRegistry',\n\t    value: function getDefaultRegistry() {\n\t      return Registry.defaultRegistry;\n\t    }\n\t  }, {\n\t    key: 'disableDefaultRegistry',\n\t    value: function disableDefaultRegistry() {\n\t      Registry.defaultRegistry = null;\n\t    }\n\t  }]);\n\t\n\t  return Registry;\n\t}();\n\t\n\tRegistry.defaultRegistry = null;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// ## Description\n\t//\n\t// Object which computes metrics for a bounding box by continuously\n\t// taking canvas path commands\n\t\n\t// Warning: This file is merely a crutch to get bounding box information without\n\t// explicit metadata. This is likely to get deprecated following SMuFL support.\n\t//\n\t// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n\t// nvg.js#L449\n\t\n\tvar BoundingBoxComputation = exports.BoundingBoxComputation = function () {\n\t  function BoundingBoxComputation(x1, y1, x2, y2) {\n\t    _classCallCheck(this, BoundingBoxComputation);\n\t\n\t    // pass in initial points if you want\n\t    this.x1 = Number.NaN;\n\t    this.y1 = Number.NaN;\n\t    this.x2 = Number.NaN;\n\t    this.y2 = Number.NaN;\n\t\n\t    this.addPoint(x1, y1);\n\t    this.addPoint(x2, y2);\n\t  }\n\t\n\t  _createClass(BoundingBoxComputation, [{\n\t    key: \"width\",\n\t    value: function width() {\n\t      return this.x2 - this.x1;\n\t    }\n\t  }, {\n\t    key: \"height\",\n\t    value: function height() {\n\t      return this.y2 - this.y1;\n\t    }\n\t  }, {\n\t    key: \"addPoint\",\n\t    value: function addPoint(x, y) {\n\t      if (x != null) {\n\t        if (isNaN(this.x1) || isNaN(this.x2)) {\n\t          this.x1 = x;\n\t          this.x2 = x;\n\t        }\n\t        if (x < this.x1) this.x1 = x;\n\t        if (x > this.x2) this.x2 = x;\n\t      }\n\t\n\t      if (y != null) {\n\t        if (isNaN(this.y1) || isNaN(this.y2)) {\n\t          this.y1 = y;\n\t          this.y2 = y;\n\t        }\n\t        if (y < this.y1) this.y1 = y;\n\t        if (y > this.y2) this.y2 = y;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"addX\",\n\t    value: function addX(x) {\n\t      this.addPoint(x, null);\n\t    }\n\t  }, {\n\t    key: \"addY\",\n\t    value: function addY(y) {\n\t      this.addPoint(null, y);\n\t    }\n\t  }, {\n\t    key: \"addQuadraticCurve\",\n\t    value: function addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n\t      var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\t      var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\t      var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\t      var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\t      this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n\t    }\n\t  }, {\n\t    key: \"addBezierCurve\",\n\t    value: function addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n\t      // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t      var p0 = [p0x, p0y];\n\t      var p1 = [p1x, p1y];\n\t      var p2 = [p2x, p2y];\n\t      var p3 = [p3x, p3y];\n\t      var i = void 0;\n\t\n\t      this.addPoint(p0[0], p0[1]);\n\t      this.addPoint(p3[0], p3[1]);\n\t\n\t      var f = function f(t, i) {\n\t        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n\t      };\n\t\n\t      for (i = 0; i <= 1; i++) {\n\t        var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n\t        var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n\t        var c = 3 * p1[i] - 3 * p0[i];\n\t\n\t        if (a === 0) {\n\t          if (b === 0) continue;\n\t          var t = -c / b;\n\t          if (0 < t && t < 1) {\n\t            if (i === 0) this.addX(f(t, i));\n\t            if (i === 1) this.addY(f(t, i));\n\t          }\n\t          continue;\n\t        }\n\t\n\t        var b2ac = Math.pow(b, 2) - 4 * c * a;\n\t        if (b2ac < 0) continue;\n\t        var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\t        if (0 < t1 && t1 < 1) {\n\t          if (i === 0) this.addX(f(t1, i));\n\t          if (i === 1) this.addY(f(t1, i));\n\t        }\n\t        var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\t        if (0 < t2 && t2 < 1) {\n\t          if (i === 0) this.addX(f(t2, i));\n\t          if (i === 1) this.addY(f(t2, i));\n\t        }\n\t      }\n\t    }\n\t  }]);\n\n\t  return BoundingBoxComputation;\n\t}();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Vex Music Notation\n\t// Mohit Muthanna <mohit@muthanna.com>\n\t//\n\t// Copyright Mohit Muthanna 2010\n\t\n\t// Bounding boxes for interactive notation\n\t\n\tvar BoundingBox = exports.BoundingBox = function () {\n\t  _createClass(BoundingBox, null, [{\n\t    key: \"copy\",\n\t    value: function copy(that) {\n\t      return new BoundingBox(that.x, that.y, that.w, that.h);\n\t    }\n\t  }]);\n\t\n\t  function BoundingBox(x, y, w, h) {\n\t    _classCallCheck(this, BoundingBox);\n\t\n\t    this.x = x;\n\t    this.y = y;\n\t    this.w = w;\n\t    this.h = h;\n\t  }\n\t\n\t  _createClass(BoundingBox, [{\n\t    key: \"getX\",\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: \"getY\",\n\t    value: function getY() {\n\t      return this.y;\n\t    }\n\t  }, {\n\t    key: \"getW\",\n\t    value: function getW() {\n\t      return this.w;\n\t    }\n\t  }, {\n\t    key: \"getH\",\n\t    value: function getH() {\n\t      return this.h;\n\t    }\n\t  }, {\n\t    key: \"setX\",\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: \"setY\",\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t  }, {\n\t    key: \"setW\",\n\t    value: function setW(w) {\n\t      this.w = w;return this;\n\t    }\n\t  }, {\n\t    key: \"setH\",\n\t    value: function setH(h) {\n\t      this.h = h;return this;\n\t    }\n\t  }, {\n\t    key: \"move\",\n\t    value: function move(x, y) {\n\t      this.x += x;this.y += y;\n\t    }\n\t  }, {\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return BoundingBox.copy(this);\n\t    }\n\t\n\t    // Merge my box with given box. Creates a bigger bounding box unless\n\t    // the given box is contained in this one.\n\t\n\t  }, {\n\t    key: \"mergeWith\",\n\t    value: function mergeWith(boundingBox, ctx) {\n\t      var that = boundingBox;\n\t\n\t      var new_x = this.x < that.x ? this.x : that.x;\n\t      var new_y = this.y < that.y ? this.y : that.y;\n\t      var new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n\t      var new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\t\n\t      this.x = new_x;\n\t      this.y = new_y;\n\t      this.w = new_w;\n\t      this.h = new_h;\n\t\n\t      if (ctx) this.draw(ctx);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: \"draw\",\n\t    value: function draw(ctx, x, y) {\n\t      if (!x) x = 0;\n\t      if (!y) y = 0;\n\t      ctx.rect(this.x + x, this.y + y, this.w, this.h);\n\t      ctx.stroke();\n\t    }\n\t  }]);\n\n\t  return BoundingBox;\n\t}();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var Font=exports.Font={\"glyphs\":{\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"}},\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Renderer = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Support for different rendering contexts: Canvas, Raphael\n\t\n\t/* global document: false */\n\t\n\tvar _canvascontext = __webpack_require__(11);\n\t\n\tvar _raphaelcontext = __webpack_require__(12);\n\t\n\tvar _svgcontext = __webpack_require__(13);\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar lastContext = null;\n\t\n\tvar Renderer = exports.Renderer = function () {\n\t  _createClass(Renderer, null, [{\n\t    key: 'buildContext',\n\t    value: function buildContext(elementId, backend, width, height, background) {\n\t      var renderer = new Renderer(elementId, backend);\n\t      if (width && height) {\n\t        renderer.resize(width, height);\n\t      }\n\t\n\t      if (!background) background = '#FFF';\n\t      var ctx = renderer.getContext();\n\t      ctx.setBackgroundFillStyle(background);\n\t      Renderer.lastContext = ctx;\n\t      return ctx;\n\t    }\n\t  }, {\n\t    key: 'getCanvasContext',\n\t    value: function getCanvasContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getRaphaelContext',\n\t    value: function getRaphaelContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getSVGContext',\n\t    value: function getSVGContext(elementId, width, height, background) {\n\t      return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'bolsterCanvasContext',\n\t    value: function bolsterCanvasContext(ctx) {\n\t      if (Renderer.USE_CANVAS_PROXY) {\n\t        return new _canvascontext.CanvasContext(ctx);\n\t      }\n\t\n\t      var methodNames = ['clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle', 'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth', 'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup'];\n\t\n\t      ctx.vexFlowCanvasContext = ctx;\n\t\n\t      methodNames.forEach(function (methodName) {\n\t        ctx[methodName] = ctx[methodName] || _canvascontext.CanvasContext.prototype[methodName];\n\t      });\n\t\n\t      return ctx;\n\t    }\n\t\n\t    // Draw a dashed line (horizontal, vertical or diagonal\n\t    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n\t    // setting the second number to 0 draws a solid line.\n\t\n\t  }, {\n\t    key: 'drawDashedLine',\n\t    value: function drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n\t      context.beginPath();\n\t\n\t      var dx = toX - fromX;\n\t      var dy = toY - fromY;\n\t      var angle = Math.atan2(dy, dx);\n\t      var x = fromX;\n\t      var y = fromY;\n\t      context.moveTo(fromX, fromY);\n\t      var idx = 0;\n\t      var draw = true;\n\t      while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n\t        var dashLength = dashPattern[idx++ % dashPattern.length];\n\t        var nx = x + Math.cos(angle) * dashLength;\n\t        x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n\t        var ny = y + Math.sin(angle) * dashLength;\n\t        y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n\t        if (draw) {\n\t          context.lineTo(x, y);\n\t        } else {\n\t          context.moveTo(x, y);\n\t        }\n\t        draw = !draw;\n\t      }\n\t\n\t      context.closePath();\n\t      context.stroke();\n\t    }\n\t  }, {\n\t    key: 'Backends',\n\t    get: function get() {\n\t      return {\n\t        CANVAS: 1,\n\t        RAPHAEL: 2,\n\t        SVG: 3,\n\t        VML: 4\n\t      };\n\t    }\n\t\n\t    // End of line types\n\t\n\t  }, {\n\t    key: 'LineEndType',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1, // No leg\n\t        UP: 2, // Upward leg\n\t        DOWN: 3 };\n\t    }\n\t\n\t    // Set this to true if you're using VexFlow inside a runtime\n\t    // that does not allow modifiying canvas objects. There is a small\n\t    // performance degradation due to the extra indirection.\n\t\n\t  }, {\n\t    key: 'USE_CANVAS_PROXY',\n\t    get: function get() {\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'lastContext',\n\t    get: function get() {\n\t      return lastContext;\n\t    },\n\t    set: function set(ctx) {\n\t      lastContext = ctx;\n\t    }\n\t  }]);\n\t\n\t  function Renderer(elementId, backend) {\n\t    _classCallCheck(this, Renderer);\n\t\n\t    this.elementId = elementId;\n\t    if (!this.elementId) {\n\t      throw new _vex.Vex.RERR('BadArgument', 'Invalid id for renderer.');\n\t    }\n\t\n\t    this.element = document.getElementById(elementId);\n\t    if (!this.element) this.element = elementId;\n\t\n\t    // Verify backend and create context\n\t    this.ctx = null;\n\t    this.paper = null;\n\t    this.backend = backend;\n\t    if (this.backend === Renderer.Backends.CANVAS) {\n\t      // Create context.\n\t      if (!this.element.getContext) {\n\t        throw new _vex.Vex.RERR('BadElement', 'Can\\'t get canvas context from element: ' + elementId);\n\t      }\n\t      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n\t    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n\t      this.ctx = new _raphaelcontext.RaphaelContext(this.element);\n\t    } else if (this.backend === Renderer.Backends.SVG) {\n\t      this.ctx = new _svgcontext.SVGContext(this.element);\n\t    } else {\n\t      throw new _vex.Vex.RERR('InvalidBackend', 'No support for backend: ' + this.backend);\n\t    }\n\t  }\n\t\n\t  _createClass(Renderer, [{\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      if (this.backend === Renderer.Backends.CANVAS) {\n\t        if (!this.element.getContext) {\n\t          throw new _vex.Vex.RERR('BadElement', 'Can\\'t get canvas context from element: ' + this.elementId);\n\t        }\n\t\n\t        var devicePixelRatio = window.devicePixelRatio || 1;\n\t\n\t        this.element.width = width * devicePixelRatio;\n\t        this.element.height = height * devicePixelRatio;\n\t        this.element.style.width = width + 'px';\n\t        this.element.style.height = height + 'px';\n\t\n\t        this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n\t        this.ctx.scale(devicePixelRatio, devicePixelRatio);\n\t      } else {\n\t        this.ctx.resize(width, height);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.ctx;\n\t    }\n\t  }]);\n\n\t  return Renderer;\n\t}();\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Mohit Muthanna <mohit@muthanna.com>\n\t//\n\t// A rendering context for the Raphael backend.\n\t//\n\t// Copyright Mohit Cheppudira 2010\n\t\n\t/** @constructor */\n\tvar CanvasContext = exports.CanvasContext = function () {\n\t  _createClass(CanvasContext, null, [{\n\t    key: 'WIDTH',\n\t    get: function get() {\n\t      return 600;\n\t    }\n\t  }, {\n\t    key: 'HEIGHT',\n\t    get: function get() {\n\t      return 400;\n\t    }\n\t  }]);\n\t\n\t  function CanvasContext(context) {\n\t    _classCallCheck(this, CanvasContext);\n\t\n\t    // Use a name that is unlikely to clash with a canvas context\n\t    // property\n\t    this.vexFlowCanvasContext = context;\n\t    if (!context.canvas) {\n\t      this.canvas = {\n\t        width: CanvasContext.WIDTH,\n\t        height: CanvasContext.HEIGHT\n\t      };\n\t    } else {\n\t      this.canvas = context.canvas;\n\t    }\n\t  }\n\t\n\t  _createClass(CanvasContext, [{\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t    }\n\t\n\t    // Containers not implemented\n\t\n\t  }, {\n\t    key: 'openGroup',\n\t    value: function openGroup() {}\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {}\n\t  }, {\n\t    key: 'add',\n\t    value: function add() {}\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      this.vexFlowCanvasContext.font = font;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.vexFlowCanvasContext.fillStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_fillStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.vexFlowCanvasContext.strokeStyle = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.vexFlowCanvasContext.shadowColor = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.vexFlowCanvasContext.shadowBlur = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.vexFlowCanvasContext.lineWidth = width;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap(cap_type) {\n\t      this.vexFlowCanvasContext.lineCap = cap_type;\n\t      return this;\n\t    }\n\t\n\t    // setLineDash: is the one native method in a canvas context\n\t    // that begins with set, therefore we don't bolster the method\n\t    // if it already exists (see renderer.bolsterCanvasContext).\n\t    // If it doesn't exist, we bolster it and assume it's looking for\n\t    // a ctx.lineDash method, as previous versions of VexFlow\n\t    // expected.\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash(dash) {\n\t      this.vexFlowCanvasContext.lineDash = dash;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n\t    }\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n\t    }\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.rect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n\t    }\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      return this.vexFlowCanvasContext.beginPath();\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      return this.vexFlowCanvasContext.moveTo(x, y);\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      return this.vexFlowCanvasContext.lineTo(x, y);\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      return this.vexFlowCanvasContext.glow();\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill() {\n\t      return this.vexFlowCanvasContext.fill();\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      return this.vexFlowCanvasContext.stroke();\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      return this.vexFlowCanvasContext.closePath();\n\t    }\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      return this.vexFlowCanvasContext.measureText(text);\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      return this.vexFlowCanvasContext.fillText(text, x, y);\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      return this.vexFlowCanvasContext.save();\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      return this.vexFlowCanvasContext.restore();\n\t    }\n\t  }]);\n\n\t  return CanvasContext;\n\t}();\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A rendering context for the Raphael backend.\n\t//\n\t// ## Warning: Deprecated for SVGContext\n\t// Except in instances where SVG support for IE < 9.0 is\n\t// needed, SVGContext is recommended.\n\t\n\tvar RaphaelContext = exports.RaphaelContext = function () {\n\t  function RaphaelContext(element) {\n\t    _classCallCheck(this, RaphaelContext);\n\t\n\t    this.element = element;\n\t    this.paper = Raphael(element); // eslint-disable-line\n\t    this.path = '';\n\t    this.pen = { x: 0, y: 0 };\n\t    this.lineWidth = 1.0;\n\t    this.state = {\n\t      scale: { x: 1, y: 1 },\n\t      font_family: 'Arial',\n\t      font_size: 8,\n\t      font_weight: 800\n\t    };\n\t\n\t    this.attributes = {\n\t      'stroke-width': 0.3,\n\t      'fill': 'black',\n\t      'stroke': 'black',\n\t      'font': '10pt Arial'\n\t    };\n\t\n\t    this.background_attributes = {\n\t      'stroke-width': 0,\n\t      'fill': 'white',\n\t      'stroke': 'white',\n\t      'font': '10pt Arial'\n\t    };\n\t\n\t    this.shadow_attributes = {\n\t      width: 0,\n\t      color: 'black'\n\t    };\n\t\n\t    this.state_stack = [];\n\t  }\n\t\n\t  // Containers not implemented\n\t\n\t\n\t  _createClass(RaphaelContext, [{\n\t    key: 'openGroup',\n\t    value: function openGroup() {}\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {}\n\t  }, {\n\t    key: 'add',\n\t    value: function add() {}\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.state.font_family = family;\n\t      this.state.font_size = size;\n\t      this.state.font_weight = weight;\n\t      this.attributes.font = (this.state.font_weight || '') + ' ' + this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      this.attributes.font = font;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.attributes.fill = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_attributes.fill = style;\n\t      this.background_attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.shadow_attributes.color = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.shadow_attributes.width = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.attributes['stroke-width'] = width;\n\t      this.lineWidth = width;\n\t    }\n\t\n\t    // Empty because there is no equivalent in SVG\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      this.state.scale = { x: x, y: y };\n\t      // The scale() method is deprecated as of Raphael.JS 2.0, and\n\t      // can no longer be used as an option in an Element.attr() call.\n\t      // It is preserved here for users running earlier versions of\n\t      // Raphael.JS, though it has no effect on the SVG output in\n\t      // Raphael 2 and higher.\n\t      this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n\t      this.attributes.scale = x + ',' + y + ',0,0';\n\t      this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n\t      this.background_attributes.font = this.state.font_size * this.state.scale.x + 'pt ' + this.state.font_family;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.paper.clear();\n\t    }\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      this.element.style.width = width;\n\t      this.paper.setSize(width, height);\n\t      return this;\n\t    }\n\t\n\t    // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n\t    // is resized.\n\t    //\n\t    // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n\t\n\t  }, {\n\t    key: 'setViewBox',\n\t    value: function setViewBox(viewBox) {\n\t      this.paper.canvas.setAttribute('viewBox', viewBox);\n\t    }\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes).attr('fill', 'none').attr('stroke-width', this.lineWidth);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height = -height;\n\t      }\n\t\n\t      this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.background_attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      this.path = '';\n\t      this.pen.x = 0;\n\t      this.pen.y = 0;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      this.path += 'M' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      this.path += 'L' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      this.path += 'C' + x1 + ',' + y1 + ',' + x2 + ',' + y2 + ',' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      this.path += 'Q' + x1 + ',' + y1 + ',' + x + ',' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      function normalizeAngle(angle) {\n\t        while (angle < 0) {\n\t          angle += Math.PI * 2;\n\t        }\n\t\n\t        while (angle > Math.PI * 2) {\n\t          angle -= Math.PI * 2;\n\t        }\n\t        return angle;\n\t      }\n\t\n\t      startAngle = normalizeAngle(startAngle);\n\t      endAngle = normalizeAngle(endAngle);\n\t\n\t      if (startAngle > endAngle) {\n\t        var tmp = startAngle;\n\t        startAngle = endAngle;\n\t        endAngle = tmp;\n\t        antiClockwise = !antiClockwise;\n\t      }\n\t\n\t      var delta = endAngle - startAngle;\n\t\n\t      if (delta > Math.PI) {\n\t        this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n\t        this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n\t      } else {\n\t        this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'arcHelper',\n\t    value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      var x1 = x + radius * Math.cos(startAngle);\n\t      var y1 = y + radius * Math.sin(startAngle);\n\t\n\t      var x2 = x + radius * Math.cos(endAngle);\n\t      var y2 = y + radius * Math.sin(endAngle);\n\t\n\t      var largeArcFlag = 0;\n\t      var sweepFlag = 0;\n\t      if (antiClockwise) {\n\t        sweepFlag = 1;\n\t        if (endAngle - startAngle < Math.PI) {\n\t          largeArcFlag = 1;\n\t        }\n\t      } else if (endAngle - startAngle > Math.PI) {\n\t        largeArcFlag = 1;\n\t      }\n\t\n\t      this.path += 'M' + x1 + ',' + y1 + ',A' + radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' + x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      var out = this.paper.set();\n\t      if (this.shadow_attributes.width > 0) {\n\t        var sa = this.shadow_attributes;\n\t        var num_paths = sa.width / 2;\n\t        for (var i = 1; i <= num_paths; i++) {\n\t          out.push(this.paper.path(this.path).attr({\n\t            stroke: sa.color,\n\t            'stroke-linejoin': 'round',\n\t            'stroke-linecap': 'round',\n\t            'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n\t            opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n\t            // See note in this.scale(): In Raphael the scale() method\n\t            // is deprecated and removed as of Raphael 2.0 and replaced\n\t            // by the transform() method.  It is preserved here for\n\t            // users with earlier versions of Raphael, but has no effect\n\t            // on the output SVG in Raphael 2.0+.\n\t            transform: this.attributes.transform,\n\t            scale: this.attributes.scale\n\t          }));\n\t        }\n\t      }\n\t      return out;\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill() {\n\t      var elem = this.paper.path(this.path).attr(this.attributes).attr('stroke-width', 0);\n\t      this.glow(elem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      // The first line of code below is, unfortunately, a bit of a hack:\n\t      // Raphael's transform() scaling does not scale the stroke-width, so\n\t      // in order to scale a stroke, we have to manually scale the\n\t      // stroke-width.\n\t      //\n\t      // This works well so long as the X & Y states for this.scale() are\n\t      // relatively similar.  However, if they are very different, we\n\t      // would expect horizontal and vertical lines to have different\n\t      // stroke-widths.\n\t      //\n\t      // In the future, if we want to support very divergent values for\n\t      // horizontal and vertical scaling, we may want to consider\n\t      // implementing SVG scaling with properties of the SVG viewBox &\n\t      // viewPort and removing it entirely from the Element.attr() calls.\n\t      // This would more closely parallel the approach taken in\n\t      // canvascontext.js as well.\n\t\n\t      var strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n\t      var elem = this.paper.path(this.path).attr(this.attributes).attr('fill', 'none').attr('stroke-width', strokeWidth);\n\t      this.glow(elem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      this.path += 'Z';\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      var txt = this.paper.text(0, 0, text).attr(this.attributes).attr('fill', 'none').attr('stroke', 'none');\n\t      var bounds = txt.getBBox();\n\t      txt.remove();\n\t\n\t      return {\n\t        width: bounds.width,\n\t        height: bounds.height\n\t      };\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      this.paper.text(x + this.measureText(text).width / 2, y - this.state.font_size / (2.25 * this.state.scale.y), text).attr(this.attributes);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      // TODO(mmuthanna): State needs to be deep-copied.\n\t      this.state_stack.push({\n\t        state: {\n\t          font_family: this.state.font_family\n\t        },\n\t        attributes: {\n\t          font: this.attributes.font,\n\t          fill: this.attributes.fill,\n\t          stroke: this.attributes.stroke,\n\t          'stroke-width': this.attributes['stroke-width']\n\t        },\n\t        shadow_attributes: {\n\t          width: this.shadow_attributes.width,\n\t          color: this.shadow_attributes.color\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      // TODO(0xfe): State needs to be deep-restored.\n\t      var state = this.state_stack.pop();\n\t      this.state.font_family = state.state.font_family;\n\t      this.attributes.font = state.attributes.font;\n\t      this.attributes.fill = state.attributes.fill;\n\t      this.attributes.stroke = state.attributes.stroke;\n\t      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n\t      this.shadow_attributes.width = state.shadow_attributes.width;\n\t      this.shadow_attributes.color = state.shadow_attributes.color;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return RaphaelContext;\n\t}();\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SVGContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Gregory Ristow (2015)\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SVGContext = exports.SVGContext = function () {\n\t  function SVGContext(element) {\n\t    _classCallCheck(this, SVGContext);\n\t\n\t    // element is the parent DOM object\n\t    this.element = element;\n\t    // Create the SVG in the SVG namespace:\n\t    this.svgNS = 'http://www.w3.org/2000/svg';\n\t    var svg = this.create('svg');\n\t    // Add it to the canvas:\n\t    this.element.appendChild(svg);\n\t\n\t    // Point to it:\n\t    this.svg = svg;\n\t    this.groups = [this.svg]; // Create the group stack\n\t    this.parent = this.svg;\n\t\n\t    this.path = '';\n\t    this.pen = { x: 0, y: 0 };\n\t    this.lineWidth = 1.0;\n\t    this.state = {\n\t      scale: { x: 1, y: 1 },\n\t      'font-family': 'Arial',\n\t      'font-size': '8pt',\n\t      'font-weight': 'normal'\n\t    };\n\t\n\t    this.attributes = {\n\t      'stroke-width': 0.3,\n\t      'fill': 'black',\n\t      'stroke': 'black',\n\t      'stroke-dasharray': 'none',\n\t      'font-family': 'Arial',\n\t      'font-size': '10pt',\n\t      'font-weight': 'normal',\n\t      'font-style': 'normal'\n\t    };\n\t\n\t    this.background_attributes = {\n\t      'stroke-width': 0,\n\t      'fill': 'white',\n\t      'stroke': 'white',\n\t      'stroke-dasharray': 'none',\n\t      'font-family': 'Arial',\n\t      'font-size': '10pt',\n\t      'font-weight': 'normal',\n\t      'font-style': 'normal'\n\t    };\n\t\n\t    this.shadow_attributes = {\n\t      width: 0,\n\t      color: 'black'\n\t    };\n\t\n\t    this.state_stack = [];\n\t\n\t    // Test for Internet Explorer\n\t    this.iePolyfill();\n\t  }\n\t\n\t  _createClass(SVGContext, [{\n\t    key: 'create',\n\t    value: function create(svgElementType) {\n\t      return document.createElementNS(this.svgNS, svgElementType);\n\t    }\n\t\n\t    // Allow grouping elements in containers for interactivity.\n\t\n\t  }, {\n\t    key: 'openGroup',\n\t    value: function openGroup(cls, id, attrs) {\n\t      var group = this.create('g');\n\t      this.groups.push(group);\n\t      this.parent.appendChild(group);\n\t      this.parent = group;\n\t      if (cls) group.setAttribute('class', _vex.Vex.Prefix(cls));\n\t      if (id) group.setAttribute('id', _vex.Vex.Prefix(id));\n\t\n\t      if (attrs && attrs.pointerBBox) {\n\t        group.setAttribute('pointer-events', 'bounding-box');\n\t      }\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'closeGroup',\n\t    value: function closeGroup() {\n\t      this.groups.pop();\n\t      this.parent = this.groups[this.groups.length - 1];\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(elem) {\n\t      this.parent.appendChild(elem);\n\t    }\n\t\n\t    // Tests if the browser is Internet Explorer; if it is,\n\t    // we do some tricks to improve text layout.  See the\n\t    // note at ieMeasureTextFix() for details.\n\t\n\t  }, {\n\t    key: 'iePolyfill',\n\t    value: function iePolyfill() {\n\t      if (typeof navigator !== 'undefined') {\n\t        this.ie = /MSIE 9/i.test(navigator.userAgent) || /MSIE 10/i.test(navigator.userAgent) || /rv:11\\.0/i.test(navigator.userAgent) || /Trident/i.test(navigator.userAgent);\n\t      }\n\t    }\n\t\n\t    // ### Styling & State Methods:\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      // Unlike canvas, in SVG italic is handled by font-style,\n\t      // not weight. So: we search the weight argument and\n\t      // apply bold and italic to weight and style respectively.\n\t      var bold = false;\n\t      var italic = false;\n\t      var style = 'normal';\n\t      // Weight might also be a number (200, 400, etc...) so we\n\t      // test its type to be sure we have access to String methods.\n\t      if (typeof weight === 'string') {\n\t        // look for \"italic\" in the weight:\n\t        if (weight.indexOf('italic') !== -1) {\n\t          weight = weight.replace(/italic/g, '');\n\t          italic = true;\n\t        }\n\t        // look for \"bold\" in weight\n\t        if (weight.indexOf('bold') !== -1) {\n\t          weight = weight.replace(/bold/g, '');\n\t          bold = true;\n\t        }\n\t        // remove any remaining spaces\n\t        weight = weight.replace(/ /g, '');\n\t      }\n\t      weight = bold ? 'bold' : weight;\n\t      weight = typeof weight === 'undefined' || weight === '' ? 'normal' : weight;\n\t\n\t      style = italic ? 'italic' : style;\n\t\n\t      var fontAttributes = {\n\t        'font-family': family,\n\t        'font-size': size + 'pt',\n\t        'font-weight': weight,\n\t        'font-style': style\n\t      };\n\t\n\t      // Store the font size so that if the browser is Internet\n\t      // Explorer we can fix its calculations of text width.\n\t      this.fontSize = Number(size);\n\t\n\t      _vex.Vex.Merge(this.attributes, fontAttributes);\n\t      _vex.Vex.Merge(this.state, fontAttributes);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRawFont',\n\t    value: function setRawFont(font) {\n\t      font = font.trim();\n\t      // Assumes size first, splits on space -- which is presently\n\t      // how all existing modules are calling this.\n\t      var fontArray = font.split(' ');\n\t\n\t      this.attributes['font-family'] = fontArray[1];\n\t      this.state['font-family'] = fontArray[1];\n\t\n\t      this.attributes['font-size'] = fontArray[0];\n\t      this.state['font-size'] = fontArray[0];\n\t\n\t      // Saves fontSize for IE polyfill\n\t      this.fontSize = Number(fontArray[0].match(/\\d+/));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFillStyle',\n\t    value: function setFillStyle(style) {\n\t      this.attributes.fill = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setBackgroundFillStyle',\n\t    value: function setBackgroundFillStyle(style) {\n\t      this.background_attributes.fill = style;\n\t      this.background_attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStrokeStyle',\n\t    value: function setStrokeStyle(style) {\n\t      this.attributes.stroke = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowColor',\n\t    value: function setShadowColor(style) {\n\t      this.shadow_attributes.color = style;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setShadowBlur',\n\t    value: function setShadowBlur(blur) {\n\t      this.shadow_attributes.width = blur;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setLineWidth',\n\t    value: function setLineWidth(width) {\n\t      this.attributes['stroke-width'] = width;\n\t      this.lineWidth = width;\n\t    }\n\t\n\t    // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n\t\n\t  }, {\n\t    key: 'setLineDash',\n\t    value: function setLineDash(lineDash) {\n\t      if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n\t        lineDash = lineDash.join(', ');\n\t        this.attributes['stroke-dasharray'] = lineDash;\n\t        return this;\n\t      } else {\n\t        throw new _vex.Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setLineCap',\n\t    value: function setLineCap(lineCap) {\n\t      this.attributes['stroke-linecap'] = lineCap;\n\t      return this;\n\t    }\n\t\n\t    // ### Sizing & Scaling Methods:\n\t\n\t    // TODO (GCR): See note at scale() -- seperate our internal\n\t    // conception of pixel-based width/height from the style.width\n\t    // and style.height properties eventually to allow users to\n\t    // apply responsive sizing attributes to the SVG.\n\t\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize(width, height) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.element.style.width = width;\n\t      var attributes = {\n\t        width: width,\n\t        height: height\n\t      };\n\t      this.applyAttributes(this.svg, attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(x, y) {\n\t      // uses viewBox to scale\n\t      // TODO (GCR): we may at some point want to distinguish the\n\t      // style.width / style.height properties that are applied to\n\t      // the SVG object from our internal conception of the SVG\n\t      // width/height.  This would allow us to create automatically\n\t      // scaling SVG's that filled their containers, for instance.\n\t      //\n\t      // As this isn't implemented in Canvas or Raphael contexts,\n\t      // I've left as is for now, but in using the viewBox to\n\t      // handle internal scaling, am trying to make it possible\n\t      // for us to eventually move in that direction.\n\t\n\t      this.state.scale = { x: x, y: y };\n\t      var visibleWidth = this.width / x;\n\t      var visibleHeight = this.height / y;\n\t      this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setViewBox',\n\t    value: function setViewBox() {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      // Override for \"x y w h\" style:\n\t      if (args.length === 1) {\n\t        var viewBox = args[0];\n\t\n\t        this.svg.setAttribute('viewBox', viewBox);\n\t      } else {\n\t        var xMin = args[0];\n\t        var yMin = args[1];\n\t        var width = args[2];\n\t        var height = args[3];\n\t\n\t        var viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n\t        this.svg.setAttribute('viewBox', viewBoxString);\n\t      }\n\t    }\n\t\n\t    // ### Drawing helper methods:\n\t\n\t  }, {\n\t    key: 'applyAttributes',\n\t    value: function applyAttributes(element, attributes) {\n\t      Object.keys(attributes).forEach(function (propertyName) {\n\t        return element.setAttributeNS(null, propertyName, attributes[propertyName]);\n\t      });\n\t\n\t      return element;\n\t    }\n\t\n\t    // ### Shape & Path Methods:\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      // Clear the SVG by removing all inner children.\n\t\n\t      // (This approach is usually slightly more efficient\n\t      // than removing the old SVG & adding a new one to\n\t      // the container element, since it does not cause the\n\t      // container to resize twice.  Also, the resize\n\t      // triggered by removing the entire SVG can trigger\n\t      // a touchcancel event when the element resizes away\n\t      // from a touch point.)\n\t\n\t      while (this.svg.lastChild) {\n\t        this.svg.removeChild(this.svg.lastChild);\n\t      }\n\t\n\t      // Replace the viewbox attribute we just removed:\n\t      this.scale(this.state.scale.x, this.state.scale.y);\n\t    }\n\t\n\t    // ## Rectangles:\n\t\n\t  }, {\n\t    key: 'rect',\n\t    value: function rect(x, y, width, height, attributes) {\n\t      // Avoid invalid negative height attribs by\n\t      // flipping the rectangle on its head:\n\t      if (height < 0) {\n\t        y += height;\n\t        height *= -1;\n\t      }\n\t\n\t      // Create the rect & style it:\n\t      var rectangle = this.create('rect');\n\t      if (typeof attributes === 'undefined') {\n\t        attributes = {\n\t          fill: 'none',\n\t          'stroke-width': this.lineWidth,\n\t          stroke: 'black'\n\t        };\n\t      }\n\t\n\t      _vex.Vex.Merge(attributes, {\n\t        x: x,\n\t        y: y,\n\t        width: width,\n\t        height: height\n\t      });\n\t\n\t      this.applyAttributes(rectangle, attributes);\n\t\n\t      this.add(rectangle);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fillRect',\n\t    value: function fillRect(x, y, width, height) {\n\t      if (height < 0) {\n\t        y += height;\n\t        height *= -1;\n\t      }\n\t\n\t      this.rect(x, y, width, height, this.attributes);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'clearRect',\n\t    value: function clearRect(x, y, width, height) {\n\t      // TODO(GCR): Improve implementation of this...\n\t      // Currently it draws a box of the background color, rather\n\t      // than creating alpha through lower z-levels.\n\t      //\n\t      // See the implementation of this in SVGKit:\n\t      // http://sourceforge.net/projects/svgkit/\n\t      // as a starting point.\n\t      //\n\t      // Adding a large number of transform paths (as we would\n\t      // have to do) could be a real performance hit.  Since\n\t      // tabNote seems to be the only module that makes use of this\n\t      // it may be worth creating a seperate tabStave that would\n\t      // draw lines around locations of tablature fingering.\n\t      //\n\t\n\t      this.rect(x, y, width, height, this.background_attributes);\n\t      return this;\n\t    }\n\t\n\t    // ## Paths:\n\t\n\t  }, {\n\t    key: 'beginPath',\n\t    value: function beginPath() {\n\t      this.path = '';\n\t      this.pen.x = 0;\n\t      this.pen.y = 0;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'moveTo',\n\t    value: function moveTo(x, y) {\n\t      this.path += 'M' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'lineTo',\n\t    value: function lineTo(x, y) {\n\t      this.path += 'L' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'bezierCurveTo',\n\t    value: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'quadraticCurveTo',\n\t    value: function quadraticCurveTo(x1, y1, x, y) {\n\t      this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n\t      this.pen.x = x;\n\t      this.pen.y = y;\n\t      return this;\n\t    }\n\t\n\t    // This is an attempt (hack) to simulate the HTML5 canvas\n\t    // arc method.\n\t\n\t  }, {\n\t    key: 'arc',\n\t    value: function arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      function normalizeAngle(angle) {\n\t        while (angle < 0) {\n\t          angle += Math.PI * 2;\n\t        }\n\t\n\t        while (angle > Math.PI * 2) {\n\t          angle -= Math.PI * 2;\n\t        }\n\t        return angle;\n\t      }\n\t\n\t      startAngle = normalizeAngle(startAngle);\n\t      endAngle = normalizeAngle(endAngle);\n\t\n\t      if (startAngle > endAngle) {\n\t        var tmp = startAngle;\n\t        startAngle = endAngle;\n\t        endAngle = tmp;\n\t        antiClockwise = !antiClockwise;\n\t      }\n\t\n\t      var delta = endAngle - startAngle;\n\t\n\t      if (delta > Math.PI) {\n\t        this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n\t        this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n\t      } else {\n\t        this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'arcHelper',\n\t    value: function arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n\t      var x1 = x + radius * Math.cos(startAngle);\n\t      var y1 = y + radius * Math.sin(startAngle);\n\t\n\t      var x2 = x + radius * Math.cos(endAngle);\n\t      var y2 = y + radius * Math.sin(endAngle);\n\t\n\t      var largeArcFlag = 0;\n\t      var sweepFlag = 0;\n\t      if (antiClockwise) {\n\t        sweepFlag = 1;\n\t        if (endAngle - startAngle < Math.PI) {\n\t          largeArcFlag = 1;\n\t        }\n\t      } else if (endAngle - startAngle > Math.PI) {\n\t        largeArcFlag = 1;\n\t      }\n\t\n\t      this.path += 'M' + x1 + ' ' + y1 + ' A' + radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' + x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n\t    }\n\t  }, {\n\t    key: 'closePath',\n\t    value: function closePath() {\n\t      this.path += 'Z';\n\t\n\t      return this;\n\t    }\n\t\n\t    // Adapted from the source for Raphael's Element.glow\n\t\n\t  }, {\n\t    key: 'glow',\n\t    value: function glow() {\n\t      // Calculate the width & paths of the glow:\n\t      if (this.shadow_attributes.width > 0) {\n\t        var sa = this.shadow_attributes;\n\t        var num_paths = sa.width / 2;\n\t        // Stroke at varying widths to create effect of gaussian blur:\n\t        for (var i = 1; i <= num_paths; i++) {\n\t          var attributes = {\n\t            stroke: sa.color,\n\t            'stroke-linejoin': 'round',\n\t            'stroke-linecap': 'round',\n\t            'stroke-width': +(sa.width * 0.4 / num_paths * i).toFixed(3),\n\t            opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3)\n\t          };\n\t\n\t          var path = this.create('path');\n\t          attributes.d = this.path;\n\t          this.applyAttributes(path, attributes);\n\t          this.add(path);\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'fill',\n\t    value: function fill(attributes) {\n\t      // If our current path is set to glow, make it glow\n\t      this.glow();\n\t\n\t      var path = this.create('path');\n\t      if (typeof attributes === 'undefined') {\n\t        attributes = {};\n\t        _vex.Vex.Merge(attributes, this.attributes);\n\t        attributes.stroke = 'none';\n\t      }\n\t\n\t      attributes.d = this.path;\n\t\n\t      this.applyAttributes(path, attributes);\n\t      this.add(path);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'stroke',\n\t    value: function stroke() {\n\t      // If our current path is set to glow, make it glow.\n\t      this.glow();\n\t\n\t      var path = this.create('path');\n\t      var attributes = {};\n\t      _vex.Vex.Merge(attributes, this.attributes);\n\t      attributes.fill = 'none';\n\t      attributes['stroke-width'] = this.lineWidth;\n\t      attributes.d = this.path;\n\t\n\t      this.applyAttributes(path, attributes);\n\t      this.add(path);\n\t      return this;\n\t    }\n\t\n\t    // ## Text Methods:\n\t\n\t  }, {\n\t    key: 'measureText',\n\t    value: function measureText(text) {\n\t      var txt = this.create('text');\n\t      if (typeof txt.getBBox !== 'function') {\n\t        return { x: 0, y: 0, width: 0, height: 0 };\n\t      }\n\t\n\t      txt.textContent = text;\n\t      this.applyAttributes(txt, this.attributes);\n\t\n\t      // Temporarily add it to the document for measurement.\n\t      this.svg.appendChild(txt);\n\t\n\t      var bbox = txt.getBBox();\n\t      if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n\t        bbox = this.ieMeasureTextFix(bbox, text);\n\t      }\n\t\n\t      this.svg.removeChild(txt);\n\t      return bbox;\n\t    }\n\t  }, {\n\t    key: 'ieMeasureTextFix',\n\t    value: function ieMeasureTextFix(bbox) {\n\t      // Internet Explorer over-pads text in italics,\n\t      // resulting in giant width estimates for measureText.\n\t      // To fix this, we use this formula, tested against\n\t      // ie 11:\n\t      // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n\t      // And then subtract the overestimate from calculated width.\n\t\n\t      var fontSize = Number(this.fontSize);\n\t      var m = 1.196;\n\t      var b = 1.9598;\n\t      var widthCorrection = m * fontSize + b;\n\t      var width = bbox.width - widthCorrection;\n\t      var height = bbox.height - 1.5;\n\t\n\t      // Get non-protected copy:\n\t      var box = {\n\t        x: bbox.x,\n\t        y: bbox.y,\n\t        width: width,\n\t        height: height\n\t      };\n\t\n\t      return box;\n\t    }\n\t  }, {\n\t    key: 'fillText',\n\t    value: function fillText(text, x, y) {\n\t      var attributes = {};\n\t      _vex.Vex.Merge(attributes, this.attributes);\n\t      attributes.stroke = 'none';\n\t      attributes.x = x;\n\t      attributes.y = y;\n\t\n\t      var txt = this.create('text');\n\t      txt.textContent = text;\n\t      this.applyAttributes(txt, attributes);\n\t      this.add(txt);\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save() {\n\t      // TODO(mmuthanna): State needs to be deep-copied.\n\t      this.state_stack.push({\n\t        state: {\n\t          'font-family': this.state['font-family'],\n\t          'font-weight': this.state['font-weight'],\n\t          'font-style': this.state['font-style'],\n\t          'font-size': this.state['font-size']\n\t        },\n\t        attributes: {\n\t          'font-family': this.attributes['font-family'],\n\t          'font-weight': this.attributes['font-weight'],\n\t          'font-style': this.attributes['font-style'],\n\t          'font-size': this.attributes['font-size'],\n\t          fill: this.attributes.fill,\n\t          stroke: this.attributes.stroke,\n\t          'stroke-width': this.attributes['stroke-width'],\n\t          'stroke-dasharray': this.attributes['stroke-dasharray']\n\t        },\n\t        shadow_attributes: {\n\t          width: this.shadow_attributes.width,\n\t          color: this.shadow_attributes.color\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      // TODO(0xfe): State needs to be deep-restored.\n\t      var state = this.state_stack.pop();\n\t      this.state['font-family'] = state.state['font-family'];\n\t      this.state['font-weight'] = state.state['font-weight'];\n\t      this.state['font-style'] = state.state['font-style'];\n\t      this.state['font-size'] = state.state['font-size'];\n\t\n\t      this.attributes['font-family'] = state.attributes['font-family'];\n\t      this.attributes['font-weight'] = state.attributes['font-weight'];\n\t      this.attributes['font-style'] = state.attributes['font-style'];\n\t      this.attributes['font-size'] = state.attributes['font-size'];\n\t\n\t      this.attributes.fill = state.attributes.fill;\n\t      this.attributes.stroke = state.attributes.stroke;\n\t      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n\t      this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\t\n\t      this.shadow_attributes.width = state.shadow_attributes.width;\n\t      this.shadow_attributes.color = state.shadow_attributes.color;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return SVGContext;\n\t}();\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Formatter = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the formatting and layout algorithms that are used\n\t// to position notes in a voice. The algorithm can align multiple voices both\n\t// within a stave, and across multiple staves.\n\t//\n\t// To do this, the formatter breaks up voices into a grid of rational-valued\n\t// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n\t// to each tick based on the widths of the notes and modifiers in that tick. This\n\t// establishes the smallest amount of space required for each tick.\n\t//\n\t// Finally, the formatter distributes the left over space proportionally to\n\t// all the ticks, setting the `x` values of the notes in each tick.\n\t//\n\t// See `tests/formatter_tests.js` for usage examples. The helper functions included\n\t// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Formatter.DEBUG) _vex.Vex.L('Vex.Flow.Formatter', args);\n\t}\n\t\n\t// Helper function to locate the next non-rest note(s).\n\tfunction lookAhead(notes, restLine, i, compare) {\n\t  // If no valid next note group, nextRestLine is same as current.\n\t  var nextRestLine = restLine;\n\t\n\t  // Get the rest line for next valid non-rest note group.\n\t  for (i += 1; i < notes.length; i += 1) {\n\t    var note = notes[i];\n\t    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n\t      nextRestLine = note.getLineForRest();\n\t      break;\n\t    }\n\t  }\n\t\n\t  // Locate the mid point between two lines.\n\t  if (compare && restLine !== nextRestLine) {\n\t    var top = Math.max(restLine, nextRestLine);\n\t    var bot = Math.min(restLine, nextRestLine);\n\t    nextRestLine = _vex.Vex.MidLine(top, bot);\n\t  }\n\t  return nextRestLine;\n\t}\n\t\n\t// Take an array of `voices` and place aligned tickables in the same context. Returns\n\t// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n\t// multiplier.\n\t//\n\t// Params:\n\t// * `voices`: Array of `Voice` instances.\n\t// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n\t// * `addToContext`: Function to add tickable to context.\n\tfunction createContexts(voices, ContextType, addToContext) {\n\t  if (!voices || !voices.length) {\n\t    throw new _vex.Vex.RERR('BadArgument', 'No voices to format');\n\t  }\n\t\n\t  // Find out highest common multiple of resolution multipliers.\n\t  // The purpose of this is to find out a common denominator\n\t  // for all fractional tick values in all tickables of all voices,\n\t  // so that the values can be expanded and the numerator used\n\t  // as an integer tick value.\n\t  var totalTicks = voices[0].getTotalTicks();\n\t  var resolutionMultiplier = voices.reduce(function (resolutionMultiplier, voice) {\n\t    if (!voice.getTotalTicks().equals(totalTicks)) {\n\t      throw new _vex.Vex.RERR('TickMismatch', 'Voices should have same total note duration in ticks.');\n\t    }\n\t\n\t    if (voice.getMode() === _voice.Voice.Mode.STRICT && !voice.isComplete()) {\n\t      throw new _vex.Vex.RERR('IncompleteVoice', 'Voice does not have enough notes.');\n\t    }\n\t\n\t    return Math.max(resolutionMultiplier, _fraction.Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier()));\n\t  }, 1);\n\t\n\t  // Initialize tick maps.\n\t  var tickToContextMap = {};\n\t  var tickList = [];\n\t  var contexts = [];\n\t\n\t  // For each voice, extract notes and create a context for every\n\t  // new tick that hasn't been seen before.\n\t  voices.forEach(function (voice) {\n\t    // Use resolution multiplier as denominator to expand ticks\n\t    // to suitable integer values, so that no additional expansion\n\t    // of fractional tick values is needed.\n\t    var ticksUsed = new _fraction.Fraction(0, resolutionMultiplier);\n\t\n\t    voice.getTickables().forEach(function (tickable) {\n\t      var integerTicks = ticksUsed.numerator;\n\t\n\t      // If we have no tick context for this tick, create one.\n\t      if (!tickToContextMap[integerTicks]) {\n\t        var newContext = new ContextType();\n\t        contexts.push(newContext);\n\t        tickToContextMap[integerTicks] = newContext;\n\t      }\n\t\n\t      // Add this tickable to the TickContext.\n\t      addToContext(tickable, tickToContextMap[integerTicks]);\n\t\n\t      // Maintain a sorted list of tick contexts.\n\t      tickList.push(integerTicks);\n\t      ticksUsed.add(tickable.getTicks());\n\t    });\n\t  });\n\t\n\t  return {\n\t    map: tickToContextMap,\n\t    array: contexts,\n\t    list: _vex.Vex.SortAndUnique(tickList, function (a, b) {\n\t      return a - b;\n\t    }, function (a, b) {\n\t      return a === b;\n\t    }),\n\t    resolutionMultiplier: resolutionMultiplier\n\t  };\n\t}\n\t\n\tvar Formatter = exports.Formatter = function () {\n\t  _createClass(Formatter, null, [{\n\t    key: 'SimpleFormat',\n\t\n\t    // Helper function to layout \"notes\" one after the other without\n\t    // regard for proportions. Useful for tests and debugging.\n\t    value: function SimpleFormat(notes) {\n\t      var x = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t      var _ref$paddingBetween = _ref.paddingBetween;\n\t      var paddingBetween = _ref$paddingBetween === undefined ? 10 : _ref$paddingBetween;\n\t\n\t      notes.reduce(function (x, note) {\n\t        note.addToModifierContext(new _modifiercontext.ModifierContext());\n\t        var tick = new _tickcontext.TickContext().addTickable(note).preFormat();\n\t        var extra = tick.getExtraPx();\n\t        tick.setX(x + extra.left);\n\t\n\t        return x + tick.getWidth() + extra.right + paddingBetween;\n\t      }, x);\n\t    }\n\t\n\t    // Helper function to plot formatter debug info.\n\t\n\t  }, {\n\t    key: 'plotDebugging',\n\t    value: function plotDebugging(ctx, formatter, xPos, y1, y2) {\n\t      var x = xPos + _note.Note.STAVEPADDING;\n\t      var contextGaps = formatter.contextGaps;\n\t      function stroke(x1, x2, color) {\n\t        ctx.beginPath();\n\t        ctx.setStrokeStyle(color);\n\t        ctx.setFillStyle(color);\n\t        ctx.setLineWidth(1);\n\t        ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.setFont('Arial', 8, '');\n\t\n\t      contextGaps.gaps.forEach(function (gap) {\n\t        stroke(x + gap.x1, x + gap.x2, '#aaa');\n\t        // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n\t        ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n\t      });\n\t\n\t      ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n\t      ctx.setFillStyle('red');\n\t\n\t      ctx.fillText('Loss: ' + formatter.lossHistory.map(function (loss) {\n\t        return Math.round(loss);\n\t      }), x - 20, y2 + 22);\n\t      ctx.restore();\n\t    }\n\t\n\t    // Helper function to format and draw a single voice. Returns a bounding\n\t    // box for the notation.\n\t    //\n\t    // Parameters:\n\t    // * `ctx` - The rendering context\n\t    // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n\t    // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n\t    // * `params` - One of below:\n\t    //    * Setting `autobeam` only `(context, stave, notes, true)` or\n\t    //      `(ctx, stave, notes, {autobeam: true})`\n\t    //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n\t    //    * Setting both a struct is needed `(context, stave, notes, {\n\t    //      autobeam: true, align_rests: true})`\n\t    //\n\t    // `autobeam` automatically generates beams for the notes.\n\t    // `align_rests` aligns rests with nearby notes.\n\t\n\t  }, {\n\t    key: 'FormatAndDraw',\n\t    value: function FormatAndDraw(ctx, stave, notes, params) {\n\t      var options = {\n\t        auto_beam: false,\n\t        align_rests: false\n\t      };\n\t\n\t      if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t        _vex.Vex.Merge(options, params);\n\t      } else if (typeof params === 'boolean') {\n\t        options.auto_beam = params;\n\t      }\n\t\n\t      // Start by creating a voice and adding all the notes to it.\n\t      var voice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(notes);\n\t\n\t      // Then create beams, if requested.\n\t      var beams = options.auto_beam ? _beam.Beam.applyAndGetBeams(voice) : [];\n\t\n\t      // Instantiate a `Formatter` and format the notes.\n\t      new Formatter().joinVoices([voice], { align_rests: options.align_rests }).formatToStave([voice], stave, { align_rests: options.align_rests, stave: stave });\n\t\n\t      // Render the voice and beams to the stave.\n\t      voice.setStave(stave).draw(ctx, stave);\n\t      beams.forEach(function (beam) {\n\t        return beam.setContext(ctx).draw();\n\t      });\n\t\n\t      // Return the bounding box of the voice.\n\t      return voice.getBoundingBox();\n\t    }\n\t\n\t    // Helper function to format and draw aligned tab and stave notes in two\n\t    // separate staves.\n\t    //\n\t    // Parameters:\n\t    // * `ctx` - The rendering context\n\t    // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n\t    // * `stave` - A `Stave` instance on which to render `Note`s.\n\t    // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n\t    // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n\t    // * `autobeam` - Automatically generate beams.\n\t    // * `params` - A configuration object:\n\t    //    * `autobeam` automatically generates beams for the notes.\n\t    //    * `align_rests` aligns rests with nearby notes.\n\t\n\t  }, {\n\t    key: 'FormatAndDrawTab',\n\t    value: function FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n\t      var opts = {\n\t        auto_beam: autobeam,\n\t        align_rests: false\n\t      };\n\t\n\t      if ((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n\t        _vex.Vex.Merge(opts, params);\n\t      } else if (typeof params === 'boolean') {\n\t        opts.auto_beam = params;\n\t      }\n\t\n\t      // Create a `4/4` voice for `notes`.\n\t      var notevoice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(notes);\n\t\n\t      // Create a `4/4` voice for `tabnotes`.\n\t      var tabvoice = new _voice.Voice(_tables.Flow.TIME4_4).setMode(_voice.Voice.Mode.SOFT).addTickables(tabnotes);\n\t\n\t      // Then create beams, if requested.\n\t      var beams = opts.auto_beam ? _beam.Beam.applyAndGetBeams(notevoice) : [];\n\t\n\t      // Instantiate a `Formatter` and align tab and stave notes.\n\t      new Formatter().joinVoices([notevoice], { align_rests: opts.align_rests }).joinVoices([tabvoice]).formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\t\n\t      // Render voices and beams to staves.\n\t      notevoice.draw(ctx, stave);\n\t      tabvoice.draw(ctx, tabstave);\n\t      beams.forEach(function (beam) {\n\t        return beam.setContext(ctx).draw();\n\t      });\n\t\n\t      // Draw a connector between tab and note staves.\n\t      new _staveconnector.StaveConnector(stave, tabstave).setContext(ctx).draw();\n\t    }\n\t\n\t    // Auto position rests based on previous/next note positions.\n\t    //\n\t    // Params:\n\t    // * `notes`: An array of notes.\n\t    // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n\t    // * `alignTuplets`: If set to false, ignores tuplets.\n\t\n\t  }, {\n\t    key: 'AlignRestsToNotes',\n\t    value: function AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n\t      notes.forEach(function (note, index) {\n\t        if (note instanceof _stavenote.StaveNote && note.isRest()) {\n\t          if (note.tuplet && !alignTuplets) return;\n\t\n\t          // If activated rests not on default can be rendered as specified.\n\t          var position = note.getGlyph().position.toUpperCase();\n\t          if (position !== 'R/4' && position !== 'B/4') return;\n\t\n\t          if (alignAllNotes || note.beam != null) {\n\t            // Align rests with previous/next notes.\n\t            var props = note.getKeyProps()[0];\n\t            if (index === 0) {\n\t              props.line = lookAhead(notes, props.line, index, false);\n\t              note.setKeyLine(0, props.line);\n\t            } else if (index > 0 && index < notes.length) {\n\t              // If previous note is a rest, use its line number.\n\t              var restLine = void 0;\n\t              if (notes[index - 1].isRest()) {\n\t                restLine = notes[index - 1].getKeyProps()[0].line;\n\t                props.line = restLine;\n\t              } else {\n\t                restLine = notes[index - 1].getLineForRest();\n\t                // Get the rest line for next valid non-rest note group.\n\t                props.line = lookAhead(notes, restLine, index, true);\n\t              }\n\t              note.setKeyLine(0, props.line);\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  function Formatter() {\n\t    _classCallCheck(this, Formatter);\n\t\n\t    // Minimum width required to render all the notes in the voices.\n\t    this.minTotalWidth = 0;\n\t\n\t    // This is set to `true` after `minTotalWidth` is calculated.\n\t    this.hasMinTotalWidth = false;\n\t\n\t    // Total number of ticks in the voice.\n\t    this.totalTicks = new _fraction.Fraction(0, 1);\n\t\n\t    // Arrays of tick and modifier contexts.\n\t    this.tickContexts = null;\n\t    this.modiferContexts = null;\n\t\n\t    // Gaps between contexts, for free movement of notes post\n\t    // formatting.\n\t    this.contextGaps = {\n\t      total: 0,\n\t      gaps: []\n\t    };\n\t\n\t    this.voices = [];\n\t  }\n\t\n\t  // Find all the rests in each of the `voices` and align them\n\t  // to neighboring notes. If `alignAllNotes` is `false`, then only\n\t  // align non-beamed notes.\n\t\n\t\n\t  _createClass(Formatter, [{\n\t    key: 'alignRests',\n\t    value: function alignRests(voices, alignAllNotes) {\n\t      if (!voices || !voices.length) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'No voices to format rests');\n\t      }\n\t\n\t      voices.forEach(function (voice) {\n\t        return Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes);\n\t      });\n\t    }\n\t\n\t    // Calculate the minimum width required to align and format `voices`.\n\t\n\t  }, {\n\t    key: 'preCalculateMinTotalWidth',\n\t    value: function preCalculateMinTotalWidth(voices) {\n\t      // Cache results.\n\t      if (this.hasMinTotalWidth) return this.minTotalWidth;\n\t\n\t      // Create tick contexts if not already created.\n\t      if (!this.tickContexts) {\n\t        if (!voices) {\n\t          throw new _vex.Vex.RERR('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n\t        }\n\t\n\t        this.createTickContexts(voices);\n\t      }\n\t\n\t      var _tickContexts = this.tickContexts;\n\t      var contextList = _tickContexts.list;\n\t      var contextMap = _tickContexts.map;\n\t\n\t      // Go through each tick context and calculate total width.\n\t\n\t      this.minTotalWidth = contextList.map(function (tick) {\n\t        var context = contextMap[tick];\n\t        context.preFormat();\n\t        return context.getWidth();\n\t      }).reduce(function (a, b) {\n\t        return a + b;\n\t      }, 0);\n\t\n\t      this.hasMinTotalWidth = true;\n\t\n\t      return this.minTotalWidth;\n\t    }\n\t\n\t    // Get minimum width required to render all voices. Either `format` or\n\t    // `preCalculateMinTotalWidth` must be called before this method.\n\t\n\t  }, {\n\t    key: 'getMinTotalWidth',\n\t    value: function getMinTotalWidth() {\n\t      if (!this.hasMinTotalWidth) {\n\t        throw new _vex.Vex.RERR('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n\t      }\n\t\n\t      return this.minTotalWidth;\n\t    }\n\t\n\t    // Create `ModifierContext`s for each tick in `voices`.\n\t\n\t  }, {\n\t    key: 'createModifierContexts',\n\t    value: function createModifierContexts(voices) {\n\t      var contexts = createContexts(voices, _modifiercontext.ModifierContext, function (tickable, context) {\n\t        return tickable.addToModifierContext(context);\n\t      });\n\t\n\t      this.modiferContexts = contexts;\n\t      return contexts;\n\t    }\n\t\n\t    // Create `TickContext`s for each tick in `voices`. Also calculate the\n\t    // total number of ticks in voices.\n\t\n\t  }, {\n\t    key: 'createTickContexts',\n\t    value: function createTickContexts(voices) {\n\t      var contexts = createContexts(voices, _tickcontext.TickContext, function (tickable, context) {\n\t        return context.addTickable(tickable);\n\t      });\n\t\n\t      contexts.array.forEach(function (context) {\n\t        context.tContexts = contexts.array;\n\t      });\n\t\n\t      this.totalTicks = voices[0].getTicksUsed().clone();\n\t      this.tickContexts = contexts;\n\t      return contexts;\n\t    }\n\t\n\t    // This is the core formatter logic. Format voices and justify them\n\t    // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n\t    // that can't retreive widths without a canvas. This method sets the `x` positions\n\t    // of all the tickables/notes in the formatter.\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var justifyWidth = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t      var renderingContext = arguments[1];\n\t\n\t      var _this = this;\n\t\n\t      var voices = arguments[2];\n\t      var stave = arguments[3];\n\t\n\t      // Initialize context maps.\n\t      var contexts = this.tickContexts;\n\t      var contextList = contexts.list;\n\t      var contextMap = contexts.map;\n\t      var resolutionMultiplier = contexts.resolutionMultiplier;\n\t\n\t      // If voices and a stave were provided, set the Stave for each voice\n\t      // and preFormat to apply Y values to the notes;\n\t\n\t      if (voices && stave) {\n\t        voices.forEach(function (voice) {\n\t          return voice.setStave(stave).preFormat();\n\t        });\n\t      }\n\t\n\t      // Now distribute the ticks to each tick context, and assign them their\n\t      // own X positions.\n\t      var x = 0;\n\t      var shift = 0;\n\t      var centerX = justifyWidth / 2;\n\t      this.minTotalWidth = 0;\n\t\n\t      // Pass 1: Give each note maximum width requested by context.\n\t      contextList.forEach(function (tick) {\n\t        var context = contextMap[tick];\n\t        if (renderingContext) context.setContext(renderingContext);\n\t\n\t        // Make sure that all tickables in this context have calculated their\n\t        // space requirements.\n\t        context.preFormat();\n\t\n\t        var width = context.getWidth();\n\t        _this.minTotalWidth += width;\n\t\n\t        var metrics = context.getMetrics();\n\t        x = x + shift + metrics.extraLeftPx;\n\t        context.setX(x);\n\t\n\t        // Calculate shift for the next tick.\n\t        shift = width - metrics.extraLeftPx;\n\t      });\n\t\n\t      this.minTotalWidth = x + shift;\n\t      this.hasMinTotalWidth = true;\n\t\n\t      // No justification needed. End formatting.\n\t      if (justifyWidth <= 0) return;\n\t\n\t      // Pass 2: Take leftover width, and distribute it to proportionately to\n\t      // all notes.\n\t      var remainingX = justifyWidth - this.minTotalWidth;\n\t      var leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n\t      var spaceAccum = 0;\n\t\n\t      contextList.forEach(function (tick, index) {\n\t        var prevTick = contextList[index - 1] || 0;\n\t        var context = contextMap[tick];\n\t        var tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\t\n\t        spaceAccum += tickSpace;\n\t        context.setX(context.getX() + spaceAccum);\n\t\n\t        // Move center aligned tickables to middle\n\t        context.getCenterAlignedTickables().forEach(function (tickable) {\n\t          // eslint-disable-line\n\t          tickable.center_x_shift = centerX - context.getX();\n\t        });\n\t      });\n\t\n\t      // Just one context. Done formatting.\n\t      if (contextList.length === 1) return;\n\t\n\t      this.justifyWidth = justifyWidth;\n\t      this.lossHistory = [];\n\t      this.evaluate();\n\t    }\n\t\n\t    // Calculate the total cost of this formatting decision.\n\t\n\t  }, {\n\t    key: 'evaluate',\n\t    value: function evaluate() {\n\t      var _this2 = this;\n\t\n\t      var justifyWidth = this.justifyWidth;\n\t      // Calculate available slack per tick context. This works out how much freedom\n\t      // to move a context has in either direction, without affecting other notes.\n\t      this.contextGaps = { total: 0, gaps: [] };\n\t      this.tickContexts.list.forEach(function (tick, index) {\n\t        if (index === 0) return;\n\t        var prevTick = _this2.tickContexts.list[index - 1];\n\t        var prevContext = _this2.tickContexts.map[prevTick];\n\t        var context = _this2.tickContexts.map[tick];\n\t        var prevMetrics = prevContext.getMetrics();\n\t\n\t        var insideRightEdge = prevContext.getX() + prevMetrics.width;\n\t        var insideLeftEdge = context.getX();\n\t        var gap = insideLeftEdge - insideRightEdge;\n\t        _this2.contextGaps.total += gap;\n\t        _this2.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\t\n\t        // Tell the tick contexts how much they can reposition themselves.\n\t        context.getFormatterMetrics().freedom.left = gap;\n\t        prevContext.getFormatterMetrics().freedom.right = gap;\n\t      });\n\t\n\t      // Calculate mean distance in each voice for each duration type, then calculate\n\t      // how far each note is from the mean.\n\t      var durationStats = this.durationStats = {};\n\t\n\t      function updateStats(duration, space) {\n\t        var stats = durationStats[duration];\n\t        if (stats === undefined) {\n\t          durationStats[duration] = { mean: space, count: 1 };\n\t        } else {\n\t          stats.count += 1;\n\t          stats.mean = (stats.mean + space) / 2;\n\t        }\n\t      }\n\t\n\t      this.voices.forEach(function (voice) {\n\t        voice.getTickables().forEach(function (note, i, notes) {\n\t          var duration = note.getTicks().clone().simplify().toString();\n\t          var metrics = note.getMetrics();\n\t          var formatterMetrics = note.getFormatterMetrics();\n\t          var leftNoteEdge = note.getX() + metrics.noteWidth + metrics.modRightPx + metrics.extraRightPx;\n\t          var space = 0;\n\t\n\t          if (i < notes.length - 1) {\n\t            var rightNote = notes[i + 1];\n\t            var rightMetrics = rightNote.getMetrics();\n\t            var rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\t\n\t            space = rightNoteEdge - leftNoteEdge;\n\t            formatterMetrics.space.used = rightNote.getX() - note.getX();\n\t            rightNote.getFormatterMetrics().freedom.left = space;\n\t          } else {\n\t            space = justifyWidth - leftNoteEdge;\n\t            formatterMetrics.space.used = justifyWidth - note.getX();\n\t          }\n\t\n\t          formatterMetrics.freedom.right = space;\n\t          updateStats(duration, formatterMetrics.space.used);\n\t        });\n\t      });\n\t\n\t      // Calculate how much each note deviates from the mean. Loss function is square\n\t      // root of the sum of squared deviations.\n\t      var totalDeviation = 0;\n\t      this.voices.forEach(function (voice) {\n\t        voice.getTickables().forEach(function (note) {\n\t          var duration = note.getTicks().clone().simplify().toString();\n\t          var metrics = note.getFormatterMetrics();\n\t          metrics.iterations += 1;\n\t          metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n\t          metrics.duration = duration;\n\t          metrics.space.mean = durationStats[duration].mean;\n\t\n\t          totalDeviation += Math.pow(durationStats[duration].mean, 2);\n\t        });\n\t      });\n\t\n\t      this.totalCost = Math.sqrt(totalDeviation);\n\t      this.lossHistory.push(this.totalCost);\n\t      return this;\n\t    }\n\t\n\t    // Run a single iteration of rejustification. At a high level, this method calculates\n\t    // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n\t    // attempt to reduce the cost. You can call this method multiple times until it finds\n\t    // and oscillates around a global minimum.\n\t\n\t  }, {\n\t    key: 'tune',\n\t    value: function tune() {\n\t      var _this3 = this;\n\t\n\t      var sum = function sum(means) {\n\t        return means.reduce(function (a, b) {\n\t          return a + b;\n\t        });\n\t      };\n\t\n\t      // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n\t      // on adjacent tickcontexts.\n\t      function move(current, prev, next, shift) {\n\t        current.setX(current.getX() + shift);\n\t        current.getFormatterMetrics().freedom.left += shift;\n\t        current.getFormatterMetrics().freedom.right -= shift;\n\t\n\t        if (prev) prev.getFormatterMetrics().freedom.right += shift;\n\t        if (next) next.getFormatterMetrics().freedom.left -= shift;\n\t      }\n\t\n\t      var shift = 0;\n\t      this.tickContexts.list.forEach(function (tick, index, list) {\n\t        var context = _this3.tickContexts.map[tick];\n\t        var prevContext = index > 0 ? _this3.tickContexts.map[list[index - 1]] : null;\n\t        var nextContext = index < list.length - 1 ? _this3.tickContexts.map[list[index + 1]] : null;\n\t\n\t        move(context, prevContext, nextContext, shift);\n\t\n\t        var cost = -sum(context.getTickables().map(function (t) {\n\t          return t.getFormatterMetrics().space.deviation;\n\t        }));\n\t\n\t        if (cost > 0) {\n\t          shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n\t        } else if (cost < 0) {\n\t          if (nextContext) {\n\t            shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n\t          } else {\n\t            shift = 0;\n\t          }\n\t        }\n\t\n\t        var minShift = Math.min(5, Math.abs(shift));\n\t        shift = shift > 0 ? minShift : -minShift;\n\t      });\n\t\n\t      return this.evaluate();\n\t    }\n\t\n\t    // This is the top-level call for all formatting logic completed\n\t    // after `x` *and* `y` values have been computed for the notes\n\t    // in the voices.\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      var postFormatContexts = function postFormatContexts(contexts) {\n\t        return contexts.list.forEach(function (tick) {\n\t          return contexts.map[tick].postFormat();\n\t        });\n\t      };\n\t\n\t      postFormatContexts(this.modiferContexts);\n\t      postFormatContexts(this.tickContexts);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Take all `voices` and create `ModifierContext`s out of them. This tells\n\t    // the formatters that the voices belong on a single stave.\n\t\n\t  }, {\n\t    key: 'joinVoices',\n\t    value: function joinVoices(voices) {\n\t      this.createModifierContexts(voices);\n\t      this.hasMinTotalWidth = false;\n\t      return this;\n\t    }\n\t\n\t    // Align rests in voices, justify the contexts, and position the notes\n\t    // so voices are aligned and ready to render onto the stave. This method\n\t    // mutates the `x` positions of all tickables in `voices`.\n\t    //\n\t    // Voices are full justified to fit in `justifyWidth` pixels.\n\t    //\n\t    // Set `options.context` to the rendering context. Set `options.align_rests`\n\t    // to true to enable rest alignment.\n\t\n\t  }, {\n\t    key: 'format',\n\t    value: function format(voices, justifyWidth, options) {\n\t      var opts = {\n\t        align_rests: false,\n\t        context: null,\n\t        stave: null\n\t      };\n\t\n\t      _vex.Vex.Merge(opts, options);\n\t      this.voices = voices;\n\t      this.alignRests(voices, opts.align_rests);\n\t      this.createTickContexts(voices);\n\t      this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\t\n\t      // Only postFormat if a stave was supplied for y value formatting\n\t      if (opts.stave) this.postFormat();\n\t\n\t      return this;\n\t    }\n\t\n\t    // This method is just like `format` except that the `justifyWidth` is inferred\n\t    // from the `stave`.\n\t\n\t  }, {\n\t    key: 'formatToStave',\n\t    value: function formatToStave(voices, stave, options) {\n\t      var justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n\t      L('Formatting voices to width: ', justifyWidth);\n\t      var opts = { context: stave.getContext() };\n\t      _vex.Vex.Merge(opts, options);\n\t      return this.format(voices, justifyWidth, opts);\n\t    }\n\t  }]);\n\n\t  return Formatter;\n\t}();\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Beam = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `Beams` that span over a set of `StemmableNotes`.\n\t\n\tfunction calculateStemDirection(notes) {\n\t  var lineSum = 0;\n\t  notes.forEach(function (note) {\n\t    if (note.keyProps) {\n\t      note.keyProps.forEach(function (keyProp) {\n\t        lineSum += keyProp.line - 3;\n\t      });\n\t    }\n\t  });\n\t\n\t  if (lineSum >= 0) {\n\t    return _stem.Stem.DOWN;\n\t  }\n\t  return _stem.Stem.UP;\n\t}\n\t\n\tvar getStemSlope = function getStemSlope(firstNote, lastNote) {\n\t  var firstStemTipY = firstNote.getStemExtents().topY;\n\t  var firstStemX = firstNote.getStemX();\n\t  var lastStemTipY = lastNote.getStemExtents().topY;\n\t  var lastStemX = lastNote.getStemX();\n\t  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n\t};\n\t\n\tvar Beam = exports.Beam = function (_Element) {\n\t  _inherits(Beam, _Element);\n\t\n\t  _createClass(Beam, null, [{\n\t    key: 'getDefaultBeamGroups',\n\t\n\t    // Gets the default beam groups for a provided time signature.\n\t    // Attempts to guess if the time signature is not found in table.\n\t    // Currently this is fairly naive.\n\t    value: function getDefaultBeamGroups(time_sig) {\n\t      if (!time_sig || time_sig === 'c') {\n\t        time_sig = '4/4';\n\t      }\n\t\n\t      var defaults = {\n\t        '1/2': ['1/2'],\n\t        '2/2': ['1/2'],\n\t        '3/2': ['1/2'],\n\t        '4/2': ['1/2'],\n\t\n\t        '1/4': ['1/4'],\n\t        '2/4': ['1/4'],\n\t        '3/4': ['1/4'],\n\t        '4/4': ['1/4'],\n\t\n\t        '1/8': ['1/8'],\n\t        '2/8': ['2/8'],\n\t        '3/8': ['3/8'],\n\t        '4/8': ['2/8'],\n\t\n\t        '1/16': ['1/16'],\n\t        '2/16': ['2/16'],\n\t        '3/16': ['3/16'],\n\t        '4/16': ['2/16']\n\t      };\n\t\n\t      var groups = defaults[time_sig];\n\t\n\t      if (groups === undefined) {\n\t        // If no beam groups found, naively determine\n\t        // the beam groupings from the time signature\n\t        var beatTotal = parseInt(time_sig.split('/')[0], 10);\n\t        var beatValue = parseInt(time_sig.split('/')[1], 10);\n\t\n\t        var tripleMeter = beatTotal % 3 === 0;\n\t\n\t        if (tripleMeter) {\n\t          return [new _fraction.Fraction(3, beatValue)];\n\t        } else if (beatValue > 4) {\n\t          return [new _fraction.Fraction(2, beatValue)];\n\t        } else if (beatValue <= 4) {\n\t          return [new _fraction.Fraction(1, beatValue)];\n\t        }\n\t      } else {\n\t        return groups.map(function (group) {\n\t          return new _fraction.Fraction().parse(group);\n\t        });\n\t      }\n\t\n\t      return [new _fraction.Fraction(1, 4)];\n\t    }\n\t\n\t    // A helper function to automatically build basic beams for a voice. For more\n\t    // complex auto-beaming use `Beam.generateBeams()`.\n\t    //\n\t    // Parameters:\n\t    // * `voice` - The voice to generate the beams for\n\t    // * `stem_direction` - A stem direction to apply to the entire voice\n\t    // * `groups` - An array of `Fraction` representing beat groupings for the beam\n\t\n\t  }, {\n\t    key: 'applyAndGetBeams',\n\t    value: function applyAndGetBeams(voice, stem_direction, groups) {\n\t      return Beam.generateBeams(voice.getTickables(), {\n\t        groups: groups,\n\t        stem_direction: stem_direction\n\t      });\n\t    }\n\t\n\t    // A helper function to autimatically build beams for a voice with\n\t    // configuration options.\n\t    //\n\t    // Example configuration object:\n\t    //\n\t    // ```\n\t    // config = {\n\t    //   groups: [new Vex.Flow.Fraction(2, 8)],\n\t    //   stem_direction: -1,\n\t    //   beam_rests: true,\n\t    //   beam_middle_only: true,\n\t    //   show_stemlets: false\n\t    // };\n\t    // ```\n\t    //\n\t    // Parameters:\n\t    // * `notes` - An array of notes to create the beams for\n\t    // * `config` - The configuration object\n\t    //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n\t    //    * `stem_direction` - Set to apply the same direction to all notes\n\t    //    * `beam_rests` - Set to `true` to include rests in the beams\n\t    //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n\t    //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n\t    //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n\t    //\n\t\n\t  }, {\n\t    key: 'generateBeams',\n\t    value: function generateBeams(notes, config) {\n\t      if (!config) config = {};\n\t\n\t      if (!config.groups || !config.groups.length) {\n\t        config.groups = [new _fraction.Fraction(2, 8)];\n\t      }\n\t\n\t      // Convert beam groups to tick amounts\n\t      var tickGroups = config.groups.map(function (group) {\n\t        if (!group.multiply) {\n\t          throw new _vex.Vex.RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n\t        }\n\t        return group.clone().multiply(_tables.Flow.RESOLUTION, 1);\n\t      });\n\t\n\t      var unprocessedNotes = notes;\n\t      var currentTickGroup = 0;\n\t      var noteGroups = [];\n\t      var currentGroup = [];\n\t\n\t      function getTotalTicks(vf_notes) {\n\t        return vf_notes.reduce(function (memo, note) {\n\t          return note.getTicks().clone().add(memo);\n\t        }, new _fraction.Fraction(0, 1));\n\t      }\n\t\n\t      function nextTickGroup() {\n\t        if (tickGroups.length - 1 > currentTickGroup) {\n\t          currentTickGroup += 1;\n\t        } else {\n\t          currentTickGroup = 0;\n\t        }\n\t      }\n\t\n\t      function createGroups() {\n\t        var nextGroup = [];\n\t\n\t        unprocessedNotes.forEach(function (unprocessedNote) {\n\t          nextGroup = [];\n\t          if (unprocessedNote.shouldIgnoreTicks()) {\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            return; // Ignore untickables (like bar notes)\n\t          }\n\t\n\t          currentGroup.push(unprocessedNote);\n\t          var ticksPerGroup = tickGroups[currentTickGroup].clone();\n\t          var totalTicks = getTotalTicks(currentGroup);\n\t\n\t          // Double the amount of ticks in a group, if it's an unbeamable tuplet\n\t          var unbeamable = _tables.Flow.durationToNumber(unprocessedNote.duration) < 8;\n\t          if (unbeamable && unprocessedNote.tuplet) {\n\t            ticksPerGroup.numerator *= 2;\n\t          }\n\t\n\t          // If the note that was just added overflows the group tick total\n\t          if (totalTicks.greaterThan(ticksPerGroup)) {\n\t            // If the overflow note can be beamed, start the next group\n\t            // with it. Unbeamable notes leave the group overflowed.\n\t            if (!unbeamable) {\n\t              nextGroup.push(currentGroup.pop());\n\t            }\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            nextTickGroup();\n\t          } else if (totalTicks.equals(ticksPerGroup)) {\n\t            noteGroups.push(currentGroup);\n\t            currentGroup = nextGroup;\n\t            nextTickGroup();\n\t          }\n\t        });\n\t\n\t        // Adds any remainder notes\n\t        if (currentGroup.length > 0) {\n\t          noteGroups.push(currentGroup);\n\t        }\n\t      }\n\t\n\t      function getBeamGroups() {\n\t        return noteGroups.filter(function (group) {\n\t          if (group.length > 1) {\n\t            var beamable = true;\n\t            group.forEach(function (note) {\n\t              if (note.getIntrinsicTicks() >= _tables.Flow.durationToTicks('4')) {\n\t                beamable = false;\n\t              }\n\t            });\n\t            return beamable;\n\t          }\n\t          return false;\n\t        });\n\t      }\n\t\n\t      // Splits up groups by Rest\n\t      function sanitizeGroups() {\n\t        var sanitizedGroups = [];\n\t        noteGroups.forEach(function (group) {\n\t          var tempGroup = [];\n\t          group.forEach(function (note, index, group) {\n\t            var isFirstOrLast = index === 0 || index === group.length - 1;\n\t            var prevNote = group[index - 1];\n\t\n\t            var breaksOnEachRest = !config.beam_rests && note.isRest();\n\t            var breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n\t\n\t            var breakOnStemChange = false;\n\t            if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n\t              var prevDirection = prevNote.getStemDirection();\n\t              var currentDirection = note.getStemDirection();\n\t              breakOnStemChange = currentDirection !== prevDirection;\n\t            }\n\t\n\t            var isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\t\n\t            // Determine if the group should be broken at this note\n\t            var shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n\t\n\t            if (shouldBreak) {\n\t              // Add current group\n\t              if (tempGroup.length > 0) {\n\t                sanitizedGroups.push(tempGroup);\n\t              }\n\t\n\t              // Start a new group. Include the current note if the group\n\t              // was broken up by stem direction, as that note needs to start\n\t              // the next group of notes\n\t              tempGroup = breakOnStemChange ? [note] : [];\n\t            } else {\n\t              // Add note to group\n\t              tempGroup.push(note);\n\t            }\n\t          });\n\t\n\t          // If there is a remaining group, add it as well\n\t          if (tempGroup.length > 0) {\n\t            sanitizedGroups.push(tempGroup);\n\t          }\n\t        });\n\t\n\t        noteGroups = sanitizedGroups;\n\t      }\n\t\n\t      function formatStems() {\n\t        noteGroups.forEach(function (group) {\n\t          var stemDirection = void 0;\n\t          if (config.maintain_stem_directions) {\n\t            var _note = findFirstNote(group);\n\t            stemDirection = _note ? _note.getStemDirection() : _stem.Stem.UP;\n\t          } else {\n\t            if (config.stem_direction) {\n\t              stemDirection = config.stem_direction;\n\t            } else {\n\t              stemDirection = calculateStemDirection(group);\n\t            }\n\t          }\n\t          applyStemDirection(group, stemDirection);\n\t        });\n\t      }\n\t\n\t      function findFirstNote(group) {\n\t        for (var _i = 0; _i < group.length; _i++) {\n\t          var _note2 = group[_i];\n\t          if (!_note2.isRest()) {\n\t            return _note2;\n\t          }\n\t        }\n\t\n\t        return false;\n\t      }\n\t\n\t      function applyStemDirection(group, direction) {\n\t        group.forEach(function (note) {\n\t          note.setStemDirection(direction);\n\t        });\n\t      }\n\t\n\t      // Get all of the tuplets in all of the note groups\n\t      function getTuplets() {\n\t        var uniqueTuplets = [];\n\t\n\t        // Go through all of the note groups and inspect for tuplets\n\t        noteGroups.forEach(function (group) {\n\t          var tuplet = null;\n\t          group.forEach(function (note) {\n\t            if (note.tuplet && tuplet !== note.tuplet) {\n\t              tuplet = note.tuplet;\n\t              uniqueTuplets.push(tuplet);\n\t            }\n\t          });\n\t        });\n\t        return uniqueTuplets;\n\t      }\n\t\n\t      // Using closures to store the variables throughout the various functions\n\t      // IMO Keeps it this process lot cleaner - but not super consistent with\n\t      // the rest of the API's style - Silverwolf90 (Cyril)\n\t      createGroups();\n\t      sanitizeGroups();\n\t      formatStems();\n\t\n\t      // Get the notes to be beamed\n\t      var beamedNoteGroups = getBeamGroups();\n\t\n\t      // Get the tuplets in order to format them accurately\n\t      var allTuplets = getTuplets();\n\t\n\t      // Create a Vex.Flow.Beam from each group of notes to be beamed\n\t      var beams = [];\n\t      beamedNoteGroups.forEach(function (group) {\n\t        var beam = new Beam(group);\n\t\n\t        if (config.show_stemlets) {\n\t          beam.render_options.show_stemlets = true;\n\t        }\n\t        if (config.secondary_breaks) {\n\t          beam.render_options.secondary_break_ticks = _tables.Flow.durationToTicks(config.secondary_breaks);\n\t        }\n\t        if (config.flat_beams === true) {\n\t          beam.render_options.flat_beams = true;\n\t          beam.render_options.flat_beam_offset = config.flat_beam_offset;\n\t        }\n\t        beams.push(beam);\n\t      });\n\t\n\t      // Reformat tuplets\n\t      allTuplets.forEach(function (tuplet) {\n\t        // Set the tuplet location based on the stem direction\n\t        var direction = tuplet.notes[0].stem_direction === _stem.Stem.DOWN ? _tuplet.Tuplet.LOCATION_BOTTOM : _tuplet.Tuplet.LOCATION_TOP;\n\t        tuplet.setTupletLocation(direction);\n\t\n\t        // If any of the notes in the tuplet are not beamed, draw a bracket.\n\t        var bracketed = false;\n\t        for (var _i2 = 0; _i2 < tuplet.notes.length; _i2++) {\n\t          var _note3 = tuplet.notes[_i2];\n\t          if (_note3.beam === null) {\n\t            bracketed = true;\n\t            break;\n\t          }\n\t        }\n\t        tuplet.setBracketed(bracketed);\n\t      });\n\t\n\t      return beams;\n\t    }\n\t  }]);\n\t\n\t  function Beam(notes, auto_stem) {\n\t    _classCallCheck(this, Beam);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Beam.__proto__ || Object.getPrototypeOf(Beam)).call(this));\n\t\n\t    _this.setAttribute('type', 'Beam');\n\t\n\t    if (!notes || notes === []) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n\t    }\n\t\n\t    if (notes.length === 1) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n\t    }\n\t\n\t    // Validate beam line, direction and ticks.\n\t    _this.ticks = notes[0].getIntrinsicTicks();\n\t\n\t    if (_this.ticks >= _tables.Flow.durationToTicks('4')) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n\t    }\n\t\n\t    var i = void 0; // shared iterator\n\t    var note = void 0;\n\t\n\t    _this.stem_direction = _stem.Stem.UP;\n\t\n\t    for (i = 0; i < notes.length; ++i) {\n\t      note = notes[i];\n\t      if (note.hasStem()) {\n\t        _this.stem_direction = note.getStemDirection();\n\t        break;\n\t      }\n\t    }\n\t\n\t    var stem_direction = _this.stem_direction;\n\t    // Figure out optimal stem direction based on given notes\n\t    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n\t      stem_direction = calculateStemDirection(notes);\n\t    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n\t      // Auto Stem TabNotes\n\t      var stem_weight = notes.reduce(function (memo, note) {\n\t        return memo + note.stem_direction;\n\t      }, 0);\n\t\n\t      stem_direction = stem_weight > -1 ? _stem.Stem.UP : _stem.Stem.DOWN;\n\t    }\n\t\n\t    // Apply stem directions and attach beam to notes\n\t    for (i = 0; i < notes.length; ++i) {\n\t      note = notes[i];\n\t      if (auto_stem) {\n\t        note.setStemDirection(stem_direction);\n\t        _this.stem_direction = stem_direction;\n\t      }\n\t      note.setBeam(_this);\n\t    }\n\t\n\t    _this.postFormatted = false;\n\t    _this.notes = notes;\n\t    _this.beam_count = _this.getBeamCount();\n\t    _this.break_on_indices = [];\n\t    _this.render_options = {\n\t      beam_width: 5,\n\t      max_slope: 0.25,\n\t      min_slope: -0.25,\n\t      slope_iterations: 20,\n\t      slope_cost: 100,\n\t      show_stemlets: false,\n\t      stemlet_extension: 7,\n\t      partial_beam_length: 10,\n\t      flat_beams: false,\n\t      min_flat_beam_offset: 15\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Get the notes in this beam\n\t\n\t\n\t  _createClass(Beam, [{\n\t    key: 'getNotes',\n\t    value: function getNotes() {\n\t      return this.notes;\n\t    }\n\t\n\t    // Get the max number of beams in the set of notes\n\t\n\t  }, {\n\t    key: 'getBeamCount',\n\t    value: function getBeamCount() {\n\t      var beamCounts = this.notes.map(function (note) {\n\t        return note.getGlyph().beam_count;\n\t      });\n\t\n\t      var maxBeamCount = beamCounts.reduce(function (max, beamCount) {\n\t        return beamCount > max ? beamCount : max;\n\t      });\n\t\n\t      return maxBeamCount;\n\t    }\n\t\n\t    // Set which note `indices` to break the secondary beam at\n\t\n\t  }, {\n\t    key: 'breakSecondaryAt',\n\t    value: function breakSecondaryAt(indices) {\n\t      this.break_on_indices = indices;\n\t      return this;\n\t    }\n\t\n\t    // Return the y coordinate for linear function\n\t\n\t  }, {\n\t    key: 'getSlopeY',\n\t    value: function getSlopeY(x, first_x_px, first_y_px, slope) {\n\t      return first_y_px + (x - first_x_px) * slope;\n\t    }\n\t\n\t    // Calculate the best possible slope for the provided notes\n\t\n\t  }, {\n\t    key: 'calculateSlope',\n\t    value: function calculateSlope() {\n\t      var notes = this.notes;\n\t      var stemDirection = this.stem_direction;\n\t      var _render_options = this.render_options;\n\t      var max_slope = _render_options.max_slope;\n\t      var min_slope = _render_options.min_slope;\n\t      var slope_iterations = _render_options.slope_iterations;\n\t      var slope_cost = _render_options.slope_cost;\n\t\n\t\n\t      var firstNote = notes[0];\n\t      var initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n\t      var increment = (max_slope - min_slope) / slope_iterations;\n\t      var minCost = Number.MAX_VALUE;\n\t      var bestSlope = 0;\n\t      var yShift = 0;\n\t\n\t      // iterate through slope values to find best weighted fit\n\t      for (var slope = min_slope; slope <= max_slope; slope += increment) {\n\t        var totalStemExtension = 0;\n\t        var yShiftTemp = 0;\n\t\n\t        // iterate through notes, calculating y shift and stem extension\n\t        for (var _i3 = 1; _i3 < notes.length; ++_i3) {\n\t          var _note4 = notes[_i3];\n\t          var adjustedStemTipY = this.getSlopeY(_note4.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n\t\n\t          var stemTipY = _note4.getStemExtents().topY;\n\t          // beam needs to be shifted up to accommodate note\n\t          if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n\t            var diff = Math.abs(stemTipY - adjustedStemTipY);\n\t            yShiftTemp += diff * -stemDirection;\n\t            totalStemExtension += diff * _i3;\n\t          } else {\n\t            // beam overshoots note, account for the difference\n\t            totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n\t          }\n\t        }\n\t\n\t        // most engraving books suggest aiming for a slope about half the angle of the\n\t        // difference between the first and last notes' stem length;\n\t        var idealSlope = initialSlope / 2;\n\t        var distanceFromIdeal = Math.abs(idealSlope - slope);\n\t\n\t        // This tries to align most beams to something closer to the idealSlope, but\n\t        // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n\t        var cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\t\n\t        // update state when a more ideal slope is found\n\t        if (cost < minCost) {\n\t          minCost = cost;\n\t          bestSlope = slope;\n\t          yShift = yShiftTemp;\n\t        }\n\t      }\n\t\n\t      this.slope = bestSlope;\n\t      this.y_shift = yShift;\n\t    }\n\t\n\t    // Calculate a slope and y-shift for flat beams\n\t\n\t  }, {\n\t    key: 'calculateFlatSlope',\n\t    value: function calculateFlatSlope() {\n\t      var notes = this.notes;\n\t      var stem_direction = this.stem_direction;\n\t      var _render_options2 = this.render_options;\n\t      var beam_width = _render_options2.beam_width;\n\t      var min_flat_beam_offset = _render_options2.min_flat_beam_offset;\n\t      var flat_beam_offset = _render_options2.flat_beam_offset;\n\t\n\t      // If a flat beam offset has not yet been supplied or calculated,\n\t      // generate one based on the notes in this particular note group\n\t\n\t      var total = 0;\n\t      var extremeY = 0; // Store the highest or lowest note here\n\t      var extremeBeamCount = 0; // The beam count of the extreme note\n\t      var currentExtreme = 0;\n\t      for (var _i4 = 0; _i4 < notes.length; _i4++) {\n\t        // Total up all of the offsets so we can average them out later\n\t        var _note5 = notes[_i4];\n\t        var stemTipY = _note5.getStemExtents().topY;\n\t        total += stemTipY;\n\t\n\t        // Store the highest (stems-up) or lowest (stems-down) note so the\n\t        //  offset can be adjusted in case the average isn't enough\n\t        if (stem_direction === _stem.Stem.DOWN && currentExtreme < stemTipY) {\n\t          currentExtreme = stemTipY;\n\t          extremeY = Math.max.apply(Math, _toConsumableArray(_note5.getYs()));\n\t          extremeBeamCount = _note5.getBeamCount();\n\t        } else if (stem_direction === _stem.Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n\t          currentExtreme = stemTipY;\n\t          extremeY = Math.min.apply(Math, _toConsumableArray(_note5.getYs()));\n\t          extremeBeamCount = _note5.getBeamCount();\n\t        }\n\t      }\n\t\n\t      // Average the offsets to try and come up with a reasonable one that\n\t      //  works for all of the notes in the beam group.\n\t      var offset = total / notes.length;\n\t\n\t      // In case the average isn't long enough, add or subtract some more\n\t      //  based on the highest or lowest note (again, based on the stem\n\t      //  direction). This also takes into account the added height due to\n\t      //  the width of the beams.\n\t      var beamWidth = beam_width * 1.5;\n\t      var extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n\t      var newOffset = extremeY + extremeTest * -stem_direction;\n\t      if (stem_direction === _stem.Stem.DOWN && offset < newOffset) {\n\t        offset = extremeY + extremeTest;\n\t      } else if (stem_direction === _stem.Stem.UP && offset > newOffset) {\n\t        offset = extremeY - extremeTest;\n\t      }\n\t\n\t      if (!flat_beam_offset) {\n\t        // Set the offset for the group based on the calculations above.\n\t        this.render_options.flat_beam_offset = offset;\n\t      } else if (stem_direction === _stem.Stem.DOWN && offset > flat_beam_offset) {\n\t        this.render_options.flat_beam_offset = offset;\n\t      } else if (stem_direction === _stem.Stem.UP && offset < flat_beam_offset) {\n\t        this.render_options.flat_beam_offset = offset;\n\t      }\n\t\n\t      // for flat beams, the slope and y_shift are simply 0\n\t      this.slope = 0;\n\t      this.y_shift = 0;\n\t    }\n\t\n\t    // Create new stems for the notes in the beam, so that each stem\n\t    // extends into the beams.\n\t\n\t  }, {\n\t    key: 'applyStemExtensions',\n\t    value: function applyStemExtensions() {\n\t      var notes = this.notes;\n\t      var slope = this.slope;\n\t      var y_shift = this.y_shift;\n\t      var stem_direction = this.stem_direction;\n\t      var beam_count = this.beam_count;\n\t      var _render_options3 = this.render_options;\n\t      var show_stemlets = _render_options3.show_stemlets;\n\t      var flat_beam_offset = _render_options3.flat_beam_offset;\n\t      var flat_beams = _render_options3.flat_beams;\n\t      var stemlet_extension = _render_options3.stemlet_extension;\n\t      var beam_width = _render_options3.beam_width;\n\t\n\t\n\t      var firstNote = notes[0];\n\t      var firstStemTipY = firstNote.getStemExtents().topY;\n\t\n\t      // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n\t      //  the offset so the stems all end at the beam offset.\n\t      if (flat_beams && flat_beam_offset) {\n\t        firstStemTipY = flat_beam_offset;\n\t      }\n\t      var firstStemX = firstNote.getStemX();\n\t\n\t      for (var _i5 = 0; _i5 < notes.length; ++_i5) {\n\t        var _note6 = notes[_i5];\n\t        var stemX = _note6.getStemX();\n\t\n\t        var _note6$getStemExtents = _note6.getStemExtents();\n\t\n\t        var stemTipY = _note6$getStemExtents.topY;\n\t\n\t        var beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n\t        var preBeamExtension = _note6.getStem().getExtension();\n\t        var beamExtension = stem_direction === _stem.Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n\t\n\t        _note6.stem.setExtension(preBeamExtension + beamExtension);\n\t        _note6.stem.renderHeightAdjustment = -_stem.Stem.WIDTH / 2;\n\t\n\t        if (_note6.isRest() && show_stemlets) {\n\t          var beamWidth = beam_width;\n\t          var totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n\t          _note6.stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Get the x coordinates for the beam lines of specific `duration`\n\t\n\t  }, {\n\t    key: 'getBeamLines',\n\t    value: function getBeamLines(duration) {\n\t      var beam_lines = [];\n\t      var beam_started = false;\n\t      var current_beam = null;\n\t      var partial_beam_length = this.render_options.partial_beam_length;\n\t      var previous_should_break = false;\n\t      var tick_tally = 0;\n\t      for (var _i6 = 0; _i6 < this.notes.length; ++_i6) {\n\t        var _note7 = this.notes[_i6];\n\t\n\t        // See if we need to break secondary beams on this note.\n\t        var ticks = _note7.ticks.value();\n\t        tick_tally += ticks;\n\t        var should_break = false;\n\t\n\t        // 8th note beams are always drawn.\n\t        if (parseInt(duration, 10) >= 8) {\n\t          // First, check to see if any indices were set up through breakSecondaryAt()\n\t          should_break = this.break_on_indices.indexOf(_i6) !== -1;\n\t\n\t          // If the secondary breaks were auto-configured in the render options,\n\t          //  handle that as well.\n\t          if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n\t            tick_tally = 0;\n\t            should_break = true;\n\t          }\n\t        }\n\t        var note_gets_beam = _note7.getIntrinsicTicks() < _tables.Flow.durationToTicks(duration);\n\t\n\t        var stem_x = _note7.getStemX() - _stem.Stem.WIDTH / 2;\n\t\n\t        // Check to see if the next note in the group will get a beam at this\n\t        //  level. This will help to inform the partial beam logic below.\n\t        var next_note = this.notes[_i6 + 1];\n\t        var beam_next = next_note && next_note.getIntrinsicTicks() < _tables.Flow.durationToTicks(duration);\n\t        if (note_gets_beam) {\n\t          // This note gets a beam at the current level\n\t          if (beam_started) {\n\t            // We're currently in the middle of a beam. Just continue it on to\n\t            //  the stem X of the current note.\n\t            current_beam = beam_lines[beam_lines.length - 1];\n\t            current_beam.end = stem_x;\n\t\n\t            // If a secondary beam break is set up, end the beam right now.\n\t            if (should_break) {\n\t              beam_started = false;\n\t              if (next_note && !beam_next && current_beam.end === null) {\n\t                // This note gets a beam,.but the next one does not. This means\n\t                //  we need a partial pointing right.\n\t                current_beam.end = current_beam.start - partial_beam_length;\n\t              }\n\t            }\n\t          } else {\n\t            // No beam started yet. Start a new one.\n\t            current_beam = { start: stem_x, end: null };\n\t            beam_started = true;\n\t            if (!beam_next) {\n\t              // The next note doesn't get a beam. Draw a partial.\n\t              if ((previous_should_break || _i6 === 0) && next_note) {\n\t                // This is the first note (but not the last one), or it is\n\t                //  following a secondary break. Draw a partial to the right.\n\t                current_beam.end = current_beam.start + partial_beam_length;\n\t              } else {\n\t                // By default, draw a partial to the left.\n\t                current_beam.end = current_beam.start - partial_beam_length;\n\t              }\n\t            } else if (should_break) {\n\t              // This note should have a secondary break after it. Even though\n\t              //  we just started a beam, it needs to end immediately.\n\t              current_beam.end = current_beam.start - partial_beam_length;\n\t              beam_started = false;\n\t            }\n\t            beam_lines.push(current_beam);\n\t          }\n\t        } else {\n\t          // The current note does not get a beam.\n\t          beam_started = false;\n\t        }\n\t\n\t        // Store the secondary break flag to inform the partial beam logic in\n\t        //  the next iteration of the loop.\n\t        previous_should_break = should_break;\n\t      }\n\t\n\t      // Add a partial beam pointing left if this is the last note in the group\n\t      var last_beam = beam_lines[beam_lines.length - 1];\n\t      if (last_beam && last_beam.end === null) {\n\t        last_beam.end = last_beam.start - partial_beam_length;\n\t      }\n\t      return beam_lines;\n\t    }\n\t\n\t    // Render the stems for each notes\n\t\n\t  }, {\n\t    key: 'drawStems',\n\t    value: function drawStems() {\n\t      var _this2 = this;\n\t\n\t      this.notes.forEach(function (note) {\n\t        if (note.getStem()) {\n\t          note.getStem().setContext(_this2.context).draw();\n\t        }\n\t      }, this);\n\t    }\n\t\n\t    // Render the beam lines\n\t\n\t  }, {\n\t    key: 'drawBeamLines',\n\t    value: function drawBeamLines() {\n\t      this.checkContext();\n\t\n\t      var valid_beam_durations = ['4', '8', '16', '32', '64'];\n\t\n\t      var firstNote = this.notes[0];\n\t\n\t      var firstStemTipY = firstNote.getStemExtents().topY;\n\t      var beamY = firstStemTipY;\n\t\n\t      // For flat beams, set the first and last Y to the offset, rather than\n\t      //  using the note's stem extents.\n\t      if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n\t        beamY = this.render_options.flat_beam_offset;\n\t      }\n\t\n\t      var firstStemX = firstNote.getStemX();\n\t      var beamThickness = this.render_options.beam_width * this.stem_direction;\n\t\n\t      // Draw the beams.\n\t      for (var _i7 = 0; _i7 < valid_beam_durations.length; ++_i7) {\n\t        var duration = valid_beam_durations[_i7];\n\t        var beamLines = this.getBeamLines(duration);\n\t\n\t        for (var j = 0; j < beamLines.length; ++j) {\n\t          var beam_line = beamLines[j];\n\t          var startBeamX = beam_line.start;\n\t\n\t          var startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n\t          var lastBeamX = beam_line.end;\n\t          var lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\t\n\t          this.context.beginPath();\n\t          this.context.moveTo(startBeamX, startBeamY);\n\t          this.context.lineTo(startBeamX, startBeamY + beamThickness);\n\t          this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n\t          this.context.lineTo(lastBeamX + 1, lastBeamY);\n\t          this.context.closePath();\n\t          this.context.fill();\n\t        }\n\t\n\t        beamY += beamThickness * 1.5;\n\t      }\n\t    }\n\t\n\t    // Pre-format the beam\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      return this;\n\t    }\n\t\n\t    // Post-format the beam. This can only be called after\n\t    // the notes in the beam have both `x` and `y` values. ie: they've\n\t    // been formatted and have staves\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return;\n\t\n\t      // Calculate a smart slope if we're not forcing the beams to be flat.\n\t      if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n\t        this.calculateFlatSlope();\n\t      } else {\n\t        this.calculateSlope();\n\t      }\n\t      this.applyStemExtensions();\n\t\n\t      this.postFormatted = true;\n\t    }\n\t\n\t    // Render the beam to the canvas context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t      if (this.unbeamable) return;\n\t\n\t      if (!this.postFormatted) {\n\t        this.postFormat();\n\t      }\n\t\n\t      this.drawStems();\n\t      this.applyStyle();\n\t      this.drawBeamLines();\n\t      this.restoreStyle();\n\t    }\n\t  }]);\n\n\t  return Beam;\n\t}(_element.Element);\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tuplet = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\t/**\n\t * ## Description\n\t *\n\t * Create a new tuplet from the specified notes. The notes must\n\t * be part of the same voice. If they are of different rhythmic\n\t * values, then options.num_notes must be set.\n\t *\n\t * @constructor\n\t * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n\t *   notes, etc... any class that inherits stemmableNote at some\n\t *   point in its prototype chain.\n\t * @param options: object {\n\t *\n\t *   num_notes: fit this many notes into...\n\t *   notes_occupied: ...the space of this many notes\n\t *\n\t *       Together, these two properties make up the tuplet ratio\n\t *     in the form of num_notes : notes_occupied.\n\t *       num_notes defaults to the number of notes passed in, so\n\t *     it is important that if you omit this property, all of\n\t *     the notes passed should be of the same note value.\n\t *       notes_occupied defaults to 2 -- so you should almost\n\t *     certainly pass this parameter for anything other than\n\t *     a basic triplet.\n\t *\n\t *   location:\n\t *     default 1, which is above the notes: ┌─── 3 ───┐\n\t *      -1 is below the notes └─── 3 ───┘\n\t *\n\t *   bracketed: boolean, draw a bracket around the tuplet number\n\t *     when true: ┌─── 3 ───┐   when false: 3\n\t *     defaults to true if notes are not beamed, false otherwise\n\t *\n\t *   ratioed: boolean\n\t *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n\t *     defaults to true if the difference between num_notes and\n\t *     notes_occupied is greater than 1.\n\t *\n\t *   y_offset: int, default 0\n\t *     manually offset a tuplet, for instance to avoid collisions\n\t *     with articulations, etc...\n\t * }\n\t */\n\t\n\tvar Tuplet = exports.Tuplet = function (_Element) {\n\t  _inherits(Tuplet, _Element);\n\t\n\t  _createClass(Tuplet, null, [{\n\t    key: 'LOCATION_TOP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'LOCATION_BOTTOM',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t  }, {\n\t    key: 'NESTING_OFFSET',\n\t    get: function get() {\n\t      return 15;\n\t    }\n\t  }]);\n\t\n\t  function Tuplet(notes, options) {\n\t    _classCallCheck(this, Tuplet);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tuplet.__proto__ || Object.getPrototypeOf(Tuplet)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tuplet');\n\t    if (!notes || !notes.length) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n\t    }\n\t\n\t    _this.options = _vex.Vex.Merge({}, options);\n\t    _this.notes = notes;\n\t    _this.num_notes = 'num_notes' in _this.options ? _this.options.num_notes : notes.length;\n\t\n\t    // We accept beats_occupied, but warn that it's deprecated:\n\t    // the preferred property name is now notes_occupied.\n\t    if (_this.options.beats_occupied) {\n\t      _this.beatsOccupiedDeprecationWarning();\n\t    }\n\t    _this.notes_occupied = _this.options.notes_occupied || _this.options.beats_occupied || 2;\n\t    if ('bracketed' in _this.options) {\n\t      _this.bracketed = _this.options.bracketed;\n\t    } else {\n\t      _this.bracketed = notes.some(function (note) {\n\t        return note.beam === null;\n\t      });\n\t    }\n\t\n\t    _this.ratioed = 'ratioed' in _this.options ? _this.options.ratioed : Math.abs(_this.notes_occupied - _this.num_notes) > 1;\n\t    _this.point = 28;\n\t    _this.y_pos = 16;\n\t    _this.x_pos = 100;\n\t    _this.width = 200;\n\t    _this.location = _this.options.location || Tuplet.LOCATION_TOP;\n\t\n\t    _formatter.Formatter.AlignRestsToNotes(notes, true, true);\n\t    _this.resolveGlyphs();\n\t    _this.attach();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tuplet, [{\n\t    key: 'attach',\n\t    value: function attach() {\n\t      for (var i = 0; i < this.notes.length; i++) {\n\t        var note = this.notes[i];\n\t        note.setTuplet(this);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'detach',\n\t    value: function detach() {\n\t      for (var i = 0; i < this.notes.length; i++) {\n\t        var note = this.notes[i];\n\t        note.resetTuplet(this);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Set whether or not the bracket is drawn.\n\t     */\n\t\n\t  }, {\n\t    key: 'setBracketed',\n\t    value: function setBracketed(bracketed) {\n\t      this.bracketed = !!bracketed;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set whether or not the ratio is shown.\n\t     */\n\t\n\t  }, {\n\t    key: 'setRatioed',\n\t    value: function setRatioed(ratioed) {\n\t      this.ratioed = !!ratioed;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the tuplet to be displayed either on the top or bottom of the stave\n\t     */\n\t\n\t  }, {\n\t    key: 'setTupletLocation',\n\t    value: function setTupletLocation(location) {\n\t      if (!location) {\n\t        location = Tuplet.LOCATION_TOP;\n\t      } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n\t      }\n\t\n\t      this.location = location;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getNotes',\n\t    value: function getNotes() {\n\t      return this.notes;\n\t    }\n\t  }, {\n\t    key: 'getNoteCount',\n\t    value: function getNoteCount() {\n\t      return this.num_notes;\n\t    }\n\t  }, {\n\t    key: 'beatsOccupiedDeprecationWarning',\n\t    value: function beatsOccupiedDeprecationWarning() {\n\t      var msg = ['beats_occupied has been deprecated as an ', 'option for tuplets. Please use notes_occupied ', 'instead. Calls to getBeatsOccupied and ', 'setBeatsOccupied should now be routed to ', 'getNotesOccupied and setNotesOccupied instead'].join('');\n\t\n\t      if (console && console.warn) {\n\t        // eslint-disable-line no-console\n\t        console.warn(msg); // eslint-disable-line no-console\n\t      } else if (console) {\n\t        console.log(msg); // eslint-disable-line no-console\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getBeatsOccupied',\n\t    value: function getBeatsOccupied() {\n\t      this.beatsOccupiedDeprecationWarning();\n\t      return this.getNotesOccupied();\n\t    }\n\t  }, {\n\t    key: 'setBeatsOccupied',\n\t    value: function setBeatsOccupied(beats) {\n\t      this.beatsOccupiedDeprecationWarning();\n\t      return this.setNotesOccupied(beats);\n\t    }\n\t  }, {\n\t    key: 'getNotesOccupied',\n\t    value: function getNotesOccupied() {\n\t      return this.notes_occupied;\n\t    }\n\t  }, {\n\t    key: 'setNotesOccupied',\n\t    value: function setNotesOccupied(notes) {\n\t      this.detach();\n\t      this.notes_occupied = notes;\n\t      this.resolveGlyphs();\n\t      this.attach();\n\t    }\n\t  }, {\n\t    key: 'resolveGlyphs',\n\t    value: function resolveGlyphs() {\n\t      this.num_glyphs = [];\n\t      var n = this.num_notes;\n\t      while (n >= 1) {\n\t        this.num_glyphs.push(new _glyph.Glyph('v' + n % 10, this.point));\n\t        n = parseInt(n / 10, 10);\n\t      }\n\t\n\t      this.denom_glyphs = [];\n\t      n = this.notes_occupied;\n\t      while (n >= 1) {\n\t        this.denom_glyphs.push(new _glyph.Glyph('v' + n % 10, this.point));\n\t        n = parseInt(n / 10, 10);\n\t      }\n\t    }\n\t\n\t    // determine how many tuplets are nested within this tuplet\n\t    // on the same side (above/below), to calculate a y\n\t    // offset for this tuplet:\n\t\n\t  }, {\n\t    key: 'getNestedTupletCount',\n\t    value: function getNestedTupletCount() {\n\t      var location = this.location;\n\t      var first_note = this.notes[0];\n\t      var maxTupletCount = countTuplets(first_note, location);\n\t      var minTupletCount = countTuplets(first_note, location);\n\t\n\t      // Count the tuplets that are on the same side (above/below)\n\t      // as this tuplet:\n\t      function countTuplets(note, location) {\n\t        return note.tupletStack.filter(function (tuplet) {\n\t          return tuplet.location === location;\n\t        }).length;\n\t      }\n\t\n\t      this.notes.forEach(function (note) {\n\t        var tupletCount = countTuplets(note, location);\n\t        maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n\t        minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n\t      });\n\t\n\t      return maxTupletCount - minTupletCount;\n\t    }\n\t\n\t    // determine the y position of the tuplet:\n\t\n\t  }, {\n\t    key: 'getYPosition',\n\t    value: function getYPosition() {\n\t      // offset the tuplet for any nested tuplets between\n\t      // it and the notes:\n\t      var nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n\t\n\t      // offset the tuplet for any manual y_offset:\n\t      var y_offset = this.options.y_offset || 0;\n\t\n\t      // now iterate through the notes and find our highest\n\t      // or lowest locations, to form a base y_pos\n\t      var first_note = this.notes[0];\n\t      var y_pos = void 0;\n\t      if (this.location === Tuplet.LOCATION_TOP) {\n\t        y_pos = first_note.getStave().getYForLine(0) - 15;\n\t        // y_pos = first_note.getStemExtents().topY - 10;\n\t\n\t        for (var i = 0; i < this.notes.length; ++i) {\n\t          var top_y = this.notes[i].getStemDirection() === _stem.Stem.UP ? this.notes[i].getStemExtents().topY - 10 : this.notes[i].getStemExtents().baseY - 20;\n\t\n\t          if (top_y < y_pos) {\n\t            y_pos = top_y;\n\t          }\n\t        }\n\t      } else {\n\t        y_pos = first_note.getStave().getYForLine(4) + 20;\n\t\n\t        for (var _i = 0; _i < this.notes.length; ++_i) {\n\t          var bottom_y = this.notes[_i].getStemDirection() === _stem.Stem.UP ? this.notes[_i].getStemExtents().baseY + 20 : this.notes[_i].getStemExtents().topY + 10;\n\t          if (bottom_y > y_pos) {\n\t            y_pos = bottom_y;\n\t          }\n\t        }\n\t      }\n\t\n\t      return y_pos + nested_tuplet_y_offset + y_offset;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      // determine x value of left bound of tuplet\n\t      var first_note = this.notes[0];\n\t      var last_note = this.notes[this.notes.length - 1];\n\t\n\t      if (!this.bracketed) {\n\t        this.x_pos = first_note.getStemX();\n\t        this.width = last_note.getStemX() - this.x_pos;\n\t      } else {\n\t        this.x_pos = first_note.getTieLeftX() - 5;\n\t        this.width = last_note.getTieRightX() - this.x_pos + 5;\n\t      }\n\t\n\t      // determine y value for tuplet\n\t      this.y_pos = this.getYPosition();\n\t\n\t      var addGlyphWidth = function addGlyphWidth(width, glyph) {\n\t        return width + glyph.getMetrics().width;\n\t      };\n\t\n\t      // calculate total width of tuplet notation\n\t      var width = this.num_glyphs.reduce(addGlyphWidth, 0);\n\t      if (this.ratioed) {\n\t        width = this.denom_glyphs.reduce(addGlyphWidth, width);\n\t        width += this.point * 0.32;\n\t      }\n\t\n\t      var notation_center_x = this.x_pos + this.width / 2;\n\t      var notation_start_x = notation_center_x - width / 2;\n\t\n\t      // draw bracket if the tuplet is not beamed\n\t      if (this.bracketed) {\n\t        var line_width = this.width / 2 - width / 2 - 5;\n\t\n\t        // only draw the bracket if it has positive length\n\t        if (line_width > 0) {\n\t          this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n\t          this.context.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n\t          this.context.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n\t          this.context.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM), 1, this.location * 10);\n\t        }\n\t      }\n\t\n\t      // draw numerator glyphs\n\t      var x_offset = 0;\n\t      this.num_glyphs.forEach(function (glyph) {\n\t        glyph.render(_this2.context, notation_start_x + x_offset, _this2.y_pos + _this2.point / 3 - 2);\n\t        x_offset += glyph.getMetrics().width;\n\t      });\n\t\n\t      // display colon and denominator if the ratio is to be shown\n\t      if (this.ratioed) {\n\t        var colon_x = notation_start_x + x_offset + this.point * 0.16;\n\t        var colon_radius = this.point * 0.06;\n\t        this.context.beginPath();\n\t        this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n\t        this.context.closePath();\n\t        this.context.fill();\n\t        this.context.beginPath();\n\t        this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n\t        this.context.closePath();\n\t        this.context.fill();\n\t        x_offset += this.point * 0.32;\n\t        this.denom_glyphs.forEach(function (glyph) {\n\t          glyph.render(_this2.context, notation_start_x + x_offset, _this2.y_pos + _this2.point / 3 - 2);\n\t          x_offset += glyph.getMetrics().width;\n\t        });\n\t      }\n\t    }\n\t  }]);\n\n\t  return Tuplet;\n\t}(_element.Element);\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stem = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements the `Stem` object. Generally this object is handled\n\t// by its parent `StemmableNote`.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Stem.DEBUG) _vex.Vex.L('Vex.Flow.Stem', args);\n\t}\n\t\n\tvar Stem = exports.Stem = function (_Element) {\n\t  _inherits(Stem, _Element);\n\t\n\t  _createClass(Stem, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stem';\n\t    }\n\t\n\t    // Stem directions\n\t\n\t  }, {\n\t    key: 'UP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'DOWN',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t\n\t    // Theme\n\t\n\t  }, {\n\t    key: 'WIDTH',\n\t    get: function get() {\n\t      return _tables.Flow.STEM_WIDTH;\n\t    }\n\t  }, {\n\t    key: 'HEIGHT',\n\t    get: function get() {\n\t      return _tables.Flow.STEM_HEIGHT;\n\t    }\n\t  }]);\n\t\n\t  function Stem() {\n\t    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, Stem);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stem.__proto__ || Object.getPrototypeOf(Stem)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stem');\n\t\n\t    // Default notehead x bounds\n\t    _this.x_begin = options.x_begin || 0;\n\t    _this.x_end = options.x_end || 0;\n\t\n\t    // Y bounds for top/bottom most notehead\n\t    _this.y_top = options.y_top || 0;\n\t    _this.y_bottom = options.y_bottom || 0;\n\t\n\t    // Stem top extension\n\t    _this.stem_extension = options.stem_extension || 0;\n\t\n\t    // Direction of the stem\n\t    _this.stem_direction = options.stem_direction || 0;\n\t\n\t    // Flag to override all draw calls\n\t    _this.hide = options.hide || false;\n\t\n\t    _this.isStemlet = options.isStemlet || false;\n\t    _this.stemletHeight = options.stemletHeight || 0;\n\t\n\t    // Use to adjust the rendered height without affecting\n\t    // the results of `.getExtents()`\n\t    _this.renderHeightAdjustment = 0;\n\t    return _this;\n\t  }\n\t\n\t  // Set the x bounds for the default notehead\n\t\n\t\n\t  _createClass(Stem, [{\n\t    key: 'setNoteHeadXBounds',\n\t    value: function setNoteHeadXBounds(x_begin, x_end) {\n\t      this.x_begin = x_begin;\n\t      this.x_end = x_end;\n\t      return this;\n\t    }\n\t\n\t    // Set the direction of the stem in relation to the noteheads\n\t\n\t  }, {\n\t    key: 'setDirection',\n\t    value: function setDirection(direction) {\n\t      this.stem_direction = direction;\n\t    }\n\t\n\t    // Set the extension for the stem, generally for flags or beams\n\t\n\t  }, {\n\t    key: 'setExtension',\n\t    value: function setExtension(ext) {\n\t      this.stem_extension = ext;\n\t    }\n\t  }, {\n\t    key: 'getExtension',\n\t    value: function getExtension() {\n\t      return this.stem_extension;\n\t    }\n\t\n\t    // The the y bounds for the top and bottom noteheads\n\t\n\t  }, {\n\t    key: 'setYBounds',\n\t    value: function setYBounds(y_top, y_bottom) {\n\t      this.y_top = y_top;\n\t      this.y_bottom = y_bottom;\n\t    }\n\t\n\t    // The category of the object\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Stem.CATEGORY;\n\t    }\n\t\n\t    // Gets the entire height for the stem\n\t\n\t  }, {\n\t    key: 'getHeight',\n\t    value: function getHeight() {\n\t      return (this.y_bottom - this.y_top) * this.stem_direction + (Stem.HEIGHT + this.stem_extension) * this.stem_direction;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      throw new _vex.Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n\t    }\n\t\n\t    // Get the y coordinates for the very base of the stem to the top of\n\t    // the extension\n\t\n\t  }, {\n\t    key: 'getExtents',\n\t    value: function getExtents() {\n\t      var isStemUp = this.stem_direction === Stem.UP;\n\t      var ys = [this.y_top, this.y_bottom];\n\t      var stemHeight = Stem.HEIGHT + this.stem_extension;\n\t      var innerMostNoteheadY = (isStemUp ? Math.min : Math.max).apply(undefined, ys);\n\t      var outerMostNoteheadY = (isStemUp ? Math.max : Math.min).apply(undefined, ys);\n\t      var stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n\t\n\t      return { topY: stemTipY, baseY: outerMostNoteheadY };\n\t    }\n\t  }, {\n\t    key: 'setVisibility',\n\t    value: function setVisibility(isVisible) {\n\t      this.hide = !isVisible;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStemlet',\n\t    value: function setStemlet(isStemlet, stemletHeight) {\n\t      this.isStemlet = isStemlet;\n\t      this.stemletHeight = stemletHeight;\n\t      return this;\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.setRendered();\n\t      if (this.hide) return;\n\t      var ctx = this.checkContext();\n\t\n\t      var stem_x = void 0;\n\t      var stem_y = void 0;\n\t      var stem_direction = this.stem_direction;\n\t\n\t      if (stem_direction === Stem.DOWN) {\n\t        // Down stems are rendered to the left of the head.\n\t        stem_x = this.x_begin;\n\t        stem_y = this.y_top;\n\t      } else {\n\t        // Up stems are rendered to the right of the head.\n\t        stem_x = this.x_end;\n\t        stem_y = this.y_bottom;\n\t      }\n\t\n\t      var stemHeight = this.getHeight();\n\t\n\t      L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\t\n\t      // The offset from the stem's base which is required fo satisfy the stemlet height\n\t      var stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n\t\n\t      // Draw the stem\n\t      ctx.save();\n\t      this.applyStyle(ctx);\n\t      ctx.beginPath();\n\t      ctx.setLineWidth(Stem.WIDTH);\n\t      ctx.moveTo(stem_x, stem_y - stemletYOffset);\n\t      ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return Stem;\n\t}(_element.Element);\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Voice = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the main Voice class. It's mainly a container\n\t// object to group `Tickables` for formatting.\n\t\n\tvar Voice = exports.Voice = function (_Element) {\n\t  _inherits(Voice, _Element);\n\t\n\t  _createClass(Voice, null, [{\n\t    key: 'Mode',\n\t\n\t    // Modes allow the addition of ticks in three different ways:\n\t    //\n\t    // STRICT: This is the default. Ticks must fill the voice.\n\t    // SOFT:   Ticks can be added without restrictions.\n\t    // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n\t    //         tick length.\n\t    get: function get() {\n\t      return {\n\t        STRICT: 1,\n\t        SOFT: 2,\n\t        FULL: 3\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Voice(time) {\n\t    _classCallCheck(this, Voice);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Voice.__proto__ || Object.getPrototypeOf(Voice)).call(this));\n\t\n\t    _this.setAttribute('type', 'Voice');\n\t\n\t    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n\t    if (typeof time === 'string') {\n\t      var match = time.match(/(\\d+)\\/(\\d+)/);\n\t      if (match) {\n\t        time = {\n\t          num_beats: match[1],\n\t          beat_value: match[2],\n\t          resolution: _tables.Flow.RESOLUTION\n\t        };\n\t      }\n\t    }\n\t\n\t    // Default time sig is 4/4\n\t    _this.time = _vex.Vex.Merge({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }, time);\n\t\n\t    // Recalculate total ticks.\n\t    _this.totalTicks = new _fraction.Fraction(_this.time.num_beats * (_this.time.resolution / _this.time.beat_value), 1);\n\t\n\t    _this.resolutionMultiplier = 1;\n\t\n\t    // Set defaults\n\t    _this.tickables = [];\n\t    _this.ticksUsed = new _fraction.Fraction(0, 1);\n\t    _this.smallestTickCount = _this.totalTicks.clone();\n\t    _this.largestTickWidth = 0;\n\t    _this.stave = null;\n\t    // Do we care about strictly timed notes\n\t    _this.mode = Voice.Mode.STRICT;\n\t\n\t    // This must belong to a VoiceGroup\n\t    _this.voiceGroup = null;\n\t    return _this;\n\t  }\n\t\n\t  // Get the total ticks in the voice\n\t\n\t\n\t  _createClass(Voice, [{\n\t    key: 'getTotalTicks',\n\t    value: function getTotalTicks() {\n\t      return this.totalTicks;\n\t    }\n\t\n\t    // Get the total ticks used in the voice by all the tickables\n\t\n\t  }, {\n\t    key: 'getTicksUsed',\n\t    value: function getTicksUsed() {\n\t      return this.ticksUsed;\n\t    }\n\t\n\t    // Get the largest width of all the tickables\n\t\n\t  }, {\n\t    key: 'getLargestTickWidth',\n\t    value: function getLargestTickWidth() {\n\t      return this.largestTickWidth;\n\t    }\n\t\n\t    // Get the tick count for the shortest tickable\n\t\n\t  }, {\n\t    key: 'getSmallestTickCount',\n\t    value: function getSmallestTickCount() {\n\t      return this.smallestTickCount;\n\t    }\n\t\n\t    // Get the tickables in the voice\n\t\n\t  }, {\n\t    key: 'getTickables',\n\t    value: function getTickables() {\n\t      return this.tickables;\n\t    }\n\t\n\t    // Get/set the voice mode, use a value from `Voice.Mode`\n\t\n\t  }, {\n\t    key: 'getMode',\n\t    value: function getMode() {\n\t      return this.mode;\n\t    }\n\t  }, {\n\t    key: 'setMode',\n\t    value: function setMode(mode) {\n\t      this.mode = mode;return this;\n\t    }\n\t\n\t    // Get the resolution multiplier for the voice\n\t\n\t  }, {\n\t    key: 'getResolutionMultiplier',\n\t    value: function getResolutionMultiplier() {\n\t      return this.resolutionMultiplier;\n\t    }\n\t\n\t    // Get the actual tick resolution for the voice\n\t\n\t  }, {\n\t    key: 'getActualResolution',\n\t    value: function getActualResolution() {\n\t      return this.resolutionMultiplier * this.time.resolution;\n\t    }\n\t\n\t    // Set the voice's stave\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t      this.boundingBox = null; // Reset bounding box so we can reformat\n\t      return this;\n\t    }\n\t\n\t    // Get the bounding box for the voice\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      var stave = void 0;\n\t      var boundingBox = void 0;\n\t      var bb = void 0;\n\t      var i = void 0;\n\t\n\t      if (!this.boundingBox) {\n\t        if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n\t        stave = this.stave;\n\t        boundingBox = null;\n\t\n\t        for (i = 0; i < this.tickables.length; ++i) {\n\t          this.tickables[i].setStave(stave);\n\t\n\t          bb = this.tickables[i].getBoundingBox();\n\t          if (!bb) continue;\n\t\n\t          boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n\t        }\n\t\n\t        this.boundingBox = boundingBox;\n\t      }\n\t      return this.boundingBox;\n\t    }\n\t\n\t    // Every tickable must be associated with a voiceGroup. This allows formatters\n\t    // and preformatters to associate them with the right modifierContexts.\n\t\n\t  }, {\n\t    key: 'getVoiceGroup',\n\t    value: function getVoiceGroup() {\n\t      if (!this.voiceGroup) {\n\t        throw new _vex.Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n\t      }\n\t\n\t      return this.voiceGroup;\n\t    }\n\t\n\t    // Set the voice group\n\t\n\t  }, {\n\t    key: 'setVoiceGroup',\n\t    value: function setVoiceGroup(g) {\n\t      this.voiceGroup = g;return this;\n\t    }\n\t\n\t    // Set the voice mode to strict or soft\n\t\n\t  }, {\n\t    key: 'setStrict',\n\t    value: function setStrict(strict) {\n\t      this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n\t      return this;\n\t    }\n\t\n\t    // Determine if the voice is complete according to the voice mode\n\t\n\t  }, {\n\t    key: 'isComplete',\n\t    value: function isComplete() {\n\t      if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n\t        return this.ticksUsed.equals(this.totalTicks);\n\t      } else {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    // Add a tickable to the voice\n\t\n\t  }, {\n\t    key: 'addTickable',\n\t    value: function addTickable(tickable) {\n\t      if (!tickable.shouldIgnoreTicks()) {\n\t        var ticks = tickable.getTicks();\n\t\n\t        // Update the total ticks for this line.\n\t        this.ticksUsed.add(ticks);\n\t\n\t        if ((this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) && this.ticksUsed.greaterThan(this.totalTicks)) {\n\t          this.totalTicks.subtract(ticks);\n\t          throw new _vex.Vex.RERR('BadArgument', 'Too many ticks.');\n\t        }\n\t\n\t        // Track the smallest tickable for formatting.\n\t        if (ticks.lessThan(this.smallestTickCount)) {\n\t          this.smallestTickCount = ticks.clone();\n\t        }\n\t\n\t        this.resolutionMultiplier = this.ticksUsed.denominator;\n\t\n\t        // Expand total ticks using denominator from ticks used.\n\t        this.totalTicks.add(0, this.ticksUsed.denominator);\n\t      }\n\t\n\t      // Add the tickable to the line.\n\t      this.tickables.push(tickable);\n\t      tickable.setVoice(this);\n\t      return this;\n\t    }\n\t\n\t    // Add an array of tickables to the voice.\n\t\n\t  }, {\n\t    key: 'addTickables',\n\t    value: function addTickables(tickables) {\n\t      for (var i = 0; i < tickables.length; ++i) {\n\t        this.addTickable(tickables[i]);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Preformats the voice by applying the voice's stave to each note.\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this2 = this;\n\t\n\t      if (this.preFormatted) return this;\n\t\n\t      this.tickables.forEach(function (tickable) {\n\t        if (!tickable.getStave()) {\n\t          tickable.setStave(_this2.stave);\n\t        }\n\t      });\n\t\n\t      this.preFormatted = true;\n\t      return this;\n\t    }\n\t\n\t    // Render the voice onto the canvas `context` and an optional `stave`.\n\t    // If `stave` is omitted, it is expected that the notes have staves\n\t    // already set.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var context = arguments.length <= 0 || arguments[0] === undefined ? this.context : arguments[0];\n\t      var stave = arguments.length <= 1 || arguments[1] === undefined ? this.stave : arguments[1];\n\t\n\t      this.setRendered();\n\t      var boundingBox = null;\n\t      for (var i = 0; i < this.tickables.length; ++i) {\n\t        var tickable = this.tickables[i];\n\t\n\t        // Set the stave if provided\n\t        if (stave) tickable.setStave(stave);\n\t\n\t        if (!tickable.getStave()) {\n\t          throw new _vex.Vex.RuntimeError('MissingStave', 'The voice cannot draw tickables without staves.');\n\t        }\n\t\n\t        if (i === 0) boundingBox = tickable.getBoundingBox();\n\t\n\t        if (i > 0 && boundingBox) {\n\t          var tickable_bb = tickable.getBoundingBox();\n\t          if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n\t        }\n\t\n\t        tickable.setContext(context);\n\t        tickable.draw();\n\t      }\n\t\n\t      this.boundingBox = boundingBox;\n\t    }\n\t  }]);\n\n\t  return Voice;\n\t}(_element.Element);\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveConnector = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n\t  if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n\t    throw new _vex.Vex.RERR('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n\t  }\n\t\n\t  var x_shift = 3;\n\t  var variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n\t  var thickLineOffset = 2; // For aesthetics\n\t\n\t  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n\t    x_shift = -5; // Flips the side of the thin line\n\t    variableWidth = 3;\n\t  }\n\t\n\t  // Thin line\n\t  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n\t  // Thick line\n\t  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n\t}\n\t\n\tvar StaveConnector = exports.StaveConnector = function (_Element) {\n\t  _inherits(StaveConnector, _Element);\n\t\n\t  _createClass(StaveConnector, null, [{\n\t    key: 'type',\n\t\n\t    // SINGLE_LEFT and SINGLE are the same value for compatibility\n\t    // with older versions of vexflow which didn't have right sided\n\t    // stave connectors\n\t    get: function get() {\n\t      return {\n\t        SINGLE_RIGHT: 0,\n\t        SINGLE_LEFT: 1,\n\t        SINGLE: 1,\n\t        DOUBLE: 2,\n\t        BRACE: 3,\n\t        BRACKET: 4,\n\t        BOLD_DOUBLE_LEFT: 5,\n\t        BOLD_DOUBLE_RIGHT: 6,\n\t        THIN_DOUBLE: 7,\n\t        NONE: 8\n\t      };\n\t    }\n\t  }, {\n\t    key: 'typeString',\n\t    get: function get() {\n\t      return {\n\t        singleRight: StaveConnector.type.SINGLE_RIGHT,\n\t        singleLeft: StaveConnector.type.SINGLE_LEFT,\n\t        single: StaveConnector.type.SINGLE,\n\t        double: StaveConnector.type.DOUBLE,\n\t        brace: StaveConnector.type.BRACE,\n\t        bracket: StaveConnector.type.BRACKET,\n\t        boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n\t        boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n\t        thinDouble: StaveConnector.type.THIN_DOUBLE,\n\t        none: StaveConnector.type.NONE\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveConnector(top_stave, bottom_stave) {\n\t    _classCallCheck(this, StaveConnector);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveConnector.__proto__ || Object.getPrototypeOf(StaveConnector)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveConnector');\n\t\n\t    _this.thickness = _tables.Flow.STAVE_LINE_THICKNESS;\n\t    _this.width = 3;\n\t    _this.top_stave = top_stave;\n\t    _this.bottom_stave = bottom_stave;\n\t    _this.type = StaveConnector.type.DOUBLE;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 16,\n\t      weight: 'normal'\n\t    };\n\t    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n\t    // 2. Offset BRACE type not to overlap with another StaveConnector\n\t    _this.x_shift = 0;\n\t    _this.texts = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveConnector, [{\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      type = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n\t\n\t      if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n\t        this.type = type;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text, options) {\n\t      this.texts.push({\n\t        content: text,\n\t        options: _vex.Vex.Merge({ shift_x: 0, shift_y: 0 }, options)\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      _vex.Vex.Merge(this.font, font);\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x_shift) {\n\t      if (typeof x_shift !== 'number') {\n\t        throw _vex.Vex.RERR('InvalidType', 'x_shift must be a Number');\n\t      }\n\t\n\t      this.x_shift = x_shift;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      var topY = this.top_stave.getYForLine(0);\n\t      var botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n\t      var width = this.width;\n\t      var topX = this.top_stave.getX();\n\t\n\t      var isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT || this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT || this.type === StaveConnector.type.THIN_DOUBLE;\n\t\n\t      if (isRightSidedConnector) {\n\t        topX = this.top_stave.getX() + this.top_stave.width;\n\t      }\n\t\n\t      var attachment_height = botY - topY;\n\t      switch (this.type) {\n\t        case StaveConnector.type.SINGLE:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.SINGLE_LEFT:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.SINGLE_RIGHT:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.DOUBLE:\n\t          topX -= this.width + 2;\n\t          break;\n\t        case StaveConnector.type.BRACE:\n\t          {\n\t            width = 12;\n\t            // May need additional code to draw brace\n\t            var x1 = this.top_stave.getX() - 2 + this.x_shift;\n\t            var y1 = topY;\n\t            var x3 = x1;\n\t            var y3 = botY;\n\t            var x2 = x1 - width;\n\t            var y2 = y1 + attachment_height / 2.0;\n\t            var cpx1 = x2 - 0.90 * width;\n\t            var cpy1 = y1 + 0.2 * attachment_height;\n\t            var cpx2 = x1 + 1.10 * width;\n\t            var cpy2 = y2 - 0.135 * attachment_height;\n\t            var cpx3 = cpx2;\n\t            var cpy3 = y2 + 0.135 * attachment_height;\n\t            var cpx4 = cpx1;\n\t            var cpy4 = y3 - 0.2 * attachment_height;\n\t            var cpx5 = x2 - width;\n\t            var cpy5 = cpy4;\n\t            var cpx6 = x1 + 0.40 * width;\n\t            var cpy6 = y2 + 0.135 * attachment_height;\n\t            var cpx7 = cpx6;\n\t            var cpy7 = y2 - 0.135 * attachment_height;\n\t            var cpx8 = cpx5;\n\t            var cpy8 = cpy1;\n\t            ctx.beginPath();\n\t            ctx.moveTo(x1, y1);\n\t            ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n\t            ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n\t            ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n\t            ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n\t            ctx.fill();\n\t            ctx.stroke();\n\t            break;\n\t          }case StaveConnector.type.BRACKET:\n\t          topY -= 4;\n\t          botY += 4;\n\t          attachment_height = botY - topY;\n\t          _glyph.Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n\t          _glyph.Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n\t          topX -= this.width + 2;\n\t          break;\n\t        case StaveConnector.type.BOLD_DOUBLE_LEFT:\n\t          drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n\t          break;\n\t        case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n\t          drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n\t          break;\n\t        case StaveConnector.type.THIN_DOUBLE:\n\t          width = 1;\n\t          break;\n\t        case StaveConnector.type.NONE:\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidType', 'The provided StaveConnector.type (' + this.type + ') is invalid');\n\t      }\n\t\n\t      if (this.type !== StaveConnector.type.BRACE && this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT && this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT && this.type !== StaveConnector.type.NONE) {\n\t        ctx.fillRect(topX, topY, width, attachment_height);\n\t      }\n\t\n\t      // If the connector is a thin double barline, draw the paralell line\n\t      if (this.type === StaveConnector.type.THIN_DOUBLE) {\n\t        ctx.fillRect(topX - 3, topY, width, attachment_height);\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      // Add stave connector text\n\t      for (var i = 0; i < this.texts.length; i++) {\n\t        var text = this.texts[i];\n\t        var text_width = ctx.measureText('' + text.content).width;\n\t        var x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n\t        var y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n\t\n\t        ctx.fillText('' + text.content, x, y + 4);\n\t      }\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return StaveConnector;\n\t}(_element.Element);\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveNote = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _notehead = __webpack_require__(21);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements notes for standard notation. This consists of one or\n\t// more `NoteHeads`, an optional stem, and an optional flag.\n\t//\n\t// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n\t// and a \"key\" refers to a specific pitch/notehead within a note.*\n\t//\n\t// See `tests/stavenote_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (StaveNote.DEBUG) _vex.Vex.L('Vex.Flow.StaveNote', args);\n\t}\n\t\n\tvar getStemAdjustment = function getStemAdjustment(note) {\n\t  return _stem.Stem.WIDTH / (2 * -note.getStemDirection());\n\t};\n\t\n\tvar isInnerNoteIndex = function isInnerNoteIndex(note, index) {\n\t  return index === (note.getStemDirection() === _stem.Stem.UP ? note.keyProps.length - 1 : 0);\n\t};\n\t\n\t// Helper methods for rest positioning in ModifierContext.\n\tfunction shiftRestVertical(rest, note, dir) {\n\t  var delta = (note.isrest ? 0.0 : 1.0) * dir;\n\t\n\t  rest.line += delta;\n\t  rest.maxLine += delta;\n\t  rest.minLine += delta;\n\t  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n\t}\n\t\n\t// Called from formatNotes :: center a rest between two notes\n\tfunction centerRest(rest, noteU, noteL) {\n\t  var delta = rest.line - _vex.Vex.MidLine(noteU.minLine, noteL.maxLine);\n\t  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n\t  rest.line -= delta;\n\t  rest.maxLine -= delta;\n\t  rest.minLine -= delta;\n\t}\n\t\n\tvar StaveNote = exports.StaveNote = function (_StemmableNote) {\n\t  _inherits(StaveNote, _StemmableNote);\n\t\n\t  _createClass(StaveNote, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    //\n\t    // Format notes inside a ModifierContext.\n\t    value: function format(notes, state) {\n\t      if (!notes || notes.length < 2) return false;\n\t\n\t      // FIXME: VexFlow will soon require that a stave be set before formatting.\n\t      // Which, according to the below condition, means that following branch will\n\t      // always be taken and the rest of this function is dead code.\n\t      //\n\t      // Problematically, `Formatter#formatByY` was not designed to work for more\n\t      // than 2 voices (although, doesn't throw on this condition, just tries\n\t      // to power through).\n\t      //\n\t      // Based on the above:\n\t      //   * 2 voices can be formatted *with or without* a stave being set but\n\t      //     the output will be different\n\t      //   * 3 voices can only be formatted *without* a stave\n\t      if (notes[0].getStave()) {\n\t        return StaveNote.formatByY(notes, state);\n\t      }\n\t\n\t      var notesList = [];\n\t\n\t      for (var i = 0; i < notes.length; i++) {\n\t        var props = notes[i].getKeyProps();\n\t        var line = props[0].line;\n\t        var minL = props[props.length - 1].line;\n\t        var stemDirection = notes[i].getStemDirection();\n\t        var stemMax = notes[i].getStemLength() / 10;\n\t        var stemMin = notes[i].getStemMinumumLength() / 10;\n\t\n\t        var maxL = void 0;\n\t        if (notes[i].isRest()) {\n\t          maxL = line + notes[i].glyph.line_above;\n\t          minL = line - notes[i].glyph.line_below;\n\t        } else {\n\t          maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n\t\n\t          minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n\t        }\n\t\n\t        notesList.push({\n\t          line: props[0].line, // note/rest base line\n\t          maxLine: maxL, // note/rest upper bounds line\n\t          minLine: minL, // note/rest lower bounds line\n\t          isrest: notes[i].isRest(),\n\t          stemDirection: stemDirection,\n\t          stemMax: stemMax, // Maximum (default) note stem length;\n\t          stemMin: stemMin, // minimum note stem length\n\t          voice_shift: notes[i].getVoiceShiftWidth(),\n\t          is_displaced: notes[i].isDisplaced(), // note manually displaced\n\t          note: notes[i]\n\t        });\n\t      }\n\t\n\t      var voices = notesList.length;\n\t\n\t      var noteU = notesList[0];\n\t      var noteM = voices > 2 ? notesList[1] : null;\n\t      var noteL = voices > 2 ? notesList[2] : notesList[1];\n\t\n\t      // for two voice backward compatibility, ensure upper voice is stems up\n\t      // for three voices, the voices must be in order (upper, middle, lower)\n\t      if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n\t        noteU = notesList[1];\n\t        noteL = notesList[0];\n\t      }\n\t\n\t      var voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n\t      var xShift = 0;\n\t      var stemDelta = void 0;\n\t\n\t      // Test for two voice note intersection\n\t      if (voices === 2) {\n\t        var lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n\t        // if top voice is a middle voice, check stem intersection with lower voice\n\t        if (noteU.stemDirection === noteL.stemDirection && noteU.minLine <= noteL.maxLine) {\n\t          if (!noteU.isrest) {\n\t            stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n\t            stemDelta = Math.max(stemDelta, noteU.stemMin);\n\t            noteU.minLine = noteU.line - stemDelta;\n\t            noteU.note.setStemLength(stemDelta * 10);\n\t          }\n\t        }\n\t        if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n\t          if (noteU.isrest) {\n\t            // shift rest up\n\t            shiftRestVertical(noteU, noteL, 1);\n\t          } else if (noteL.isrest) {\n\t            // shift rest down\n\t            shiftRestVertical(noteL, noteU, -1);\n\t          } else {\n\t            xShift = voiceXShift;\n\t            if (noteU.stemDirection === noteL.stemDirection) {\n\t              // upper voice is middle voice, so shift it right\n\t              noteU.note.setXShift(xShift + 3);\n\t            } else {\n\t              // shift lower voice right\n\t              noteL.note.setXShift(xShift);\n\t            }\n\t          }\n\t        }\n\t\n\t        // format complete\n\t        return true;\n\t      }\n\t\n\t      // Check middle voice stem intersection with lower voice\n\t      if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n\t        if (!noteM.isrest) {\n\t          stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n\t          stemDelta = Math.max(stemDelta, noteM.stemMin);\n\t          noteM.minLine = noteM.line - stemDelta;\n\t          noteM.note.setStemLength(stemDelta * 10);\n\t        }\n\t      }\n\t\n\t      // For three voices, test if rests can be repositioned\n\t      //\n\t      // Special case 1 :: middle voice rest between two notes\n\t      //\n\t      if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n\t        if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n\t          var restHeight = noteM.maxLine - noteM.minLine;\n\t          var space = noteU.minLine - noteL.maxLine;\n\t          if (restHeight < space) {\n\t            // center middle voice rest between the upper and lower voices\n\t            centerRest(noteM, noteU, noteL);\n\t          } else {\n\t            xShift = voiceXShift + 3; // shift middle rest right\n\t            noteM.note.setXShift(xShift);\n\t          }\n\t          // format complete\n\t          return true;\n\t        }\n\t      }\n\t\n\t      // Special case 2 :: all voices are rests\n\t      if (noteU.isrest && noteM.isrest && noteL.isrest) {\n\t        // Shift upper voice rest up\n\t        shiftRestVertical(noteU, noteM, 1);\n\t        // Shift lower voice rest down\n\t        shiftRestVertical(noteL, noteM, -1);\n\t        // format complete\n\t        return true;\n\t      }\n\t\n\t      // Test if any other rests can be repositioned\n\t      if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n\t        // Shift middle voice rest up\n\t        shiftRestVertical(noteM, noteL, 1);\n\t      }\n\t      if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n\t        // Shift middle voice rest down\n\t        shiftRestVertical(noteM, noteU, -1);\n\t      }\n\t      if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n\t        // shift upper voice rest up;\n\t        shiftRestVertical(noteU, noteM, 1);\n\t      }\n\t      if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n\t        // shift lower voice rest down\n\t        shiftRestVertical(noteL, noteM, -1);\n\t      }\n\t\n\t      // If middle voice intersects upper or lower voice\n\t      if (!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5 || !noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine) {\n\t        xShift = voiceXShift + 3; // shift middle note right\n\t        noteM.note.setXShift(xShift);\n\t      }\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'formatByY',\n\t    value: function formatByY(notes, state) {\n\t      // NOTE: this function does not support more than two voices per stave\n\t      // use with care.\n\t      var hasStave = true;\n\t\n\t      for (var i = 0; i < notes.length; i++) {\n\t        hasStave = hasStave && notes[i].getStave() != null;\n\t      }\n\t\n\t      if (!hasStave) {\n\t        throw new _vex.Vex.RERR('Stave Missing', 'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!');\n\t      }\n\t\n\t      var xShift = 0;\n\t\n\t      for (var _i = 0; _i < notes.length - 1; _i++) {\n\t        var topNote = notes[_i];\n\t        var bottomNote = notes[_i + 1];\n\t\n\t        if (topNote.getStemDirection() === _stem.Stem.DOWN) {\n\t          topNote = notes[_i + 1];\n\t          bottomNote = notes[_i];\n\t        }\n\t\n\t        var topKeys = topNote.getKeyProps();\n\t        var bottomKeys = bottomNote.getKeyProps();\n\t\n\t        var HALF_NOTEHEAD_HEIGHT = 0.5;\n\t\n\t        // `keyProps` and `stave.getYForLine` have different notions of a `line`\n\t        // so we have to convert the keyProps value by subtracting 5.\n\t        // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n\t        //\n\t        // We also extend the y for each note by a half notehead because the\n\t        // notehead's origin is centered\n\t        var topNotBottomY = topNote.getStave().getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\t\n\t        var bottomNoteTopY = bottomNote.getStave().getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\t\n\t        var areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\t\n\t        if (areNotesColliding) {\n\t          xShift = topNote.getVoiceShiftWidth() + 2;\n\t          bottomNote.setXShift(xShift);\n\t        }\n\t      }\n\t\n\t      state.right_shift += xShift;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat(notes) {\n\t      if (!notes) return false;\n\t\n\t      notes.forEach(function (note) {\n\t        return note.postFormat();\n\t      });\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavenotes';\n\t    }\n\t  }, {\n\t    key: 'STEM_UP',\n\t    get: function get() {\n\t      return _stem.Stem.UP;\n\t    }\n\t  }, {\n\t    key: 'STEM_DOWN',\n\t    get: function get() {\n\t      return _stem.Stem.DOWN;\n\t    }\n\t  }, {\n\t    key: 'DEFAULT_LEDGER_LINE_OFFSET',\n\t    get: function get() {\n\t      return 3;\n\t    }\n\t  }]);\n\t\n\t  function StaveNote(noteStruct) {\n\t    _classCallCheck(this, StaveNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveNote.__proto__ || Object.getPrototypeOf(StaveNote)).call(this, noteStruct));\n\t\n\t    _this.setAttribute('type', 'StaveNote');\n\t\n\t    _this.keys = noteStruct.keys;\n\t    _this.clef = noteStruct.clef;\n\t    _this.octave_shift = noteStruct.octave_shift;\n\t    _this.beam = null;\n\t\n\t    // Pull note rendering properties\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(noteStruct));\n\t    }\n\t\n\t    // if true, displace note to right\n\t    _this.displaced = false;\n\t    _this.dot_shiftY = 0;\n\t    // per-pitch properties\n\t    _this.keyProps = [];\n\t    // for displaced ledger lines\n\t    _this.use_default_head_x = false;\n\t\n\t    // Drawing\n\t    _this.note_heads = [];\n\t    _this.modifiers = [];\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads and rests\n\t      glyph_font_scale: noteStruct.glyph_font_scale || _tables.Flow.DEFAULT_NOTATION_FONT_SCALE,\n\t      // number of stroke px to the left and right of head\n\t      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET\n\t    });\n\t\n\t    _this.calculateKeyProps();\n\t    _this.buildStem();\n\t\n\t    // Set the stem direction\n\t    if (noteStruct.auto_stem) {\n\t      _this.autoStem();\n\t    } else {\n\t      _this.setStemDirection(noteStruct.stem_direction);\n\t    }\n\t    _this.reset();\n\t    _this.buildFlag();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveNote, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var _this2 = this;\n\t\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'reset', this).call(this);\n\t\n\t      // Save prior noteHead styles & reapply them after making new noteheads.\n\t      var noteHeadStyles = this.note_heads.map(function (noteHead) {\n\t        return noteHead.getStyle();\n\t      });\n\t      this.buildNoteHeads();\n\t      this.note_heads.forEach(function (noteHead, index) {\n\t        return noteHead.setStyle(noteHeadStyles[index]);\n\t      });\n\t\n\t      if (this.stave) {\n\t        this.note_heads.forEach(function (head) {\n\t          return head.setStave(_this2.stave);\n\t        });\n\t      }\n\t      this.calcExtraPx();\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveNote.CATEGORY;\n\t    }\n\t\n\t    // Builds a `Stem` for the note\n\t\n\t  }, {\n\t    key: 'buildStem',\n\t    value: function buildStem() {\n\t      var glyph = this.getGlyph();\n\t      var yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\t\n\t      this.setStem(new _stem.Stem({\n\t        yExtend: yExtend,\n\t        hide: !!this.isRest()\n\t      }));\n\t    }\n\t\n\t    // Builds a `NoteHead` for each key in the note\n\t\n\t  }, {\n\t    key: 'buildNoteHeads',\n\t    value: function buildNoteHeads() {\n\t      this.note_heads = [];\n\t      var stemDirection = this.getStemDirection();\n\t      var keys = this.getKeys();\n\t\n\t      var lastLine = null;\n\t      var lineDiff = null;\n\t      var displaced = false;\n\t\n\t      // Draw notes from bottom to top.\n\t\n\t      // For down-stem notes, we draw from top to bottom.\n\t      var start = void 0;\n\t      var end = void 0;\n\t      var step = void 0;\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        start = 0;\n\t        end = keys.length;\n\t        step = 1;\n\t      } else if (stemDirection === _stem.Stem.DOWN) {\n\t        start = keys.length - 1;\n\t        end = -1;\n\t        step = -1;\n\t      }\n\t\n\t      for (var i = start; i !== end; i += step) {\n\t        var noteProps = this.keyProps[i];\n\t        var line = noteProps.line;\n\t\n\t        // Keep track of last line with a note head, so that consecutive heads\n\t        // are correctly displaced.\n\t        if (lastLine === null) {\n\t          lastLine = line;\n\t        } else {\n\t          lineDiff = Math.abs(lastLine - line);\n\t          if (lineDiff === 0 || lineDiff === 0.5) {\n\t            displaced = !displaced;\n\t          } else {\n\t            displaced = false;\n\t            this.use_default_head_x = true;\n\t          }\n\t        }\n\t        lastLine = line;\n\t\n\t        var notehead = new _notehead.NoteHead({\n\t          duration: this.duration,\n\t          note_type: this.noteType,\n\t          displaced: displaced,\n\t          stem_direction: stemDirection,\n\t          custom_glyph_code: noteProps.code,\n\t          glyph_font_scale: this.render_options.glyph_font_scale,\n\t          x_shift: noteProps.shift_right,\n\t          line: noteProps.line\n\t        });\n\t\n\t        this.note_heads[i] = notehead;\n\t      }\n\t    }\n\t\n\t    // Automatically sets the stem direction based on the keys in the note\n\t\n\t  }, {\n\t    key: 'autoStem',\n\t    value: function autoStem() {\n\t      // Figure out optimal stem direction based on given notes\n\t      this.minLine = this.keyProps[0].line;\n\t      this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\t\n\t      var MIDDLE_LINE = 3;\n\t      var decider = (this.minLine + this.maxLine) / 2;\n\t      var stemDirection = decider < MIDDLE_LINE ? _stem.Stem.UP : _stem.Stem.DOWN;\n\t\n\t      this.setStemDirection(stemDirection);\n\t    }\n\t\n\t    // Calculates and stores the properties for each key in the note\n\t\n\t  }, {\n\t    key: 'calculateKeyProps',\n\t    value: function calculateKeyProps() {\n\t      var lastLine = null;\n\t      for (var i = 0; i < this.keys.length; ++i) {\n\t        var key = this.keys[i];\n\t\n\t        // All rests use the same position on the line.\n\t        // if (this.glyph.rest) key = this.glyph.position;\n\t        if (this.glyph.rest) this.glyph.position = key;\n\t\n\t        var options = { octave_shift: this.octave_shift || 0 };\n\t        var props = _tables.Flow.keyProperties(key, this.clef, options);\n\t\n\t        if (!props) {\n\t          throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid key for note properties: ' + key);\n\t        }\n\t\n\t        // Override line placement for default rests\n\t        if (props.key === 'R') {\n\t          if (this.duration === '1' || this.duration === 'w') {\n\t            props.line = 4;\n\t          } else {\n\t            props.line = 3;\n\t          }\n\t        }\n\t\n\t        // Calculate displacement of this note\n\t        var line = props.line;\n\t        if (lastLine === null) {\n\t          lastLine = line;\n\t        } else {\n\t          if (Math.abs(lastLine - line) === 0.5) {\n\t            this.displaced = true;\n\t            props.displaced = true;\n\t\n\t            // Have to mark the previous note as\n\t            // displaced as well, for modifier placement\n\t            if (this.keyProps.length > 0) {\n\t              this.keyProps[i - 1].displaced = true;\n\t            }\n\t          }\n\t        }\n\t\n\t        lastLine = line;\n\t        this.keyProps.push(props);\n\t      }\n\t\n\t      // Sort the notes from lowest line to highest line\n\t      lastLine = -Infinity;\n\t      this.keyProps.forEach(function (key) {\n\t        if (key.line < lastLine) {\n\t          _vex.Vex.W('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n\t        }\n\t        lastLine = key.line;\n\t      });\n\t      this.keyProps.sort(function (a, b) {\n\t        return a.line - b.line;\n\t      });\n\t    }\n\t\n\t    // Get the `BoundingBox` for the entire note\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n\t      }\n\t\n\t      var _getMetrics = this.getMetrics();\n\t\n\t      var w = _getMetrics.width;\n\t      var modLeftPx = _getMetrics.modLeftPx;\n\t      var extraLeftPx = _getMetrics.extraLeftPx;\n\t\n\t      var x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\t\n\t      var minY = 0;\n\t      var maxY = 0;\n\t      var halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n\t      var lineSpacing = halfLineSpacing * 2;\n\t\n\t      if (this.isRest()) {\n\t        var y = this.ys[0];\n\t        var frac = _tables.Flow.durationToFraction(this.duration);\n\t        if (frac.equals(1) || frac.equals(2)) {\n\t          minY = y - halfLineSpacing;\n\t          maxY = y + halfLineSpacing;\n\t        } else {\n\t          minY = y - this.glyph.line_above * lineSpacing;\n\t          maxY = y + this.glyph.line_below * lineSpacing;\n\t        }\n\t      } else if (this.glyph.stem) {\n\t        var ys = this.getStemExtents();\n\t        ys.baseY += halfLineSpacing * this.stem_direction;\n\t        minY = Math.min(ys.topY, ys.baseY);\n\t        maxY = Math.max(ys.topY, ys.baseY);\n\t      } else {\n\t        minY = null;\n\t        maxY = null;\n\t\n\t        for (var i = 0; i < this.ys.length; ++i) {\n\t          var yy = this.ys[i];\n\t          if (i === 0) {\n\t            minY = yy;\n\t            maxY = yy;\n\t          } else {\n\t            minY = Math.min(yy, minY);\n\t            maxY = Math.max(yy, maxY);\n\t          }\n\t        }\n\t        minY -= halfLineSpacing;\n\t        maxY += halfLineSpacing;\n\t      }\n\t\n\t      return new _boundingbox.BoundingBox(x, minY, w, maxY - minY);\n\t    }\n\t\n\t    // Gets the line number of the top or bottom note in the chord.\n\t    // If `isTopNote` is `true` then get the top note\n\t\n\t  }, {\n\t    key: 'getLineNumber',\n\t    value: function getLineNumber(isTopNote) {\n\t      if (!this.keyProps.length) {\n\t        throw new _vex.Vex.RERR('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n\t      }\n\t\n\t      var resultLine = this.keyProps[0].line;\n\t\n\t      // No precondition assumed for sortedness of keyProps array\n\t      for (var i = 0; i < this.keyProps.length; i++) {\n\t        var thisLine = this.keyProps[i].line;\n\t        if (isTopNote) {\n\t          if (thisLine > resultLine) resultLine = thisLine;\n\t        } else {\n\t          if (thisLine < resultLine) resultLine = thisLine;\n\t        }\n\t      }\n\t\n\t      return resultLine;\n\t    }\n\t\n\t    // Determine if current note is a rest\n\t\n\t  }, {\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return this.glyph.rest;\n\t    }\n\t\n\t    // Determine if the current note is a chord\n\t\n\t  }, {\n\t    key: 'isChord',\n\t    value: function isChord() {\n\t      return !this.isRest() && this.keys.length > 1;\n\t    }\n\t\n\t    // Determine if the `StaveNote` has a stem\n\t\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return this.glyph.stem;\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag() {\n\t      return _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'hasFlag', this).call(this) && !this.isRest();\n\t    }\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      if (this.noteType === 'r') {\n\t        return this.getCenterGlyphX();\n\t      } else {\n\t        // We adjust the origin of the stem because we want the stem left-aligned\n\t        // with the notehead if stemmed-down, and right-aligned if stemmed-up\n\t        return _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'getStemX', this).call(this) + getStemAdjustment(this);\n\t      }\n\t    }\n\t\n\t    // Get the `y` coordinate for text placed on the top/bottom of a\n\t    // note at a desired `text_line`\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      return Math.min(this.stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      return Math.max(this.stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n\t    }\n\t\n\t    // Sets the current note to the provided `stave`. This applies\n\t    // `y` values to the `NoteHeads`.\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'setStave', this).call(this, stave);\n\t\n\t      var ys = this.note_heads.map(function (notehead) {\n\t        notehead.setStave(stave);\n\t        return notehead.getY();\n\t      });\n\t\n\t      this.setYs(ys);\n\t\n\t      if (this.stem) {\n\t        var _getNoteHeadBounds = this.getNoteHeadBounds();\n\t\n\t        var y_top = _getNoteHeadBounds.y_top;\n\t        var y_bottom = _getNoteHeadBounds.y_bottom;\n\t\n\t        this.stem.setYBounds(y_top, y_bottom);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Get the pitches in the note\n\t\n\t  }, {\n\t    key: 'getKeys',\n\t    value: function getKeys() {\n\t      return this.keys;\n\t    }\n\t\n\t    // Get the properties for all the keys in the note\n\t\n\t  }, {\n\t    key: 'getKeyProps',\n\t    value: function getKeyProps() {\n\t      return this.keyProps;\n\t    }\n\t\n\t    // Check if note is shifted to the right\n\t\n\t  }, {\n\t    key: 'isDisplaced',\n\t    value: function isDisplaced() {\n\t      return this.displaced;\n\t    }\n\t\n\t    // Sets whether shift note to the right. `displaced` is a `boolean`\n\t\n\t  }, {\n\t    key: 'setNoteDisplaced',\n\t    value: function setNoteDisplaced(displaced) {\n\t      this.displaced = displaced;\n\t      return this;\n\t    }\n\t\n\t    // Get the starting `x` coordinate for a `StaveTie`\n\t\n\t  }, {\n\t    key: 'getTieRightX',\n\t    value: function getTieRightX() {\n\t      var tieStartX = this.getAbsoluteX();\n\t      tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n\t      if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n\t      return tieStartX;\n\t    }\n\t\n\t    // Get the ending `x` coordinate for a `StaveTie`\n\t\n\t  }, {\n\t    key: 'getTieLeftX',\n\t    value: function getTieLeftX() {\n\t      var tieEndX = this.getAbsoluteX();\n\t      tieEndX += this.x_shift - this.extraLeftPx;\n\t      return tieEndX;\n\t    }\n\t\n\t    // Get the stave line on which to place a rest\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      var restLine = this.keyProps[0].line;\n\t      if (this.keyProps.length > 1) {\n\t        var lastLine = this.keyProps[this.keyProps.length - 1].line;\n\t        var top = Math.max(restLine, lastLine);\n\t        var bot = Math.min(restLine, lastLine);\n\t        restLine = _vex.Vex.MidLine(top, bot);\n\t      }\n\t\n\t      return restLine;\n\t    }\n\t\n\t    // Get the default `x` and `y` coordinates for the provided `position`\n\t    // and key `index`\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY(position, index) {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n\t      }\n\t\n\t      var _Modifier$Position = _modifier.Modifier.Position;\n\t      var ABOVE = _Modifier$Position.ABOVE;\n\t      var BELOW = _Modifier$Position.BELOW;\n\t      var LEFT = _Modifier$Position.LEFT;\n\t      var RIGHT = _Modifier$Position.RIGHT;\n\t\n\t      var x = 0;\n\t      if (position === LEFT) {\n\t        // extra_left_px\n\t        // FIXME: What are these magic numbers?\n\t        x = -1 * 2;\n\t      } else if (position === RIGHT) {\n\t        // extra_right_px\n\t        // FIXME: What is this magical +2?\n\t        x = this.getGlyphWidth() + this.x_shift + 2;\n\t\n\t        if (this.stem_direction === _stem.Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n\t          x += this.flag.getMetrics().width;\n\t        }\n\t      } else if (position === BELOW || position === ABOVE) {\n\t        x = this.getGlyphWidth() / 2;\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX() + x,\n\t        y: this.ys[index]\n\t      };\n\t    }\n\t\n\t    // Sets the style of the complete StaveNote, including all keys\n\t    // and the stem.\n\t\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      _get(StaveNote.prototype.__proto__ || Object.getPrototypeOf(StaveNote.prototype), 'setStyle', this).call(this, style);\n\t      this.note_heads.forEach(function (notehead) {\n\t        return notehead.setStyle(style);\n\t      });\n\t      this.stem.setStyle(style);\n\t    }\n\t  }, {\n\t    key: 'setStemStyle',\n\t    value: function setStemStyle(style) {\n\t      var stem = this.getStem();\n\t      stem.setStyle(style);\n\t    }\n\t  }, {\n\t    key: 'getStemStyle',\n\t    value: function getStemStyle() {\n\t      return this.stem.getStyle();\n\t    }\n\t  }, {\n\t    key: 'setLedgerLineStyle',\n\t    value: function setLedgerLineStyle(style) {\n\t      this.ledgerLineStyle = style;\n\t    }\n\t  }, {\n\t    key: 'getLedgerLineStyle',\n\t    value: function getLedgerLineStyle() {\n\t      return this.ledgerLineStyle;\n\t    }\n\t  }, {\n\t    key: 'setFlagStyle',\n\t    value: function setFlagStyle(style) {\n\t      this.flagStyle = style;\n\t    }\n\t  }, {\n\t    key: 'getFlagStyle',\n\t    value: function getFlagStyle() {\n\t      return this.flagStyle;\n\t    }\n\t\n\t    // Sets the notehead at `index` to the provided coloring `style`.\n\t    //\n\t    // `style` is an `object` with the following properties: `shadowColor`,\n\t    // `shadowBlur`, `fillStyle`, `strokeStyle`\n\t\n\t  }, {\n\t    key: 'setKeyStyle',\n\t    value: function setKeyStyle(index, style) {\n\t      this.note_heads[index].setStyle(style);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setKeyLine',\n\t    value: function setKeyLine(index, line) {\n\t      this.keyProps[index].line = line;\n\t      this.reset();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getKeyLine',\n\t    value: function getKeyLine(index) {\n\t      return this.keyProps[index].line;\n\t    }\n\t\n\t    // Add self to modifier context. `mContext` is the `ModifierContext`\n\t    // to be added to.\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mContext) {\n\t      this.setModifierContext(mContext);\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        this.modifierContext.addModifier(this.modifiers[i]);\n\t      }\n\t      this.modifierContext.addModifier(this);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Generic function to add modifiers to a note\n\t    //\n\t    // Parameters:\n\t    // * `index`: The index of the key that we're modifying\n\t    // * `modifier`: The modifier to add\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(index, modifier) {\n\t      modifier.setNote(this);\n\t      modifier.setIndex(index);\n\t      this.modifiers.push(modifier);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Helper function to add an accidental to a key\n\t\n\t  }, {\n\t    key: 'addAccidental',\n\t    value: function addAccidental(index, accidental) {\n\t      return this.addModifier(index, accidental);\n\t    }\n\t\n\t    // Helper function to add an articulation to a key\n\t\n\t  }, {\n\t    key: 'addArticulation',\n\t    value: function addArticulation(index, articulation) {\n\t      return this.addModifier(index, articulation);\n\t    }\n\t\n\t    // Helper function to add an annotation to a key\n\t\n\t  }, {\n\t    key: 'addAnnotation',\n\t    value: function addAnnotation(index, annotation) {\n\t      return this.addModifier(index, annotation);\n\t    }\n\t\n\t    // Helper function to add a dot on a specific key\n\t\n\t  }, {\n\t    key: 'addDot',\n\t    value: function addDot(index) {\n\t      var dot = new _dot.Dot();\n\t      dot.setDotShiftY(this.glyph.dot_shiftY);\n\t      this.dots++;\n\t      return this.addModifier(index, dot);\n\t    }\n\t\n\t    // Convenience method to add dot to all keys in note\n\t\n\t  }, {\n\t    key: 'addDotToAll',\n\t    value: function addDotToAll() {\n\t      for (var i = 0; i < this.keys.length; ++i) {\n\t        this.addDot(i);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Get all accidentals in the `ModifierContext`\n\t\n\t  }, {\n\t    key: 'getAccidentals',\n\t    value: function getAccidentals() {\n\t      return this.modifierContext.getModifiers('accidentals');\n\t    }\n\t\n\t    // Get all dots in the `ModifierContext`\n\t\n\t  }, {\n\t    key: 'getDots',\n\t    value: function getDots() {\n\t      return this.modifierContext.getModifiers('dots');\n\t    }\n\t\n\t    // Get the width of the note if it is displaced. Used for `Voice`\n\t    // formatting\n\t\n\t  }, {\n\t    key: 'getVoiceShiftWidth',\n\t    value: function getVoiceShiftWidth() {\n\t      // TODO: may need to accomodate for dot here.\n\t      return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n\t    }\n\t\n\t    // Calculates and sets the extra pixels to the left or right\n\t    // if the note is displaced.\n\t\n\t  }, {\n\t    key: 'calcExtraPx',\n\t    value: function calcExtraPx() {\n\t      this.setExtraLeftPx(this.displaced && this.stem_direction === _stem.Stem.DOWN ? this.getGlyphWidth() : 0);\n\t\n\t      // For upstems with flags, the extra space is unnecessary, since it's taken\n\t      // up by the flag.\n\t      this.setExtraRightPx(!this.hasFlag() && this.displaced && this.stem_direction === _stem.Stem.UP ? this.getGlyphWidth() : 0);\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t      if (this.modifierContext) this.modifierContext.preFormat();\n\t\n\t      var width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\t\n\t      // For upward flagged notes, the width of the flag needs to be added\n\t      if (this.glyph.flag && this.beam === null && this.stem_direction === _stem.Stem.UP) {\n\t        width += this.getGlyphWidth();\n\t      }\n\t\n\t      this.setWidth(width);\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    /**\n\t     * @typedef {Object} noteHeadBounds\n\t     * @property {number} y_top the highest notehead bound\n\t     * @property {number} y_bottom the lowest notehead bound\n\t     * @property {number|Null} displaced_x the starting x for displaced noteheads\n\t     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n\t     * @property {number} highest_line the highest notehead line in traditional music line\n\t     *  numbering (bottom line = 1, top line = 5)\n\t     * @property {number} lowest_line the lowest notehead line\n\t     * @property {number|false} highest_displaced_line the highest staff line number\n\t     *   for a displaced notehead\n\t     * @property {number|false} lowest_displaced_line\n\t     * @property {number} highest_non_displaced_line\n\t     * @property {number} lowest_non_displaced_line\n\t     */\n\t\n\t    /**\n\t     * Get the staff line and y value for the highest & lowest noteheads\n\t     * @returns {noteHeadBounds}\n\t     */\n\t\n\t  }, {\n\t    key: 'getNoteHeadBounds',\n\t    value: function getNoteHeadBounds() {\n\t      // Top and bottom Y values for stem.\n\t      var yTop = null;\n\t      var yBottom = null;\n\t      var nonDisplacedX = null;\n\t      var displacedX = null;\n\t\n\t      var highestLine = this.stave.getNumLines();\n\t      var lowestLine = 1;\n\t      var highestDisplacedLine = false;\n\t      var lowestDisplacedLine = false;\n\t      var highestNonDisplacedLine = highestLine;\n\t      var lowestNonDisplacedLine = lowestLine;\n\t\n\t      this.note_heads.forEach(function (notehead) {\n\t        var line = notehead.getLine();\n\t        var y = notehead.getY();\n\t\n\t        if (yTop === null || y < yTop) {\n\t          yTop = y;\n\t        }\n\t\n\t        if (yBottom === null || y > yBottom) {\n\t          yBottom = y;\n\t        }\n\t\n\t        if (displacedX === null && notehead.isDisplaced()) {\n\t          displacedX = notehead.getAbsoluteX();\n\t        }\n\t\n\t        if (nonDisplacedX === null && !notehead.isDisplaced()) {\n\t          nonDisplacedX = notehead.getAbsoluteX();\n\t        }\n\t\n\t        highestLine = line > highestLine ? line : highestLine;\n\t        lowestLine = line < lowestLine ? line : lowestLine;\n\t\n\t        if (notehead.isDisplaced()) {\n\t          highestDisplacedLine = highestDisplacedLine === false ? line : Math.max(line, highestDisplacedLine);\n\t          lowestDisplacedLine = lowestDisplacedLine === false ? line : Math.min(line, lowestDisplacedLine);\n\t        } else {\n\t          highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n\t          lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n\t        }\n\t      }, this);\n\t\n\t      return {\n\t        y_top: yTop,\n\t        y_bottom: yBottom,\n\t        displaced_x: displacedX,\n\t        non_displaced_x: nonDisplacedX,\n\t        highest_line: highestLine,\n\t        lowest_line: lowestLine,\n\t        highest_displaced_line: highestDisplacedLine,\n\t        lowest_displaced_line: lowestDisplacedLine,\n\t        highest_non_displaced_line: highestNonDisplacedLine,\n\t        lowest_non_displaced_line: lowestNonDisplacedLine\n\t      };\n\t    }\n\t\n\t    // Get the starting `x` coordinate for the noteheads\n\t\n\t  }, {\n\t    key: 'getNoteHeadBeginX',\n\t    value: function getNoteHeadBeginX() {\n\t      return this.getAbsoluteX() + this.x_shift;\n\t    }\n\t\n\t    // Get the ending `x` coordinate for the noteheads\n\t\n\t  }, {\n\t    key: 'getNoteHeadEndX',\n\t    value: function getNoteHeadEndX() {\n\t      var xBegin = this.getNoteHeadBeginX();\n\t      return xBegin + this.getGlyphWidth();\n\t    }\n\t\n\t    // Draw the ledger lines between the stave and the highest/lowest keys\n\t\n\t  }, {\n\t    key: 'drawLedgerLines',\n\t    value: function drawLedgerLines() {\n\t      var stave = this.stave;\n\t      var glyph = this.glyph;\n\t      var stroke_px = this.render_options.stroke_px;\n\t      var ctx = this.context;\n\t\n\t\n\t      var width = glyph.getWidth() + stroke_px * 2;\n\t      var doubleWidth = 2 * (glyph.getWidth() + stroke_px) - _stem.Stem.WIDTH / 2;\n\t\n\t      if (this.isRest()) return;\n\t      if (!ctx) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var _getNoteHeadBounds2 = this.getNoteHeadBounds();\n\t\n\t      var highest_line = _getNoteHeadBounds2.highest_line;\n\t      var lowest_line = _getNoteHeadBounds2.lowest_line;\n\t      var highest_displaced_line = _getNoteHeadBounds2.highest_displaced_line;\n\t      var highest_non_displaced_line = _getNoteHeadBounds2.highest_non_displaced_line;\n\t      var lowest_displaced_line = _getNoteHeadBounds2.lowest_displaced_line;\n\t      var lowest_non_displaced_line = _getNoteHeadBounds2.lowest_non_displaced_line;\n\t      var displaced_x = _getNoteHeadBounds2.displaced_x;\n\t      var non_displaced_x = _getNoteHeadBounds2.non_displaced_x;\n\t\n\t\n\t      var min_x = Math.min(displaced_x, non_displaced_x);\n\t\n\t      var drawLedgerLine = function drawLedgerLine(y, normal, displaced) {\n\t        var x = void 0;\n\t        if (displaced && normal) x = min_x - stroke_px;else if (normal) x = non_displaced_x - stroke_px;else x = displaced_x - stroke_px;\n\t        var ledgerWidth = normal && displaced ? doubleWidth : width;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(x, y);\n\t        ctx.lineTo(x + ledgerWidth, y);\n\t        ctx.stroke();\n\t      };\n\t\n\t      var style = _extends({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n\t      this.applyStyle(ctx, style);\n\t\n\t      // Draw ledger lines below the staff:\n\t      for (var line = 6; line <= highest_line; ++line) {\n\t        var normal = non_displaced_x !== null && line <= highest_non_displaced_line;\n\t        var displaced = displaced_x !== null && line <= highest_displaced_line;\n\t        drawLedgerLine(stave.getYForNote(line), normal, displaced);\n\t      }\n\t\n\t      // Draw ledger lines above the staff:\n\t      for (var _line = 0; _line >= lowest_line; --_line) {\n\t        var _normal = non_displaced_x !== null && _line >= lowest_non_displaced_line;\n\t        var _displaced = displaced_x !== null && _line >= lowest_displaced_line;\n\t        drawLedgerLine(stave.getYForNote(_line), _normal, _displaced);\n\t      }\n\t\n\t      this.restoreStyle(ctx, style);\n\t    }\n\t\n\t    // Draw all key modifiers\n\t\n\t  }, {\n\t    key: 'drawModifiers',\n\t    value: function drawModifiers() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var ctx = this.context;\n\t      ctx.openGroup('modifiers');\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        var modifier = this.modifiers[i];\n\t        var notehead = this.note_heads[modifier.getIndex()];\n\t        var noteheadStyle = notehead.getStyle();\n\t        if (noteheadStyle) {\n\t          ctx.save();\n\t          notehead.applyStyle(ctx);\n\t        }\n\t        modifier.setContext(ctx);\n\t        modifier.draw();\n\t        if (noteheadStyle) {\n\t          ctx.restore();\n\t        }\n\t      }\n\t      ctx.closeGroup();\n\t    }\n\t\n\t    // Draw the flag for the note\n\t\n\t  }, {\n\t    key: 'drawFlag',\n\t    value: function drawFlag() {\n\t      var stem = this.stem;\n\t      var beam = this.beam;\n\t      var ctx = this.context;\n\t\n\t\n\t      if (!ctx) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      var shouldRenderFlag = beam === null;\n\t      var glyph = this.getGlyph();\n\t\n\t      if (glyph.flag && shouldRenderFlag) {\n\t        var _getNoteHeadBounds3 = this.getNoteHeadBounds();\n\t\n\t        var y_top = _getNoteHeadBounds3.y_top;\n\t        var y_bottom = _getNoteHeadBounds3.y_bottom;\n\t\n\t        var noteStemHeight = stem.getHeight();\n\t        var flagX = this.getStemX();\n\t        // FIXME: What's with the magic +/- 2\n\t        var flagY = this.getStemDirection() === _stem.Stem.DOWN\n\t        // Down stems have flags on the left\n\t        ? y_top - noteStemHeight + 2\n\t        // Up stems have flags on the eft.\n\t        : y_bottom - noteStemHeight - 2;\n\t\n\t        // Draw the Flag\n\t        ctx.openGroup('flag', null, { pointerBBox: true });\n\t        this.applyStyle(ctx, this.getFlagStyle() || false);\n\t        this.flag.render(ctx, flagX, flagY);\n\t        this.restoreStyle(ctx, this.getFlagStyle() || false);\n\t        ctx.closeGroup();\n\t      }\n\t    }\n\t\n\t    // Draw the NoteHeads\n\t\n\t  }, {\n\t    key: 'drawNoteHeads',\n\t    value: function drawNoteHeads() {\n\t      var _this3 = this;\n\t\n\t      this.note_heads.forEach(function (notehead) {\n\t        _this3.context.openGroup('notehead', null, { pointerBBox: true });\n\t        notehead.setContext(_this3.context).draw();\n\t        _this3.context.closeGroup();\n\t      });\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'drawStem',\n\t    value: function drawStem(stemStruct) {\n\t      // GCR TODO: I can't find any context in which this is called with the stemStruct\n\t      // argument in the codebase or tests. Nor can I find a case where super.drawStem\n\t      // is called at all. Perhaps these should be removed?\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t\n\t      if (stemStruct) {\n\t        this.setStem(new _stem.Stem(stemStruct));\n\t      }\n\t\n\t      this.context.openGroup('stem', null, { pointerBBox: true });\n\t      this.stem.setContext(this.context).draw();\n\t      this.context.closeGroup();\n\t    }\n\t\n\t    // Draws all the `StaveNote` parts. This is the main drawing method.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.context) {\n\t        throw new _vex.Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n\t      }\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n\t      }\n\t\n\t      var xBegin = this.getNoteHeadBeginX();\n\t      var shouldRenderStem = this.hasStem() && !this.beam;\n\t\n\t      // Format note head x positions\n\t      this.note_heads.forEach(function (notehead) {\n\t        return notehead.setX(xBegin);\n\t      });\n\t\n\t      // Format stem x positions\n\t      var stemX = this.getStemX();\n\t      this.stem.setNoteHeadXBounds(stemX, stemX);\n\t\n\t      L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\t\n\t      // Draw each part of the note\n\t      this.drawLedgerLines();\n\t\n\t      // Apply the overall style -- may be contradicted by local settings:\n\t      this.applyStyle();\n\t      this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n\t      this.context.openGroup('note', null, { pointerBBox: true });\n\t      if (shouldRenderStem) this.drawStem();\n\t      this.drawNoteHeads();\n\t      this.drawFlag();\n\t      this.context.closeGroup();\n\t      this.drawModifiers();\n\t      this.context.closeGroup();\n\t      this.restoreStyle();\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return StaveNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NoteHead = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n\t// directly, but used internally in `StaveNote`.\n\t//\n\t// See `tests/notehead_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (NoteHead.DEBUG) _vex.Vex.L('Vex.Flow.NoteHead', args);\n\t}\n\t\n\t// Draw slashnote head manually. No glyph exists for this.\n\t//\n\t// Parameters:\n\t// * `ctx`: the Canvas context\n\t// * `duration`: the duration of the note. ex: \"4\"\n\t// * `x`: the x coordinate to draw at\n\t// * `y`: the y coordinate to draw at\n\t// * `stem_direction`: the direction of the stem\n\tfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n\t  var width = _tables.Flow.SLASH_NOTEHEAD_WIDTH;\n\t  ctx.save();\n\t  ctx.setLineWidth(_tables.Flow.STEM_WIDTH);\n\t\n\t  var fill = false;\n\t\n\t  if (_tables.Flow.durationToNumber(duration) > 2) {\n\t    fill = true;\n\t  }\n\t\n\t  if (!fill) x -= _tables.Flow.STEM_WIDTH / 2 * stem_direction;\n\t\n\t  ctx.beginPath();\n\t  ctx.moveTo(x, y + staveSpace);\n\t  ctx.lineTo(x, y + 1);\n\t  ctx.lineTo(x + width, y - staveSpace);\n\t  ctx.lineTo(x + width, y);\n\t  ctx.lineTo(x, y + staveSpace);\n\t  ctx.closePath();\n\t\n\t  if (fill) {\n\t    ctx.fill();\n\t  } else {\n\t    ctx.stroke();\n\t  }\n\t\n\t  if (_tables.Flow.durationToFraction(duration).equals(0.5)) {\n\t    var breve_lines = [-3, -1, width + 1, width + 3];\n\t    for (var i = 0; i < breve_lines.length; i++) {\n\t      ctx.beginPath();\n\t      ctx.moveTo(x + breve_lines[i], y - 10);\n\t      ctx.lineTo(x + breve_lines[i], y + 11);\n\t      ctx.stroke();\n\t    }\n\t  }\n\t\n\t  ctx.restore();\n\t}\n\t\n\tvar NoteHead = exports.NoteHead = function (_Note) {\n\t  _inherits(NoteHead, _Note);\n\t\n\t  _createClass(NoteHead, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'notehead';\n\t    }\n\t  }]);\n\t\n\t  function NoteHead(head_options) {\n\t    _classCallCheck(this, NoteHead);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NoteHead.__proto__ || Object.getPrototypeOf(NoteHead)).call(this, head_options));\n\t\n\t    _this.setAttribute('type', 'NoteHead');\n\t\n\t    _this.index = head_options.index;\n\t    _this.x = head_options.x || 0;\n\t    _this.y = head_options.y || 0;\n\t    _this.note_type = head_options.note_type;\n\t    _this.duration = head_options.duration;\n\t    _this.displaced = head_options.displaced || false;\n\t    _this.stem_direction = head_options.stem_direction || _stavenote.StaveNote.STEM_UP;\n\t    _this.line = head_options.line;\n\t\n\t    // Get glyph code based on duration and note type. This could be\n\t    // regular notes, rests, or other custom codes.\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.note_type);\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'No glyph found for duration \\'' + _this.duration + '\\' and type \\'' + _this.note_type + '\\'');\n\t    }\n\t\n\t    _this.glyph_code = _this.glyph.code_head;\n\t    _this.x_shift = head_options.x_shift;\n\t    if (head_options.custom_glyph_code) {\n\t      _this.custom_glyph = true;\n\t      _this.glyph_code = head_options.custom_glyph_code;\n\t    }\n\t\n\t    _this.style = head_options.style;\n\t    _this.slashed = head_options.slashed;\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads\n\t      glyph_font_scale: head_options.glyph_font_scale || _tables.Flow.DEFAULT_NOTATION_FONT_SCALE,\n\t      // number of stroke px to the left and right of head\n\t      stroke_px: 3\n\t    });\n\t\n\t    _this.setWidth(_this.glyph.getWidth(_this.render_options.glyph_font_scale));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(NoteHead, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return NoteHead.CATEGORY;\n\t    }\n\t\n\t    // Get the width of the notehead\n\t\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t\n\t    // Determine if the notehead is displaced\n\t\n\t  }, {\n\t    key: 'isDisplaced',\n\t    value: function isDisplaced() {\n\t      return this.displaced === true;\n\t    }\n\t\n\t    // Get the glyph data\n\t\n\t  }, {\n\t    key: 'getGlyph',\n\t    value: function getGlyph() {\n\t      return this.glyph;\n\t    }\n\t\n\t    // Set the X coordinate\n\t\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t\n\t    // get/set the Y coordinate\n\t\n\t  }, {\n\t    key: 'getY',\n\t    value: function getY() {\n\t      return this.y;\n\t    }\n\t  }, {\n\t    key: 'setY',\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t\n\t    // Get/set the stave line the notehead is placed on\n\t\n\t  }, {\n\t    key: 'getLine',\n\t    value: function getLine() {\n\t      return this.line;\n\t    }\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Get the canvas `x` coordinate position of the notehead.\n\t\n\t  }, {\n\t    key: 'getAbsoluteX',\n\t    value: function getAbsoluteX() {\n\t      // If the note has not been preformatted, then get the static x value\n\t      // Otherwise, it's been formatted and we should use it's x value relative\n\t      // to its tick context\n\t      var x = !this.preFormatted ? this.x : _get(NoteHead.prototype.__proto__ || Object.getPrototypeOf(NoteHead.prototype), 'getAbsoluteX', this).call(this);\n\t\n\t      // For a more natural displaced notehead, we adjust the displacement amount\n\t      // by half the stem width in order to maintain a slight overlap with the stem\n\t      var displacementStemAdjustment = _stem.Stem.WIDTH / 2;\n\t\n\t      return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction : 0);\n\t    }\n\t\n\t    // Get the `BoundingBox` for the `NoteHead`\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n\t      }\n\t\n\t      var spacing = this.stave.getSpacingBetweenLines();\n\t      var half_spacing = spacing / 2;\n\t      var min_y = this.y - half_spacing;\n\t\n\t      return new _tables.Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n\t    }\n\t\n\t    // Set notehead to a provided `stave`\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      var line = this.getLine();\n\t\n\t      this.stave = stave;\n\t      this.setY(stave.getYForNote(line));\n\t      this.context = this.stave.context;\n\t      return this;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return this;\n\t\n\t      var width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\t\n\t      this.setWidth(width);\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t\n\t    // Draw the notehead\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var ctx = this.context;\n\t      var head_x = this.getAbsoluteX();\n\t      var y = this.y;\n\t\n\t      L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\t\n\t      // Begin and end positions for head.\n\t      var stem_direction = this.stem_direction;\n\t      var glyph_font_scale = this.render_options.glyph_font_scale;\n\t\n\t      if (this.note_type === 's') {\n\t        var staveSpace = this.stave.getSpacingBetweenLines();\n\t        drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n\t      } else {\n\t        if (this.style) {\n\t          this.applyStyle(ctx);\n\t          _glyph.Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n\t          this.restoreStyle(ctx);\n\t        } else {\n\t          _glyph.Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n\t        }\n\t      }\n\t    }\n\t  }]);\n\n\t  return NoteHead;\n\t}(_note.Note);\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Note = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _tickable = __webpack_require__(23);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements an abstract interface for notes and chords that\n\t// are rendered on a stave. Notes have some common properties: All of them\n\t// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n\t//\n\t// Some notes have stems, heads, dots, etc. Most notational elements that\n\t// surround a note are called *modifiers*, and every note has an associated\n\t// array of them. All notes also have a rendering context and belong to a stave.\n\t\n\tvar Note = exports.Note = function (_Tickable) {\n\t  _inherits(Note, _Tickable);\n\t\n\t  _createClass(Note, null, [{\n\t    key: 'plotMetrics',\n\t\n\t\n\t    // Debug helper. Displays various note metrics for the given\n\t    // note.\n\t    value: function plotMetrics(ctx, note, yPos) {\n\t      var metrics = note.getMetrics();\n\t      var xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n\t      var xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n\t      var xAbs = note.getAbsoluteX();\n\t      var xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n\t      var xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n\t      var xEnd = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx + metrics.modRightPx;\n\t      var xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\t\n\t      var xWidth = xEnd - xStart;\n\t      ctx.save();\n\t      ctx.setFont('Arial', 8, '');\n\t      ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\t\n\t      var y = yPos + 7;\n\t      function stroke(x1, x2, color) {\n\t        var yy = arguments.length <= 3 || arguments[3] === undefined ? y : arguments[3];\n\t\n\t        ctx.beginPath();\n\t        ctx.setStrokeStyle(color);\n\t        ctx.setFillStyle(color);\n\t        ctx.setLineWidth(3);\n\t        ctx.moveTo(x1 + note.getXShift(), yy);\n\t        ctx.lineTo(x2 + note.getXShift(), yy);\n\t        ctx.stroke();\n\t      }\n\t\n\t      stroke(xStart, xPre1, 'red');\n\t      stroke(xPre1, xAbs, '#999');\n\t      stroke(xAbs, xPost1, 'green');\n\t      stroke(xPost1, xPost2, '#999');\n\t      stroke(xPost2, xEnd, 'red');\n\t      stroke(xEnd, xFreedomRight, '#DD0');\n\t      stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n\t      _vex.Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\t\n\t      var formatterMetrics = note.getFormatterMetrics();\n\t      if (formatterMetrics.iterations > 0) {\n\t        var spaceDeviation = formatterMetrics.space.deviation;\n\t        var prefix = spaceDeviation >= 0 ? '+' : '';\n\t        ctx.setFillStyle('red');\n\t        ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n\t      }\n\t      ctx.restore();\n\t    }\n\t\n\t    // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n\t    // positioning and layout.\n\t    // To create a new note you need to provide a `note_struct`, which consists\n\t    // of the following fields:\n\t    //\n\t    // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n\t    // `dots`: The number of dots, which affects the duration.\n\t    // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n\t    //\n\t    // The range of values for these parameters are available in `src/tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'note';\n\t    }\n\t  }, {\n\t    key: 'STAVEPADDING',\n\t    get: function get() {\n\t      return 12;\n\t    }\n\t  }]);\n\t\n\t  function Note(note_struct) {\n\t    _classCallCheck(this, Note);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Note.__proto__ || Object.getPrototypeOf(Note)).call(this));\n\t\n\t    _this.setAttribute('type', 'Note');\n\t\n\t    if (!note_struct) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n\t    }\n\t\n\t    // Parse `note_struct` and get note properties.\n\t    var initData = _tables.Flow.parseNoteData(note_struct);\n\t    if (!initData) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization object: ' + JSON.stringify(note_struct));\n\t    }\n\t\n\t    // Set note properties from parameters.\n\t    _this.duration = initData.duration;\n\t    _this.dots = initData.dots;\n\t    _this.noteType = initData.type;\n\t\n\t    if (note_struct.duration_override) {\n\t      // Custom duration\n\t      _this.setDuration(note_struct.duration_override);\n\t    } else {\n\t      // Default duration\n\t      _this.setIntrinsicTicks(initData.ticks);\n\t    }\n\t\n\t    _this.modifiers = [];\n\t\n\t    // Get the glyph code for this note from the font.\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (_this.positions && (_typeof(_this.positions) !== 'object' || !_this.positions.length)) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n\t    }\n\t\n\t    // Note to play for audio players.\n\t    _this.playNote = null;\n\t\n\t    // Positioning contexts used by the Formatter.\n\t    _this.tickContext = null; // The current tick context.\n\t    _this.modifierContext = null;\n\t    _this.ignore_ticks = false;\n\t\n\t    // Positioning variables\n\t    _this.width = 0; // Width in pixels calculated after preFormat\n\t    _this.extraLeftPx = 0; // Extra room on left for offset note head\n\t    _this.extraRightPx = 0; // Extra room on right for offset note head\n\t    _this.x_shift = 0; // X shift from tick context X\n\t    _this.left_modPx = 0; // Max width of left modifiers\n\t    _this.right_modPx = 0; // Max width of right modifiers\n\t    _this.voice = null; // The voice that this note is in\n\t    _this.preFormatted = false; // Is this note preFormatted?\n\t    _this.ys = []; // list of y coordinates for each note\n\t    // we need to hold on to these for ties and beams.\n\t\n\t    if (note_struct.align_center) {\n\t      _this.setCenterAlignment(note_struct.align_center);\n\t    }\n\t\n\t    // The render surface.\n\t    _this.stave = null;\n\t    _this.render_options = {\n\t      annotation_spacing: 5,\n\t      stave_padding: Note.STAVEPADDING\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the play note, which is arbitrary data that can be used by an\n\t  // audio player.\n\t\n\t\n\t  _createClass(Note, [{\n\t    key: 'getPlayNote',\n\t    value: function getPlayNote() {\n\t      return this.playNote;\n\t    }\n\t  }, {\n\t    key: 'setPlayNote',\n\t    value: function setPlayNote(note) {\n\t      this.playNote = note;return this;\n\t    }\n\t\n\t    // Don't play notes by default, call them rests. This is also used by things like\n\t    // beams and dots for positioning.\n\t\n\t  }, {\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return false;\n\t    }\n\t\n\t    // TODO(0xfe): Why is this method here?\n\t\n\t  }, {\n\t    key: 'addStroke',\n\t    value: function addStroke(index, stroke) {\n\t      stroke.setNote(this);\n\t      stroke.setIndex(index);\n\t      this.modifiers.push(stroke);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Get and set the target stave.\n\t\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t      this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n\t      this.context = this.stave.context;\n\t      return this;\n\t    }\n\t\n\t    // `Note` is not really a modifier, but is used in\n\t    // a `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Note.CATEGORY;\n\t    }\n\t\n\t    // Set the rendering context for the note.\n\t\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t\n\t    // Get and set spacing to the left and right of the notes.\n\t\n\t  }, {\n\t    key: 'getExtraLeftPx',\n\t    value: function getExtraLeftPx() {\n\t      return this.extraLeftPx;\n\t    }\n\t  }, {\n\t    key: 'getExtraRightPx',\n\t    value: function getExtraRightPx() {\n\t      return this.extraRightPx;\n\t    }\n\t  }, {\n\t    key: 'setExtraLeftPx',\n\t    value: function setExtraLeftPx(x) {\n\t      this.extraLeftPx = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setExtraRightPx',\n\t    value: function setExtraRightPx(x) {\n\t      this.extraRightPx = x;return this;\n\t    }\n\t\n\t    // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n\t\n\t  }, {\n\t    key: 'shouldIgnoreTicks',\n\t    value: function shouldIgnoreTicks() {\n\t      return this.ignore_ticks;\n\t    }\n\t\n\t    // Get the stave line number for the note.\n\t\n\t  }, {\n\t    key: 'getLineNumber',\n\t    value: function getLineNumber() {\n\t      return 0;\n\t    }\n\t\n\t    // Get the stave line number for rest.\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      return 0;\n\t    }\n\t\n\t    // Get the glyph associated with this note.\n\t\n\t  }, {\n\t    key: 'getGlyph',\n\t    value: function getGlyph() {\n\t      return this.glyph;\n\t    }\n\t  }, {\n\t    key: 'getGlyphWidth',\n\t    value: function getGlyphWidth() {\n\t      return this.glyph.getWidth(this.render_options.glyph_font_scale);\n\t    }\n\t\n\t    // Set and get Y positions for this note. Each Y value is associated with\n\t    // an individual pitch/key within the note/chord.\n\t\n\t  }, {\n\t    key: 'setYs',\n\t    value: function setYs(ys) {\n\t      this.ys = ys;return this;\n\t    }\n\t  }, {\n\t    key: 'getYs',\n\t    value: function getYs() {\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n\t      }\n\t\n\t      return this.ys;\n\t    }\n\t\n\t    // Get the Y position of the space above the stave onto which text can\n\t    // be rendered.\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(text_line) {\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', 'No stave attached to this note.');\n\t      }\n\t\n\t      return this.stave.getYForTopText(text_line);\n\t    }\n\t\n\t    // Get a `BoundingBox` for this note.\n\t\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return null;\n\t    }\n\t\n\t    // Returns the voice that this note belongs in.\n\t\n\t  }, {\n\t    key: 'getVoice',\n\t    value: function getVoice() {\n\t      if (!this.voice) throw new _vex.Vex.RERR('NoVoice', 'Note has no voice.');\n\t      return this.voice;\n\t    }\n\t\n\t    // Attach this note to `voice`.\n\t\n\t  }, {\n\t    key: 'setVoice',\n\t    value: function setVoice(voice) {\n\t      this.voice = voice;\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Get and set the `TickContext` for this note.\n\t\n\t  }, {\n\t    key: 'getTickContext',\n\t    value: function getTickContext() {\n\t      return this.tickContext;\n\t    }\n\t  }, {\n\t    key: 'setTickContext',\n\t    value: function setTickContext(tc) {\n\t      this.tickContext = tc;\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Accessors for the note type.\n\t\n\t  }, {\n\t    key: 'getDuration',\n\t    value: function getDuration() {\n\t      return this.duration;\n\t    }\n\t  }, {\n\t    key: 'isDotted',\n\t    value: function isDotted() {\n\t      return this.dots > 0;\n\t    }\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'getDots',\n\t    value: function getDots() {\n\t      return this.dots;\n\t    }\n\t  }, {\n\t    key: 'getNoteType',\n\t    value: function getNoteType() {\n\t      return this.noteType;\n\t    }\n\t  }, {\n\t    key: 'setBeam',\n\t    value: function setBeam() {\n\t      return this;\n\t    } // ignore parameters\n\t\n\t    // Attach this note to a modifier context.\n\t\n\t  }, {\n\t    key: 'setModifierContext',\n\t    value: function setModifierContext(mc) {\n\t      this.modifierContext = mc;return this;\n\t    }\n\t\n\t    // Attach a modifier to this note.\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier) {\n\t      var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      modifier.setNote(this);\n\t      modifier.setIndex(index);\n\t      this.modifiers.push(modifier);\n\t      this.setPreFormatted(false);\n\t      return this;\n\t    }\n\t\n\t    // Get the coordinates for where modifiers begin.\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX(),\n\t        y: this.ys[0]\n\t      };\n\t    }\n\t\n\t    // Get bounds and metrics for this note.\n\t    //\n\t    // Returns a struct with fields:\n\t    // `width`: The total width of the note (including modifiers.)\n\t    // `noteWidth`: The width of the note head only.\n\t    // `left_shift`: The horizontal displacement of the note.\n\t    // `modLeftPx`: Start `X` for left modifiers.\n\t    // `modRightPx`: Start `X` for right modifiers.\n\t    // `extraLeftPx`: Extra space on left of note.\n\t    // `extraRightPx`: Extra space on right of note.\n\t\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n\t      }\n\t\n\t      var modLeftPx = 0;\n\t      var modRightPx = 0;\n\t      if (this.modifierContext != null) {\n\t        modLeftPx = this.modifierContext.state.left_shift;\n\t        modRightPx = this.modifierContext.state.right_shift;\n\t      }\n\t\n\t      var width = this.getWidth();\n\t      return {\n\t        width: width,\n\t        noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n\t        left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\t\n\t        // Modifiers, accidentals etc.\n\t        modLeftPx: modLeftPx,\n\t        modRightPx: modRightPx,\n\t\n\t        // Displaced note head on left or right.\n\t        extraLeftPx: this.extraLeftPx,\n\t        extraRightPx: this.extraRightPx\n\t      };\n\t    }\n\t\n\t    // Get and set width of note. Used by the formatter for positioning.\n\t\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n\t      }\n\t\n\t      return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n\t    }\n\t\n\t    // Displace note by `x` pixels. Used by the formatter.\n\t\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getXShift',\n\t    value: function getXShift() {\n\t      return this.x_shift;\n\t    }\n\t\n\t    // Get `X` position of this tick context.\n\t\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      if (!this.tickContext) {\n\t        throw new _vex.Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n\t      }\n\t\n\t      return this.tickContext.getX() + this.x_shift;\n\t    }\n\t\n\t    // Get the absolute `X` position of this note's tick context. This\n\t    // excludes x_shift, so you'll need to factor it in if you're\n\t    // looking for the post-formatted x-position.\n\t\n\t  }, {\n\t    key: 'getAbsoluteX',\n\t    value: function getAbsoluteX() {\n\t      if (!this.tickContext) {\n\t        throw new _vex.Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n\t      }\n\t\n\t      // Position note to left edge of tick context.\n\t      var x = this.tickContext.getX();\n\t      if (this.stave) {\n\t        x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n\t      }\n\t\n\t      if (this.isCenterAligned()) {\n\t        x += this.getCenterXShift();\n\t      }\n\t\n\t      return x;\n\t    }\n\t  }, {\n\t    key: 'setPreFormatted',\n\t    value: function setPreFormatted(value) {\n\t      this.preFormatted = value;\n\t\n\t      // Maintain the width of left and right modifiers in pixels.\n\t      if (this.preFormatted) {\n\t        var extra = this.tickContext.getExtraPx();\n\t        this.left_modPx = Math.max(this.left_modPx, extra.left);\n\t        this.right_modPx = Math.max(this.right_modPx, extra.right);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Note;\n\t}(_tickable.Tickable);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tickable = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// The tickable interface. Tickables are things that sit on a score and\n\t// have a duration, i.e., they occupy space in the musical rendering dimension.\n\t\n\tvar Tickable = exports.Tickable = function (_Element) {\n\t  _inherits(Tickable, _Element);\n\t\n\t  function Tickable() {\n\t    _classCallCheck(this, Tickable);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tickable.__proto__ || Object.getPrototypeOf(Tickable)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tickable');\n\t\n\t    // These properties represent the duration of\n\t    // this tickable element.\n\t    _this.ticks = new _fraction.Fraction(0, 1);\n\t    _this.intrinsicTicks = 0;\n\t    _this.tickMultiplier = new _fraction.Fraction(1, 1);\n\t\n\t    _this.width = 0;\n\t    _this.x_shift = 0; // Shift from tick context\n\t    _this.voice = null;\n\t    _this.tickContext = null;\n\t    _this.modifierContext = null;\n\t    _this.modifiers = [];\n\t    _this.preFormatted = false;\n\t    _this.postFormatted = false;\n\t    _this.tuplet = null;\n\t    _this.tupletStack = [];\n\t\n\t    _this.align_center = false;\n\t    _this.center_x_shift = 0; // Shift from tick context if center aligned\n\t\n\t    // This flag tells the formatter to ignore this tickable during\n\t    // formatting and justification. It is set by tickables such as BarNote.\n\t    _this.ignore_ticks = false;\n\t\n\t    // This is a space for an external formatting class or function to maintain\n\t    // metrics.\n\t    _this.formatterMetrics = {\n\t      // The freedom of a tickable is the distance it can move without colliding\n\t      // with neighboring elements. A formatter can set these values during its\n\t      // formatting pass, which a different formatter can then use to fine tune.\n\t      freedom: { left: 0, right: 0 },\n\t\n\t      // The simplified rational duration of this tick as a string. It can be\n\t      // used as an index to a map or hashtable.\n\t      duration: '',\n\t\n\t      // The number of formatting iterations undergone.\n\t      iterations: 0,\n\t\n\t      // The space in pixels allocated by this formatter, along with the mean space\n\t      // for tickables of this duration, and the deviation from the mean.\n\t      space: {\n\t        used: 0,\n\t        mean: 0,\n\t        deviation: 0\n\t      }\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tickable, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getTicks',\n\t    value: function getTicks() {\n\t      return this.ticks;\n\t    }\n\t  }, {\n\t    key: 'shouldIgnoreTicks',\n\t    value: function shouldIgnoreTicks() {\n\t      return this.ignore_ticks;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getFormatterMetrics',\n\t    value: function getFormatterMetrics() {\n\t      return this.formatterMetrics;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = x;\n\t    }\n\t  }, {\n\t    key: 'getCenterXShift',\n\t    value: function getCenterXShift() {\n\t      if (this.isCenterAligned()) {\n\t        return this.center_x_shift;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'isCenterAligned',\n\t    value: function isCenterAligned() {\n\t      return this.align_center;\n\t    }\n\t  }, {\n\t    key: 'setCenterAlignment',\n\t    value: function setCenterAlignment(align_center) {\n\t      this.align_center = align_center;\n\t      return this;\n\t    }\n\t\n\t    // Every tickable must be associated with a voice. This allows formatters\n\t    // and preFormatter to associate them with the right modifierContexts.\n\t\n\t  }, {\n\t    key: 'getVoice',\n\t    value: function getVoice() {\n\t      if (!this.voice) throw new _vex.Vex.RERR('NoVoice', 'Tickable has no voice.');\n\t      return this.voice;\n\t    }\n\t  }, {\n\t    key: 'setVoice',\n\t    value: function setVoice(voice) {\n\t      this.voice = voice;\n\t    }\n\t  }, {\n\t    key: 'getTuplet',\n\t    value: function getTuplet() {\n\t      return this.tuplet;\n\t    }\n\t\n\t    /*\n\t     * resetTuplet\n\t     * @param tuplet -- the specific tuplet to reset\n\t     *   if this is not provided, all tuplets are reset.\n\t     * @returns this\n\t     *\n\t     * Removes any prior tuplets from the tick calculation and\n\t     * resets the intrinsic tick value to\n\t     */\n\t\n\t  }, {\n\t    key: 'resetTuplet',\n\t    value: function resetTuplet(tuplet) {\n\t      var noteCount = void 0;\n\t      var notesOccupied = void 0;\n\t      if (tuplet) {\n\t        var i = this.tupletStack.indexOf(tuplet);\n\t        if (i !== -1) {\n\t          this.tupletStack.splice(i, 1);\n\t          noteCount = tuplet.getNoteCount();\n\t          notesOccupied = tuplet.getNotesOccupied();\n\t\n\t          // Revert old multiplier by inverting numerator & denom.:\n\t          this.applyTickMultiplier(noteCount, notesOccupied);\n\t        }\n\t        return this;\n\t      }\n\t\n\t      while (this.tupletStack.length) {\n\t        tuplet = this.tupletStack.pop();\n\t        noteCount = tuplet.getNoteCount();\n\t        notesOccupied = tuplet.getNotesOccupied();\n\t\n\t        // Revert old multiplier by inverting numerator & denom.:\n\t        this.applyTickMultiplier(noteCount, notesOccupied);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setTuplet',\n\t    value: function setTuplet(tuplet) {\n\t      // Attach to new tuplet\n\t\n\t      if (tuplet) {\n\t        this.tupletStack.push(tuplet);\n\t\n\t        var noteCount = tuplet.getNoteCount();\n\t        var notesOccupied = tuplet.getNotesOccupied();\n\t\n\t        this.applyTickMultiplier(notesOccupied, noteCount);\n\t      }\n\t\n\t      this.tuplet = tuplet;\n\t\n\t      return this;\n\t    }\n\t\n\t    /** optional, if tickable has modifiers **/\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mc) {\n\t      this.modifierContext = mc;\n\t      // Add modifiers to modifier context (if any)\n\t      this.preFormatted = false;\n\t    }\n\t\n\t    /** optional, if tickable has modifiers **/\n\t\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(mod) {\n\t      this.modifiers.push(mod);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers() {\n\t      return this.modifiers;\n\t    }\n\t  }, {\n\t    key: 'setTickContext',\n\t    value: function setTickContext(tc) {\n\t      this.tickContext = tc;\n\t      this.preFormatted = false;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.width = 0;\n\t      if (this.modifierContext) {\n\t        this.modifierContext.preFormat();\n\t        this.width += this.modifierContext.getWidth();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return this;\n\t      this.postFormatted = true;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getIntrinsicTicks',\n\t    value: function getIntrinsicTicks() {\n\t      return this.intrinsicTicks;\n\t    }\n\t  }, {\n\t    key: 'setIntrinsicTicks',\n\t    value: function setIntrinsicTicks(intrinsicTicks) {\n\t      this.intrinsicTicks = intrinsicTicks;\n\t      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n\t    }\n\t  }, {\n\t    key: 'getTickMultiplier',\n\t    value: function getTickMultiplier() {\n\t      return this.tickMultiplier;\n\t    }\n\t  }, {\n\t    key: 'applyTickMultiplier',\n\t    value: function applyTickMultiplier(numerator, denominator) {\n\t      this.tickMultiplier.multiply(numerator, denominator);\n\t      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n\t    }\n\t  }, {\n\t    key: 'setDuration',\n\t    value: function setDuration(duration) {\n\t      var ticks = duration.numerator * (_tables.Flow.RESOLUTION / duration.denominator);\n\t      this.ticks = this.tickMultiplier.clone().multiply(ticks);\n\t      this.intrinsicTicks = this.ticks.value();\n\t    }\n\t  }]);\n\n\t  return Tickable;\n\t}(_element.Element);\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StemmableNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// `StemmableNote` is an abstract interface for notes with optional stems.\n\t// Examples of stemmable notes are `StaveNote` and `TabNote`\n\t\n\tvar StemmableNote = exports.StemmableNote = function (_Note) {\n\t  _inherits(StemmableNote, _Note);\n\t\n\t  function StemmableNote(note_struct) {\n\t    _classCallCheck(this, StemmableNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StemmableNote.__proto__ || Object.getPrototypeOf(StemmableNote)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'StemmableNote');\n\t\n\t    _this.stem = null;\n\t    _this.stemExtensionOverride = null;\n\t    _this.beam = null;\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the note's `Stem`\n\t\n\t\n\t  _createClass(StemmableNote, [{\n\t    key: 'getStem',\n\t    value: function getStem() {\n\t      return this.stem;\n\t    }\n\t  }, {\n\t    key: 'setStem',\n\t    value: function setStem(stem) {\n\t      this.stem = stem;return this;\n\t    }\n\t\n\t    // Builds and sets a new stem\n\t\n\t  }, {\n\t    key: 'buildStem',\n\t    value: function buildStem() {\n\t      var stem = new _stem.Stem();\n\t      this.setStem(stem);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'buildFlag',\n\t    value: function buildFlag() {\n\t      var glyph = this.glyph;\n\t      var beam = this.beam;\n\t\n\t      var shouldRenderFlag = beam === null;\n\t\n\t      if (glyph && glyph.flag && shouldRenderFlag) {\n\t        var flagCode = this.getStemDirection() === _stem.Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n\t\n\t        this.flag = new _glyph.Glyph(flagCode, this.render_options.glyph_font_scale);\n\t      }\n\t    }\n\t\n\t    // Get the full length of stem\n\t\n\t  }, {\n\t    key: 'getStemLength',\n\t    value: function getStemLength() {\n\t      return _stem.Stem.HEIGHT + this.getStemExtension();\n\t    }\n\t\n\t    // Get the number of beams for this duration\n\t\n\t  }, {\n\t    key: 'getBeamCount',\n\t    value: function getBeamCount() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (glyph) {\n\t        return glyph.beam_count;\n\t      } else {\n\t        return 0;\n\t      }\n\t    }\n\t\n\t    // Get the minimum length of stem\n\t\n\t  }, {\n\t    key: 'getStemMinumumLength',\n\t    value: function getStemMinumumLength() {\n\t      var frac = _tables.Flow.durationToFraction(this.duration);\n\t      var length = frac.value() <= 1 ? 0 : 20;\n\t      // if note is flagged, cannot shorten beam\n\t      switch (this.duration) {\n\t        case '8':\n\t          if (this.beam == null) length = 35;\n\t          break;\n\t        case '16':\n\t          length = this.beam == null ? 35 : 25;\n\t          break;\n\t        case '32':\n\t          length = this.beam == null ? 45 : 35;\n\t          break;\n\t        case '64':\n\t          length = this.beam == null ? 50 : 40;\n\t          break;\n\t        case '128':\n\t          length = this.beam == null ? 55 : 45;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      return length;\n\t    }\n\t\n\t    // Get/set the direction of the stem\n\t\n\t  }, {\n\t    key: 'getStemDirection',\n\t    value: function getStemDirection() {\n\t      return this.stem_direction;\n\t    }\n\t  }, {\n\t    key: 'setStemDirection',\n\t    value: function setStemDirection(direction) {\n\t      if (!direction) direction = _stem.Stem.UP;\n\t      if (direction !== _stem.Stem.UP && direction !== _stem.Stem.DOWN) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid stem direction: ' + direction);\n\t      }\n\t\n\t      this.stem_direction = direction;\n\t      if (this.stem) {\n\t        this.stem.setDirection(direction);\n\t        this.stem.setExtension(this.getStemExtension());\n\t      }\n\t\n\t      this.reset();\n\t      if (this.flag) {\n\t        this.buildFlag();\n\t      }\n\t\n\t      this.beam = null;\n\t      if (this.preFormatted) {\n\t        this.preFormat();\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Get the `x` coordinate of the stem\n\t\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      var x_begin = this.getAbsoluteX() + this.x_shift;\n\t      var x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n\t      var stem_x = this.stem_direction === _stem.Stem.DOWN ? x_begin : x_end;\n\t      return stem_x;\n\t    }\n\t\n\t    // Get the `x` coordinate for the center of the glyph.\n\t    // Used for `TabNote` stems and stemlets over rests\n\t\n\t  }, {\n\t    key: 'getCenterGlyphX',\n\t    value: function getCenterGlyphX() {\n\t      return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n\t    }\n\t\n\t    // Get the stem extension for the current duration\n\t\n\t  }, {\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stemExtensionOverride != null) {\n\t        return this.stemExtensionOverride;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.stem_up_extension : glyph.stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t\n\t    // Set the stem length to a specific. Will override the default length.\n\t\n\t  }, {\n\t    key: 'setStemLength',\n\t    value: function setStemLength(height) {\n\t      this.stemExtensionOverride = height - _stem.Stem.HEIGHT;\n\t      return this;\n\t    }\n\t\n\t    // Get the top and bottom `y` values of the stem.\n\t\n\t  }, {\n\t    key: 'getStemExtents',\n\t    value: function getStemExtents() {\n\t      return this.stem.getExtents();\n\t    }\n\t\n\t    // Sets the current note's beam\n\t\n\t  }, {\n\t    key: 'setBeam',\n\t    value: function setBeam(beam) {\n\t      this.beam = beam;return this;\n\t    }\n\t\n\t    // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n\t\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      if (this.hasStem()) {\n\t        return Math.min(this.stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n\t      } else {\n\t        return this.stave.getYForTopText(textLine);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(textLine) {\n\t      var extents = this.getStemExtents();\n\t      if (this.hasStem()) {\n\t        return Math.max(this.stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n\t      } else {\n\t        return this.stave.getYForBottomText(textLine);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag() {\n\t      return _tables.Flow.durationToGlyph(this.duration).flag && !this.beam;\n\t    }\n\t\n\t    // Post format the note\n\t\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.beam) this.beam.postFormat();\n\t\n\t      this.postFormatted = true;\n\t\n\t      return this;\n\t    }\n\t\n\t    // Render the stem onto the canvas\n\t\n\t  }, {\n\t    key: 'drawStem',\n\t    value: function drawStem(stem_struct) {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      this.setStem(new _stem.Stem(stem_struct));\n\t      this.stem.setContext(this.context).draw();\n\t    }\n\t  }]);\n\n\t  return StemmableNote;\n\t}(_note.Note);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Modifier = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// `Modifier` is an abstract interface for notational elements that modify\n\t// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n\t//\n\t// For a `Modifier` instance to be positioned correctly, it must be part of\n\t// a `ModifierContext`. All modifiers in the same context are rendered relative to\n\t// one another.\n\t//\n\t// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n\t// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n\t// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n\t// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\t\n\tvar Modifier = exports.Modifier = function (_Element) {\n\t  _inherits(Modifier, _Element);\n\t\n\t  _createClass(Modifier, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'none';\n\t    }\n\t\n\t    // Modifiers can be positioned almost anywhere, relative to a note.\n\t\n\t  }, {\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        RIGHT: 2,\n\t        ABOVE: 3,\n\t        BELOW: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        above: Modifier.Position.ABOVE,\n\t        below: Modifier.Position.BELOW,\n\t        left: Modifier.Position.LEFT,\n\t        right: Modifier.Position.RIGHT\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Modifier() {\n\t    _classCallCheck(this, Modifier);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modifier.__proto__ || Object.getPrototypeOf(Modifier)).call(this));\n\t\n\t    _this.setAttribute('type', 'Modifier');\n\t\n\t    _this.width = 0;\n\t\n\t    // Modifiers are attached to a note and an index. An index is a\n\t    // specific head in a chord.\n\t    _this.note = null;\n\t    _this.index = null;\n\t\n\t    // The `text_line` is reserved space above or below a stave.\n\t    _this.text_line = 0;\n\t    _this.position = Modifier.Position.LEFT;\n\t    _this.modifier_context = null;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.spacingFromNextModifier = 0;\n\t    return _this;\n\t  }\n\t\n\t  // Every modifier has a category. The `ModifierContext` uses this to determine\n\t  // the type and order of the modifiers.\n\t\n\t\n\t  _createClass(Modifier, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Modifier.CATEGORY;\n\t    }\n\t\n\t    // Get and set modifier widths.\n\t\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;return this;\n\t    }\n\t\n\t    // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n\t\n\t  }, {\n\t    key: 'getNote',\n\t    value: function getNote() {\n\t      return this.note;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;return this;\n\t    }\n\t\n\t    // Get and set note index, which is a specific note in a chord.\n\t\n\t  }, {\n\t    key: 'getIndex',\n\t    value: function getIndex() {\n\t      return this.index;\n\t    }\n\t  }, {\n\t    key: 'setIndex',\n\t    value: function setIndex(index) {\n\t      this.index = index;return this;\n\t    }\n\t\n\t    // Every modifier must be part of a `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'getModifierContext',\n\t    value: function getModifierContext() {\n\t      return this.modifier_context;\n\t    }\n\t  }, {\n\t    key: 'setModifierContext',\n\t    value: function setModifierContext(c) {\n\t      this.modifier_context = c;return this;\n\t    }\n\t\n\t    // Get and set articulation position.\n\t\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n\t      return this;\n\t    }\n\t\n\t    // Set the `text_line` for the modifier.\n\t\n\t  }, {\n\t    key: 'setTextLine',\n\t    value: function setTextLine(line) {\n\t      this.text_line = line;return this;\n\t    }\n\t\n\t    // Shift modifier down `y` pixels. Negative values shift up.\n\t\n\t  }, {\n\t    key: 'setYShift',\n\t    value: function setYShift(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setSpacingFromNextModifier',\n\t    value: function setSpacingFromNextModifier(x) {\n\t      this.spacingFromNextModifier = x;\n\t    }\n\t  }, {\n\t    key: 'getSpacingFromNextModifier',\n\t    value: function getSpacingFromNextModifier() {\n\t      return this.spacingFromNextModifier;\n\t    }\n\t\n\t    // Shift modifier `x` pixels in the direction of the modifier. Negative values\n\t    // shift reverse.\n\t\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(x) {\n\t      this.x_shift = 0;\n\t      if (this.position === Modifier.Position.LEFT) {\n\t        this.x_shift -= x;\n\t      } else {\n\t        this.x_shift += x;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getXShift',\n\t    value: function getXShift() {\n\t      return this.x_shift;\n\t    }\n\t\n\t    // Render the modifier onto the canvas.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      throw new _vex.Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n\t    }\n\t  }]);\n\n\t  return Modifier;\n\t}(_element.Element);\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Dot = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// This class implements dot modifiers for notes.\n\t\n\tvar Dot = exports.Dot = function (_Modifier) {\n\t  _inherits(Dot, _Modifier);\n\t\n\t  _createClass(Dot, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange dots inside a ModifierContext.\n\t    value: function format(dots, state) {\n\t      var right_shift = state.right_shift;\n\t      var dot_spacing = 1;\n\t\n\t      if (!dots || dots.length === 0) return false;\n\t\n\t      var dot_list = [];\n\t      for (var i = 0; i < dots.length; ++i) {\n\t        var dot = dots[i];\n\t        var note = dot.getNote();\n\t\n\t        var props = void 0;\n\t        var shift = void 0;\n\t        // Only StaveNote has .getKeyProps()\n\t        if (typeof note.getKeyProps === 'function') {\n\t          props = note.getKeyProps()[dot.getIndex()];\n\t          shift = props.displaced ? note.getExtraRightPx() : 0;\n\t        } else {\n\t          // Else it's a TabNote\n\t          props = { line: 0.5 }; // Shim key props for dot placement\n\t          shift = 0;\n\t        }\n\t\n\t        dot_list.push({ line: props.line, shift: shift, note: note, dot: dot });\n\t      }\n\t\n\t      // Sort dots by line number.\n\t      dot_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      var dot_shift = right_shift;\n\t      var x_width = 0;\n\t      var last_line = null;\n\t      var last_note = null;\n\t      var prev_dotted_space = null;\n\t      var half_shiftY = 0;\n\t\n\t      for (var _i = 0; _i < dot_list.length; ++_i) {\n\t        var _dot_list$_i = dot_list[_i];\n\t        var _dot = _dot_list$_i.dot;\n\t        var _note = _dot_list$_i.note;\n\t        var _shift = _dot_list$_i.shift;\n\t        var line = _dot_list$_i.line;\n\t\n\t        // Reset the position of the dot every line.\n\t\n\t        if (line !== last_line || _note !== last_note) {\n\t          dot_shift = _shift;\n\t        }\n\t\n\t        if (!_note.isRest() && line !== last_line) {\n\t          if (Math.abs(line % 1) === 0.5) {\n\t            // note is on a space, so no dot shift\n\t            half_shiftY = 0;\n\t          } else if (!_note.isRest()) {\n\t            // note is on a line, so shift dot to space above the line\n\t            half_shiftY = 0.5;\n\t            if (last_note != null && !last_note.isRest() && last_line - line === 0.5) {\n\t              // previous note on a space, so shift dot to space below the line\n\t              half_shiftY = -0.5;\n\t            } else if (line + half_shiftY === prev_dotted_space) {\n\t              // previous space is dotted, so shift dot to space below the line\n\t              half_shiftY = -0.5;\n\t            }\n\t          }\n\t        }\n\t\n\t        // convert half_shiftY to a multiplier for dots.draw()\n\t        _dot.dot_shiftY = -half_shiftY;\n\t        prev_dotted_space = line + half_shiftY;\n\t\n\t        _dot.setXShift(dot_shift);\n\t        dot_shift += _dot.getWidth() + dot_spacing; // spacing\n\t        x_width = dot_shift > x_width ? dot_shift : x_width;\n\t        last_line = line;\n\t        last_note = _note;\n\t      }\n\t\n\t      // Update state.\n\t      state.right_shift += x_width;\n\t      return true;\n\t    }\n\t\n\t    /**\r\n\t     * @constructor\r\n\t     */\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'dots';\n\t    }\n\t  }]);\n\t\n\t  function Dot() {\n\t    _classCallCheck(this, Dot);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Dot.__proto__ || Object.getPrototypeOf(Dot)).call(this));\n\t\n\t    _this.setAttribute('type', 'Dot');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.RIGHT;\n\t\n\t    _this.radius = 2;\n\t    _this.setWidth(5);\n\t    _this.dot_shiftY = 0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Dot, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Dot.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t\n\t      if (this.note.getCategory() === 'gracenotes') {\n\t        this.radius *= 0.50;\n\t        this.setWidth(3);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setDotShiftY',\n\t    value: function setDotShiftY(y) {\n\t      this.dot_shiftY = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.note || this.index === null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n\t      }\n\t\n\t      var lineSpace = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t\n\t      // Set the starting y coordinate to the base of the stem for TabNotes\n\t      if (this.note.getCategory() === 'tabnotes') {\n\t        start.y = this.note.getStemExtents().baseY;\n\t      }\n\t\n\t      var x = start.x + this.x_shift + this.width - this.radius;\n\t      var y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n\t      var ctx = this.context;\n\t\n\t      ctx.beginPath();\n\t      ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n\t      ctx.fill();\n\t    }\n\t  }]);\n\n\t  return Dot;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ModifierContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This class implements various types of modifiers to notes (e.g. bends,\n\t// fingering positions etc.)\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _strokes = __webpack_require__(35);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _ornament = __webpack_require__(38);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (ModifierContext.DEBUG) _vex.Vex.L('Vex.Flow.ModifierContext', args);\n\t}\n\t\n\tvar ModifierContext = exports.ModifierContext = function () {\n\t  function ModifierContext() {\n\t    _classCallCheck(this, ModifierContext);\n\t\n\t    // Current modifiers\n\t    this.modifiers = {};\n\t\n\t    // Formatting data.\n\t    this.preFormatted = false;\n\t    this.postFormatted = false;\n\t    this.width = 0;\n\t    this.spacing = 0;\n\t    this.state = {\n\t      left_shift: 0,\n\t      right_shift: 0,\n\t      text_line: 0,\n\t      top_text_line: 0\n\t    };\n\t\n\t    // Add new modifiers to this array. The ordering is significant -- lower\n\t    // modifiers are formatted and rendered before higher ones.\n\t    this.PREFORMAT = [_stavenote.StaveNote, _dot.Dot, _frethandfinger.FretHandFinger, _accidental.Accidental, _gracenotegroup.GraceNoteGroup, _notesubgroup.NoteSubGroup, _strokes.Stroke, _stringnumber.StringNumber, _articulation.Articulation, _ornament.Ornament, _annotation.Annotation, _bend.Bend, _vibrato.Vibrato];\n\t\n\t    // If post-formatting is required for an element, add it to this array.\n\t    this.POSTFORMAT = [_stavenote.StaveNote];\n\t  }\n\t\n\t  _createClass(ModifierContext, [{\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier) {\n\t      var type = modifier.getCategory();\n\t      if (!this.modifiers[type]) this.modifiers[type] = [];\n\t      this.modifiers[type].push(modifier);\n\t      modifier.setModifierContext(this);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers(type) {\n\t      return this.modifiers[type];\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getExtraLeftPx',\n\t    value: function getExtraLeftPx() {\n\t      return this.state.left_shift;\n\t    }\n\t  }, {\n\t    key: 'getExtraRightPx',\n\t    value: function getExtraRightPx() {\n\t      return this.state.right_shift;\n\t    }\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      if (!this.formatted) {\n\t        throw new _vex.Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n\t      }\n\t\n\t      return {\n\t        width: this.state.left_shift + this.state.right_shift + this.spacing,\n\t        spacing: this.spacing,\n\t        extra_left_px: this.state.left_shift,\n\t        extra_right_px: this.state.right_shift\n\t      };\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this = this;\n\t\n\t      if (this.preFormatted) return;\n\t      this.PREFORMAT.forEach(function (modifier) {\n\t        L('Preformatting ModifierContext: ', modifier.CATEGORY);\n\t        modifier.format(_this.getModifiers(modifier.CATEGORY), _this.state, _this);\n\t      });\n\t\n\t      // Update width of this modifier context\n\t      this.width = this.state.left_shift + this.state.right_shift;\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      var _this2 = this;\n\t\n\t      if (this.postFormatted) return;\n\t      this.POSTFORMAT.forEach(function (modifier) {\n\t        L('Postformatting ModifierContext: ', modifier.CATEGORY);\n\t        modifier.postFormat(_this2.getModifiers(modifier.CATEGORY), _this2);\n\t      });\n\t    }\n\t  }]);\n\n\t  return ModifierContext;\n\t}();\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FretHandFinger = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t// Author Larry Kuhns 2013\n\t// Class to draws string numbers into the notation.\n\t\n\t/**\r\n\t * @constructor\r\n\t */\n\tvar FretHandFinger = exports.FretHandFinger = function (_Modifier) {\n\t  _inherits(FretHandFinger, _Modifier);\n\t\n\t  _createClass(FretHandFinger, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange fingerings inside a ModifierContext.\n\t    value: function format(nums, state) {\n\t      var left_shift = state.left_shift;\n\t      var right_shift = state.right_shift;\n\t\n\t      var num_spacing = 1;\n\t\n\t      if (!nums || nums.length === 0) return false;\n\t\n\t      var nums_list = [];\n\t      var prev_note = null;\n\t      var shiftLeft = 0;\n\t      var shiftRight = 0;\n\t\n\t      for (var i = 0; i < nums.length; ++i) {\n\t        var num = nums[i];\n\t        var note = num.getNote();\n\t        var pos = num.getPosition();\n\t        var props = note.getKeyProps()[num.getIndex()];\n\t        if (note !== prev_note) {\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            var props_tmp = note.getKeyProps()[n];\n\t            if (left_shift === 0) {\n\t              shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\n\t            }\n\t            if (right_shift === 0) {\n\t              shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\n\t            }\n\t          }\n\t          prev_note = note;\n\t        }\n\t\n\t        nums_list.push({\n\t          note: note,\n\t          num: num,\n\t          pos: pos,\n\t          line: props.line,\n\t          shiftL: shiftLeft,\n\t          shiftR: shiftRight\n\t        });\n\t      }\n\t\n\t      // Sort fingernumbers by line number.\n\t      nums_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      var numShiftL = 0;\n\t      var numShiftR = 0;\n\t      var xWidthL = 0;\n\t      var xWidthR = 0;\n\t      var lastLine = null;\n\t      var lastNote = null;\n\t\n\t      for (var _i = 0; _i < nums_list.length; ++_i) {\n\t        var num_shift = 0;\n\t        var _nums_list$_i = nums_list[_i];\n\t        var _note = _nums_list$_i.note;\n\t        var _pos = _nums_list$_i.pos;\n\t        var _num = _nums_list$_i.num;\n\t        var line = _nums_list$_i.line;\n\t        var shiftL = _nums_list$_i.shiftL;\n\t        var shiftR = _nums_list$_i.shiftR;\n\t\n\t        // Reset the position of the string number every line.\n\t\n\t        if (line !== lastLine || _note !== lastNote) {\n\t          numShiftL = left_shift + shiftL;\n\t          numShiftR = right_shift + shiftR;\n\t        }\n\t\n\t        var numWidth = _num.getWidth() + num_spacing;\n\t        if (_pos === _modifier.Modifier.Position.LEFT) {\n\t          _num.setXShift(left_shift + numShiftL);\n\t          num_shift = left_shift + numWidth; // spacing\n\t          xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n\t        } else if (_pos === _modifier.Modifier.Position.RIGHT) {\n\t          _num.setXShift(numShiftR);\n\t          num_shift = shiftRight + numWidth; // spacing\n\t          xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n\t        }\n\t        lastLine = line;\n\t        lastNote = _note;\n\t      }\n\t\n\t      state.left_shift += xWidthL;\n\t      state.right_shift += xWidthR;\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'frethandfinger';\n\t    }\n\t  }]);\n\t\n\t  function FretHandFinger(number) {\n\t    _classCallCheck(this, FretHandFinger);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FretHandFinger.__proto__ || Object.getPrototypeOf(FretHandFinger)).call(this));\n\t\n\t    _this.setAttribute('type', 'FretHandFinger');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.finger = number;\n\t    _this.width = 7;\n\t    _this.position = _modifier.Modifier.Position.LEFT; // Default position above stem or note head\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.x_offset = 0; // Horizontal offset from default\n\t    _this.y_offset = 0; // Vertical offset from default\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 9,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FretHandFinger, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return FretHandFinger.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setFretHandFinger',\n\t    value: function setFretHandFinger(number) {\n\t      this.finger = number;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetX',\n\t    value: function setOffsetX(x) {\n\t      this.x_offset = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetY',\n\t    value: function setOffsetY(y) {\n\t      this.y_offset = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note || this.index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var dot_x = start.x + this.x_shift + this.x_offset;\n\t      var dot_y = start.y + this.y_shift + this.y_offset + 5;\n\t\n\t      switch (this.position) {\n\t        case _modifier.Modifier.Position.ABOVE:\n\t          dot_x -= 4;\n\t          dot_y -= 12;\n\t          break;\n\t        case _modifier.Modifier.Position.BELOW:\n\t          dot_x -= 2;\n\t          dot_y += 10;\n\t          break;\n\t        case _modifier.Modifier.Position.LEFT:\n\t          dot_x -= this.width;\n\t          break;\n\t        case _modifier.Modifier.Position.RIGHT:\n\t          dot_x += 1;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPostion', 'The position ' + this.position + ' does not exist');\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      ctx.fillText('' + this.finger, dot_x, dot_y);\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return FretHandFinger;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Accidental = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t// @author Greg Ristow (modifications)\n\t//\n\t// ## Description\n\t//\n\t// This file implements accidentals as modifiers that can be attached to\n\t// notes. Support is included for both western and microtonal accidentals.\n\t//\n\t// See `tests/accidental_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Accidental.DEBUG) _vex.Vex.L('Vex.Flow.Accidental', args);\n\t}\n\t\n\tvar getGlyphWidth = function getGlyphWidth(glyph) {\n\t  return glyph.getMetrics().width;\n\t};\n\t\n\t// An `Accidental` inherits from `Modifier`, and is formatted within a\n\t// `ModifierContext`.\n\t\n\tvar Accidental = exports.Accidental = function (_Modifier) {\n\t  _inherits(Accidental, _Modifier);\n\t\n\t  _createClass(Accidental, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange accidentals inside a ModifierContext.\n\t    value: function format(accidentals, state) {\n\t      var _this2 = this;\n\t\n\t      var noteheadAccidentalPadding = 1;\n\t      var leftShift = state.left_shift + noteheadAccidentalPadding;\n\t      var accidentalSpacing = 3;\n\t\n\t      // If there are no accidentals, we needn't format their positions\n\t      if (!accidentals || accidentals.length === 0) return;\n\t\n\t      var accList = [];\n\t      var prevNote = null;\n\t      var shiftL = 0;\n\t\n\t      // First determine the accidentals' Y positions from the note.keys\n\t      var propsTemp = void 0;\n\t      for (var i = 0; i < accidentals.length; ++i) {\n\t        var acc = accidentals[i];\n\t        var note = acc.getNote();\n\t        var stave = note.getStave();\n\t        var props = note.getKeyProps()[acc.getIndex()];\n\t        if (note !== prevNote) {\n\t          // Iterate through all notes to get the displaced pixels\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            propsTemp = note.getKeyProps()[n];\n\t            shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n\t          }\n\t          prevNote = note;\n\t        }\n\t        if (stave !== null) {\n\t          var lineSpace = stave.options.spacing_between_lines_px;\n\t          var y = stave.getYForLine(props.line);\n\t          var accLine = Math.round(y / lineSpace * 2) / 2;\n\t          accList.push({ y: y, line: accLine, shift: shiftL, acc: acc, lineSpace: lineSpace });\n\t        } else {\n\t          accList.push({ line: props.line, shift: shiftL, acc: acc });\n\t        }\n\t      }\n\t\n\t      // Sort accidentals by line number.\n\t      accList.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      // FIXME: Confusing name. Each object in this array has a property called `line`.\n\t      // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n\t      var lineList = [];\n\t\n\t      // amount by which all accidentals must be shifted right or left for\n\t      // stem flipping, notehead shifting concerns.\n\t      var accShift = 0;\n\t      var previousLine = null;\n\t\n\t      // Create an array of unique line numbers (lineList) from accList\n\t      for (var _i = 0; _i < accList.length; _i++) {\n\t        var _acc = accList[_i];\n\t\n\t        // if this is the first line, or a new line, add a lineList\n\t        if (previousLine === null || previousLine !== _acc.line) {\n\t          lineList.push({\n\t            line: _acc.line,\n\t            flatLine: true,\n\t            dblSharpLine: true,\n\t            numAcc: 0,\n\t            width: 0\n\t          });\n\t        }\n\t        // if this accidental is not a flat, the accidental needs 3.0 lines lower\n\t        // clearance instead of 2.5 lines for b or bb.\n\t        // FIXME: Naming could use work. acc.acc is very awkward\n\t        if (_acc.acc.type !== 'b' && _acc.acc.type !== 'bb') {\n\t          lineList[lineList.length - 1].flatLine = false;\n\t        }\n\t\n\t        // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n\t        if (_acc.acc.type !== '##') {\n\t          lineList[lineList.length - 1].dblSharpLine = false;\n\t        }\n\t\n\t        // Track how many accidentals are on this line:\n\t        lineList[lineList.length - 1].numAcc++;\n\t\n\t        // Track the total x_offset needed for this line which will be needed\n\t        // for formatting lines w/ multiple accidentals:\n\t\n\t        // width = accidental width + universal spacing between accidentals\n\t        lineList[lineList.length - 1].width += _acc.acc.getWidth() + accidentalSpacing;\n\t\n\t        // if this accShift is larger, use it to keep first column accidentals in the same line\n\t        accShift = _acc.shift > accShift ? _acc.shift : accShift;\n\t\n\t        previousLine = _acc.line;\n\t      }\n\t\n\t      // ### Place Accidentals in Columns\n\t      //\n\t      // Default to a classic triangular layout (middle accidental farthest left),\n\t      // but follow exceptions as outlined in G. Read's _Music Notation_ and\n\t      // Elaine Gould's _Behind Bars_.\n\t      //\n\t      // Additionally, this implements different vertical collision rules for\n\t      // flats (only need 2.5 lines clearance below) and double sharps (only\n\t      // need 2.5 lines of clearance above or below).\n\t      //\n\t      // Classic layouts and exception patterns are found in the 'tables.js'\n\t      // in 'Vex.Flow.accidentalColumnsTable'\n\t      //\n\t      // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n\t      // using as few columns as possible for the verticle structure.\n\t      //\n\t      // TODO (?): Allow column to be specified for an accidental at run-time?\n\t\n\t      var totalColumns = 0;\n\t\n\t      // establish the boundaries for a group of notes with clashing accidentals:\n\t\n\t      var _loop = function _loop(_i3) {\n\t        var noFurtherConflicts = false;\n\t        var groupStart = _i3;\n\t        var groupEnd = _i3;\n\t\n\t        while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n\t          // if this note conflicts with the next:\n\t          if (_this2.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n\t            // include the next note in the group:\n\t            groupEnd++;\n\t          } else {\n\t            noFurtherConflicts = true;\n\t          }\n\t        }\n\t\n\t        // Gets an a line from the `lineList`, relative to the current group\n\t        var getGroupLine = function getGroupLine(index) {\n\t          return lineList[groupStart + index];\n\t        };\n\t        var getGroupLines = function getGroupLines(indexes) {\n\t          return indexes.map(getGroupLine);\n\t        };\n\t        var lineDifference = function lineDifference(indexA, indexB) {\n\t          var _getGroupLines$map = getGroupLines([indexA, indexB]).map(function (item) {\n\t            return item.line;\n\t          });\n\t\n\t          var _getGroupLines$map2 = _slicedToArray(_getGroupLines$map, 2);\n\t\n\t          var a = _getGroupLines$map2[0];\n\t          var b = _getGroupLines$map2[1];\n\t\n\t          return a - b;\n\t        };\n\t\n\t        var notColliding = function notColliding() {\n\t          for (var _len2 = arguments.length, indexPairs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t            indexPairs[_key2] = arguments[_key2];\n\t          }\n\t\n\t          return indexPairs.map(getGroupLines).every(function (lines) {\n\t            return !_this2.checkCollision.apply(_this2, _toConsumableArray(lines));\n\t          });\n\t        };\n\t\n\t        // Set columns for the lines in this group:\n\t        var groupLength = groupEnd - groupStart + 1;\n\t\n\t        // Set the accidental column for each line of the group\n\t        var endCase = _this2.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\t\n\t        switch (groupLength) {\n\t          case 3:\n\t            if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n\t              endCase = 'second_on_bottom';\n\t            }\n\t            break;\n\t          case 4:\n\t            if (notColliding([0, 2], [1, 3])) {\n\t              endCase = 'spaced_out_tetrachord';\n\t            }\n\t            break;\n\t          case 5:\n\t            if (endCase === 'b' && notColliding([1, 3])) {\n\t              endCase = 'spaced_out_pentachord';\n\t              if (notColliding([0, 2], [2, 4])) {\n\t                endCase = 'very_spaced_out_pentachord';\n\t              }\n\t            }\n\t            break;\n\t          case 6:\n\t            if (notColliding([0, 3], [1, 4], [2, 5])) {\n\t              endCase = 'spaced_out_hexachord';\n\t            }\n\t            if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n\t              endCase = 'very_spaced_out_hexachord';\n\t            }\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t\n\t        var groupMember = void 0;\n\t        var column = void 0;\n\t        // If the group contains more than seven members, use ascending parallel lines\n\t        // of accidentals, using as few columns as possible while avoiding collisions.\n\t        if (groupLength >= 7) {\n\t          // First, determine how many columns to use:\n\t          var patternLength = 2;\n\t          var collisionDetected = true;\n\t          while (collisionDetected === true) {\n\t            collisionDetected = false;\n\t            for (var line = 0; line + patternLength < lineList.length; line++) {\n\t              if (_this2.checkCollision(lineList[line], lineList[line + patternLength])) {\n\t                collisionDetected = true;\n\t                patternLength++;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          // Then, assign a column to each line of accidentals\n\t          for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n\t            column = (groupMember - _i3) % patternLength + 1;\n\t            lineList[groupMember].column = column;\n\t            totalColumns = totalColumns > column ? totalColumns : column;\n\t          }\n\t\n\t          // Otherwise, if the group contains fewer than seven members, use the layouts from\n\t          // the accidentalsColumnsTable housed in tables.js.\n\t        } else {\n\t          for (groupMember = _i3; groupMember <= groupEnd; groupMember++) {\n\t            column = _tables.Flow.accidentalColumnsTable[groupLength][endCase][groupMember - _i3];\n\t            lineList[groupMember].column = column;\n\t            totalColumns = totalColumns > column ? totalColumns : column;\n\t          }\n\t        }\n\t\n\t        // Increment i to the last note that was set, so that if a lower set of notes\n\t        // does not conflict at all with this group, it can have its own classic shape.\n\t        _i3 = groupEnd;\n\t        _i2 = _i3;\n\t      };\n\t\n\t      for (var _i2 = 0; _i2 < lineList.length; _i2++) {\n\t        _loop(_i2);\n\t      }\n\t\n\t      // ### Convert Columns to x_offsets\n\t      //\n\t      // This keeps columns aligned, even if they have different accidentals within them\n\t      // which sometimes results in a larger x_offset than is an accidental might need\n\t      // to preserve the symmetry of the accidental shape.\n\t      //\n\t      // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n\t      // music with complex chord clusters.\n\t      //\n\t      // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n\t      // parallel columns.\n\t\n\t      // track each column's max width, which will be used as initial shift of later columns:\n\t      var columnWidths = [];\n\t      var columnXOffsets = [];\n\t      for (var _i4 = 0; _i4 <= totalColumns; _i4++) {\n\t        columnWidths[_i4] = 0;\n\t        columnXOffsets[_i4] = 0;\n\t      }\n\t\n\t      columnWidths[0] = accShift + leftShift;\n\t      columnXOffsets[0] = accShift + leftShift;\n\t\n\t      // Fill columnWidths with widest needed x-space;\n\t      // this is what keeps the columns parallel.\n\t      lineList.forEach(function (line) {\n\t        if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n\t      });\n\t\n\t      for (var _i5 = 1; _i5 < columnWidths.length; _i5++) {\n\t        // this column's offset = this column's width + previous column's offset\n\t        columnXOffsets[_i5] = columnWidths[_i5] + columnXOffsets[_i5 - 1];\n\t      }\n\t\n\t      var totalShift = columnXOffsets[columnXOffsets.length - 1];\n\t      // Set the xShift for each accidental according to column offsets:\n\t      var accCount = 0;\n\t      lineList.forEach(function (line) {\n\t        var lineWidth = 0;\n\t        var lastAccOnLine = accCount + line.numAcc;\n\t        // handle all of the accidentals on a given line:\n\t        for (accCount; accCount < lastAccOnLine; accCount++) {\n\t          var xShift = columnXOffsets[line.column - 1] + lineWidth;\n\t          accList[accCount].acc.setXShift(xShift);\n\t          // keep track of the width of accidentals we've added so far, so that when\n\t          // we loop, we add space for them.\n\t          lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n\t          L('Line, accCount, shift: ', line.line, accCount, xShift);\n\t        }\n\t      });\n\t\n\t      // update the overall layout with the full width of the accidental shapes:\n\t      state.left_shift += totalShift;\n\t    }\n\t\n\t    // Helper function to determine whether two lines of accidentals collide vertically\n\t\n\t  }, {\n\t    key: 'checkCollision',\n\t    value: function checkCollision(line1, line2) {\n\t      var clearance = line2.line - line1.line;\n\t      var clearanceRequired = 3;\n\t      // But less clearance is required for certain accidentals: b, bb and ##.\n\t      if (clearance > 0) {\n\t        // then line 2 is on top\n\t        clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n\t        if (line1.dblSharpLine) clearance -= 0.5;\n\t      } else {\n\t        // line 1 is on top\n\t        clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n\t        if (line2.dblSharpLine) clearance -= 0.5;\n\t      }\n\t      var collision = Math.abs(clearance) < clearanceRequired;\n\t      L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n\t      return collision;\n\t    }\n\t\n\t    // Use this method to automatically apply accidentals to a set of `voices`.\n\t    // The accidentals will be remembered between all the voices provided.\n\t    // Optionally, you can also provide an initial `keySignature`.\n\t\n\t  }, {\n\t    key: 'applyAccidentals',\n\t    value: function applyAccidentals(voices, keySignature) {\n\t      var tickPositions = [];\n\t      var tickNoteMap = {};\n\t\n\t      // Sort the tickables in each voice by their tick position in the voice\n\t      voices.forEach(function (voice) {\n\t        var tickPosition = new _fraction.Fraction(0, 1);\n\t        var notes = voice.getTickables();\n\t        notes.forEach(function (note) {\n\t          if (note.shouldIgnoreTicks()) return;\n\t\n\t          var notesAtPosition = tickNoteMap[tickPosition.value()];\n\t\n\t          if (!notesAtPosition) {\n\t            tickPositions.push(tickPosition.value());\n\t            tickNoteMap[tickPosition.value()] = [note];\n\t          } else {\n\t            notesAtPosition.push(note);\n\t          }\n\t\n\t          tickPosition.add(note.getTicks());\n\t        });\n\t      });\n\t\n\t      var music = new _music.Music();\n\t\n\t      // Default key signature is C major\n\t      if (!keySignature) keySignature = 'C';\n\t\n\t      // Get the scale map, which represents the current state of each pitch\n\t      var scaleMap = music.createScaleMap(keySignature);\n\t\n\t      tickPositions.forEach(function (tick) {\n\t        var notes = tickNoteMap[tick];\n\t\n\t        // Array to store all pitches that modified accidental states\n\t        // at this tick position\n\t        var modifiedPitches = [];\n\t\n\t        var processNote = function processNote(note) {\n\t          if (note.isRest() || note.shouldIgnoreTicks()) return;\n\t\n\t          // Go through each key and determine if an accidental should be\n\t          // applied\n\t          note.keys.forEach(function (keyString, keyIndex) {\n\t            var key = music.getNoteParts(keyString.split('/')[0]);\n\t\n\t            // Force a natural for every key without an accidental\n\t            var accidentalString = key.accidental || 'n';\n\t            var pitch = key.root + accidentalString;\n\t\n\t            // Determine if the current pitch has the same accidental\n\t            // as the scale state\n\t            var sameAccidental = scaleMap[key.root] === pitch;\n\t\n\t            // Determine if an identical pitch in the chord already\n\t            // modified the accidental state\n\t            var previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\t\n\t            // Add the accidental to the StaveNote\n\t            if (!sameAccidental || sameAccidental && previouslyModified) {\n\t              // Modify the scale map so that the root pitch has an\n\t              // updated state\n\t              scaleMap[key.root] = pitch;\n\t\n\t              // Create the accidental\n\t              var accidental = new Accidental(accidentalString);\n\t\n\t              // Attach the accidental to the StaveNote\n\t              note.addAccidental(keyIndex, accidental);\n\t\n\t              // Add the pitch to list of pitches that modified accidentals\n\t              modifiedPitches.push(pitch);\n\t            }\n\t          });\n\t\n\t          // process grace notes\n\t          note.getModifiers().forEach(function (modifier) {\n\t            if (modifier.getCategory() === 'gracenotegroups') {\n\t              modifier.getGraceNotes().forEach(processNote);\n\t            }\n\t          });\n\t        };\n\t\n\t        notes.forEach(processNote);\n\t      });\n\t    }\n\t\n\t    // Create accidental. `type` can be a value from the\n\t    // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n\t    // example: `#`, `##`, `b`, `n`, etc.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'accidentals';\n\t    }\n\t  }]);\n\t\n\t  function Accidental() {\n\t    var type = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t\n\t    _classCallCheck(this, Accidental);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Accidental.__proto__ || Object.getPrototypeOf(Accidental)).call(this));\n\t\n\t    _this.setAttribute('type', 'Accidental');\n\t\n\t    L('New accidental: ', type);\n\t\n\t    _this.note = null;\n\t    // The `index` points to a specific note in a chord.\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t\n\t    _this.render_options = {\n\t      // Font size for glyphs\n\t      font_scale: 38,\n\t\n\t      // Length of stroke across heads above or below the stave.\n\t      stroke_px: 3,\n\t\n\t      // Padding between accidental and parentheses on each side\n\t      parenLeftPadding: 2,\n\t      parenRightPadding: 2\n\t    };\n\t\n\t    _this.accidental = _tables.Flow.accidentalCodes(_this.type);\n\t    if (!_this.accidental) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Unknown accidental type: ' + type);\n\t    }\n\t\n\t    // Cautionary accidentals have parentheses around them\n\t    _this.cautionary = false;\n\t    _this.parenLeft = null;\n\t    _this.parenRight = null;\n\t\n\t    _this.reset();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Accidental, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var fontScale = this.render_options.font_scale;\n\t      this.glyph = new _glyph.Glyph(this.accidental.code, fontScale);\n\t      this.glyph.setOriginX(1.0);\n\t\n\t      if (this.cautionary) {\n\t        this.parenLeft = new _glyph.Glyph(_tables.Flow.accidentalCodes('{').code, fontScale);\n\t        this.parenRight = new _glyph.Glyph(_tables.Flow.accidentalCodes('}').code, fontScale);\n\t        this.parenLeft.setOriginX(1.0);\n\t        this.parenRight.setOriginX(1.0);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Accidental.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      var parenWidth = this.cautionary ? getGlyphWidth(this.parenLeft) + getGlyphWidth(this.parenRight) + this.render_options.parenLeftPadding + this.render_options.parenRightPadding : 0;\n\t\n\t      return getGlyphWidth(this.glyph) + parenWidth;\n\t    }\n\t\n\t    // Attach this accidental to `note`, which must be a `StaveNote`.\n\t\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      if (!note) {\n\t        throw new _vex.Vex.RERR('ArgumentError', 'Bad note value: ' + note);\n\t      }\n\t\n\t      this.note = note;\n\t\n\t      // Accidentals attached to grace notes are rendered smaller.\n\t      if (this.note.getCategory() === 'gracenotes') {\n\t        this.render_options.font_scale = 25;\n\t        this.reset();\n\t      }\n\t    }\n\t\n\t    // If called, draws parenthesis around accidental.\n\t\n\t  }, {\n\t    key: 'setAsCautionary',\n\t    value: function setAsCautionary() {\n\t      this.cautionary = true;\n\t      this.render_options.font_scale = 28;\n\t      this.reset();\n\t      return this;\n\t    }\n\t\n\t    // Render accidental onto canvas.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var context = this.context;\n\t      var type = this.type;\n\t      var position = this.position;\n\t      var note = this.note;\n\t      var index = this.index;\n\t      var cautionary = this.cautionary;\n\t      var x_shift = this.x_shift;\n\t      var y_shift = this.y_shift;\n\t      var glyph = this.glyph;\n\t      var parenLeft = this.parenLeft;\n\t      var parenRight = this.parenRight;\n\t      var _render_options = this.render_options;\n\t      var parenLeftPadding = _render_options.parenLeftPadding;\n\t      var parenRightPadding = _render_options.parenRightPadding;\n\t\n\t\n\t      this.checkContext();\n\t\n\t      if (!(note && index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n\t      }\n\t\n\t      // Figure out the start `x` and `y` coordinates for note and index.\n\t      var start = note.getModifierStartXY(position, index);\n\t      var accX = start.x + x_shift;\n\t      var accY = start.y + y_shift;\n\t      L('Rendering: ', type, accX, accY);\n\t\n\t      if (!cautionary) {\n\t        glyph.render(context, accX, accY);\n\t      } else {\n\t        // Render the accidental in parentheses.\n\t        parenRight.render(context, accX, accY);\n\t        accX -= getGlyphWidth(parenRight);\n\t        accX -= parenRightPadding;\n\t        accX -= this.accidental.parenRightPaddingAdjustment;\n\t        glyph.render(context, accX, accY);\n\t        accX -= getGlyphWidth(glyph);\n\t        accX -= parenLeftPadding;\n\t        parenLeft.render(context, accX, accY);\n\t      }\n\t\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return Accidental;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Music = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements some standard music theory routines.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Music = exports.Music = function () {\n\t  function Music() {\n\t    _classCallCheck(this, Music);\n\t  }\n\t\n\t  _createClass(Music, [{\n\t    key: 'isValidNoteValue',\n\t    value: function isValidNoteValue(note) {\n\t      if (note == null || note < 0 || note >= Music.NUM_TONES) {\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'isValidIntervalValue',\n\t    value: function isValidIntervalValue(interval) {\n\t      return this.isValidNoteValue(interval);\n\t    }\n\t  }, {\n\t    key: 'getNoteParts',\n\t    value: function getNoteParts(noteString) {\n\t      if (!noteString || noteString.length < 1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      if (noteString.length > 3) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      var note = noteString.toLowerCase();\n\t\n\t      var regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n\t      var match = regex.exec(note);\n\t\n\t      if (match != null) {\n\t        var root = match[1];\n\t        var accidental = match[2];\n\t\n\t        return {\n\t          root: root,\n\t          accidental: accidental\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getKeyParts',\n\t    value: function getKeyParts(keyString) {\n\t      if (!keyString || keyString.length < 1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n\t      }\n\t\n\t      var key = keyString.toLowerCase();\n\t\n\t      // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n\t      var regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n\t      var match = regex.exec(key);\n\t\n\t      if (match != null) {\n\t        var root = match[1];\n\t        var accidental = match[2];\n\t        var type = match[3];\n\t\n\t        // Unspecified type implies major\n\t        if (!type) type = 'M';\n\t\n\t        return {\n\t          root: root,\n\t          accidental: accidental,\n\t          type: type\n\t        };\n\t      } else {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getNoteValue',\n\t    value: function getNoteValue(noteString) {\n\t      var value = Music.noteValues[noteString];\n\t      if (value == null) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n\t      }\n\t\n\t      return value.int_val;\n\t    }\n\t  }, {\n\t    key: 'getIntervalValue',\n\t    value: function getIntervalValue(intervalString) {\n\t      var value = Music.intervals[intervalString];\n\t      if (value == null) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n\t      }\n\t\n\t      return value;\n\t    }\n\t  }, {\n\t    key: 'getCanonicalNoteName',\n\t    value: function getCanonicalNoteName(noteValue) {\n\t      if (!this.isValidNoteValue(noteValue)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid note value: ' + noteValue);\n\t      }\n\t\n\t      return Music.canonical_notes[noteValue];\n\t    }\n\t  }, {\n\t    key: 'getCanonicalIntervalName',\n\t    value: function getCanonicalIntervalName(intervalValue) {\n\t      if (!this.isValidIntervalValue(intervalValue)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid interval value: ' + intervalValue);\n\t      }\n\t\n\t      return Music.diatonic_intervals[intervalValue];\n\t    }\n\t\n\t    /* Given a note, interval, and interval direction, product the\n\t     * relative note.\n\t     */\n\t\n\t  }, {\n\t    key: 'getRelativeNoteValue',\n\t    value: function getRelativeNoteValue(noteValue, intervalValue, direction) {\n\t      if (direction == null) direction = 1;\n\t\n\t      if (direction !== 1 && direction !== -1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid direction: ' + direction);\n\t      }\n\t\n\t      var sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n\t      if (sum < 0) sum += Music.NUM_TONES;\n\t\n\t      return sum;\n\t    }\n\t  }, {\n\t    key: 'getRelativeNoteName',\n\t    value: function getRelativeNoteName(root, noteValue) {\n\t      var parts = this.getNoteParts(root);\n\t      var rootValue = this.getNoteValue(parts.root);\n\t      var interval = noteValue - rootValue;\n\t\n\t      if (Math.abs(interval) > Music.NUM_TONES - 3) {\n\t        var multiplier = 1;\n\t        if (interval > 0) multiplier = -1;\n\t\n\t        // Possibly wrap around. (Add +1 for modulo operator)\n\t        var reverse_interval = (noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES * multiplier;\n\t\n\t        if (Math.abs(reverse_interval) > 2) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue + ')');\n\t        } else {\n\t          interval = reverse_interval;\n\t        }\n\t      }\n\t\n\t      if (Math.abs(interval) > 2) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Notes not related: ' + root + ', ' + noteValue + ')');\n\t      }\n\t\n\t      var relativeNoteName = parts.root;\n\t      if (interval > 0) {\n\t        for (var i = 1; i <= interval; ++i) {\n\t          relativeNoteName += '#';\n\t        }\n\t      } else if (interval < 0) {\n\t        for (var _i = -1; _i >= interval; --_i) {\n\t          relativeNoteName += 'b';\n\t        }\n\t      }\n\t\n\t      return relativeNoteName;\n\t    }\n\t\n\t    /* Return scale tones, given intervals. Each successive interval is\n\t     * relative to the previous one, e.g., Major Scale:\n\t     *\n\t     *   TTSTTTS = [2,2,1,2,2,2,1]\n\t     *\n\t     * When used with key = 0, returns C scale (which is isomorphic to\n\t     * interval list).\n\t     */\n\t\n\t  }, {\n\t    key: 'getScaleTones',\n\t    value: function getScaleTones(key, intervals) {\n\t      var tones = [key];\n\t\n\t      var nextNote = key;\n\t      for (var i = 0; i < intervals.length; i += 1) {\n\t        nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n\t        if (nextNote !== key) tones.push(nextNote);\n\t      }\n\t\n\t      return tones;\n\t    }\n\t\n\t    /* Returns the interval of a note, given a diatonic scale.\n\t     *\n\t     * E.g., Given the scale C, and the note E, returns M3\n\t     */\n\t\n\t  }, {\n\t    key: 'getIntervalBetween',\n\t    value: function getIntervalBetween(note1, note2, direction) {\n\t      if (direction == null) direction = 1;\n\t\n\t      if (direction !== 1 && direction !== -1) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid direction: ' + direction);\n\t      }\n\t\n\t      if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid notes: ' + note1 + ', ' + note2);\n\t      }\n\t\n\t      var difference = direction === 1 ? note2 - note1 : note1 - note2;\n\t\n\t      if (difference < 0) difference += Music.NUM_TONES;\n\t\n\t      return difference;\n\t    }\n\t\n\t    // Create a scale map that represents the pitch state for a\n\t    // `keySignature`. For example, passing a `G` to `keySignature` would\n\t    // return a scale map with every note naturalized except for `F` which\n\t    // has an `F#` state.\n\t\n\t  }, {\n\t    key: 'createScaleMap',\n\t    value: function createScaleMap(keySignature) {\n\t      var keySigParts = this.getKeyParts(keySignature);\n\t      var scaleName = Music.scaleTypes[keySigParts.type];\n\t\n\t      var keySigString = keySigParts.root;\n\t      if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\t\n\t      if (!scaleName) throw new _vex.Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\t\n\t      var scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n\t      var noteLocation = Music.root_indices[keySigParts.root];\n\t\n\t      var scaleMap = {};\n\t      for (var i = 0; i < Music.roots.length; ++i) {\n\t        var index = (noteLocation + i) % Music.roots.length;\n\t        var rootName = Music.roots[index];\n\t        var noteName = this.getRelativeNoteName(rootName, scale[i]);\n\t\n\t        if (noteName.length === 1) {\n\t          noteName += 'n';\n\t        }\n\t\n\t        scaleMap[rootName] = noteName;\n\t      }\n\t\n\t      return scaleMap;\n\t    }\n\t  }], [{\n\t    key: 'NUM_TONES',\n\t    get: function get() {\n\t      return 12;\n\t    }\n\t  }, {\n\t    key: 'roots',\n\t    get: function get() {\n\t      return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n\t    }\n\t  }, {\n\t    key: 'root_values',\n\t    get: function get() {\n\t      return [0, 2, 4, 5, 7, 9, 11];\n\t    }\n\t  }, {\n\t    key: 'root_indices',\n\t    get: function get() {\n\t      return {\n\t        'c': 0,\n\t        'd': 1,\n\t        'e': 2,\n\t        'f': 3,\n\t        'g': 4,\n\t        'a': 5,\n\t        'b': 6\n\t      };\n\t    }\n\t  }, {\n\t    key: 'canonical_notes',\n\t    get: function get() {\n\t      return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n\t    }\n\t  }, {\n\t    key: 'diatonic_intervals',\n\t    get: function get() {\n\t      return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n\t    }\n\t  }, {\n\t    key: 'diatonic_accidentals',\n\t    get: function get() {\n\t      return {\n\t        'unison': { note: 0, accidental: 0 },\n\t        'm2': { note: 1, accidental: -1 },\n\t        'M2': { note: 1, accidental: 0 },\n\t        'm3': { note: 2, accidental: -1 },\n\t        'M3': { note: 2, accidental: 0 },\n\t        'p4': { note: 3, accidental: 0 },\n\t        'dim5': { note: 4, accidental: -1 },\n\t        'p5': { note: 4, accidental: 0 },\n\t        'm6': { note: 5, accidental: -1 },\n\t        'M6': { note: 5, accidental: 0 },\n\t        'b7': { note: 6, accidental: -1 },\n\t        'M7': { note: 6, accidental: 0 },\n\t        'octave': { note: 7, accidental: 0 }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'intervals',\n\t    get: function get() {\n\t      return {\n\t        'u': 0, 'unison': 0,\n\t        'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n\t        '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n\t        'm3': 3, 'b3': 3, 'min3': 3,\n\t        'M3': 4, '3': 4, 'maj3': 4,\n\t        '4': 5, 'p4': 5,\n\t        '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n\t        '5': 7, 'p5': 7,\n\t        '#5': 8, 'b6': 8, 'aug5': 8,\n\t        '6': 9, 'M6': 9, 'maj6': 9,\n\t        'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n\t        'M7': 11, 'maj7': 11,\n\t        '8': 12, 'octave': 12\n\t      };\n\t    }\n\t  }, {\n\t    key: 'scales',\n\t    get: function get() {\n\t      return {\n\t        major: [2, 2, 1, 2, 2, 2, 1],\n\t        dorian: [2, 1, 2, 2, 2, 1, 2],\n\t        mixolydian: [2, 2, 1, 2, 2, 1, 2],\n\t        minor: [2, 1, 2, 2, 1, 2, 2]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'scaleTypes',\n\t    get: function get() {\n\t      return {\n\t        'M': Music.scales.major,\n\t        'm': Music.scales.minor\n\t      };\n\t    }\n\t  }, {\n\t    key: 'accidentals',\n\t    get: function get() {\n\t      return ['bb', 'b', 'n', '#', '##'];\n\t    }\n\t  }, {\n\t    key: 'noteValues',\n\t    get: function get() {\n\t      return {\n\t        'c': { root_index: 0, int_val: 0 },\n\t        'cn': { root_index: 0, int_val: 0 },\n\t        'c#': { root_index: 0, int_val: 1 },\n\t        'c##': { root_index: 0, int_val: 2 },\n\t        'cb': { root_index: 0, int_val: 11 },\n\t        'cbb': { root_index: 0, int_val: 10 },\n\t        'd': { root_index: 1, int_val: 2 },\n\t        'dn': { root_index: 1, int_val: 2 },\n\t        'd#': { root_index: 1, int_val: 3 },\n\t        'd##': { root_index: 1, int_val: 4 },\n\t        'db': { root_index: 1, int_val: 1 },\n\t        'dbb': { root_index: 1, int_val: 0 },\n\t        'e': { root_index: 2, int_val: 4 },\n\t        'en': { root_index: 2, int_val: 4 },\n\t        'e#': { root_index: 2, int_val: 5 },\n\t        'e##': { root_index: 2, int_val: 6 },\n\t        'eb': { root_index: 2, int_val: 3 },\n\t        'ebb': { root_index: 2, int_val: 2 },\n\t        'f': { root_index: 3, int_val: 5 },\n\t        'fn': { root_index: 3, int_val: 5 },\n\t        'f#': { root_index: 3, int_val: 6 },\n\t        'f##': { root_index: 3, int_val: 7 },\n\t        'fb': { root_index: 3, int_val: 4 },\n\t        'fbb': { root_index: 3, int_val: 3 },\n\t        'g': { root_index: 4, int_val: 7 },\n\t        'gn': { root_index: 4, int_val: 7 },\n\t        'g#': { root_index: 4, int_val: 8 },\n\t        'g##': { root_index: 4, int_val: 9 },\n\t        'gb': { root_index: 4, int_val: 6 },\n\t        'gbb': { root_index: 4, int_val: 5 },\n\t        'a': { root_index: 5, int_val: 9 },\n\t        'an': { root_index: 5, int_val: 9 },\n\t        'a#': { root_index: 5, int_val: 10 },\n\t        'a##': { root_index: 5, int_val: 11 },\n\t        'ab': { root_index: 5, int_val: 8 },\n\t        'abb': { root_index: 5, int_val: 7 },\n\t        'b': { root_index: 6, int_val: 11 },\n\t        'bn': { root_index: 6, int_val: 11 },\n\t        'b#': { root_index: 6, int_val: 0 },\n\t        'b##': { root_index: 6, int_val: 1 },\n\t        'bb': { root_index: 6, int_val: 10 },\n\t        'bbb': { root_index: 6, int_val: 9 }\n\t      };\n\t    }\n\t  }]);\n\n\t  return Music;\n\t}();\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NoteSubGroup = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2016\n\t//\n\t// ## Description\n\t//\n\t// This file implements `NoteSubGroup` which is used to format and\n\t// render notes as a `Modifier`\n\t// ex) ClefNote, TimeSigNote and BarNote.\n\t\n\tvar NoteSubGroup = exports.NoteSubGroup = function (_Modifier) {\n\t  _inherits(NoteSubGroup, _Modifier);\n\t\n\t  _createClass(NoteSubGroup, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange groups inside a `ModifierContext`\n\t    value: function format(groups, state) {\n\t      if (!groups || groups.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < groups.length; ++i) {\n\t        var group = groups[i];\n\t        group.preFormat();\n\t        width += group.getWidth();\n\t      }\n\t\n\t      state.left_shift += width;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'notesubgroup';\n\t    }\n\t  }]);\n\t\n\t  function NoteSubGroup(subNotes) {\n\t    var _ret;\n\t\n\t    _classCallCheck(this, NoteSubGroup);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NoteSubGroup.__proto__ || Object.getPrototypeOf(NoteSubGroup)).call(this));\n\t\n\t    _this.setAttribute('type', 'NoteSubGroup');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t    _this.subNotes = subNotes;\n\t    _this.subNotes.forEach(function (subNote) {\n\t      subNote.ignore_ticks = false;\n\t    });\n\t    _this.width = 0;\n\t    _this.preFormatted = false;\n\t\n\t    _this.formatter = new _formatter.Formatter();\n\t    _this.voice = new _voice.Voice({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }).setStrict(false);\n\t\n\t    _this.voice.addTickables(_this.subNotes);\n\t\n\t    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(NoteSubGroup, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return NoteSubGroup.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n\t      this.setWidth(this.formatter.getMinTotalWidth());\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t\n\t      var note = this.getNote();\n\t\n\t      if (!(note && this.index !== null)) {\n\t        throw new _vex.Vex.RuntimeError('NoAttachedNote', \"Can't draw notes without a parent note and parent note index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var alignSubNotesWithNote = function alignSubNotesWithNote(subNotes, note) {\n\t        // Shift over the tick contexts of each note\n\t        var tickContext = note.getTickContext();\n\t        var extraPx = tickContext.getExtraPx();\n\t        var x = tickContext.getX() - extraPx.left - extraPx.extraLeft + _this2.getSpacingFromNextModifier();\n\t\n\t        subNotes.forEach(function (subNote) {\n\t          var tick_context = subNote.getTickContext();\n\t          var x_offset = tick_context.getX();\n\t          subNote.setStave(note.stave);\n\t          tick_context.setX(x + x_offset);\n\t        });\n\t      };\n\t\n\t      alignSubNotesWithNote(this.subNotes, note, this.width);\n\t\n\t      // Draw notes\n\t      this.subNotes.forEach(function (subNote) {\n\t        return subNote.setContext(_this2.context).draw();\n\t      });\n\t    }\n\t  }]);\n\n\t  return NoteSubGroup;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceNoteGroup = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `GraceNoteGroup` which is used to format and\n\t// render grace notes.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (GraceNoteGroup.DEBUG) _vex.Vex.L('Vex.Flow.GraceNoteGroup', args);\n\t}\n\t\n\tvar GraceNoteGroup = exports.GraceNoteGroup = function (_Modifier) {\n\t  _inherits(GraceNoteGroup, _Modifier);\n\t\n\t  _createClass(GraceNoteGroup, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange groups inside a `ModifierContext`\n\t    value: function format(gracenote_groups, state) {\n\t      var group_spacing_stave = 4;\n\t      var group_spacing_tab = 0;\n\t\n\t      if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\t\n\t      var group_list = [];\n\t      var prev_note = null;\n\t      var shiftL = 0;\n\t\n\t      for (var i = 0; i < gracenote_groups.length; ++i) {\n\t        var gracenote_group = gracenote_groups[i];\n\t        var note = gracenote_group.getNote();\n\t        var is_stavenote = note.getCategory() === _stavenote.StaveNote.CATEGORY;\n\t        var spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n\t\n\t        if (is_stavenote && note !== prev_note) {\n\t          // Iterate through all notes to get the displaced pixels\n\t          for (var n = 0; n < note.keys.length; ++n) {\n\t            var props_tmp = note.getKeyProps()[n];\n\t            shiftL = props_tmp.displaced ? note.getExtraLeftPx() : shiftL;\n\t          }\n\t          prev_note = note;\n\t        }\n\t\n\t        group_list.push({ shift: shiftL, gracenote_group: gracenote_group, spacing: spacing });\n\t      }\n\t\n\t      // If first note left shift in case it is displaced\n\t      var group_shift = group_list[0].shift;\n\t      var formatWidth = void 0;\n\t      for (var _i = 0; _i < group_list.length; ++_i) {\n\t        var _gracenote_group = group_list[_i].gracenote_group;\n\t        _gracenote_group.preFormat();\n\t        formatWidth = _gracenote_group.getWidth() + group_list[_i].spacing;\n\t        group_shift = Math.max(formatWidth, group_shift);\n\t      }\n\t\n\t      for (var _i2 = 0; _i2 < group_list.length; ++_i2) {\n\t        var _gracenote_group2 = group_list[_i2].gracenote_group;\n\t        formatWidth = _gracenote_group2.getWidth() + group_list[_i2].spacing;\n\t        _gracenote_group2.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n\t      }\n\t\n\t      state.left_shift += group_shift;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t    //\n\t    // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n\t    // `ModifierContext`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracenotegroups';\n\t    }\n\t  }]);\n\t\n\t  function GraceNoteGroup(grace_notes, show_slur) {\n\t    var _ret;\n\t\n\t    _classCallCheck(this, GraceNoteGroup);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceNoteGroup.__proto__ || Object.getPrototypeOf(GraceNoteGroup)).call(this));\n\t\n\t    _this.setAttribute('type', 'GraceNoteGroup');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t    _this.grace_notes = grace_notes;\n\t    _this.width = 0;\n\t\n\t    _this.preFormatted = false;\n\t\n\t    _this.show_slur = show_slur;\n\t    _this.slur = null;\n\t\n\t    _this.formatter = new _formatter.Formatter();\n\t    _this.voice = new _voice.Voice({\n\t      num_beats: 4,\n\t      beat_value: 4,\n\t      resolution: _tables.Flow.RESOLUTION\n\t    }).setStrict(false);\n\t\n\t    _this.render_options = {\n\t      slur_y_shift: 0\n\t    };\n\t\n\t    _this.voice.addTickables(_this.grace_notes);\n\t\n\t    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(GraceNoteGroup, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceNoteGroup.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t\n\t      this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n\t      this.setWidth(this.formatter.getMinTotalWidth());\n\t      this.preFormatted = true;\n\t    }\n\t  }, {\n\t    key: 'beamNotes',\n\t    value: function beamNotes() {\n\t      if (this.grace_notes.length > 1) {\n\t        var beam = new _beam.Beam(this.grace_notes);\n\t\n\t        beam.render_options.beam_width = 3;\n\t        beam.render_options.partial_beam_length = 4;\n\t\n\t        this.beam = beam;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getGraceNotes',\n\t    value: function getGraceNotes() {\n\t      return this.grace_notes;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      this.checkContext();\n\t\n\t      var note = this.getNote();\n\t\n\t      L('Drawing grace note group for:', note);\n\t\n\t      if (!(note && this.index !== null)) {\n\t        throw new _vex.Vex.RuntimeError('NoAttachedNote', \"Can't draw grace note without a parent note and parent note index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var that = this;\n\t      function alignGraceNotesWithNote(grace_notes, note) {\n\t        // Shift over the tick contexts of each note\n\t        // So that th aligned with the note\n\t        var tickContext = note.getTickContext();\n\t        var extraPx = tickContext.getExtraPx();\n\t        var x = tickContext.getX() - extraPx.left - extraPx.extraLeft + that.getSpacingFromNextModifier();\n\t\n\t        grace_notes.forEach(function (graceNote) {\n\t          var tick_context = graceNote.getTickContext();\n\t          var x_offset = tick_context.getX();\n\t          graceNote.setStave(note.stave);\n\t          tick_context.setX(x + x_offset);\n\t        });\n\t      }\n\t\n\t      alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\t\n\t      // Draw notes\n\t      this.grace_notes.forEach(function (graceNote) {\n\t        graceNote.setContext(_this2.context).draw();\n\t      });\n\t\n\t      // Draw beam\n\t      if (this.beam) {\n\t        this.beam.setContext(this.context).draw();\n\t      }\n\t\n\t      if (this.show_slur) {\n\t        // Create and draw slur\n\t        var is_stavenote = this.getNote().getCategory() === _stavenote.StaveNote.CATEGORY;\n\t        var TieClass = is_stavenote ? _stavetie.StaveTie : _tabtie.TabTie;\n\t\n\t        this.slur = new TieClass({\n\t          last_note: this.grace_notes[0],\n\t          first_note: note,\n\t          first_indices: [0],\n\t          last_indices: [0]\n\t        });\n\t\n\t        this.slur.render_options.cp2 = 12;\n\t        this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n\t        this.slur.setContext(this.context).draw();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GraceNoteGroup;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveTie = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar StaveTie = exports.StaveTie = function (_Element) {\n\t  _inherits(StaveTie, _Element);\n\t\n\t  function StaveTie(notes, text) {\n\t    _classCallCheck(this, StaveTie);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveTie.__proto__ || Object.getPrototypeOf(StaveTie)).call(this));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'StaveTie');\n\t    _this.notes = notes;\n\t    _this.context = null;\n\t    _this.text = text;\n\t    _this.direction = null;\n\t\n\t    _this.render_options = {\n\t      cp1: 8, // Curve control point 1\n\t      cp2: 12, // Curve control point 2\n\t      text_shift_x: 0,\n\t      first_x_shift: 0,\n\t      last_x_shift: 0,\n\t      y_shift: 7,\n\t      tie_spacing: 0,\n\t      font: { family: 'Arial', size: 10, style: '' }\n\t    };\n\t\n\t    _this.font = _this.render_options.font;\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveTie, [{\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t  }, {\n\t    key: 'setDirection',\n\t    value: function setDirection(direction) {\n\t      this.direction = direction;return this;\n\t    }\n\t\n\t    /**\n\t     * Set the notes to attach this tie to.\n\t     *\n\t     * @param {!Object} notes The notes to tie up.\n\t     */\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      if (!notes.first_indices) notes.first_indices = [0];\n\t      if (!notes.last_indices) notes.last_indices = [0];\n\t\n\t      if (notes.first_indices.length !== notes.last_indices.length) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.first_indices = notes.first_indices;\n\t      this.last_note = notes.last_note;\n\t      this.last_indices = notes.last_indices;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @return {boolean} Returns true if this is a partial bar.\n\t     */\n\t\n\t  }, {\n\t    key: 'isPartial',\n\t    value: function isPartial() {\n\t      return !this.first_note || !this.last_note;\n\t    }\n\t  }, {\n\t    key: 'renderTie',\n\t    value: function renderTie(params) {\n\t      if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'No Y-values to render');\n\t      }\n\t\n\t      var ctx = this.context;\n\t      var cp1 = this.render_options.cp1;\n\t      var cp2 = this.render_options.cp2;\n\t\n\t      if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n\t        cp1 = 2;cp2 = 8;\n\t      }\n\t\n\t      var first_x_shift = this.render_options.first_x_shift;\n\t      var last_x_shift = this.render_options.last_x_shift;\n\t      var y_shift = this.render_options.y_shift * params.direction;\n\t\n\t      for (var i = 0; i < this.first_indices.length; ++i) {\n\t        var cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n\t        var first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n\t        var last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\t\n\t        if (isNaN(first_y_px) || isNaN(last_y_px)) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n\t        }\n\t\n\t        var top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n\t        var bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n\t        ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n\t        ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n\t        ctx.closePath();\n\t        ctx.fill();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderText',\n\t    value: function renderText(first_x_px, last_x_px) {\n\t      if (!this.text) return;\n\t      var center_x = (first_x_px + last_x_px) / 2;\n\t      center_x -= this.context.measureText(this.text).width / 2;\n\t\n\t      this.context.save();\n\t      this.context.setFont(this.font.family, this.font.size, this.font.style);\n\t      this.context.fillText(this.text, center_x + this.render_options.text_shift_x, (this.first_note || this.last_note).getStave().getYForTopText() - 1);\n\t      this.context.restore();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t\n\t      var first_x_px = void 0;\n\t      var last_x_px = void 0;\n\t      var first_ys = void 0;\n\t      var last_ys = void 0;\n\t      var stem_direction = void 0;\n\t      if (first_note) {\n\t        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n\t        stem_direction = first_note.getStemDirection();\n\t        first_ys = first_note.getYs();\n\t      } else {\n\t        first_x_px = last_note.getStave().getTieStartX();\n\t        first_ys = last_note.getYs();\n\t        this.first_indices = this.last_indices;\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n\t        stem_direction = last_note.getStemDirection();\n\t        last_ys = last_note.getYs();\n\t      } else {\n\t        last_x_px = first_note.getStave().getTieEndX();\n\t        last_ys = first_note.getYs();\n\t        this.last_indices = this.first_indices;\n\t      }\n\t\n\t      if (this.direction) {\n\t        stem_direction = this.direction;\n\t      }\n\t\n\t      this.renderTie({\n\t        first_x_px: first_x_px,\n\t        last_x_px: last_x_px,\n\t        first_ys: first_ys,\n\t        last_ys: last_ys,\n\t        direction: stem_direction\n\t      });\n\t\n\t      this.renderText(first_x_px, last_x_px);\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return StaveTie;\n\t}(_element.Element);\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabTie = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar TabTie = exports.TabTie = function (_StaveTie) {\n\t  _inherits(TabTie, _StaveTie);\n\t\n\t  _createClass(TabTie, null, [{\n\t    key: 'createHammeron',\n\t    value: function createHammeron(notes) {\n\t      return new TabTie(notes, 'H');\n\t    }\n\t  }, {\n\t    key: 'createPulloff',\n\t    value: function createPulloff(notes) {\n\t      return new TabTie(notes, 'P');\n\t    }\n\t  }]);\n\t\n\t  function TabTie(notes, text) {\n\t    _classCallCheck(this, TabTie);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabTie.__proto__ || Object.getPrototypeOf(TabTie)).call(this, notes, text));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'TabTie');\n\t\n\t    _this.render_options.cp1 = 9;\n\t    _this.render_options.cp2 = 11;\n\t    _this.render_options.y_shift = 3;\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabTie, [{\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t      var first_x_px = void 0;\n\t      var last_x_px = void 0;\n\t      var first_ys = void 0;\n\t      var last_ys = void 0;\n\t\n\t      if (first_note) {\n\t        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n\t        first_ys = first_note.getYs();\n\t      } else {\n\t        first_x_px = last_note.getStave().getTieStartX();\n\t        first_ys = last_note.getYs();\n\t        this.first_indices = this.last_indices;\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n\t        last_ys = last_note.getYs();\n\t      } else {\n\t        last_x_px = first_note.getStave().getTieEndX();\n\t        last_ys = first_note.getYs();\n\t        this.last_indices = this.first_indices;\n\t      }\n\t\n\t      this.renderTie({\n\t        first_x_px: first_x_px,\n\t        last_x_px: last_x_px,\n\t        first_ys: first_ys,\n\t        last_ys: last_ys,\n\t        direction: -1 });\n\t\n\t      this.renderText(first_x_px, last_x_px);\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return TabTie;\n\t}(_stavetie.StaveTie);\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stroke = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns\n\t//\n\t// ## Description\n\t// This file implements the `Stroke` class which renders chord strokes\n\t// that can be arpeggiated, brushed, rasquedo, etc.\n\t\n\tvar Stroke = exports.Stroke = function (_Modifier) {\n\t  _inherits(Stroke, _Modifier);\n\t\n\t  _createClass(Stroke, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange strokes inside `ModifierContext`\n\t    value: function format(strokes, state) {\n\t      var left_shift = state.left_shift;\n\t      var stroke_spacing = 0;\n\t\n\t      if (!strokes || strokes.length === 0) return this;\n\t\n\t      var strokeList = strokes.map(function (stroke) {\n\t        var note = stroke.getNote();\n\t        if (note instanceof _stavenote.StaveNote) {\n\t          var _note$getKeyProps$str = note.getKeyProps()[stroke.getIndex()];\n\t          var line = _note$getKeyProps$str.line;\n\t          var displaced = _note$getKeyProps$str.displaced;\n\t\n\t          var shift = displaced ? note.getExtraLeftPx() : 0;\n\t          return { line: line, shift: shift, stroke: stroke };\n\t        } else {\n\t          var string = note.getPositions()[stroke.getIndex()].str;\n\t\n\t          return { line: string, shift: 0, stroke: stroke };\n\t        }\n\t      });\n\t\n\t      var strokeShift = left_shift;\n\t\n\t      // There can only be one stroke .. if more than one, they overlay each other\n\t      var xShift = strokeList.reduce(function (xShift, _ref) {\n\t        var stroke = _ref.stroke;\n\t        var shift = _ref.shift;\n\t\n\t        stroke.setXShift(strokeShift + shift);\n\t        return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n\t      }, 0);\n\t\n\t      state.left_shift += xShift;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'strokes';\n\t    }\n\t  }, {\n\t    key: 'Type',\n\t    get: function get() {\n\t      return {\n\t        BRUSH_DOWN: 1,\n\t        BRUSH_UP: 2,\n\t        ROLL_DOWN: 3, // Arpegiated chord\n\t        ROLL_UP: 4, // Arpegiated chord\n\t        RASQUEDO_DOWN: 5,\n\t        RASQUEDO_UP: 6\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Stroke(type, options) {\n\t    _classCallCheck(this, Stroke);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stroke.__proto__ || Object.getPrototypeOf(Stroke)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stroke');\n\t\n\t    _this.note = null;\n\t    _this.options = _vex.Vex.Merge({}, options);\n\t\n\t    // multi voice - span stroke across all voices if true\n\t    _this.all_voices = 'all_voices' in _this.options ? _this.options.all_voices : true;\n\t\n\t    // multi voice - end note of stroke, set in draw()\n\t    _this.note_end = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.LEFT;\n\t\n\t    _this.render_options = {\n\t      font_scale: 38,\n\t      stroke_px: 3,\n\t      stroke_spacing: 10\n\t    };\n\t\n\t    _this.font = {\n\t      family: 'serif',\n\t      size: 10,\n\t      weight: 'bold italic'\n\t    };\n\t\n\t    _this.setXShift(0);\n\t    _this.setWidth(10);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Stroke, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Stroke.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'addEndNote',\n\t    value: function addEndNote(note) {\n\t      this.note_end = note;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n\t      }\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var ys = this.note.getYs();\n\t      var topY = start.y;\n\t      var botY = start.y;\n\t      var x = start.x - 5;\n\t      var line_space = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var notes = this.getModifierContext().getModifiers(this.note.getCategory());\n\t      for (var i = 0; i < notes.length; i++) {\n\t        ys = notes[i].getYs();\n\t        for (var n = 0; n < ys.length; n++) {\n\t          if (this.note === notes[i] || this.all_voices) {\n\t            topY = _vex.Vex.Min(topY, ys[n]);\n\t            botY = _vex.Vex.Max(botY, ys[n]);\n\t          }\n\t        }\n\t      }\n\t\n\t      var arrow = void 0;\n\t      var arrow_shift_x = void 0;\n\t      var arrow_y = void 0;\n\t      var text_shift_x = void 0;\n\t      var text_y = void 0;\n\t      switch (this.type) {\n\t        case Stroke.Type.BRUSH_DOWN:\n\t          arrow = 'vc3';\n\t          arrow_shift_x = -3;\n\t          arrow_y = topY - line_space / 2 + 10;\n\t          botY += line_space / 2;\n\t          break;\n\t        case Stroke.Type.BRUSH_UP:\n\t          arrow = 'v11';\n\t          arrow_shift_x = 0.5;\n\t          arrow_y = botY + line_space / 2;\n\t          topY -= line_space / 2;\n\t          break;\n\t        case Stroke.Type.ROLL_DOWN:\n\t        case Stroke.Type.RASQUEDO_DOWN:\n\t          arrow = 'vc3';\n\t          arrow_shift_x = -3;\n\t          text_shift_x = this.x_shift + arrow_shift_x - 2;\n\t          if (this.note instanceof _stavenote.StaveNote) {\n\t            topY += 1.5 * line_space;\n\t            if ((botY - topY) % 2 !== 0) {\n\t              botY += 0.5 * line_space;\n\t            } else {\n\t              botY += line_space;\n\t            }\n\t            arrow_y = topY - line_space;\n\t            text_y = botY + line_space + 2;\n\t          } else {\n\t            topY += 1.5 * line_space;\n\t            botY += line_space;\n\t            arrow_y = topY - 0.75 * line_space;\n\t            text_y = botY + 0.25 * line_space;\n\t          }\n\t          break;\n\t        case Stroke.Type.ROLL_UP:\n\t        case Stroke.Type.RASQUEDO_UP:\n\t          arrow = 'v52';\n\t          arrow_shift_x = -4;\n\t          text_shift_x = this.x_shift + arrow_shift_x - 1;\n\t          if (this.note instanceof _stavenote.StaveNote) {\n\t            arrow_y = line_space / 2;\n\t            topY += 0.5 * line_space;\n\t            if ((botY - topY) % 2 === 0) {\n\t              botY += line_space / 2;\n\t            }\n\t            arrow_y = botY + 0.5 * line_space;\n\t            text_y = topY - 1.25 * line_space;\n\t          } else {\n\t            topY += 0.25 * line_space;\n\t            botY += 0.5 * line_space;\n\t            arrow_y = botY + 0.25 * line_space;\n\t            text_y = topY - line_space;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidType', 'The stroke type ' + this.type + ' does not exist');\n\t      }\n\t\n\t      // Draw the stroke\n\t      if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n\t        this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n\t      } else {\n\t        if (this.note instanceof _stavenote.StaveNote) {\n\t          for (var _i = topY; _i <= botY; _i += line_space) {\n\t            _glyph.Glyph.renderGlyph(this.context, x + this.x_shift - 4, _i, this.render_options.font_scale, 'va3');\n\t          }\n\t        } else {\n\t          var _i2 = void 0;\n\t          for (_i2 = topY; _i2 <= botY; _i2 += 10) {\n\t            _glyph.Glyph.renderGlyph(this.context, x + this.x_shift - 4, _i2, this.render_options.font_scale, 'va3');\n\t          }\n\t          if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n\t            text_y = _i2 + 0.25 * line_space;\n\t          }\n\t        }\n\t      }\n\t\n\t      // Draw the arrow head\n\t      _glyph.Glyph.renderGlyph(this.context, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow);\n\t\n\t      // Draw the rasquedo \"R\"\n\t      if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n\t        this.context.save();\n\t        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t        this.context.fillText('R', x + text_shift_x, text_y);\n\t        this.context.restore();\n\t      }\n\t    }\n\t  }]);\n\n\t  return Stroke;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StringNumber = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns\n\t//\n\t// ## Description\n\t// This file implements the `StringNumber` class which renders string\n\t// number annotations beside notes.\n\t\n\tvar StringNumber = exports.StringNumber = function (_Modifier) {\n\t  _inherits(StringNumber, _Modifier);\n\t\n\t  _createClass(StringNumber, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange string numbers inside a `ModifierContext`\n\t    value: function format(nums, state) {\n\t      var left_shift = state.left_shift;\n\t      var right_shift = state.right_shift;\n\t      var num_spacing = 1;\n\t\n\t      if (!nums || nums.length === 0) return this;\n\t\n\t      var nums_list = [];\n\t      var prev_note = null;\n\t      var shift_left = 0;\n\t      var shift_right = 0;\n\t\n\t      var i = void 0;\n\t      var num = void 0;\n\t      var note = void 0;\n\t      var pos = void 0;\n\t      var props_tmp = void 0;\n\t      for (i = 0; i < nums.length; ++i) {\n\t        num = nums[i];\n\t        note = num.getNote();\n\t\n\t        for (i = 0; i < nums.length; ++i) {\n\t          num = nums[i];\n\t          note = num.getNote();\n\t          pos = num.getPosition();\n\t          var props = note.getKeyProps()[num.getIndex()];\n\t\n\t          if (note !== prev_note) {\n\t            for (var n = 0; n < note.keys.length; ++n) {\n\t              props_tmp = note.getKeyProps()[n];\n\t              if (left_shift === 0) {\n\t                shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n\t              }\n\t              if (right_shift === 0) {\n\t                shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n\t              }\n\t            }\n\t            prev_note = note;\n\t          }\n\t\n\t          nums_list.push({\n\t            pos: pos,\n\t            note: note,\n\t            num: num,\n\t            line: props.line,\n\t            shiftL: shift_left,\n\t            shiftR: shift_right\n\t          });\n\t        }\n\t      }\n\t\n\t      // Sort string numbers by line number.\n\t      nums_list.sort(function (a, b) {\n\t        return b.line - a.line;\n\t      });\n\t\n\t      // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n\t      var num_shiftL = 0; // eslint-disable-line\n\t      var num_shiftR = 0;\n\t      var x_widthL = 0;\n\t      var x_widthR = 0;\n\t      var last_line = null;\n\t      var last_note = null;\n\t      for (i = 0; i < nums_list.length; ++i) {\n\t        var num_shift = 0;\n\t        note = nums_list[i].note;\n\t        pos = nums_list[i].pos;\n\t        num = nums_list[i].num;\n\t        var line = nums_list[i].line;\n\t        var shiftL = nums_list[i].shiftL;\n\t        var shiftR = nums_list[i].shiftR;\n\t\n\t        // Reset the position of the string number every line.\n\t        if (line !== last_line || note !== last_note) {\n\t          num_shiftL = left_shift + shiftL;\n\t          num_shiftR = right_shift + shiftR;\n\t        }\n\t\n\t        var num_width = num.getWidth() + num_spacing;\n\t        if (pos === _modifier.Modifier.Position.LEFT) {\n\t          num.setXShift(left_shift);\n\t          num_shift = shift_left + num_width; // spacing\n\t          x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n\t        } else if (pos === _modifier.Modifier.Position.RIGHT) {\n\t          num.setXShift(num_shiftR);\n\t          num_shift += num_width; // spacing\n\t          x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n\t        }\n\t        last_line = line;\n\t        last_note = note;\n\t      }\n\t\n\t      state.left_shift += x_widthL;\n\t      state.right_shift += x_widthR;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stringnumber';\n\t    }\n\t  }]);\n\t\n\t  function StringNumber(number) {\n\t    _classCallCheck(this, StringNumber);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StringNumber.__proto__ || Object.getPrototypeOf(StringNumber)).call(this));\n\t\n\t    _this.setAttribute('type', 'StringNumber');\n\t\n\t    _this.note = null;\n\t    _this.last_note = null;\n\t    _this.index = null;\n\t    _this.string_number = number;\n\t    _this.setWidth(20); // ???\n\t    _this.position = _modifier.Modifier.Position.ABOVE; // Default position above stem or note head\n\t    _this.x_shift = 0;\n\t    _this.y_shift = 0;\n\t    _this.x_offset = 0; // Horizontal offset from default\n\t    _this.y_offset = 0; // Vertical offset from default\n\t    _this.dashed = true; // true - draw dashed extension  false - no extension\n\t    _this.leg = _renderer.Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n\t    _this.radius = 8;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 10,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StringNumber, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StringNumber.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getNote',\n\t    value: function getNote() {\n\t      return this.note;\n\t    }\n\t  }, {\n\t    key: 'setNote',\n\t    value: function setNote(note) {\n\t      this.note = note;return this;\n\t    }\n\t  }, {\n\t    key: 'getIndex',\n\t    value: function getIndex() {\n\t      return this.index;\n\t    }\n\t  }, {\n\t    key: 'setIndex',\n\t    value: function setIndex(index) {\n\t      this.index = index;return this;\n\t    }\n\t  }, {\n\t    key: 'setLineEndType',\n\t    value: function setLineEndType(leg) {\n\t      if (leg >= _renderer.Renderer.LineEndType.NONE && leg <= _renderer.Renderer.LineEndType.DOWN) {\n\t        this.leg = leg;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setStringNumber',\n\t    value: function setStringNumber(number) {\n\t      this.string_number = number;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetX',\n\t    value: function setOffsetX(x) {\n\t      this.x_offset = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setOffsetY',\n\t    value: function setOffsetY(y) {\n\t      this.y_offset = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setLastNote',\n\t    value: function setLastNote(note) {\n\t      this.last_note = note;return this;\n\t    }\n\t  }, {\n\t    key: 'setDashed',\n\t    value: function setDashed(dashed) {\n\t      this.dashed = dashed;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n\t      }\n\t      this.setRendered();\n\t\n\t      var line_space = this.note.stave.options.spacing_between_lines_px;\n\t\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var dot_x = start.x + this.x_shift + this.x_offset;\n\t      var dot_y = start.y + this.y_shift + this.y_offset;\n\t\n\t      switch (this.position) {\n\t        case _modifier.Modifier.Position.ABOVE:\n\t        case _modifier.Modifier.Position.BELOW:\n\t          {\n\t            var stem_ext = this.note.getStemExtents();\n\t            var top = stem_ext.topY;\n\t            var bottom = stem_ext.baseY + 2;\n\t\n\t            if (this.note.stem_direction === _stavenote.StaveNote.STEM_DOWN) {\n\t              top = stem_ext.baseY;\n\t              bottom = stem_ext.topY - 2;\n\t            }\n\t\n\t            if (this.position === _modifier.Modifier.Position.ABOVE) {\n\t              dot_y = this.note.hasStem() ? top - line_space * 1.75 : start.y - line_space * 1.75;\n\t            } else {\n\t              dot_y = this.note.hasStem() ? bottom + line_space * 1.5 : start.y + line_space * 1.75;\n\t            }\n\t\n\t            dot_y += this.y_shift + this.y_offset;\n\t\n\t            break;\n\t          }case _modifier.Modifier.Position.LEFT:\n\t          dot_x -= this.radius / 2 + 5;\n\t          break;\n\t        case _modifier.Modifier.Position.RIGHT:\n\t          dot_x += this.radius / 2 + 6;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'The position ' + this.position + ' is invalid');\n\t      }\n\t\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n\t      ctx.lineWidth = 1.5;\n\t      ctx.stroke();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var x = dot_x - ctx.measureText(this.string_number).width / 2;\n\t      ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\t\n\t      if (this.last_note != null) {\n\t        var end = this.last_note.getStemX() - this.note.getX() + 5;\n\t        ctx.strokeStyle = '#000000';\n\t        ctx.lineCap = 'round';\n\t        ctx.lineWidth = 0.6;\n\t        if (this.dashed) {\n\t          _renderer.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n\t        } else {\n\t          _renderer.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n\t        }\n\t\n\t        var len = void 0;\n\t        var pattern = void 0;\n\t        switch (this.leg) {\n\t          case _renderer.Renderer.LineEndType.UP:\n\t            len = -10;\n\t            pattern = this.dashed ? [3, 3] : [3, 0];\n\t            _renderer.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n\t            break;\n\t          case _renderer.Renderer.LineEndType.DOWN:\n\t            len = 10;\n\t            pattern = this.dashed ? [3, 3] : [3, 0];\n\t            _renderer.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n\t            break;\n\t          default:\n\t            break;\n\t        }\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return StringNumber;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Articulation = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Larry Kuhns.\n\t//\n\t// ## Description\n\t//\n\t// This file implements articulations and accents as modifiers that can be\n\t// attached to notes. The complete list of articulations is available in\n\t// `tables.js` under `Vex.Flow.articulationCodes`.\n\t//\n\t// See `tests/articulation_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Articulation.DEBUG) _vex.Vex.L('Vex.Flow.Articulation', args);\n\t}\n\t\n\tvar _Modifier$Position = _modifier.Modifier.Position;\n\tvar ABOVE = _Modifier$Position.ABOVE;\n\tvar BELOW = _Modifier$Position.BELOW;\n\t\n\t\n\tvar roundToNearestHalf = function roundToNearestHalf(mathFn, value) {\n\t  return mathFn(value / 0.5) * 0.5;\n\t};\n\t\n\t// This includes both staff and ledger lines\n\tvar isWithinLines = function isWithinLines(line, position) {\n\t  return position === ABOVE ? line <= 5 : line >= 1;\n\t};\n\t\n\tvar getRoundingFunction = function getRoundingFunction(line, position) {\n\t  if (isWithinLines(line, position)) {\n\t    if (position === ABOVE) {\n\t      return Math.ceil;\n\t    } else {\n\t      return Math.floor;\n\t    }\n\t  } else {\n\t    return Math.round;\n\t  }\n\t};\n\t\n\tvar snapLineToStaff = function snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n\t  // Initially, snap to nearest staff line or space\n\t  var snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n\t  var canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n\t  var onStaffLine = snappedLine % 1 === 0;\n\t\n\t  if (canSnapToStaffSpace && onStaffLine) {\n\t    var HALF_STAFF_SPACE = 0.5;\n\t    return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n\t  } else {\n\t    return snappedLine;\n\t  }\n\t};\n\t\n\tvar getTopY = function getTopY(note, textLine) {\n\t  var stave = note.getStave();\n\t  var stemDirection = note.getStemDirection();\n\t\n\t  var _note$getStemExtents = note.getStemExtents();\n\t\n\t  var stemTipY = _note$getStemExtents.topY;\n\t  var stemBaseY = _note$getStemExtents.baseY;\n\t\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemTipY;\n\t      } else {\n\t        return stemBaseY;\n\t      }\n\t    } else {\n\t      return Math.min.apply(Math, _toConsumableArray(note.getYs()));\n\t    }\n\t  } else if (note.getCategory() === 'tabnotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemTipY;\n\t      } else {\n\t        return stave.getYForTopText(textLine);\n\t      }\n\t    } else {\n\t      return stave.getYForTopText(textLine);\n\t    }\n\t  } else {\n\t    throw new _vex.Vex.RERR('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n\t  }\n\t};\n\t\n\tvar getBottomY = function getBottomY(note, textLine) {\n\t  var stave = note.getStave();\n\t  var stemDirection = note.getStemDirection();\n\t\n\t  var _note$getStemExtents2 = note.getStemExtents();\n\t\n\t  var stemTipY = _note$getStemExtents2.topY;\n\t  var stemBaseY = _note$getStemExtents2.baseY;\n\t\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stemBaseY;\n\t      } else {\n\t        return stemTipY;\n\t      }\n\t    } else {\n\t      return Math.max.apply(Math, _toConsumableArray(note.getYs()));\n\t    }\n\t  } else if (note.getCategory() === 'tabnotes') {\n\t    if (note.hasStem()) {\n\t      if (stemDirection === _stem.Stem.UP) {\n\t        return stave.getYForBottomText(textLine);\n\t      } else {\n\t        return stemTipY;\n\t      }\n\t    } else {\n\t      return stave.getYForBottomText(textLine);\n\t    }\n\t  } else {\n\t    throw new _vex.Vex.RERR('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n\t  }\n\t};\n\t\n\t// Gets the initial offset of the articulation from the y value of the starting position.\n\t// This is required because the top/bottom text positions already have spacing applied to\n\t// provide a \"visually pleasent\" default position. However the y values provided from\n\t// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n\t// normalizes this asymmetry.\n\tvar getInitialOffset = function getInitialOffset(note, position) {\n\t  var isOnStemTip = position === ABOVE && note.getStemDirection() === _stem.Stem.UP || position === BELOW && note.getStemDirection() === _stem.Stem.DOWN;\n\t\n\t  if (note.getCategory() === 'stavenotes') {\n\t    if (note.hasStem() && isOnStemTip) {\n\t      return 0.5;\n\t    } else {\n\t      // this amount is larger than the stem-tip offset because we start from\n\t      // the center of the notehead\n\t      return 1;\n\t    }\n\t  } else {\n\t    if (note.hasStem() && isOnStemTip) {\n\t      return 1;\n\t    } else {\n\t      return 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar Articulation = exports.Articulation = function (_Modifier) {\n\t  _inherits(Articulation, _Modifier);\n\t\n\t  _createClass(Articulation, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // FIXME:\n\t    // Most of the complex formatting logic (ie: snapping to space) is\n\t    // actually done in .render(). But that logic belongs in this method.\n\t    //\n\t    // Unfortunately, this isn't possible because, by this point, stem lengths\n\t    // have not yet been finalized. Finalized stem lengths are required to determine the\n\t    // initial position of any stem-side articulation.\n\t    //\n\t    // This indicates that all objects should have their stave set before being\n\t    // formatted. It can't be an optional if you want accurate vertical positioning.\n\t    // Consistently positioned articulations that play nice with other modifiers\n\t    // won't be possible until we stop relying on render-time formatting.\n\t    //\n\t    // Ideally, when this function has completed, the vertical articulation positions\n\t    // should be ready to render without further adjustment. But the current state\n\t    // is far from this ideal.\n\t    value: function format(articulations, state) {\n\t      if (!articulations || articulations.length === 0) return false;\n\t\n\t      var isAbove = function isAbove(artic) {\n\t        return artic.getPosition() === ABOVE;\n\t      };\n\t      var isBelow = function isBelow(artic) {\n\t        return artic.getPosition() === BELOW;\n\t      };\n\t      var margin = 0.5;\n\t      var getIncrement = function getIncrement(articulation, line, position) {\n\t        return roundToNearestHalf(getRoundingFunction(line, position), articulation.glyph.getMetrics().height / 10 + margin);\n\t      };\n\t\n\t      articulations.filter(isAbove).forEach(function (articulation) {\n\t        articulation.setTextLine(state.top_text_line);\n\t        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n\t      });\n\t\n\t      articulations.filter(isBelow).forEach(function (articulation) {\n\t        articulation.setTextLine(state.text_line);\n\t        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n\t      });\n\t\n\t      var width = articulations.map(function (articulation) {\n\t        return articulation.getWidth();\n\t      }).reduce(function (maxWidth, articWidth) {\n\t        return Math.max(articWidth, maxWidth);\n\t      });\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'easyScoreHook',\n\t    value: function easyScoreHook(_ref, note, builder) {\n\t      var articulations = _ref.articulations;\n\t\n\t      if (!articulations) return;\n\t\n\t      var articNameToCode = {\n\t        staccato: 'a.',\n\t        tenuto: 'a-'\n\t      };\n\t\n\t      articulations.split(',').map(function (articString) {\n\t        return articString.trim().split('.');\n\t      }).map(function (_ref2) {\n\t        var _ref3 = _slicedToArray(_ref2, 2);\n\t\n\t        var name = _ref3[0];\n\t        var position = _ref3[1];\n\t\n\t        var artic = { type: articNameToCode[name] };\n\t        if (position) artic.position = _modifier.Modifier.PositionString[position];\n\t        return builder.getFactory().Articulation(artic);\n\t      }).map(function (artic) {\n\t        return note.addModifier(0, artic);\n\t      });\n\t    }\n\t\n\t    // Create a new articulation of type `type`, which is an entry in\n\t    // `Vex.Flow.articulationCodes` in `tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'articulations';\n\t    }\n\t  }, {\n\t    key: 'INITIAL_OFFSET',\n\t    get: function get() {\n\t      return -0.5;\n\t    }\n\t  }]);\n\t\n\t  function Articulation(type) {\n\t    _classCallCheck(this, Articulation);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Articulation.__proto__ || Object.getPrototypeOf(Articulation)).call(this));\n\t\n\t    _this.setAttribute('type', 'Articulation');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = BELOW;\n\t    _this.render_options = {\n\t      font_scale: 38\n\t    };\n\t\n\t    _this.articulation = _tables.Flow.articulationCodes(_this.type);\n\t    if (!_this.articulation) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Articulation not found: ' + _this.type);\n\t    }\n\t\n\t    _this.glyph = new _glyph.Glyph(_this.articulation.code, _this.render_options.font_scale);\n\t\n\t    _this.setWidth(_this.glyph.getMetrics().width);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Articulation, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Articulation.CATEGORY;\n\t    }\n\t\n\t    // Render articulation in position next to note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _ABOVE$BELOW$position;\n\t\n\t      var note = this.note;\n\t      var index = this.index;\n\t      var position = this.position;\n\t      var glyph = this.glyph;\n\t      var canSitBetweenLines = this.articulation.between_lines;\n\t      var textLine = this.text_line;\n\t      var ctx = this.context;\n\t\n\t\n\t      this.checkContext();\n\t\n\t      if (!note || index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var stave = note.getStave();\n\t      var staffSpace = stave.getSpacingBetweenLines();\n\t      var isTab = note.getCategory() === 'tabnotes';\n\t\n\t      // Articulations are centered over/under the note head.\n\t\n\t      var _note$getModifierStar = note.getModifierStartXY(position, index);\n\t\n\t      var x = _note$getModifierStar.x;\n\t\n\t      var shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\t\n\t      var initialOffset = getInitialOffset(note, position);\n\t\n\t      var y = (_ABOVE$BELOW$position = {}, _defineProperty(_ABOVE$BELOW$position, ABOVE, function () {\n\t        glyph.setOrigin(0.5, 1);\n\t        var y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n\t        return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n\t      }), _defineProperty(_ABOVE$BELOW$position, BELOW, function () {\n\t        glyph.setOrigin(0.5, 0);\n\t        var y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n\t        return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n\t      }), _ABOVE$BELOW$position)[position]();\n\t\n\t      if (!isTab) {\n\t        var offsetDirection = position === ABOVE ? -1 : +1;\n\t        var noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n\t        var distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n\t        var articLine = distanceFromNote + noteLine;\n\t        var snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\t\n\t        if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\t\n\t        y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n\t      }\n\t\n\t      L('Rendering articulation at (x: ' + x + ', y: ' + y + ')');\n\t\n\t      glyph.render(ctx, x, y);\n\t    }\n\t  }]);\n\n\t  return Articulation;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Ornament = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implements ornaments as modifiers that can be\n\t// attached to notes. The complete list of ornaments is available in\n\t// `tables.js` under `Vex.Flow.ornamentCodes`.\n\t//\n\t// See `tests/ornament_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Ornament.DEBUG) _vex.Vex.L('Vex.Flow.Ornament', args);\n\t}\n\t\n\tvar Ornament = exports.Ornament = function (_Modifier) {\n\t  _inherits(Ornament, _Modifier);\n\t\n\t  _createClass(Ornament, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange ornaments inside `ModifierContext`\n\t    value: function format(ornaments, state) {\n\t      if (!ornaments || ornaments.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < ornaments.length; ++i) {\n\t        var ornament = ornaments[i];\n\t        var increment = 2;\n\t\n\t        width = Math.max(ornament.getWidth(), width);\n\t\n\t        if (ornament.getPosition() === _modifier.Modifier.Position.ABOVE) {\n\t          ornament.setTextLine(state.top_text_line);\n\t          state.top_text_line += increment;\n\t        } else {\n\t          ornament.setTextLine(state.text_line);\n\t          state.text_line += increment;\n\t        }\n\t      }\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t\n\t    // Create a new ornament of type `type`, which is an entry in\n\t    // `Vex.Flow.ornamentCodes` in `tables.js`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'ornaments';\n\t    }\n\t  }]);\n\t\n\t  function Ornament(type) {\n\t    _classCallCheck(this, Ornament);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Ornament.__proto__ || Object.getPrototypeOf(Ornament)).call(this));\n\t\n\t    _this.setAttribute('type', 'Ornament');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.type = type;\n\t    _this.position = _modifier.Modifier.Position.ABOVE;\n\t    _this.delayed = false;\n\t\n\t    _this.accidentalUpper = null;\n\t    _this.accidentalLower = null;\n\t\n\t    _this.render_options = {\n\t      font_scale: 38,\n\t      accidentalLowerPadding: 3,\n\t      accidentalUpperPadding: 3\n\t    };\n\t\n\t    _this.ornament = _tables.Flow.ornamentCodes(_this.type);\n\t    if (!_this.ornament) {\n\t      throw new _vex.Vex.RERR('ArgumentError', 'Ornament not found: \\'' + _this.type + '\\'');\n\t    }\n\t\n\t    _this.glyph = new _glyph.Glyph(_this.ornament.code, _this.render_options.font_scale);\n\t    _this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Ornament, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Ornament.CATEGORY;\n\t    }\n\t\n\t    // Set whether the ornament is to be delayed\n\t\n\t  }, {\n\t    key: 'setDelayed',\n\t    value: function setDelayed(delayed) {\n\t      this.delayed = delayed;return this;\n\t    }\n\t\n\t    // Set the upper accidental for the ornament\n\t\n\t  }, {\n\t    key: 'setUpperAccidental',\n\t    value: function setUpperAccidental(accid) {\n\t      var scale = this.render_options.font_scale / 1.3;\n\t      this.accidentalUpper = new _glyph.Glyph(_tables.Flow.accidentalCodes(accid).code, scale);\n\t      this.accidentalUpper.setOrigin(0.5, 1.0);\n\t      return this;\n\t    }\n\t\n\t    // Set the lower accidental for the ornament\n\t\n\t  }, {\n\t    key: 'setLowerAccidental',\n\t    value: function setLowerAccidental(accid) {\n\t      var scale = this.render_options.font_scale / 1.3;\n\t      this.accidentalLower = new _glyph.Glyph(_tables.Flow.accidentalCodes(accid).code, scale);\n\t      this.accidentalLower.setOrigin(0.5, 1.0);\n\t      return this;\n\t    }\n\t\n\t    // Render ornament in position next to note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note || this.index == null) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var ctx = this.context;\n\t      var stemDir = this.note.getStemDirection();\n\t      var stave = this.note.getStave();\n\t\n\t      // Get stem extents\n\t      var stemExtents = this.note.getStem().getExtents();\n\t      var y = stemDir === _stavenote.StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\t\n\t      // TabNotes don't have stems attached to them. Tab stems are rendered\n\t      // outside the stave.\n\t      if (this.note.getCategory() === 'tabnotes') {\n\t        if (this.note.hasStem()) {\n\t          if (stemDir === _stavenote.StaveNote.STEM_DOWN) {\n\t            y = stave.getYForTopText(this.text_line);\n\t          }\n\t        } else {\n\t          // Without a stem\n\t          y = stave.getYForTopText(this.text_line);\n\t        }\n\t      }\n\t\n\t      var isPlacedOnNoteheadSide = stemDir === _stavenote.StaveNote.STEM_DOWN;\n\t      var spacing = stave.getSpacingBetweenLines();\n\t      var lineSpacing = 1;\n\t\n\t      // Beamed stems are longer than quarter note stems, adjust accordingly\n\t      if (!isPlacedOnNoteheadSide && this.note.beam) {\n\t        lineSpacing += 0.5;\n\t      }\n\t\n\t      var totalSpacing = spacing * (this.text_line + lineSpacing);\n\t      var glyphYBetweenLines = y - totalSpacing;\n\t\n\t      // Get initial coordinates for the modifier position\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var glyphX = start.x;\n\t      var glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n\t      glyphY += this.y_shift;\n\t\n\t      // Ajdust x position if ornament is delayed\n\t      if (this.delayed) {\n\t        glyphX += this.glyph.getMetrics().width;\n\t        var nextContext = _tickcontext.TickContext.getNextContext(this.note.getTickContext());\n\t        if (nextContext) {\n\t          glyphX += (nextContext.getX() - glyphX) * 0.5;\n\t        } else {\n\t          glyphX += (stave.x + stave.width - glyphX) * 0.5;\n\t        }\n\t      }\n\t\n\t      L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\t\n\t      if (this.accidentalLower) {\n\t        this.accidentalLower.render(ctx, glyphX, glyphY);\n\t        glyphY -= this.accidentalLower.getMetrics().height;\n\t        glyphY -= this.render_options.accidentalLowerPadding;\n\t      }\n\t\n\t      this.glyph.render(ctx, glyphX, glyphY);\n\t      glyphY -= this.glyph.getMetrics().height;\n\t\n\t      if (this.accidentalUpper) {\n\t        glyphY -= this.render_options.accidentalUpperPadding;\n\t        this.accidentalUpper.render(ctx, glyphX, glyphY);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Ornament;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TickContext = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tickable = __webpack_require__(23);\n\t\n\tvar _fraction = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A formatter for abstract tickable objects, such as notes, chords,\n\t// tabs, etc.\n\t\n\tvar TickContext = exports.TickContext = function (_Tickable) {\n\t  _inherits(TickContext, _Tickable);\n\t\n\t  _createClass(TickContext, null, [{\n\t    key: 'getNextContext',\n\t    value: function getNextContext(tContext) {\n\t      var contexts = tContext.tContexts;\n\t      var index = contexts.indexOf(tContext);\n\t\n\t      return contexts[index + 1];\n\t    }\n\t  }]);\n\t\n\t  function TickContext() {\n\t    _classCallCheck(this, TickContext);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TickContext.__proto__ || Object.getPrototypeOf(TickContext)).call(this));\n\t\n\t    _this.setAttribute('type', 'TickContext');\n\t    _this.currentTick = new _fraction.Fraction(0, 1);\n\t    _this.maxTicks = new _fraction.Fraction(0, 1);\n\t    _this.minTicks = null;\n\t    _this.padding = 3; // padding on each side (width += padding * 2)\n\t    _this.x = 0;\n\t    _this.tickables = []; // Notes, tabs, chords, lyrics.\n\t    _this.notePx = 0; // width of widest note in this context\n\t    _this.extraLeftPx = 0; // Extra left pixels for modifers & displace notes\n\t    _this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n\t    _this.tContexts = []; // Parent array of tick contexts\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TickContext, [{\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width + this.padding * 2;\n\t    }\n\t  }, {\n\t    key: 'setPadding',\n\t    value: function setPadding(padding) {\n\t      this.padding = padding;return this;\n\t    }\n\t  }, {\n\t    key: 'getMaxTicks',\n\t    value: function getMaxTicks() {\n\t      return this.maxTicks;\n\t    }\n\t  }, {\n\t    key: 'getMinTicks',\n\t    value: function getMinTicks() {\n\t      return this.minTicks;\n\t    }\n\t  }, {\n\t    key: 'getTickables',\n\t    value: function getTickables() {\n\t      return this.tickables;\n\t    }\n\t  }, {\n\t    key: 'getCenterAlignedTickables',\n\t    value: function getCenterAlignedTickables() {\n\t      return this.tickables.filter(function (tickable) {\n\t        return tickable.isCenterAligned();\n\t      });\n\t    }\n\t\n\t    // Get widths context, note and left/right modifiers for formatting\n\t\n\t  }, {\n\t    key: 'getMetrics',\n\t    value: function getMetrics() {\n\t      var width = this.width;\n\t      var notePx = this.notePx;\n\t      var extraLeftPx = this.extraLeftPx;\n\t      var extraRightPx = this.extraRightPx;\n\t\n\t      return { width: width, notePx: notePx, extraLeftPx: extraLeftPx, extraRightPx: extraRightPx };\n\t    }\n\t  }, {\n\t    key: 'getCurrentTick',\n\t    value: function getCurrentTick() {\n\t      return this.currentTick;\n\t    }\n\t  }, {\n\t    key: 'setCurrentTick',\n\t    value: function setCurrentTick(tick) {\n\t      this.currentTick = tick;\n\t      this.preFormatted = false;\n\t    }\n\t\n\t    // ### DEPRECATED ###\n\t    // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n\t    // the getMetrics() method instead!\n\t\n\t  }, {\n\t    key: 'getExtraPx',\n\t    value: function getExtraPx() {\n\t      var left_shift = 0;\n\t      var right_shift = 0;\n\t      var extraLeftPx = 0;\n\t      var extraRightPx = 0;\n\t      for (var i = 0; i < this.tickables.length; i++) {\n\t        extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n\t        extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n\t        var mContext = this.tickables[i].modifierContext;\n\t        if (mContext && mContext != null) {\n\t          left_shift = Math.max(left_shift, mContext.state.left_shift);\n\t          right_shift = Math.max(right_shift, mContext.state.right_shift);\n\t        }\n\t      }\n\t      return {\n\t        left: left_shift,\n\t        right: right_shift,\n\t        extraLeft: extraLeftPx,\n\t        extraRight: extraRightPx\n\t      };\n\t    }\n\t  }, {\n\t    key: 'addTickable',\n\t    value: function addTickable(tickable) {\n\t      if (!tickable) {\n\t        throw new _vex.Vex.RERR('BadArgument', 'Invalid tickable added.');\n\t      }\n\t\n\t      if (!tickable.shouldIgnoreTicks()) {\n\t        this.ignore_ticks = false;\n\t\n\t        var ticks = tickable.getTicks();\n\t\n\t        if (ticks.greaterThan(this.maxTicks)) {\n\t          this.maxTicks = ticks.clone();\n\t        }\n\t\n\t        if (this.minTicks == null) {\n\t          this.minTicks = ticks.clone();\n\t        } else if (ticks.lessThan(this.minTicks)) {\n\t          this.minTicks = ticks.clone();\n\t        }\n\t      }\n\t\n\t      tickable.setTickContext(this);\n\t      this.tickables.push(tickable);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return this;\n\t\n\t      for (var i = 0; i < this.tickables.length; ++i) {\n\t        var tickable = this.tickables[i];\n\t        tickable.preFormat();\n\t        var metrics = tickable.getMetrics();\n\t\n\t        // Maintain max extra pixels from all tickables in the context\n\t        this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n\t        this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\t\n\t        // Maintain the widest note for all tickables in the context\n\t        this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\t\n\t        // Recalculate the tick context total width\n\t        this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'postFormat',\n\t    value: function postFormat() {\n\t      if (this.postFormatted) return this;\n\t      this.postFormatted = true;\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return TickContext;\n\t}(_tickable.Tickable);\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Annotation = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements text annotations as modifiers that can be attached to\n\t// notes.\n\t//\n\t// See `tests/annotation_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Annotation.DEBUG) _vex.Vex.L('Vex.Flow.Annotation', args);\n\t}\n\t\n\tvar Annotation = exports.Annotation = function (_Modifier) {\n\t  _inherits(Annotation, _Modifier);\n\t\n\t  _createClass(Annotation, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // Arrange annotations within a `ModifierContext`\n\t    value: function format(annotations, state) {\n\t      if (!annotations || annotations.length === 0) return false;\n\t\n\t      var width = 0;\n\t      for (var i = 0; i < annotations.length; ++i) {\n\t        var annotation = annotations[i];\n\t        width = Math.max(annotation.getWidth(), width);\n\t        if (annotation.getPosition() === _modifier.Modifier.Position.ABOVE) {\n\t          annotation.setTextLine(state.top_text_line);\n\t          state.top_text_line++;\n\t        } else {\n\t          annotation.setTextLine(state.text_line);\n\t          state.text_line++;\n\t        }\n\t      }\n\t\n\t      state.left_shift += width / 2;\n\t      state.right_shift += width / 2;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t    //\n\t    // Annotations inherit from `Modifier` and is positioned correctly when\n\t    // in a `ModifierContext`.\n\t    // Create a new `Annotation` with the string `text`.\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'annotations';\n\t    }\n\t\n\t    // Text annotations can be positioned and justified relative to the note.\n\t\n\t  }, {\n\t    key: 'Justify',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3,\n\t        CENTER_STEM: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'JustifyString',\n\t    get: function get() {\n\t      return {\n\t        left: Annotation.Justify.LEFT,\n\t        right: Annotation.Justify.RIGHT,\n\t        center: Annotation.Justify.CENTER,\n\t        centerStem: Annotation.Justify.CENTER_STEM\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VerticalJustify',\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        CENTER: 2,\n\t        BOTTOM: 3,\n\t        CENTER_STEM: 4\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VerticalJustifyString',\n\t    get: function get() {\n\t      return {\n\t        above: Annotation.VerticalJustify.TOP,\n\t        top: Annotation.VerticalJustify.TOP,\n\t        below: Annotation.VerticalJustify.BOTTOM,\n\t        bottom: Annotation.VerticalJustify.BOTTOM,\n\t        center: Annotation.VerticalJustify.CENTER,\n\t        centerStem: Annotation.VerticalJustify.CENTER_STEM\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Annotation(text) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).call(this));\n\t\n\t    _this.setAttribute('type', 'Annotation');\n\t\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.text = text;\n\t    _this.justification = Annotation.Justify.CENTER;\n\t    _this.vert_justification = Annotation.VerticalJustify.TOP;\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 10,\n\t      weight: ''\n\t    };\n\t\n\t    // The default width is calculated from the text.\n\t    _this.setWidth(_tables.Flow.textWidth(text));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Annotation.CATEGORY;\n\t    }\n\t\n\t    // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(family, size, weight) {\n\t      this.font = { family: family, size: size, weight: weight };\n\t      return this;\n\t    }\n\t\n\t    // Set vertical position of text (above or below stave). `just` must be\n\t    // a value in `Annotation.VerticalJustify`.\n\t\n\t  }, {\n\t    key: 'setVerticalJustification',\n\t    value: function setVerticalJustification(just) {\n\t      this.vert_justification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n\t      return this;\n\t    }\n\t\n\t    // Get and set horizontal justification. `justification` is a value in\n\t    // `Annotation.Justify`.\n\t\n\t  }, {\n\t    key: 'getJustification',\n\t    value: function getJustification() {\n\t      return this.justification;\n\t    }\n\t  }, {\n\t    key: 'setJustification',\n\t    value: function setJustification(just) {\n\t      this.justification = typeof just === 'string' ? Annotation.JustifyString[just] : just;\n\t      return this;\n\t    }\n\t\n\t    // Render text beside the note.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.note) {\n\t        throw new _vex.Vex.RERR('NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.ABOVE, this.index);\n\t\n\t      // We're changing context parameters. Save current state.\n\t      this.context.save();\n\t      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = this.context.measureText(this.text).width;\n\t\n\t      // Estimate text height to be the same as the width of an 'm'.\n\t      //\n\t      // This is a hack to work around the inability to measure text height\n\t      // in HTML5 Canvas (and SVG).\n\t      var text_height = this.context.measureText('m').width;\n\t      var x = void 0;\n\t      var y = void 0;\n\t\n\t      if (this.justification === Annotation.Justify.LEFT) {\n\t        x = start.x;\n\t      } else if (this.justification === Annotation.Justify.RIGHT) {\n\t        x = start.x - text_width;\n\t      } else if (this.justification === Annotation.Justify.CENTER) {\n\t        x = start.x - text_width / 2;\n\t      } else /* CENTER_STEM */{\n\t          x = this.note.getStemX() - text_width / 2;\n\t        }\n\t\n\t      var stem_ext = void 0;\n\t      var spacing = void 0;\n\t      var has_stem = this.note.hasStem();\n\t      var stave = this.note.getStave();\n\t\n\t      // The position of the text varies based on whether or not the note\n\t      // has a stem.\n\t      if (has_stem) {\n\t        stem_ext = this.note.getStem().getExtents();\n\t        spacing = stave.getSpacingBetweenLines();\n\t      }\n\t\n\t      if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n\t        // HACK: We need to compensate for the text's height since its origin\n\t        // is bottom-right.\n\t        y = stave.getYForBottomText(this.text_line + _tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t        if (has_stem) {\n\t          var stem_base = this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n\t          y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n\t        }\n\t      } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n\t        var yt = this.note.getYForTopText(this.text_line) - 1;\n\t        var yb = stave.getYForBottomText(this.text_line);\n\t        y = yt + (yb - yt) / 2 + text_height / 2;\n\t      } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n\t        y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n\t        if (has_stem) {\n\t          y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n\t        }\n\t      } else /* CENTER_STEM */{\n\t          var extents = this.note.getStemExtents();\n\t          y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n\t        }\n\t\n\t      L('Rendering annotation: ', this.text, x, y);\n\t      this.context.fillText(this.text, x, y);\n\t      this.context.restore();\n\t    }\n\t  }]);\n\n\t  return Annotation;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Bend = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements tablature bends.\n\t\n\t/**\n\t   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n\t   @param release If true, render a release. (DEPRECATED)\n\t   @param phrase If set, ignore \"text\" and \"release\", and use the more\n\t                 sophisticated phrase specified.\n\t\n\t   Example of a phrase:\n\t\n\t     [{\n\t       type: UP,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: DOWN,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: UP,\n\t       text: \"half\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: UP,\n\t       text: \"whole\"\n\t       width: 8;\n\t     },\n\t     {\n\t       type: DOWN,\n\t       text: \"1 1/2\"\n\t       width: 8;\n\t     }]\n\t */\n\tvar Bend = exports.Bend = function (_Modifier) {\n\t  _inherits(Bend, _Modifier);\n\t\n\t  _createClass(Bend, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange bends in `ModifierContext`\n\t    value: function format(bends, state) {\n\t      if (!bends || bends.length === 0) return false;\n\t\n\t      var last_width = 0;\n\t      // Bends are always on top.\n\t      var text_line = state.top_text_line;\n\t\n\t      // Format Bends\n\t      for (var i = 0; i < bends.length; ++i) {\n\t        var bend = bends[i];\n\t        bend.setXShift(last_width);\n\t        last_width = bend.getWidth();\n\t        bend.setTextLine(text_line);\n\t      }\n\t\n\t      state.right_shift += last_width;\n\t      state.top_text_line += 1;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'bends';\n\t    }\n\t  }, {\n\t    key: 'UP',\n\t    get: function get() {\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'DOWN',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }]);\n\t\n\t  function Bend(text, release, phrase) {\n\t    _classCallCheck(this, Bend);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Bend.__proto__ || Object.getPrototypeOf(Bend)).call(this));\n\t\n\t    _this.setAttribute('type', 'Bend');\n\t\n\t    _this.text = text;\n\t    _this.x_shift = 0;\n\t    _this.release = release || false;\n\t    _this.font = '10pt Arial';\n\t    _this.render_options = {\n\t      line_width: 1.5,\n\t      line_style: '#777777',\n\t      bend_width: 8,\n\t      release_width: 8\n\t    };\n\t\n\t    if (phrase) {\n\t      _this.phrase = phrase;\n\t    } else {\n\t      // Backward compatibility\n\t      _this.phrase = [{ type: Bend.UP, text: _this.text }];\n\t      if (_this.release) _this.phrase.push({ type: Bend.DOWN, text: '' });\n\t    }\n\t\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Bend, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Bend.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setXShift',\n\t    value: function setXShift(value) {\n\t      this.x_shift = value;\n\t      this.updateWidth();\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t  }, {\n\t    key: 'getText',\n\t    value: function getText() {\n\t      return this.text;\n\t    }\n\t  }, {\n\t    key: 'updateWidth',\n\t    value: function updateWidth() {\n\t      var that = this;\n\t\n\t      function measure_text(text) {\n\t        var text_width = void 0;\n\t        if (that.context) {\n\t          text_width = that.context.measureText(text).width;\n\t        } else {\n\t          text_width = _tables.Flow.textWidth(text);\n\t        }\n\t\n\t        return text_width;\n\t      }\n\t\n\t      var total_width = 0;\n\t      for (var i = 0; i < this.phrase.length; ++i) {\n\t        var bend = this.phrase[i];\n\t        if ('width' in bend) {\n\t          total_width += bend.width;\n\t        } else {\n\t          var additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n\t\n\t          bend.width = _vex.Vex.Max(additional_width, measure_text(bend.text)) + 3;\n\t          bend.draw_width = bend.width / 2;\n\t          total_width += bend.width;\n\t        }\n\t      }\n\t\n\t      this.setWidth(total_width + this.x_shift);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.RIGHT, this.index);\n\t      start.x += 3;\n\t      start.y += 0.5;\n\t      var x_shift = this.x_shift;\n\t\n\t      var ctx = this.context;\n\t      var bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n\t      var annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n\t      var that = this;\n\t\n\t      function renderBend(x, y, width, height) {\n\t        var cp_x = x + width;\n\t        var cp_y = y;\n\t\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.setLineWidth(that.render_options.line_width);\n\t        ctx.setStrokeStyle(that.render_options.line_style);\n\t        ctx.setFillStyle(that.render_options.line_style);\n\t        ctx.moveTo(x, y);\n\t        ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n\t        ctx.stroke();\n\t        ctx.restore();\n\t      }\n\t\n\t      function renderRelease(x, y, width, height) {\n\t        ctx.save();\n\t        ctx.beginPath();\n\t        ctx.setLineWidth(that.render_options.line_width);\n\t        ctx.setStrokeStyle(that.render_options.line_style);\n\t        ctx.setFillStyle(that.render_options.line_style);\n\t        ctx.moveTo(x, height);\n\t        ctx.quadraticCurveTo(x + width, height, x + width, y);\n\t        ctx.stroke();\n\t        ctx.restore();\n\t      }\n\t\n\t      function renderArrowHead(x, y, direction) {\n\t        var width = 4;\n\t        var dir = direction || 1;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(x, y);\n\t        ctx.lineTo(x - width, y + width * dir);\n\t        ctx.lineTo(x + width, y + width * dir);\n\t        ctx.closePath();\n\t        ctx.fill();\n\t      }\n\t\n\t      function renderText(x, text) {\n\t        ctx.save();\n\t        ctx.setRawFont(that.font);\n\t        var render_x = x - ctx.measureText(text).width / 2;\n\t        ctx.fillText(text, render_x, annotation_y);\n\t        ctx.restore();\n\t      }\n\t\n\t      var last_bend = null;\n\t      var last_drawn_width = 0;\n\t      for (var i = 0; i < this.phrase.length; ++i) {\n\t        var bend = this.phrase[i];\n\t        if (i === 0) bend.draw_width += x_shift;\n\t\n\t        last_drawn_width = bend.draw_width + (last_bend ? last_bend.draw_width : 0) - (i === 1 ? x_shift : 0);\n\t        if (bend.type === Bend.UP) {\n\t          if (last_bend && last_bend.type === Bend.UP) {\n\t            renderArrowHead(start.x, bend_height);\n\t          }\n\t\n\t          renderBend(start.x, start.y, last_drawn_width, bend_height);\n\t        }\n\t\n\t        if (bend.type === Bend.DOWN) {\n\t          if (last_bend && last_bend.type === Bend.UP) {\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t\n\t          if (last_bend && last_bend.type === Bend.DOWN) {\n\t            renderArrowHead(start.x, start.y, -1);\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t\n\t          if (last_bend === null) {\n\t            last_drawn_width = bend.draw_width;\n\t            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n\t          }\n\t        }\n\t\n\t        renderText(start.x + last_drawn_width, bend.text);\n\t        last_bend = bend;\n\t        last_bend.x = start.x;\n\t\n\t        start.x += last_drawn_width;\n\t      }\n\t\n\t      // Final arrowhead and text\n\t      if (last_bend.type === Bend.UP) {\n\t        renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n\t      } else if (last_bend.type === Bend.DOWN) {\n\t        renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Bend;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Vibrato = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _bend = __webpack_require__(41);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements vibratos.\n\t\n\tvar Vibrato = exports.Vibrato = function (_Modifier) {\n\t  _inherits(Vibrato, _Modifier);\n\t\n\t  _createClass(Vibrato, null, [{\n\t    key: 'format',\n\t\n\t\n\t    // ## Static Methods\n\t    // Arrange vibratos inside a `ModifierContext`.\n\t    value: function format(vibratos, state, context) {\n\t      if (!vibratos || vibratos.length === 0) return false;\n\t\n\t      // Vibratos are always on top.\n\t      var text_line = state.top_text_line;\n\t      var width = 0;\n\t      var shift = state.right_shift - 7;\n\t\n\t      // If there's a bend, drop the text line\n\t      var bends = context.getModifiers(_bend.Bend.CATEGORY);\n\t      if (bends && bends.length > 0) {\n\t        text_line--;\n\t      }\n\t\n\t      // Format Vibratos\n\t      for (var i = 0; i < vibratos.length; ++i) {\n\t        var vibrato = vibratos[i];\n\t        vibrato.setXShift(shift);\n\t        vibrato.setTextLine(text_line);\n\t        width += vibrato.getWidth();\n\t        shift += width;\n\t      }\n\t\n\t      state.right_shift += width;\n\t      state.top_text_line += 1;\n\t      return true;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'vibratos';\n\t    }\n\t  }]);\n\t\n\t  function Vibrato() {\n\t    _classCallCheck(this, Vibrato);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Vibrato.__proto__ || Object.getPrototypeOf(Vibrato)).call(this));\n\t\n\t    _this.setAttribute('type', 'Vibrato');\n\t\n\t    _this.position = _modifier.Modifier.Position.RIGHT;\n\t    _this.render_options = {\n\t      harsh: false,\n\t      vibrato_width: 20,\n\t      wave_height: 6,\n\t      wave_width: 4,\n\t      wave_girth: 2\n\t    };\n\t\n\t    _this.setVibratoWidth(_this.render_options.vibrato_width);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Vibrato, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Vibrato.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setHarsh',\n\t    value: function setHarsh(harsh) {\n\t      this.render_options.harsh = harsh;return this;\n\t    }\n\t  }, {\n\t    key: 'setVibratoWidth',\n\t    value: function setVibratoWidth(width) {\n\t      this.render_options.vibrato_width = width;\n\t      this.setWidth(width);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t\n\t      if (!this.note) {\n\t        throw new _vex.Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(_modifier.Modifier.Position.RIGHT, this.index);\n\t\n\t      var vx = start.x + this.x_shift;\n\t      var vy = this.note.getYForTopText(this.text_line) + 2;\n\t\n\t      Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n\t    }\n\t\n\t    // Static rendering method that can be called from\n\t    // other classes (e.g. VibratoBracket)\n\t\n\t  }], [{\n\t    key: 'renderVibrato',\n\t    value: function renderVibrato(ctx, x, y, opts) {\n\t      var harsh = opts.harsh;\n\t      var vibrato_width = opts.vibrato_width;\n\t      var wave_width = opts.wave_width;\n\t      var wave_girth = opts.wave_girth;\n\t      var wave_height = opts.wave_height;\n\t\n\t      var num_waves = vibrato_width / wave_width;\n\t\n\t      ctx.beginPath();\n\t\n\t      var i = void 0;\n\t      if (harsh) {\n\t        ctx.moveTo(x, y + wave_girth + 1);\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.lineTo(x + wave_width, y - wave_height / 2);\n\t          x += wave_width;\n\t          ctx.lineTo(x + wave_width, y + wave_height / 2);\n\t          x += wave_width;\n\t        }\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n\t          x -= wave_width;\n\t          ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n\t          x -= wave_width;\n\t        }\n\t        ctx.fill();\n\t      } else {\n\t        ctx.moveTo(x, y + wave_girth);\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n\t          x += wave_width;\n\t          ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n\t          x += wave_width;\n\t        }\n\t\n\t        for (i = 0; i < num_waves / 2; ++i) {\n\t          ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n\t          x -= wave_width;\n\t          ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n\t          x -= wave_width;\n\t        }\n\t        ctx.fill();\n\t      }\n\t    }\n\t  }]);\n\n\t  return Vibrato;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Stave = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _staverepetition = __webpack_require__(46);\n\t\n\tvar _stavesection = __webpack_require__(47);\n\t\n\tvar _stavetempo = __webpack_require__(48);\n\t\n\tvar _stavetext = __webpack_require__(49);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _keysignature = __webpack_require__(52);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tvar _stavevolta = __webpack_require__(54);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar Stave = exports.Stave = function (_Element) {\n\t  _inherits(Stave, _Element);\n\t\n\t  function Stave(x, y, width, options) {\n\t    _classCallCheck(this, Stave);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Stave.__proto__ || Object.getPrototypeOf(Stave)).call(this));\n\t\n\t    _this.setAttribute('type', 'Stave');\n\t\n\t    _this.x = x;\n\t    _this.y = y;\n\t    _this.width = width;\n\t    _this.formatted = false;\n\t    _this.start_x = x + 5;\n\t    _this.end_x = x + width;\n\t    _this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n\t    _this.measure = 0;\n\t    _this.clef = 'treble';\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 8,\n\t      weight: ''\n\t    };\n\t    _this.options = {\n\t      vertical_bar_width: 10, // Width around vertical bar end-marker\n\t      glyph_spacing_px: 10,\n\t      num_lines: 5,\n\t      fill_style: '#999999',\n\t      left_bar: true, // draw vertical bar on left\n\t      right_bar: true, // draw vertical bar on right\n\t      spacing_between_lines_px: 10, // in pixels\n\t      space_above_staff_ln: 4, // in staff lines\n\t      space_below_staff_ln: 4, // in staff lines\n\t      top_text_position: 1 };\n\t    _this.bounds = { x: _this.x, y: _this.y, w: _this.width, h: 0 };\n\t    _vex.Vex.Merge(_this.options, options);\n\t\n\t    _this.resetLines();\n\t\n\t    var BARTYPE = _stavebarline.Barline.type;\n\t    // beg bar\n\t    _this.addModifier(new _stavebarline.Barline(_this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n\t    // end bar\n\t    _this.addEndModifier(new _stavebarline.Barline(_this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Stave, [{\n\t    key: 'space',\n\t    value: function space(spacing) {\n\t      return this.options.spacing_between_lines_px * spacing;\n\t    }\n\t  }, {\n\t    key: 'resetLines',\n\t    value: function resetLines() {\n\t      this.options.line_config = [];\n\t      for (var i = 0; i < this.options.num_lines; i++) {\n\t        this.options.line_config.push({ visible: true });\n\t      }\n\t      this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n\t      this.options.bottom_text_position = this.options.num_lines;\n\t    }\n\t  }, {\n\t    key: 'getOptions',\n\t    value: function getOptions() {\n\t      return this.options;\n\t    }\n\t  }, {\n\t    key: 'setNoteStartX',\n\t    value: function setNoteStartX(x) {\n\t      if (!this.formatted) this.format();\n\t\n\t      this.start_x = x;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getNoteStartX',\n\t    value: function getNoteStartX() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.start_x;\n\t    }\n\t  }, {\n\t    key: 'getNoteEndX',\n\t    value: function getNoteEndX() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.end_x;\n\t    }\n\t  }, {\n\t    key: 'getTieStartX',\n\t    value: function getTieStartX() {\n\t      return this.start_x;\n\t    }\n\t  }, {\n\t    key: 'getTieEndX',\n\t    value: function getTieEndX() {\n\t      return this.x + this.width;\n\t    }\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'getNumLines',\n\t    value: function getNumLines() {\n\t      return this.options.num_lines;\n\t    }\n\t  }, {\n\t    key: 'setNumLines',\n\t    value: function setNumLines(lines) {\n\t      this.options.num_lines = parseInt(lines, 10);\n\t      this.resetLines();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setY',\n\t    value: function setY(y) {\n\t      this.y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'getTopLineTopY',\n\t    value: function getTopLineTopY() {\n\t      return this.getYForLine(0) - _tables.Flow.STAVE_LINE_THICKNESS / 2;\n\t    }\n\t  }, {\n\t    key: 'getBottomLineBottomY',\n\t    value: function getBottomLineBottomY() {\n\t      return this.getYForLine(this.getNumLines() - 1) + _tables.Flow.STAVE_LINE_THICKNESS / 2;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      var shift = x - this.x;\n\t      this.formatted = false;\n\t      this.x = x;\n\t      this.start_x += shift;\n\t      this.end_x += shift;\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        var mod = this.modifiers[i];\n\t        if (mod.x !== undefined) {\n\t          mod.x += shift;\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.formatted = false;\n\t      this.width = width;\n\t      this.end_x = this.x + width;\n\t\n\t      // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n\t      // this.modifiers[1].setX(this.end_x);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'getStyle',\n\t    value: function getStyle() {\n\t      return _extends({\n\t        fillStyle: this.options.fill_style,\n\t        strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n\t        lineWidth: _tables.Flow.STAVE_LINE_THICKNESS\n\t      }, this.style || {});\n\t    }\n\t  }, {\n\t    key: 'setMeasure',\n\t    value: function setMeasure(measure) {\n\t      this.measure = measure;return this;\n\t    }\n\t\n\t    /**\n\t     * Gets the pixels to shift from the beginning of the stave\n\t     * following the modifier at the provided index\n\t     * @param  {Number} index The index from which to determine the shift\n\t     * @return {Number}       The amount of pixels shifted\n\t     */\n\t\n\t  }, {\n\t    key: 'getModifierXShift',\n\t    value: function getModifierXShift() {\n\t      var index = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\n\t      if (typeof index !== 'number') {\n\t        throw new _vex.Vex.RERR('InvalidIndex', 'Must be of number type');\n\t      }\n\t\n\t      if (!this.formatted) this.format();\n\t\n\t      if (this.getModifiers(_stavemodifier.StaveModifier.Position.BEGIN).length === 1) {\n\t        return 0;\n\t      }\n\t\n\t      var start_x = this.start_x - this.x;\n\t      var begBarline = this.modifiers[0];\n\t      if (begBarline.getType() === _stavebarline.Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n\t        start_x -= begBarline.getWidth();\n\t      }\n\t\n\t      return start_x;\n\t    }\n\t\n\t    // Coda & Segno Symbol functions\n\t\n\t  }, {\n\t    key: 'setRepetitionTypeLeft',\n\t    value: function setRepetitionTypeLeft(type, y) {\n\t      this.modifiers.push(new _staverepetition.Repetition(type, this.x, y));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRepetitionTypeRight',\n\t    value: function setRepetitionTypeRight(type, y) {\n\t      this.modifiers.push(new _staverepetition.Repetition(type, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Volta functions\n\t\n\t  }, {\n\t    key: 'setVoltaType',\n\t    value: function setVoltaType(type, number_t, y) {\n\t      this.modifiers.push(new _stavevolta.Volta(type, number_t, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Section functions\n\t\n\t  }, {\n\t    key: 'setSection',\n\t    value: function setSection(section, y) {\n\t      this.modifiers.push(new _stavesection.StaveSection(section, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Tempo functions\n\t\n\t  }, {\n\t    key: 'setTempo',\n\t    value: function setTempo(tempo, y) {\n\t      this.modifiers.push(new _stavetempo.StaveTempo(tempo, this.x, y));\n\t      return this;\n\t    }\n\t\n\t    // Text functions\n\t\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text, position, options) {\n\t      this.modifiers.push(new _stavetext.StaveText(text, position, options));\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getHeight',\n\t    value: function getHeight() {\n\t      return this.height;\n\t    }\n\t  }, {\n\t    key: 'getSpacingBetweenLines',\n\t    value: function getSpacingBetweenLines() {\n\t      return this.options.spacing_between_lines_px;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n\t    }\n\t  }, {\n\t    key: 'getBottomY',\n\t    value: function getBottomY() {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n\t\n\t      return score_bottom;\n\t    }\n\t  }, {\n\t    key: 'getBottomLineY',\n\t    value: function getBottomLineY() {\n\t      return this.getYForLine(this.options.num_lines);\n\t    }\n\t\n\t    // This returns the y for the *center* of a staff line\n\t\n\t  }, {\n\t    key: 'getYForLine',\n\t    value: function getYForLine(line) {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t\n\t      var y = this.y + line * spacing + headroom * spacing;\n\t\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'getLineForY',\n\t    value: function getLineForY(y) {\n\t      // Does the reverse of getYForLine - somewhat dumb and just calls\n\t      // getYForLine until the right value is reaches\n\t\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t      return (y - this.y) / spacing - headroom;\n\t    }\n\t  }, {\n\t    key: 'getYForTopText',\n\t    value: function getYForTopText(line) {\n\t      var l = line || 0;\n\t      return this.getYForLine(-l - this.options.top_text_position);\n\t    }\n\t  }, {\n\t    key: 'getYForBottomText',\n\t    value: function getYForBottomText(line) {\n\t      var l = line || 0;\n\t      return this.getYForLine(this.options.bottom_text_position + l);\n\t    }\n\t  }, {\n\t    key: 'getYForNote',\n\t    value: function getYForNote(line) {\n\t      var options = this.options;\n\t      var spacing = options.spacing_between_lines_px;\n\t      var headroom = options.space_above_staff_ln;\n\t      var y = this.y + headroom * spacing + 5 * spacing - line * spacing;\n\t\n\t      return y;\n\t    }\n\t  }, {\n\t    key: 'getYForGlyphs',\n\t    value: function getYForGlyphs() {\n\t      return this.getYForLine(3);\n\t    }\n\t  }, {\n\t    key: 'addModifier',\n\t    value: function addModifier(modifier, position) {\n\t      if (position !== undefined) {\n\t        modifier.setPosition(position);\n\t      }\n\t\n\t      modifier.setStave(this);\n\t      this.formatted = false;\n\t      this.modifiers.push(modifier);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndModifier',\n\t    value: function addEndModifier(modifier) {\n\t      this.addModifier(modifier, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t\n\t    // Bar Line functions\n\t\n\t  }, {\n\t    key: 'setBegBarType',\n\t    value: function setBegBarType(type) {\n\t      // Only valid bar types at beginning of stave is none, single or begin repeat\n\t      var _Barline$type = _stavebarline.Barline.type;\n\t      var SINGLE = _Barline$type.SINGLE;\n\t      var REPEAT_BEGIN = _Barline$type.REPEAT_BEGIN;\n\t      var NONE = _Barline$type.NONE;\n\t\n\t      if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n\t        this.modifiers[0].setType(type);\n\t        this.formatted = false;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndBarType',\n\t    value: function setEndBarType(type) {\n\t      // Repeat end not valid at end of stave\n\t      if (type !== _stavebarline.Barline.type.REPEAT_BEGIN) {\n\t        this.modifiers[1].setType(type);\n\t        this.formatted = false;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setClef',\n\t    value: function setClef(clefSpec, size, annotation, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      this.clef = clefSpec;\n\t      var clefs = this.getModifiers(position, _clef.Clef.CATEGORY);\n\t      if (clefs.length === 0) {\n\t        this.addClef(clefSpec, size, annotation, position);\n\t      } else {\n\t        clefs[0].setType(clefSpec, size, annotation);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndClef',\n\t    value: function setEndClef(clefSpec, size, annotation) {\n\t      this.setClef(clefSpec, size, annotation, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setKeySignature',\n\t    value: function setKeySignature(keySpec, cancelKeySpec, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      var keySignatures = this.getModifiers(position, _keysignature.KeySignature.CATEGORY);\n\t      if (keySignatures.length === 0) {\n\t        this.addKeySignature(keySpec, cancelKeySpec, position);\n\t      } else {\n\t        keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndKeySignature',\n\t    value: function setEndKeySignature(keySpec, cancelKeySpec) {\n\t      this.setKeySignature(keySpec, cancelKeySpec, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setTimeSignature',\n\t    value: function setTimeSignature(timeSpec, customPadding, position) {\n\t      if (position === undefined) {\n\t        position = _stavemodifier.StaveModifier.Position.BEGIN;\n\t      }\n\t\n\t      var timeSignatures = this.getModifiers(position, _timesignature.TimeSignature.CATEGORY);\n\t      if (timeSignatures.length === 0) {\n\t        this.addTimeSignature(timeSpec, customPadding, position);\n\t      } else {\n\t        timeSignatures[0].setTimeSig(timeSpec);\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setEndTimeSignature',\n\t    value: function setEndTimeSignature(timeSpec, customPadding) {\n\t      this.setTimeSignature(timeSpec, customPadding, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addKeySignature',\n\t    value: function addKeySignature(keySpec, cancelKeySpec, position) {\n\t      this.addModifier(new _keysignature.KeySignature(keySpec, cancelKeySpec), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addClef',\n\t    value: function addClef(clef, size, annotation, position) {\n\t      if (position === undefined || position === _stavemodifier.StaveModifier.Position.BEGIN) {\n\t        this.clef = clef;\n\t      }\n\t\n\t      this.addModifier(new _clef.Clef(clef, size, annotation), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndClef',\n\t    value: function addEndClef(clef, size, annotation) {\n\t      this.addClef(clef, size, annotation, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addTimeSignature',\n\t    value: function addTimeSignature(timeSpec, customPadding, position) {\n\t      this.addModifier(new _timesignature.TimeSignature(timeSpec, customPadding), position);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addEndTimeSignature',\n\t    value: function addEndTimeSignature(timeSpec, customPadding) {\n\t      this.addTimeSignature(timeSpec, customPadding, _stavemodifier.StaveModifier.Position.END);\n\t      return this;\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addTrebleGlyph',\n\t    value: function addTrebleGlyph() {\n\t      this.addClef('treble');\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getModifiers',\n\t    value: function getModifiers(position, category) {\n\t      if (position === undefined) return this.modifiers;\n\t\n\t      return this.modifiers.filter(function (modifier) {\n\t        return position === modifier.getPosition() && (category === undefined || category === modifier.getCategory());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'sortByCategory',\n\t    value: function sortByCategory(items, order) {\n\t      for (var i = items.length - 1; i >= 0; i--) {\n\t        for (var j = 0; j < i; j++) {\n\t          if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n\t            var temp = items[j];\n\t            items[j] = items[j + 1];\n\t            items[j + 1] = temp;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      var begBarline = this.modifiers[0];\n\t      var endBarline = this.modifiers[1];\n\t\n\t      var begModifiers = this.getModifiers(_stavemodifier.StaveModifier.Position.BEGIN);\n\t      var endModifiers = this.getModifiers(_stavemodifier.StaveModifier.Position.END);\n\t\n\t      this.sortByCategory(begModifiers, {\n\t        barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3\n\t      });\n\t\n\t      this.sortByCategory(endModifiers, {\n\t        timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3\n\t      });\n\t\n\t      if (begModifiers.length > 1 && begBarline.getType() === _stavebarline.Barline.type.REPEAT_BEGIN) {\n\t        begModifiers.push(begModifiers.splice(0, 1)[0]);\n\t        begModifiers.splice(0, 0, new _stavebarline.Barline(_stavebarline.Barline.type.SINGLE));\n\t      }\n\t\n\t      if (endModifiers.indexOf(endBarline) > 0) {\n\t        endModifiers.splice(0, 0, new _stavebarline.Barline(_stavebarline.Barline.type.NONE));\n\t      }\n\t\n\t      var width = void 0;\n\t      var padding = void 0;\n\t      var modifier = void 0;\n\t      var offset = 0;\n\t      var x = this.x;\n\t      for (var i = 0; i < begModifiers.length; i++) {\n\t        modifier = begModifiers[i];\n\t        padding = modifier.getPadding(i + offset);\n\t        width = modifier.getWidth();\n\t\n\t        x += padding;\n\t        modifier.setX(x);\n\t        x += width;\n\t\n\t        if (padding + width === 0) offset--;\n\t      }\n\t\n\t      this.start_x = x;\n\t      x = this.x + this.width;\n\t\n\t      for (var _i = 0; _i < endModifiers.length; _i++) {\n\t        modifier = endModifiers[_i];\n\t        x -= modifier.getPadding(_i);\n\t        if (_i !== 0) {\n\t          x -= modifier.getWidth();\n\t        }\n\t\n\t        modifier.setX(x);\n\t\n\t        if (_i === 0) {\n\t          x -= modifier.getWidth();\n\t        }\n\t      }\n\t\n\t      this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n\t      this.formatted = true;\n\t    }\n\t\n\t    /**\n\t     * All drawing functions below need the context to be set.\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.formatted) this.format();\n\t\n\t      var num_lines = this.options.num_lines;\n\t      var width = this.width;\n\t      var x = this.x;\n\t      var y = void 0;\n\t\n\t      // Render lines\n\t      for (var line = 0; line < num_lines; line++) {\n\t        y = this.getYForLine(line);\n\t\n\t        this.applyStyle();\n\t        if (this.options.line_config[line].visible) {\n\t          this.context.beginPath();\n\t          this.context.moveTo(x, y);\n\t          this.context.lineTo(x + width, y);\n\t          this.context.stroke();\n\t        }\n\t        this.restoreStyle();\n\t      }\n\t\n\t      // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n\t      for (var i = 0; i < this.modifiers.length; i++) {\n\t        // Only draw modifier if it has a draw function\n\t        if (typeof this.modifiers[i].draw === 'function') {\n\t          this.modifiers[i].draw(this, this.getModifierXShift(i));\n\t        }\n\t      }\n\t\n\t      // Render measure numbers\n\t      if (this.measure > 0) {\n\t        this.context.save();\n\t        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\t        var text_width = this.context.measureText('' + this.measure).width;\n\t        y = this.getYForTopText(0) + 3;\n\t        this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n\t        this.context.restore();\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Draw Simple barlines for backward compatability\n\t    // Do not delete - draws the beginning bar of the stave\n\t\n\t  }, {\n\t    key: 'drawVertical',\n\t    value: function drawVertical(x, isDouble) {\n\t      this.drawVerticalFixed(this.x + x, isDouble);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalFixed',\n\t    value: function drawVerticalFixed(x, isDouble) {\n\t      this.checkContext();\n\t\n\t      var top_line = this.getYForLine(0);\n\t      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n\t      if (isDouble) {\n\t        this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n\t      }\n\t      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBar',\n\t    value: function drawVerticalBar(x) {\n\t      this.drawVerticalBarFixed(this.x + x, false);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBarFixed',\n\t    value: function drawVerticalBarFixed(x) {\n\t      this.checkContext();\n\t\n\t      var top_line = this.getYForLine(0);\n\t      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n\t      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n\t    }\n\t\n\t    /**\n\t     * Get the current configuration for the Stave.\n\t     * @return {Array} An array of configuration objects.\n\t     */\n\t\n\t  }, {\n\t    key: 'getConfigForLines',\n\t    value: function getConfigForLines() {\n\t      return this.options.line_config;\n\t    }\n\t\n\t    /**\n\t     * Configure properties of the lines in the Stave\n\t     * @param line_number The index of the line to configure.\n\t     * @param line_config An configuration object for the specified line.\n\t     * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n\t     *   range of the number of lines specified in the constructor.\n\t     */\n\t\n\t  }, {\n\t    key: 'setConfigForLine',\n\t    value: function setConfigForLine(line_number, line_config) {\n\t      if (line_number >= this.options.num_lines || line_number < 0) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n\t      }\n\t\n\t      if (line_config.visible === undefined) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n\t      }\n\t\n\t      if (typeof line_config.visible !== 'boolean') {\n\t        throw new _vex.Vex.RERR('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n\t      }\n\t\n\t      this.options.line_config[line_number] = line_config;\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the staff line configuration array for all of the lines at once.\n\t     * @param lines_configuration An array of line configuration objects.  These objects\n\t     *   are of the same format as the single one passed in to setLineConfiguration().\n\t     *   The caller can set null for any line config entry if it is desired that the default be used\n\t     * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n\t     *   exactly the same number of elements as the num_lines configuration object set in\n\t     *   the constructor.\n\t     */\n\t\n\t  }, {\n\t    key: 'setConfigForLines',\n\t    value: function setConfigForLines(lines_configuration) {\n\t      if (lines_configuration.length !== this.options.num_lines) {\n\t        throw new _vex.Vex.RERR('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n\t      }\n\t\n\t      // Make sure the defaults are present in case an incomplete set of\n\t      //  configuration options were supplied.\n\t      for (var line_config in lines_configuration) {\n\t        // Allow 'null' to be used if the caller just wants the default for a particular node.\n\t        if (!lines_configuration[line_config]) {\n\t          lines_configuration[line_config] = this.options.line_config[line_config];\n\t        }\n\t        _vex.Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n\t      }\n\t\n\t      this.options.line_config = lines_configuration;\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Stave;\n\t}(_element.Element);\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Barline = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// Author Larry Kuhns 2011\n\t\n\tvar Barline = exports.Barline = function (_StaveModifier) {\n\t  _inherits(Barline, _StaveModifier);\n\t\n\t  _createClass(Barline, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'barlines';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        SINGLE: 1,\n\t        DOUBLE: 2,\n\t        END: 3,\n\t        REPEAT_BEGIN: 4,\n\t        REPEAT_END: 5,\n\t        REPEAT_BOTH: 6,\n\t        NONE: 7\n\t      };\n\t    }\n\t  }, {\n\t    key: 'typeString',\n\t    get: function get() {\n\t      return {\n\t        single: Barline.type.SINGLE,\n\t        double: Barline.type.DOUBLE,\n\t        end: Barline.type.END,\n\t        repeatBegin: Barline.type.REPEAT_BEGIN,\n\t        repeatEnd: Barline.type.REPEAT_END,\n\t        repeatBoth: Barline.type.REPEAT_BOTH,\n\t        none: Barline.type.NONE\n\t      };\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     */\n\t\n\t  }]);\n\t\n\t  function Barline(type) {\n\t    _classCallCheck(this, Barline);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Barline.__proto__ || Object.getPrototypeOf(Barline)).call(this));\n\t\n\t    _this.setAttribute('type', 'Barline');\n\t    _this.thickness = _tables.Flow.STAVE_LINE_THICKNESS;\n\t\n\t    var TYPE = Barline.type;\n\t    _this.widths = {};\n\t    _this.widths[TYPE.SINGLE] = 5;\n\t    _this.widths[TYPE.DOUBLE] = 5;\n\t    _this.widths[TYPE.END] = 5;\n\t    _this.widths[TYPE.REPEAT_BEGIN] = 5;\n\t    _this.widths[TYPE.REPEAT_END] = 5;\n\t    _this.widths[TYPE.REPEAT_BOTH] = 5;\n\t    _this.widths[TYPE.NONE] = 5;\n\t\n\t    _this.paddings = {};\n\t    _this.paddings[TYPE.SINGLE] = 0;\n\t    _this.paddings[TYPE.DOUBLE] = 0;\n\t    _this.paddings[TYPE.END] = 0;\n\t    _this.paddings[TYPE.REPEAT_BEGIN] = 15;\n\t    _this.paddings[TYPE.REPEAT_END] = 15;\n\t    _this.paddings[TYPE.REPEAT_BOTH] = 15;\n\t    _this.paddings[TYPE.NONE] = 0;\n\t\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setType(type);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Barline, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Barline.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\t\n\t      this.setWidth(this.widths[this.type]);\n\t      this.setPadding(this.paddings[this.type]);\n\t      return this;\n\t    }\n\t\n\t    // Draw barlines\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave) {\n\t      stave.checkContext();\n\t      this.setRendered();\n\t\n\t      switch (this.type) {\n\t        case Barline.type.SINGLE:\n\t          this.drawVerticalBar(stave, this.x, false);\n\t          break;\n\t        case Barline.type.DOUBLE:\n\t          this.drawVerticalBar(stave, this.x, true);\n\t          break;\n\t        case Barline.type.END:\n\t          this.drawVerticalEndBar(stave, this.x);\n\t          break;\n\t        case Barline.type.REPEAT_BEGIN:\n\t          // If the barline is shifted over (in front of clef/time/key)\n\t          // Draw vertical bar at the beginning.\n\t          this.drawRepeatBar(stave, this.x, true);\n\t          if (stave.getX() !== this.x) {\n\t            this.drawVerticalBar(stave, stave.getX());\n\t          }\n\t\n\t          break;\n\t        case Barline.type.REPEAT_END:\n\t          this.drawRepeatBar(stave, this.x, false);\n\t          break;\n\t        case Barline.type.REPEAT_BOTH:\n\t          this.drawRepeatBar(stave, this.x, false);\n\t          this.drawRepeatBar(stave, this.x, true);\n\t          break;\n\t        default:\n\t          // Default is NONE, so nothing to draw\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'drawVerticalBar',\n\t    value: function drawVerticalBar(stave, x, double_bar) {\n\t      stave.checkContext();\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      if (double_bar) {\n\t        stave.context.fillRect(x - 3, topY, 1, botY - topY);\n\t      }\n\t      stave.context.fillRect(x, topY, 1, botY - topY);\n\t    }\n\t  }, {\n\t    key: 'drawVerticalEndBar',\n\t    value: function drawVerticalEndBar(stave, x) {\n\t      stave.checkContext();\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      stave.context.fillRect(x - 5, topY, 1, botY - topY);\n\t      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\t    }\n\t  }, {\n\t    key: 'drawRepeatBar',\n\t    value: function drawRepeatBar(stave, x, begin) {\n\t      stave.checkContext();\n\t\n\t      var topY = stave.getTopLineTopY();\n\t      var botY = stave.getBottomLineBottomY();\n\t      var x_shift = 3;\n\t\n\t      if (!begin) {\n\t        x_shift = -5;\n\t      }\n\t\n\t      stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n\t      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\t\n\t      var dot_radius = 2;\n\t\n\t      // Shift dots left or right\n\t      if (begin) {\n\t        x_shift += 4;\n\t      } else {\n\t        x_shift -= 4;\n\t      }\n\t\n\t      var dot_x = x + x_shift + dot_radius / 2;\n\t\n\t      // calculate the y offset based on number of stave lines\n\t      var y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n\t      y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n\t      var dot_y = topY + y_offset + dot_radius / 2;\n\t\n\t      // draw the top repeat dot\n\t      stave.context.beginPath();\n\t      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n\t      stave.context.fill();\n\t\n\t      // draw the bottom repeat dot\n\t      dot_y += stave.getSpacingBetweenLines();\n\t      stave.context.beginPath();\n\t      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n\t      stave.context.fill();\n\t    }\n\t  }]);\n\n\t  return Barline;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveModifier = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// A base class for stave modifiers (e.g. clefs, key signatures)\n\t\n\tvar StaveModifier = exports.StaveModifier = function (_Element) {\n\t  _inherits(StaveModifier, _Element);\n\t\n\t  _createClass(StaveModifier, null, [{\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        RIGHT: 2,\n\t        ABOVE: 3,\n\t        BELOW: 4,\n\t        BEGIN: 5,\n\t        END: 6\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveModifier() {\n\t    _classCallCheck(this, StaveModifier);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveModifier.__proto__ || Object.getPrototypeOf(StaveModifier)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveModifier');\n\t\n\t    _this.padding = 10;\n\t    _this.position = StaveModifier.Position.ABOVE;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveModifier, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      return this.position;\n\t    }\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      this.position = position;return this;\n\t    }\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      this.width = width;return this;\n\t    }\n\t  }, {\n\t    key: 'getX',\n\t    value: function getX() {\n\t      return this.x;\n\t    }\n\t  }, {\n\t    key: 'setX',\n\t    value: function setX(x) {\n\t      this.x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return '';\n\t    }\n\t  }, {\n\t    key: 'makeSpacer',\n\t    value: function makeSpacer(padding) {\n\t      // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n\t      // instead of this hack.\n\t\n\t      return {\n\t        getContext: function getContext() {\n\t          return true;\n\t        },\n\t        setStave: function setStave() {},\n\t        renderToStave: function renderToStave() {},\n\t        getMetrics: function getMetrics() {\n\t          return { width: padding };\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'placeGlyphOnLine',\n\t    value: function placeGlyphOnLine(glyph, stave, line) {\n\t      glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n\t    }\n\t  }, {\n\t    key: 'getPadding',\n\t    value: function getPadding(index) {\n\t      return index !== undefined && index < 2 ? 0 : this.padding;\n\t    }\n\t  }, {\n\t    key: 'setPadding',\n\t    value: function setPadding(padding) {\n\t      this.padding = padding;return this;\n\t    }\n\t  }]);\n\n\t  return StaveModifier;\n\t}(_element.Element);\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Repetition = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar Repetition = exports.Repetition = function (_StaveModifier) {\n\t  _inherits(Repetition, _StaveModifier);\n\t\n\t  _createClass(Repetition, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'repetitions';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1, // no coda or segno\n\t        CODA_LEFT: 2, // coda at beginning of stave\n\t        CODA_RIGHT: 3, // coda at end of stave\n\t        SEGNO_LEFT: 4, // segno at beginning of stave\n\t        SEGNO_RIGHT: 5, // segno at end of stave\n\t        DC: 6, // D.C. at end of stave\n\t        DC_AL_CODA: 7, // D.C. al coda at end of stave\n\t        DC_AL_FINE: 8, // D.C. al Fine end of stave\n\t        DS: 9, // D.S. at end of stave\n\t        DS_AL_CODA: 10, // D.S. al coda at end of stave\n\t        DS_AL_FINE: 11, // D.S. al Fine at end of stave\n\t        FINE: 12 };\n\t    }\n\t  }]);\n\t\n\t  function Repetition(type, x, y_shift) {\n\t    _classCallCheck(this, Repetition);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Repetition.__proto__ || Object.getPrototypeOf(Repetition)).call(this));\n\t\n\t    _this.setAttribute('type', 'Repetition');\n\t\n\t    _this.symbol_type = type;\n\t    _this.x = x;\n\t    _this.x_shift = 0;\n\t    _this.y_shift = y_shift;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 12,\n\t      weight: 'bold italic'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Repetition, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Repetition.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.x_shift = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, x) {\n\t      this.setRendered();\n\t\n\t      switch (this.symbol_type) {\n\t        case Repetition.type.CODA_RIGHT:\n\t          this.drawCodaFixed(stave, x + stave.width);\n\t          break;\n\t        case Repetition.type.CODA_LEFT:\n\t          this.drawSymbolText(stave, x, 'Coda', true);\n\t          break;\n\t        case Repetition.type.SEGNO_LEFT:\n\t          this.drawSignoFixed(stave, x);\n\t          break;\n\t        case Repetition.type.SEGNO_RIGHT:\n\t          this.drawSignoFixed(stave, x + stave.width);\n\t          break;\n\t        case Repetition.type.DC:\n\t          this.drawSymbolText(stave, x, 'D.C.', false);\n\t          break;\n\t        case Repetition.type.DC_AL_CODA:\n\t          this.drawSymbolText(stave, x, 'D.C. al', true);\n\t          break;\n\t        case Repetition.type.DC_AL_FINE:\n\t          this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n\t          break;\n\t        case Repetition.type.DS:\n\t          this.drawSymbolText(stave, x, 'D.S.', false);\n\t          break;\n\t        case Repetition.type.DS_AL_CODA:\n\t          this.drawSymbolText(stave, x, 'D.S. al', true);\n\t          break;\n\t        case Repetition.type.DS_AL_FINE:\n\t          this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n\t          break;\n\t        case Repetition.type.FINE:\n\t          this.drawSymbolText(stave, x, 'Fine', false);\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawCodaFixed',\n\t    value: function drawCodaFixed(stave, x) {\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      _glyph.Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawSignoFixed',\n\t    value: function drawSignoFixed(stave, x) {\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      _glyph.Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'drawSymbolText',\n\t    value: function drawSymbolText(stave, x, text, draw_coda) {\n\t      var ctx = stave.checkContext();\n\t\n\t      ctx.save();\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      // Default to right symbol\n\t      var text_x = 0 + this.x_shift;\n\t      var symbol_x = x + this.x_shift;\n\t      if (this.symbol_type === Repetition.type.CODA_LEFT) {\n\t        // Offset Coda text to right of stave beginning\n\t        text_x = this.x + stave.options.vertical_bar_width;\n\t        symbol_x = text_x + ctx.measureText(text).width + 12;\n\t      } else {\n\t        // Offset Signo text to left stave end\n\t        symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n\t        text_x = symbol_x - +ctx.measureText(text).width - 12;\n\t      }\n\t\n\t      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      if (draw_coda) {\n\t        _glyph.Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n\t      }\n\t\n\t      ctx.fillText(text, text_x, y + 5);\n\t      ctx.restore();\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Repetition;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveSection = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar StaveSection = exports.StaveSection = function (_StaveModifier) {\n\t  _inherits(StaveSection, _StaveModifier);\n\t\n\t  _createClass(StaveSection, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavesection';\n\t    }\n\t  }]);\n\t\n\t  function StaveSection(section, x, shift_y) {\n\t    _classCallCheck(this, StaveSection);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveSection.__proto__ || Object.getPrototypeOf(StaveSection)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveSection');\n\t\n\t    _this.setWidth(16);\n\t    _this.section = section;\n\t    _this.x = x;\n\t    _this.shift_x = 0;\n\t    _this.shift_y = shift_y;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 12,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveSection, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveSection.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setStaveSection',\n\t    value: function setStaveSection(section) {\n\t      this.section = section;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, shift_x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = ctx.measureText('' + this.section).width;\n\t      var width = text_width + 6; // add left & right padding\n\t      if (width < 18) width = 18;\n\t      var height = 20;\n\t      //  Seems to be a good default y\n\t      var y = stave.getYForTopText(3) + this.shift_y;\n\t      var x = this.x + shift_x;\n\t      ctx.beginPath();\n\t      ctx.lineWidth = 2;\n\t      ctx.rect(x, y, width, height);\n\t      ctx.stroke();\n\t      x += (width - text_width) / 2;\n\t      ctx.fillText('' + this.section, x, y + 16);\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveSection;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveTempo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Radosaw Eichler 2012\n\t\n\tvar StaveTempo = exports.StaveTempo = function (_StaveModifier) {\n\t  _inherits(StaveTempo, _StaveModifier);\n\t\n\t  _createClass(StaveTempo, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavetempo';\n\t    }\n\t  }]);\n\t\n\t  function StaveTempo(tempo, x, shift_y) {\n\t    _classCallCheck(this, StaveTempo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveTempo.__proto__ || Object.getPrototypeOf(StaveTempo)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveTempo');\n\t\n\t    _this.tempo = tempo;\n\t    _this.position = _modifier.Modifier.Position.ABOVE;\n\t    _this.x = x;\n\t    _this.shift_x = 10;\n\t    _this.shift_y = shift_y;\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 14,\n\t      weight: 'bold'\n\t    };\n\t    _this.render_options = {\n\t      glyph_font_scale: 30 };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveTempo, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveTempo.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setTempo',\n\t    value: function setTempo(tempo) {\n\t      this.tempo = tempo;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, shift_x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      var options = this.render_options;\n\t      // FIXME: What does the '38' mean? Why 38? Is that supposed to\n\t      // be the default font size for standard notation?\n\t      var scale = options.glyph_font_scale / 38;\n\t      var name = this.tempo.name;\n\t      var duration = this.tempo.duration;\n\t      var dots = this.tempo.dots;\n\t      var bpm = this.tempo.bpm;\n\t      var font = this.font;\n\t      var x = this.x + this.shift_x + shift_x;\n\t      var y = stave.getYForTopText(1) + this.shift_y;\n\t\n\t      ctx.save();\n\t\n\t      if (name) {\n\t        ctx.setFont(font.family, font.size, font.weight);\n\t        ctx.fillText(name, x, y);\n\t        x += ctx.measureText(name).width;\n\t      }\n\t\n\t      if (duration && bpm) {\n\t        ctx.setFont(font.family, font.size, 'normal');\n\t\n\t        if (name) {\n\t          x += ctx.measureText(' ').width;\n\t          ctx.fillText('(', x, y);\n\t          x += ctx.measureText('(').width;\n\t        }\n\t\n\t        var code = _tables.Flow.durationToGlyph(duration);\n\t\n\t        x += 3 * scale;\n\t        _glyph.Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n\t        x += code.getWidth() * scale;\n\t\n\t        // Draw stem and flags\n\t        if (code.stem) {\n\t          var stem_height = 30;\n\t\n\t          if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\t\n\t          stem_height *= scale;\n\t\n\t          var y_top = y - stem_height;\n\t          ctx.fillRect(x - scale, y_top, scale, stem_height);\n\t\n\t          if (code.flag) {\n\t            _glyph.Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\t\n\t            if (!dots) x += 6 * scale;\n\t          }\n\t        }\n\t\n\t        // Draw dot\n\t        for (var i = 0; i < dots; i++) {\n\t          x += 6 * scale;\n\t          ctx.beginPath();\n\t          ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n\t          ctx.fill();\n\t        }\n\t\n\t        ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveTempo;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveText = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2014\n\t\n\tvar StaveText = exports.StaveText = function (_StaveModifier) {\n\t  _inherits(StaveText, _StaveModifier);\n\t\n\t  _createClass(StaveText, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'stavetext';\n\t    }\n\t  }]);\n\t\n\t  function StaveText(text, position, options) {\n\t    _classCallCheck(this, StaveText);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveText.__proto__ || Object.getPrototypeOf(StaveText)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveText');\n\t\n\t    _this.setWidth(16);\n\t    _this.text = text;\n\t    _this.position = position;\n\t    _this.options = {\n\t      shift_x: 0,\n\t      shift_y: 0,\n\t      justification: _textnote.TextNote.Justification.CENTER\n\t    };\n\t    _vex.Vex.Merge(_this.options, options);\n\t\n\t    _this.font = {\n\t      family: 'times',\n\t      size: 16,\n\t      weight: 'normal'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveText, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return StaveText.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setStaveText',\n\t    value: function setStaveText(text) {\n\t      this.text = text;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftX',\n\t    value: function setShiftX(x) {\n\t      this.shift_x = x;return this;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.shift_y = y;return this;\n\t    }\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      _vex.Vex.Merge(this.font, font);\n\t    }\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text) {\n\t      this.text = text;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.lineWidth = 2;\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      var text_width = ctx.measureText('' + this.text).width;\n\t\n\t      var x = void 0;\n\t      var y = void 0;\n\t      var Position = _stavemodifier.StaveModifier.Position;\n\t      var Justification = _textnote.TextNote.Justification;\n\t      switch (this.position) {\n\t        case Position.LEFT:\n\t        case Position.RIGHT:\n\t          y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n\t          if (this.position === Position.LEFT) {\n\t            x = stave.getX() - text_width - 24 + this.options.shift_x;\n\t          } else {\n\t            x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n\t          }\n\t          break;\n\t        case Position.ABOVE:\n\t        case Position.BELOW:\n\t          x = stave.getX() + this.options.shift_x;\n\t          if (this.options.justification === Justification.CENTER) {\n\t            x += stave.getWidth() / 2 - text_width / 2;\n\t          } else if (this.options.justification === Justification.RIGHT) {\n\t            x += stave.getWidth() - text_width;\n\t          }\n\t\n\t          if (this.position === Position.ABOVE) {\n\t            y = stave.getYForTopText(2) + this.options.shift_y;\n\t          } else {\n\t            y = stave.getYForBottomText(2) + this.options.shift_y;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n\t      }\n\t\n\t      ctx.fillText('' + this.text, x, y + 4);\n\t      ctx.restore();\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveText;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// `TextNote` is a notation element that is positioned in time. Generally\n\t// meant for objects that sit above/below the staff and inline with each other.\n\t// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\t\n\tvar TextNote = exports.TextNote = function (_Note) {\n\t  _inherits(TextNote, _Note);\n\t\n\t  _createClass(TextNote, null, [{\n\t    key: 'Justification',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3\n\t      };\n\t    }\n\t\n\t    // Glyph data\n\t\n\t  }, {\n\t    key: 'GLYPHS',\n\t    get: function get() {\n\t      return {\n\t        'segno': {\n\t          code: 'v8c',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: -10\n\t        },\n\t        'tr': {\n\t          code: 'v1f',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'mordent_upper': {\n\t          code: 'v1e',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'mordent_lower': {\n\t          code: 'v45',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'f': {\n\t          code: 'vba',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'p': {\n\t          code: 'vbf',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'm': {\n\t          code: 'v62',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        's': {\n\t          code: 'v4a',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'z': {\n\t          code: 'v80',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'coda': {\n\t          code: 'v4d',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: -8\n\t        },\n\t        'pedal_open': {\n\t          code: 'v36',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'pedal_close': {\n\t          code: 'v5d',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 3\n\t        },\n\t        'caesura_straight': {\n\t          code: 'v34',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 2\n\t        },\n\t        'caesura_curved': {\n\t          code: 'v4b',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 2\n\t        },\n\t        'breath': {\n\t          code: 'v6c',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'tick': {\n\t          code: 'v6f',\n\t          point: 50,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'turn': {\n\t          code: 'v72',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t        'turn_inverted': {\n\t          code: 'v33',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        },\n\t\n\t        // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n\t        'mordent': {\n\t          code: 'v1e',\n\t          point: 40,\n\t          x_shift: 0,\n\t          y_shift: 0\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TextNote(text_struct) {\n\t    _classCallCheck(this, TextNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextNote.__proto__ || Object.getPrototypeOf(TextNote)).call(this, text_struct));\n\t\n\t    _this.setAttribute('type', 'TextNote');\n\t\n\t    // Note properties\n\t    _this.text = text_struct.text;\n\t    _this.superscript = text_struct.superscript;\n\t    _this.subscript = text_struct.subscript;\n\t    _this.glyph_type = text_struct.glyph;\n\t    _this.glyph = null;\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 12,\n\t      weight: ''\n\t    };\n\t\n\t    // Set font\n\t    if (text_struct.font) _this.font = text_struct.font;\n\t\n\t    // Determine and set initial note width. Note that the text width is\n\t    // an approximation and isn't very accurate. The only way to accurately\n\t    // measure the length of text is with `canvasmeasureText()`\n\t    if (_this.glyph_type) {\n\t      var struct = TextNote.GLYPHS[_this.glyph_type];\n\t      if (!struct) throw new _vex.Vex.RERR('Invalid glyph type: ' + _this.glyph_type);\n\t\n\t      _this.glyph = new _glyph.Glyph(struct.code, struct.point, { cache: false });\n\t\n\t      if (struct.width) {\n\t        _this.setWidth(struct.width);\n\t      } else {\n\t        _this.setWidth(_this.glyph.getMetrics().width);\n\t      }\n\t\n\t      _this.glyph_struct = struct;\n\t    } else {\n\t      _this.setWidth(_tables.Flow.textWidth(_this.text));\n\t    }\n\t    _this.line = text_struct.line || 0;\n\t    _this.smooth = text_struct.smooth || false;\n\t    _this.ignore_ticks = text_struct.ignore_ticks || false;\n\t    _this.justification = TextNote.Justification.LEFT;\n\t    return _this;\n\t  }\n\t\n\t  // Set the horizontal justification of the TextNote\n\t\n\t\n\t  _createClass(TextNote, [{\n\t    key: 'setJustification',\n\t    value: function setJustification(just) {\n\t      this.justification = just;\n\t      return this;\n\t    }\n\t\n\t    // Set the Stave line on which the note should be placed\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;\n\t      return this;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.checkContext();\n\t\n\t      if (this.preFormatted) return;\n\t\n\t      if (this.smooth) {\n\t        this.setWidth(0);\n\t      } else {\n\t        if (this.glyph) {\n\t          // Width already set.\n\t        } else {\n\t          this.setWidth(this.context.measureText(this.text).width);\n\t        }\n\t      }\n\t\n\t      if (this.justification === TextNote.Justification.CENTER) {\n\t        this.extraLeftPx = this.width / 2;\n\t      } else if (this.justification === TextNote.Justification.RIGHT) {\n\t        this.extraLeftPx = this.width;\n\t      }\n\t\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    // Renders the TextNote\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var x = this.getAbsoluteX();\n\t      if (this.justification === TextNote.Justification.CENTER) {\n\t        x -= this.getWidth() / 2;\n\t      } else if (this.justification === TextNote.Justification.RIGHT) {\n\t        x -= this.getWidth();\n\t      }\n\t\n\t      var y = void 0;\n\t      if (this.glyph) {\n\t        y = this.stave.getYForLine(this.line + -3);\n\t        this.glyph.render(this.context, x + this.glyph_struct.x_shift, y + this.glyph_struct.y_shift);\n\t      } else {\n\t        y = this.stave.getYForLine(this.line + -3);\n\t        ctx.save();\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t        ctx.fillText(this.text, x, y);\n\t\n\t        // Width of the letter M gives us the approximate height of the text\n\t        var height = ctx.measureText('M').width;\n\t        // Get accurate width of text\n\t        var width = ctx.measureText(this.text).width;\n\t\n\t        // Write superscript\n\t        if (this.superscript) {\n\t          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n\t          ctx.fillText(this.superscript, x + width + 2, y - height / 2.2);\n\t        }\n\t\n\t        // Write subscript\n\t        if (this.subscript) {\n\t          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n\t          ctx.fillText(this.subscript, x + width + 2, y + height / 2.2 - 1);\n\t        }\n\t\n\t        ctx.restore();\n\t      }\n\t    }\n\t  }]);\n\n\t  return TextNote;\n\t}(_note.Note);\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Clef = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n\t// Co-author: Benjamin W. Bohl\n\t//\n\t// ## Description\n\t//\n\t// This file implements various types of clefs that can be rendered on a stave.\n\t//\n\t// See `tests/clef_tests.js` for usage examples.\n\t\n\t// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Clef.DEBUG) _vex.Vex.L('Vex.Flow.Clef', args);\n\t}\n\t\n\tvar Clef = exports.Clef = function (_StaveModifier) {\n\t  _inherits(Clef, _StaveModifier);\n\t\n\t  _createClass(Clef, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'clefs';\n\t    }\n\t\n\t    // Every clef name is associated with a glyph code from the font file\n\t    // and a default stave line number.\n\t\n\t  }, {\n\t    key: 'types',\n\t    get: function get() {\n\t      return {\n\t        'treble': {\n\t          code: 'v83',\n\t          line: 3\n\t        },\n\t        'bass': {\n\t          code: 'v79',\n\t          line: 1\n\t        },\n\t        'alto': {\n\t          code: 'vad',\n\t          line: 2\n\t        },\n\t        'tenor': {\n\t          code: 'vad',\n\t          line: 1\n\t        },\n\t        'percussion': {\n\t          code: 'v59',\n\t          line: 2\n\t        },\n\t        'soprano': {\n\t          code: 'vad',\n\t          line: 4\n\t        },\n\t        'mezzo-soprano': {\n\t          code: 'vad',\n\t          line: 3\n\t        },\n\t        'baritone-c': {\n\t          code: 'vad',\n\t          line: 0\n\t        },\n\t        'baritone-f': {\n\t          code: 'v79',\n\t          line: 2\n\t        },\n\t        'subbass': {\n\t          code: 'v79',\n\t          line: 0\n\t        },\n\t        'french': {\n\t          code: 'v83',\n\t          line: 4\n\t        },\n\t        'tab': {\n\t          code: 'v2f'\n\t        }\n\t      };\n\t    }\n\t\n\t    // Sizes affect the point-size of the clef.\n\t\n\t  }, {\n\t    key: 'sizes',\n\t    get: function get() {\n\t      return {\n\t        'default': 40,\n\t        'small': 32\n\t      };\n\t    }\n\t\n\t    // Annotations attach to clefs -- such as \"8\" for octave up or down.\n\t\n\t  }, {\n\t    key: 'annotations',\n\t    get: function get() {\n\t      return {\n\t        '8va': {\n\t          code: 'v8',\n\t          sizes: {\n\t            'default': {\n\t              point: 20,\n\t              attachments: {\n\t                'treble': {\n\t                  line: -1.2,\n\t                  x_shift: 11\n\t                }\n\t              }\n\t            },\n\t            'small': {\n\t              point: 18,\n\t              attachments: {\n\t                'treble': {\n\t                  line: -0.4,\n\t                  x_shift: 8\n\t                }\n\t              }\n\t            }\n\t          }\n\t        },\n\t        '8vb': {\n\t          code: 'v8',\n\t          sizes: {\n\t            'default': {\n\t              point: 20,\n\t              attachments: {\n\t                'treble': {\n\t                  line: 6.3,\n\t                  x_shift: 10\n\t                },\n\t                'bass': {\n\t                  line: 4,\n\t                  x_shift: 1\n\t                }\n\t              }\n\t            },\n\t            'small': {\n\t              point: 18,\n\t              attachments: {\n\t                'treble': {\n\t                  line: 5.8,\n\t                  x_shift: 6\n\t                },\n\t                'bass': {\n\t                  line: 3.5,\n\t                  x_shift: 0.5\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    // Create a new clef. The parameter `clef` must be a key from\n\t    // `Clef.types`.\n\t\n\t  }]);\n\t\n\t  function Clef(type, size, annotation) {\n\t    _classCallCheck(this, Clef);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Clef.__proto__ || Object.getPrototypeOf(Clef)).call(this));\n\t\n\t    _this.setAttribute('type', 'Clef');\n\t\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setType(type, size, annotation);\n\t    _this.setWidth(_this.glyph.getMetrics().width);\n\t    L('Creating clef:', type);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Clef, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Clef.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type, size, annotation) {\n\t      this.type = type;\n\t      this.clef = Clef.types[type];\n\t      if (size === undefined) {\n\t        this.size = 'default';\n\t      } else {\n\t        this.size = size;\n\t      }\n\t      this.clef.point = Clef.sizes[this.size];\n\t      this.glyph = new _glyph.Glyph(this.clef.code, this.clef.point);\n\t\n\t      // If an annotation, such as 8va, is specified, add it to the Clef object.\n\t      if (annotation !== undefined) {\n\t        var anno_dict = Clef.annotations[annotation];\n\t        this.annotation = {\n\t          code: anno_dict.code,\n\t          point: anno_dict.sizes[this.size].point,\n\t          line: anno_dict.sizes[this.size].attachments[this.type].line,\n\t          x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift\n\t        };\n\t\n\t        this.attachment = new _glyph.Glyph(this.annotation.code, this.annotation.point);\n\t        this.attachment.metrics.x_max = 0;\n\t        this.attachment.setXShift(this.annotation.x_shift);\n\t      } else {\n\t        this.annotation = undefined;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (this.type === 'tab' && !this.stave) {\n\t        throw new _vex.Vex.RERR('ClefError', \"Can't get width without stave.\");\n\t      }\n\t\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      this.stave = stave;\n\t\n\t      if (this.type !== 'tab') return this;\n\t\n\t      var glyphScale = void 0;\n\t      var glyphOffset = void 0;\n\t      var numLines = this.stave.getOptions().num_lines;\n\t      switch (numLines) {\n\t        case 8:\n\t          glyphScale = 55;\n\t          glyphOffset = 14;\n\t          break;\n\t        case 7:\n\t          glyphScale = 47;\n\t          glyphOffset = 8;\n\t          break;\n\t        case 6:\n\t          glyphScale = 40;\n\t          glyphOffset = 1;\n\t          break;\n\t        case 5:\n\t          glyphScale = 30;\n\t          glyphOffset = -6;\n\t          break;\n\t        case 4:\n\t          glyphScale = 23;\n\t          glyphOffset = -12;\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('ClefError', 'Invalid number of lines: ' + numLines);\n\t      }\n\t\n\t      this.glyph.setPoint(glyphScale);\n\t      this.glyph.setYShift(glyphOffset);\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) throw new _vex.Vex.RERR('ClefError', \"Can't draw clef without x.\");\n\t      if (!this.stave) throw new _vex.Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n\t      this.setRendered();\n\t\n\t      this.glyph.setStave(this.stave);\n\t      this.glyph.setContext(this.stave.context);\n\t      if (this.clef.line !== undefined) {\n\t        this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n\t      }\n\t\n\t      this.glyph.renderToStave(this.x);\n\t\n\t      if (this.annotation !== undefined) {\n\t        this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n\t        this.attachment.setStave(this.stave);\n\t        this.attachment.setContext(this.stave.context);\n\t        this.attachment.renderToStave(this.x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return Clef;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.KeySignature = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implements key signatures. A key signature sits on a stave\n\t// and indicates the notes with implicit accidentals.\n\t\n\tvar KeySignature = exports.KeySignature = function (_StaveModifier) {\n\t  _inherits(KeySignature, _StaveModifier);\n\t\n\t  _createClass(KeySignature, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'keysignatures';\n\t    }\n\t\n\t    // Space between natural and following accidental depending\n\t    // on vertical position\n\t\n\t  }, {\n\t    key: 'accidentalSpacing',\n\t    get: function get() {\n\t      return {\n\t        '#': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'b': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'n': {\n\t          above: 4,\n\t          below: 1\n\t        },\n\t        '##': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'bb': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'db': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'd': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        'bbs': {\n\t          above: 4,\n\t          below: 7\n\t        },\n\t        '++': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '+': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '+-': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        '++-': {\n\t          above: 6,\n\t          below: 4\n\t        },\n\t        'bs': {\n\t          above: 4,\n\t          below: 10\n\t        },\n\t        'bss': {\n\t          above: 4,\n\t          below: 10\n\t        }\n\t      };\n\t    }\n\t\n\t    // Create a new Key Signature based on a `key_spec`\n\t\n\t  }]);\n\t\n\t  function KeySignature(keySpec, cancelKeySpec, alterKeySpec) {\n\t    _classCallCheck(this, KeySignature);\n\t\n\t    var _this = _possibleConstructorReturn(this, (KeySignature.__proto__ || Object.getPrototypeOf(KeySignature)).call(this));\n\t\n\t    _this.setAttribute('type', 'KeySignature');\n\t\n\t    _this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n\t    _this.glyphs = [];\n\t    _this.xPositions = []; // relative to this.x\n\t    _this.paddingForced = false;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(KeySignature, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return KeySignature.CATEGORY;\n\t    }\n\t\n\t    // Add an accidental glyph to the `KeySignature` instance which represents\n\t    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n\t    // spacing will be included in the glyph's position\n\t\n\t  }, {\n\t    key: 'convertToGlyph',\n\t    value: function convertToGlyph(acc, nextAcc) {\n\t      var accGlyphData = _tables.Flow.accidentalCodes(acc.type);\n\t      var glyph = new _glyph.Glyph(accGlyphData.code, this.glyphFontScale);\n\t\n\t      // Determine spacing between current accidental and the next accidental\n\t      var extraWidth = 1;\n\t      if (acc.type === 'n' && nextAcc) {\n\t        var spacing = KeySignature.accidentalSpacing[nextAcc.type];\n\t        if (spacing) {\n\t          var isAbove = nextAcc.line >= acc.line;\n\t          extraWidth = isAbove ? spacing.above : spacing.below;\n\t        }\n\t      }\n\t\n\t      // Place the glyph on the stave\n\t      this.placeGlyphOnLine(glyph, this.stave, acc.line);\n\t      this.glyphs.push(glyph);\n\t\n\t      var xPosition = this.xPositions[this.xPositions.length - 1];\n\t      var glyphWidth = glyph.getMetrics().width + extraWidth;\n\t      // Store the next accidental's x position\n\t      this.xPositions.push(xPosition + glyphWidth);\n\t      // Expand size of key signature\n\t      this.width += glyphWidth;\n\t    }\n\t\n\t    // Cancel out a key signature provided in the `spec` parameter. This will\n\t    // place appropriate natural accidentals before the key signature.\n\t\n\t  }, {\n\t    key: 'cancelKey',\n\t    value: function cancelKey(spec) {\n\t      this.formatted = false;\n\t      this.cancelKeySpec = spec;\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'convertToCancelAccList',\n\t    value: function convertToCancelAccList(spec) {\n\t      // Get the accidental list for the cancelled key signature\n\t      var cancel_accList = _tables.Flow.keySignature(spec);\n\t\n\t      // If the cancelled key has a different accidental type, ie: # vs b\n\t      var different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n\t\n\t      // Determine how many naturals needed to add\n\t      var naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n\t\n\t      // Return if no naturals needed\n\t      if (naturals < 1) return;\n\t\n\t      // Get the line position for each natural\n\t      var cancelled = [];\n\t      for (var i = 0; i < naturals; i++) {\n\t        var index = i;\n\t        if (!different_types) {\n\t          index = cancel_accList.length - naturals + i;\n\t        }\n\t\n\t        var acc = cancel_accList[index];\n\t        cancelled.push({ type: 'n', line: acc.line });\n\t      }\n\t\n\t      // Combine naturals with main accidental list for the key signature\n\t      this.accList = cancelled.concat(this.accList);\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addToStave',\n\t    value: function addToStave(stave) {\n\t      this.paddingForced = true;\n\t      stave.addModifier(this);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Apply the accidental staff line placement based on the `clef` and\n\t    // the  accidental `type` for the key signature ('# or 'b').\n\t\n\t  }, {\n\t    key: 'convertAccLines',\n\t    value: function convertAccLines(clef, type) {\n\t      var offset = 0.0; // if clef === \"treble\"\n\t      var customLines = void 0; // when clef doesn't follow treble key sig shape\n\t\n\t      switch (clef) {\n\t        // Treble & Subbass both have offsets of 0, so are not included.\n\t        case 'soprano':\n\t          if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];else offset = -1;\n\t          break;\n\t        case 'mezzo-soprano':\n\t          if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];else offset = 1.5;\n\t          break;\n\t        case 'alto':\n\t          offset = 0.5;\n\t          break;\n\t        case 'tenor':\n\t          if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];else offset = -0.5;\n\t          break;\n\t        case 'baritone-f':\n\t        case 'baritone-c':\n\t          if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];else offset = 2;\n\t          break;\n\t        case 'bass':\n\t        case 'french':\n\t          offset = 1;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      // If there's a special case, assign those lines/spaces:\n\t      var i = void 0;\n\t      if (typeof customLines !== 'undefined') {\n\t        for (i = 0; i < this.accList.length; ++i) {\n\t          this.accList[i].line = customLines[i];\n\t        }\n\t      } else if (offset !== 0) {\n\t        for (i = 0; i < this.accList.length; ++i) {\n\t          this.accList[i].line += offset;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getPadding',\n\t    value: function getPadding(index) {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.glyphs.length === 0 || !this.paddingForced && index < 2 ? 0 : this.padding;\n\t    }\n\t  }, {\n\t    key: 'getWidth',\n\t    value: function getWidth() {\n\t      if (!this.formatted) this.format();\n\t\n\t      return this.width;\n\t    }\n\t  }, {\n\t    key: 'setKeySig',\n\t    value: function setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n\t      this.formatted = false;\n\t      this.keySpec = keySpec;\n\t      this.cancelKeySpec = cancelKeySpec;\n\t      this.alterKeySpec = alterKeySpec;\n\t\n\t      return this;\n\t    }\n\t\n\t    // Alter the accidentals of a key spec one by one.\n\t    // Each alteration is a new accidental that replaces the\n\t    // original accidental (or the canceled one).\n\t\n\t  }, {\n\t    key: 'alterKey',\n\t    value: function alterKey(alterKeySpec) {\n\t      this.formatted = false;\n\t      this.alterKeySpec = alterKeySpec;\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'convertToAlterAccList',\n\t    value: function convertToAlterAccList(alterKeySpec) {\n\t      var max = Math.min(alterKeySpec.length, this.accList.length);\n\t      for (var i = 0; i < max; ++i) {\n\t        if (alterKeySpec[i]) {\n\t          this.accList[i].type = alterKeySpec[i];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n\t      }\n\t\n\t      this.width = 0;\n\t      this.glyphs = [];\n\t      this.xPositions = [0]; // initialize with initial x position\n\t      this.accList = _tables.Flow.keySignature(this.keySpec);\n\t      if (this.cancelKeySpec) {\n\t        this.convertToCancelAccList(this.cancelKeySpec);\n\t      }\n\t      var firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n\t      if (this.alterKeySpec) {\n\t        this.convertToAlterAccList(this.alterKeySpec);\n\t      }\n\t\n\t      if (this.accList.length > 0) {\n\t        this.convertAccLines(this.stave.clef, firstAccidentalType);\n\t        for (var i = 0; i < this.accList.length; ++i) {\n\t          this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n\t        }\n\t      }\n\t\n\t      this.formatted = true;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n\t      }\n\t\n\t      if (!this.formatted) this.format();\n\t      this.setRendered();\n\t\n\t      for (var i = 0; i < this.glyphs.length; i++) {\n\t        var glyph = this.glyphs[i];\n\t        var x = this.x + this.xPositions[i];\n\t        glyph.setStave(this.stave);\n\t        glyph.setContext(this.stave.context);\n\t        glyph.renderToStave(x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return KeySignature;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TimeSignature = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _glyph3 = __webpack_require__(4);\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// Implements time signatures glyphs for staffs\n\t// See tables.js for the internal time signatures\n\t// representation\n\t\n\tvar assertIsValidFraction = function assertIsValidFraction(timeSpec) {\n\t  var numbers = timeSpec.split('/').filter(function (number) {\n\t    return number !== '';\n\t  });\n\t\n\t  if (numbers.length !== 2) {\n\t    throw new _vex.Vex.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec + '. Must be in the form \"<numerator>/<denominator>\"');\n\t  }\n\t\n\t  numbers.forEach(function (number) {\n\t    if (isNaN(Number(number))) {\n\t      throw new _vex.Vex.RERR('BadTimeSignature', 'Invalid time spec: ' + timeSpec + '. Must contain two valid numbers.');\n\t    }\n\t  });\n\t};\n\t\n\tvar TimeSignature = exports.TimeSignature = function (_StaveModifier) {\n\t  _inherits(TimeSignature, _StaveModifier);\n\t\n\t  _createClass(TimeSignature, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'timesignatures';\n\t    }\n\t  }, {\n\t    key: 'glyphs',\n\t    get: function get() {\n\t      return {\n\t        'C': {\n\t          code: 'v41',\n\t          point: 40,\n\t          line: 2\n\t        },\n\t        'C|': {\n\t          code: 'vb6',\n\t          point: 40,\n\t          line: 2\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TimeSignature() {\n\t    var timeSpec = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\t    var customPadding = arguments.length <= 1 || arguments[1] === undefined ? 15 : arguments[1];\n\t\n\t    _classCallCheck(this, TimeSignature);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TimeSignature.__proto__ || Object.getPrototypeOf(TimeSignature)).call(this));\n\t\n\t    _this.setAttribute('type', 'TimeSignature');\n\t\n\t    if (timeSpec === null) return _possibleConstructorReturn(_this);\n\t\n\t    var padding = customPadding;\n\t\n\t    _this.point = 40;\n\t    _this.topLine = 2;\n\t    _this.bottomLine = 4;\n\t    _this.setPosition(_stavemodifier.StaveModifier.Position.BEGIN);\n\t    _this.setTimeSig(timeSpec);\n\t    _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n\t    _this.setPadding(padding);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TimeSignature, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return TimeSignature.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'parseTimeSpec',\n\t    value: function parseTimeSpec(timeSpec) {\n\t      if (timeSpec === 'C' || timeSpec === 'C|') {\n\t        var _TimeSignature$glyphs = TimeSignature.glyphs[timeSpec];\n\t        var line = _TimeSignature$glyphs.line;\n\t        var code = _TimeSignature$glyphs.code;\n\t        var point = _TimeSignature$glyphs.point;\n\t\n\t        return {\n\t          line: line,\n\t          num: false,\n\t          glyph: new _glyph3.Glyph(code, point)\n\t        };\n\t      }\n\t\n\t      assertIsValidFraction(timeSpec);\n\t\n\t      var _timeSpec$split$map = timeSpec.split('/').map(function (number) {\n\t        return number.split('');\n\t      });\n\t\n\t      var _timeSpec$split$map2 = _slicedToArray(_timeSpec$split$map, 2);\n\t\n\t      var topDigits = _timeSpec$split$map2[0];\n\t      var botDigits = _timeSpec$split$map2[1];\n\t\n\t\n\t      return {\n\t        num: true,\n\t        glyph: this.makeTimeSignatureGlyph(topDigits, botDigits)\n\t      };\n\t    }\n\t  }, {\n\t    key: 'makeTimeSignatureGlyph',\n\t    value: function makeTimeSignatureGlyph(topDigits, botDigits) {\n\t      var glyph = new _glyph3.Glyph('v0', this.point);\n\t      glyph.topGlyphs = [];\n\t      glyph.botGlyphs = [];\n\t\n\t      var topWidth = 0;\n\t      for (var i = 0; i < topDigits.length; ++i) {\n\t        var num = topDigits[i];\n\t        var topGlyph = new _glyph3.Glyph('v' + num, this.point);\n\t\n\t        glyph.topGlyphs.push(topGlyph);\n\t        topWidth += topGlyph.getMetrics().width;\n\t      }\n\t\n\t      var botWidth = 0;\n\t      for (var _i = 0; _i < botDigits.length; ++_i) {\n\t        var _num = botDigits[_i];\n\t        var botGlyph = new _glyph3.Glyph('v' + _num, this.point);\n\t\n\t        glyph.botGlyphs.push(botGlyph);\n\t        botWidth += botGlyph.getMetrics().width;\n\t      }\n\t\n\t      var width = topWidth > botWidth ? topWidth : botWidth;\n\t      var xMin = glyph.getMetrics().x_min;\n\t\n\t      glyph.getMetrics = function () {\n\t        return {\n\t          x_min: xMin,\n\t          x_max: xMin + width,\n\t          width: width\n\t        };\n\t      };\n\t\n\t      var topStartX = (width - topWidth) / 2.0;\n\t      var botStartX = (width - botWidth) / 2.0;\n\t\n\t      var that = this;\n\t      glyph.renderToStave = function renderToStave(x) {\n\t        var start_x = x + topStartX;\n\t        for (var _i2 = 0; _i2 < this.topGlyphs.length; ++_i2) {\n\t          var _glyph = this.topGlyphs[_i2];\n\t          _glyph3.Glyph.renderOutline(this.context, _glyph.metrics.outline, _glyph.scale, start_x + _glyph.x_shift, this.stave.getYForLine(that.topLine) + 1);\n\t          start_x += _glyph.getMetrics().width;\n\t        }\n\t\n\t        start_x = x + botStartX;\n\t        for (var _i3 = 0; _i3 < this.botGlyphs.length; ++_i3) {\n\t          var _glyph2 = this.botGlyphs[_i3];\n\t          that.placeGlyphOnLine(_glyph2, this.stave, _glyph2.line);\n\t          _glyph3.Glyph.renderOutline(this.context, _glyph2.metrics.outline, _glyph2.scale, start_x + _glyph2.x_shift, this.stave.getYForLine(that.bottomLine) + 1);\n\t          start_x += _glyph2.getMetrics().width;\n\t        }\n\t      };\n\t\n\t      return glyph;\n\t    }\n\t  }, {\n\t    key: 'getTimeSig',\n\t    value: function getTimeSig() {\n\t      return this.timeSig;\n\t    }\n\t  }, {\n\t    key: 'setTimeSig',\n\t    value: function setTimeSig(timeSpec) {\n\t      this.timeSig = this.parseTimeSpec(timeSpec);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.x) {\n\t        throw new _vex.Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n\t      }\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      this.timeSig.glyph.setStave(this.stave);\n\t      this.timeSig.glyph.setContext(this.stave.context);\n\t      this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n\t      this.timeSig.glyph.renderToStave(this.x);\n\t    }\n\t  }]);\n\n\t  return TimeSignature;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Volta = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavemodifier = __webpack_require__(45);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Larry Kuhns 2011\n\t\n\tvar Volta = exports.Volta = function (_StaveModifier) {\n\t  _inherits(Volta, _StaveModifier);\n\t\n\t  _createClass(Volta, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'voltas';\n\t    }\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        NONE: 1,\n\t        BEGIN: 2,\n\t        MID: 3,\n\t        END: 4,\n\t        BEGIN_END: 5\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Volta(type, number, x, y_shift) {\n\t    _classCallCheck(this, Volta);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Volta.__proto__ || Object.getPrototypeOf(Volta)).call(this));\n\t\n\t    _this.setAttribute('type', 'Volta');\n\t    _this.volta = type;\n\t    _this.x = x;\n\t    _this.y_shift = y_shift;\n\t    _this.number = number;\n\t    _this.font = {\n\t      family: 'sans-serif',\n\t      size: 9,\n\t      weight: 'bold'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Volta, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Volta.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'setShiftY',\n\t    value: function setShiftY(y) {\n\t      this.y_shift = y;return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(stave, x) {\n\t      var ctx = stave.checkContext();\n\t      this.setRendered();\n\t\n\t      var width = stave.width;\n\t      var top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n\t      var vert_height = 1.5 * stave.options.spacing_between_lines_px;\n\t      switch (this.volta) {\n\t        case Volta.type.BEGIN:\n\t          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n\t          break;\n\t        case Volta.type.END:\n\t          width -= 5;\n\t          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n\t          break;\n\t        case Volta.type.BEGIN_END:\n\t          width -= 3;\n\t          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n\t          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t      // If the beginning of a volta, draw measure number\n\t      if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n\t        ctx.save();\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t        ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n\t        ctx.restore();\n\t      }\n\t\n\t      ctx.fillRect(this.x + x, top_y, width, 1);\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return Volta;\n\t}(_stavemodifier.StaveModifier);\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabStave = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar TabStave = exports.TabStave = function (_Stave) {\n\t  _inherits(TabStave, _Stave);\n\t\n\t  function TabStave(x, y, width, options) {\n\t    _classCallCheck(this, TabStave);\n\t\n\t    var tab_options = {\n\t      spacing_between_lines_px: 13,\n\t      num_lines: 6,\n\t      top_text_position: 1\n\t    };\n\t\n\t    _vex.Vex.Merge(tab_options, options);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabStave.__proto__ || Object.getPrototypeOf(TabStave)).call(this, x, y, width, tab_options));\n\t\n\t    _this.setAttribute('type', 'TabStave');\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabStave, [{\n\t    key: 'getYForGlyphs',\n\t    value: function getYForGlyphs() {\n\t      return this.getYForLine(2.5);\n\t    }\n\t\n\t    // Deprecated\n\t\n\t  }, {\n\t    key: 'addTabGlyph',\n\t    value: function addTabGlyph() {\n\t      this.addClef('tab');\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return TabStave;\n\t}(_stave.Stave);\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabNote = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _stem = __webpack_require__(17);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tvar _dot = __webpack_require__(26);\n\t\n\tvar _glyph2 = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// The file implements notes for Tablature notation. This consists of one or\n\t// more fret positions, and can either be drawn with or without stems.\n\t//\n\t// See `tests/tabnote_tests.js` for usage examples\n\t\n\t// Gets the unused strings grouped together if consecutive.\n\t//\n\t// Parameters:\n\t// * num_lines - The number of lines\n\t// * strings_used - An array of numbers representing which strings have fret positions\n\tfunction getUnusedStringGroups(num_lines, strings_used) {\n\t  var stem_through = [];\n\t  var group = [];\n\t  for (var string = 1; string <= num_lines; string++) {\n\t    var is_used = strings_used.indexOf(string) > -1;\n\t\n\t    if (!is_used) {\n\t      group.push(string);\n\t    } else {\n\t      stem_through.push(group);\n\t      group = [];\n\t    }\n\t  }\n\t  if (group.length > 0) stem_through.push(group);\n\t\n\t  return stem_through;\n\t}\n\t\n\t// Gets groups of points that outline the partial stem lines\n\t// between fret positions\n\t//\n\t// Parameters:\n\t// * stem_Y - The `y` coordinate the stem is located on\n\t// * unused_strings - An array of groups of unused strings\n\t// * stave - The stave to use for reference\n\t// * stem_direction - The direction of the stem\n\tfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n\t  var up_stem = stem_direction !== 1;\n\t  var down_stem = stem_direction !== -1;\n\t\n\t  var line_spacing = stave.getSpacingBetweenLines();\n\t  var total_lines = stave.getNumLines();\n\t\n\t  var stem_lines = [];\n\t\n\t  unused_strings.forEach(function (strings) {\n\t    var containsLastString = strings.indexOf(total_lines) > -1;\n\t    var containsFirstString = strings.indexOf(1) > -1;\n\t\n\t    if (up_stem && containsFirstString || down_stem && containsLastString) {\n\t      return;\n\t    }\n\t\n\t    // If there's only one string in the group, push a duplicate value.\n\t    // We do this because we need 2 strings to convert into upper/lower y\n\t    // values.\n\t    if (strings.length === 1) {\n\t      strings.push(strings[0]);\n\t    }\n\t\n\t    var line_ys = [];\n\t    // Iterate through each group string and store it's y position\n\t    strings.forEach(function (string, index, strings) {\n\t      var isTopBound = string === 1;\n\t      var isBottomBound = string === total_lines;\n\t\n\t      // Get the y value for the appropriate staff line,\n\t      // we adjust for a 0 index array, since string numbers are index 1\n\t      var y = stave.getYForLine(string - 1);\n\t\n\t      // Unless the string is the first or last, add padding to each side\n\t      // of the line\n\t      if (index === 0 && !isTopBound) {\n\t        y -= line_spacing / 2 - 1;\n\t      } else if (index === strings.length - 1 && !isBottomBound) {\n\t        y += line_spacing / 2 - 1;\n\t      }\n\t\n\t      // Store the y value\n\t      line_ys.push(y);\n\t\n\t      // Store a subsequent y value connecting this group to the main\n\t      // stem above/below the stave if it's the top/bottom string\n\t      if (stem_direction === 1 && isTopBound) {\n\t        line_ys.push(stem_y - 2);\n\t      } else if (stem_direction === -1 && isBottomBound) {\n\t        line_ys.push(stem_y + 2);\n\t      }\n\t    });\n\t\n\t    // Add the sorted y values to the\n\t    stem_lines.push(line_ys.sort(function (a, b) {\n\t      return a - b;\n\t    }));\n\t  });\n\t\n\t  return stem_lines;\n\t}\n\t\n\tvar TabNote = exports.TabNote = function (_StemmableNote) {\n\t  _inherits(TabNote, _StemmableNote);\n\t\n\t  _createClass(TabNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'tabnotes';\n\t    }\n\t\n\t    // Initialize the TabNote with a `tab_struct` full of properties\n\t    // and whether to `draw_stem` when rendering the note\n\t\n\t  }]);\n\t\n\t  function TabNote(tab_struct, draw_stem) {\n\t    _classCallCheck(this, TabNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabNote.__proto__ || Object.getPrototypeOf(TabNote)).call(this, tab_struct));\n\t\n\t    _this.setAttribute('type', 'TabNote');\n\t\n\t    _this.ghost = false; // Renders parenthesis around notes\n\t    // Note properties\n\t    //\n\t    // The fret positions in the note. An array of `{ str: X, fret: X }`\n\t    _this.positions = tab_struct.positions;\n\t\n\t    // Render Options\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // font size for note heads and rests\n\t      glyph_font_scale: _tables.Flow.DEFAULT_TABLATURE_FONT_SCALE,\n\t      // Flag to draw a stem\n\t      draw_stem: draw_stem,\n\t      // Flag to draw dot modifiers\n\t      draw_dots: draw_stem,\n\t      // Flag to extend the main stem through the stave and fret positions\n\t      draw_stem_through_stave: false,\n\t      // vertical shift from stave line\n\t      y_shift: 0,\n\t      // normal glyph scale\n\t      scale: 1.0,\n\t      // default tablature font\n\t      font: '10pt Arial'\n\t    });\n\t\n\t    _this.glyph = _tables.Flow.durationToGlyph(_this.duration, _this.noteType);\n\t\n\t    if (!_this.glyph) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Invalid note initialization data (No glyph found): ' + JSON.stringify(tab_struct));\n\t    }\n\t\n\t    _this.buildStem();\n\t\n\t    if (tab_struct.stem_direction) {\n\t      _this.setStemDirection(tab_struct.stem_direction);\n\t    } else {\n\t      _this.setStemDirection(_stem.Stem.UP);\n\t    }\n\t\n\t    // Renders parenthesis around notes\n\t    _this.ghost = false;\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabNote, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      if (this.stave) this.setStave(this.stave);\n\t    }\n\t\n\t    // The ModifierContext category\n\t\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return TabNote.CATEGORY;\n\t    }\n\t\n\t    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n\t    // Often used for indicating frets that are being bent to\n\t\n\t  }, {\n\t    key: 'setGhost',\n\t    value: function setGhost(ghost) {\n\t      this.ghost = ghost;\n\t      this.updateWidth();\n\t      return this;\n\t    }\n\t\n\t    // Determine if the note has a stem\n\t\n\t  }, {\n\t    key: 'hasStem',\n\t    value: function hasStem() {\n\t      return this.render_options.draw_stem;\n\t    }\n\t\n\t    // Get the default stem extension for the note\n\t\n\t  }, {\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stem_extension_override != null) {\n\t        return this.stem_extension_override;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t\n\t    // Add a dot to the note\n\t\n\t  }, {\n\t    key: 'addDot',\n\t    value: function addDot() {\n\t      var dot = new _dot.Dot();\n\t      this.dots += 1;\n\t      return this.addModifier(dot, 0);\n\t    }\n\t\n\t    // Calculate and store the width of the note\n\t\n\t  }, {\n\t    key: 'updateWidth',\n\t    value: function updateWidth() {\n\t      var _this2 = this;\n\t\n\t      this.glyphs = [];\n\t      this.width = 0;\n\t      for (var i = 0; i < this.positions.length; ++i) {\n\t        var fret = this.positions[i].fret;\n\t        if (this.ghost) fret = '(' + fret + ')';\n\t        var glyph = _tables.Flow.tabToGlyph(fret, this.render_options.scale);\n\t        this.glyphs.push(glyph);\n\t        this.width = Math.max(glyph.getWidth(), this.width);\n\t      }\n\t      // For some reason we associate a notehead glyph with a TabNote, and this\n\t      // glyph is used for certain width calculations. Of course, this is totally\n\t      // incorrect since a notehead is a poor approximation for the dimensions of\n\t      // a fret number which can have multiple digits. As a result, we must\n\t      // overwrite getWidth() to return the correct width\n\t      this.glyph.getWidth = function () {\n\t        return _this2.width;\n\t      };\n\t    }\n\t\n\t    // Set the `stave` to the note\n\t\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      var _this3 = this;\n\t\n\t      _get(TabNote.prototype.__proto__ || Object.getPrototypeOf(TabNote.prototype), 'setStave', this).call(this, stave);\n\t      this.context = stave.context;\n\t\n\t      // Calculate the fret number width based on font used\n\t      var i = void 0;\n\t      if (this.context) {\n\t        var ctx = this.context;\n\t        this.width = 0;\n\t\n\t        var _loop = function _loop() {\n\t          var glyph = _this3.glyphs[i];\n\t          var text = '' + glyph.text;\n\t          if (text.toUpperCase() !== 'X') {\n\t            ctx.save();\n\t            ctx.setRawFont(_this3.render_options.font);\n\t            glyph.width = ctx.measureText(text).width;\n\t            ctx.restore();\n\t            glyph.getWidth = function () {\n\t              return glyph.width;\n\t            };\n\t          }\n\t          _this3.width = Math.max(glyph.getWidth(), _this3.width);\n\t        };\n\t\n\t        for (i = 0; i < this.glyphs.length; ++i) {\n\t          _loop();\n\t        }\n\t        this.glyph.getWidth = function () {\n\t          return _this3.width;\n\t        };\n\t      }\n\t\n\t      // we subtract 1 from `line` because getYForLine expects a 0-based index,\n\t      // while the position.str is a 1-based index\n\t      var ys = this.positions.map(function (_ref) {\n\t        var line = _ref.str;\n\t        return stave.getYForLine(line - 1);\n\t      });\n\t\n\t      this.setYs(ys);\n\t\n\t      if (this.stem) {\n\t        this.stem.setYBounds(this.getStemY(), this.getStemY());\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    // Get the fret positions for the note\n\t\n\t  }, {\n\t    key: 'getPositions',\n\t    value: function getPositions() {\n\t      return this.positions;\n\t    }\n\t\n\t    // Add self to the provided modifier context `mc`\n\t\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext(mc) {\n\t      this.setModifierContext(mc);\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        this.modifierContext.addModifier(this.modifiers[i]);\n\t      }\n\t      this.modifierContext.addModifier(this);\n\t      this.preFormatted = false;\n\t      return this;\n\t    }\n\t\n\t    // Get the `x` coordinate to the right of the note\n\t\n\t  }, {\n\t    key: 'getTieRightX',\n\t    value: function getTieRightX() {\n\t      var tieStartX = this.getAbsoluteX();\n\t      var note_glyph_width = this.glyph.getWidth();\n\t      tieStartX += note_glyph_width / 2;\n\t      tieStartX += -this.width / 2 + this.width + 2;\n\t\n\t      return tieStartX;\n\t    }\n\t\n\t    // Get the `x` coordinate to the left of the note\n\t\n\t  }, {\n\t    key: 'getTieLeftX',\n\t    value: function getTieLeftX() {\n\t      var tieEndX = this.getAbsoluteX();\n\t      var note_glyph_width = this.glyph.getWidth();\n\t      tieEndX += note_glyph_width / 2;\n\t      tieEndX -= this.width / 2 + 2;\n\t\n\t      return tieEndX;\n\t    }\n\t\n\t    // Get the default `x` and `y` coordinates for a modifier at a specific\n\t    // `position` at a fret position `index`\n\t\n\t  }, {\n\t    key: 'getModifierStartXY',\n\t    value: function getModifierStartXY(position, index) {\n\t      if (!this.preFormatted) {\n\t        throw new _vex.Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n\t      }\n\t\n\t      var x = 0;\n\t      if (position === _modifier.Modifier.Position.LEFT) {\n\t        x = -1 * 2; // extra_left_px\n\t      } else if (position === _modifier.Modifier.Position.RIGHT) {\n\t        x = this.width + 2; // extra_right_px\n\t      } else if (position === _modifier.Modifier.Position.BELOW || position === _modifier.Modifier.Position.ABOVE) {\n\t        var note_glyph_width = this.glyph.getWidth();\n\t        x = note_glyph_width / 2;\n\t      }\n\t\n\t      return {\n\t        x: this.getAbsoluteX() + x,\n\t        y: this.ys[index]\n\t      };\n\t    }\n\t\n\t    // Get the default line for rest\n\t\n\t  }, {\n\t    key: 'getLineForRest',\n\t    value: function getLineForRest() {\n\t      return this.positions[0].str;\n\t    }\n\t\n\t    // Pre-render formatting\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      if (this.preFormatted) return;\n\t      if (this.modifierContext) this.modifierContext.preFormat();\n\t      // width is already set during init()\n\t      this.setPreFormatted(true);\n\t    }\n\t\n\t    // Get the x position for the stem\n\t\n\t  }, {\n\t    key: 'getStemX',\n\t    value: function getStemX() {\n\t      return this.getCenterGlyphX();\n\t    }\n\t\n\t    // Get the y position for the stem\n\t\n\t  }, {\n\t    key: 'getStemY',\n\t    value: function getStemY() {\n\t      var num_lines = this.stave.getNumLines();\n\t\n\t      // The decimal staff line amounts provide optimal spacing between the\n\t      // fret number and the stem\n\t      var stemUpLine = -0.5;\n\t      var stemDownLine = num_lines - 0.5;\n\t      var stemStartLine = _stem.Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\t\n\t      return this.stave.getYForLine(stemStartLine);\n\t    }\n\t\n\t    // Get the stem extents for the tabnote\n\t\n\t  }, {\n\t    key: 'getStemExtents',\n\t    value: function getStemExtents() {\n\t      return this.stem.getExtents();\n\t    }\n\t\n\t    // Draw the fal onto the context\n\t\n\t  }, {\n\t    key: 'drawFlag',\n\t    value: function drawFlag() {\n\t      var beam = this.beam;\n\t      var glyph = this.glyph;\n\t      var context = this.context;\n\t      var stem = this.stem;\n\t      var stem_direction = this.stem_direction;\n\t      var _render_options = this.render_options;\n\t      var draw_stem = _render_options.draw_stem;\n\t      var glyph_font_scale = _render_options.glyph_font_scale;\n\t\n\t\n\t      var shouldDrawFlag = beam == null && draw_stem;\n\t\n\t      // Now it's the flag's turn.\n\t      if (glyph.flag && shouldDrawFlag) {\n\t        var flag_x = this.getStemX() + 1;\n\t        var flag_y = this.getStemY() - stem.getHeight();\n\t\n\t        var flag_code = stem_direction === _stem.Stem.DOWN ? glyph.code_flag_downstem // Down stems have flags on the left.\n\t        : glyph.code_flag_upstem;\n\t\n\t        // Draw the Flag\n\t        _glyph2.Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n\t      }\n\t    }\n\t\n\t    // Render the modifiers onto the context\n\t\n\t  }, {\n\t    key: 'drawModifiers',\n\t    value: function drawModifiers() {\n\t      var _this4 = this;\n\t\n\t      // Draw the modifiers\n\t      this.modifiers.forEach(function (modifier) {\n\t        // Only draw the dots if enabled\n\t        if (modifier.getCategory() === 'dots' && !_this4.render_options.draw_dots) return;\n\t\n\t        modifier.setContext(_this4.context);\n\t        modifier.draw();\n\t      });\n\t    }\n\t\n\t    // Render the stem extension through the fret positions\n\t\n\t  }, {\n\t    key: 'drawStemThrough',\n\t    value: function drawStemThrough() {\n\t      var stem_x = this.getStemX();\n\t      var stem_y = this.getStemY();\n\t      var ctx = this.context;\n\t\n\t      var stem_through = this.render_options.draw_stem_through_stave;\n\t      var draw_stem = this.render_options.draw_stem;\n\t      if (draw_stem && stem_through) {\n\t        var total_lines = this.stave.getNumLines();\n\t        var strings_used = this.positions.map(function (position) {\n\t          return position.str;\n\t        });\n\t\n\t        var unused_strings = getUnusedStringGroups(total_lines, strings_used);\n\t        var stem_lines = getPartialStemLines(stem_y, unused_strings, this.getStave(), this.getStemDirection());\n\t\n\t        ctx.save();\n\t        ctx.setLineWidth(_stem.Stem.WIDTH);\n\t        stem_lines.forEach(function (bounds) {\n\t          if (bounds.length === 0) return;\n\t\n\t          ctx.beginPath();\n\t          ctx.moveTo(stem_x, bounds[0]);\n\t          ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n\t          ctx.stroke();\n\t          ctx.closePath();\n\t        });\n\t        ctx.restore();\n\t      }\n\t    }\n\t\n\t    // Render the fret positions onto the context\n\t\n\t  }, {\n\t    key: 'drawPositions',\n\t    value: function drawPositions() {\n\t      var ctx = this.context;\n\t      var x = this.getAbsoluteX();\n\t      var ys = this.ys;\n\t      for (var i = 0; i < this.positions.length; ++i) {\n\t        var y = ys[i] + this.render_options.y_shift;\n\t        var _glyph = this.glyphs[i];\n\t\n\t        // Center the fret text beneath the notation note head\n\t        var note_glyph_width = this.glyph.getWidth();\n\t        var tab_x = x + note_glyph_width / 2 - _glyph.getWidth() / 2;\n\t\n\t        // FIXME: Magic numbers.\n\t        ctx.clearRect(tab_x - 2, y - 3, _glyph.getWidth() + 4, 6);\n\t\n\t        if (_glyph.code) {\n\t          _glyph2.Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, _glyph.code);\n\t        } else {\n\t          ctx.save();\n\t          ctx.setRawFont(this.render_options.font);\n\t          var _text = _glyph.text.toString();\n\t          ctx.fillText(_text, tab_x, y + 5 * this.render_options.scale);\n\t          ctx.restore();\n\t        }\n\t      }\n\t    }\n\t\n\t    // The main rendering function for the entire note\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!this.stave) {\n\t        throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      }\n\t\n\t      if (this.ys.length === 0) {\n\t        throw new _vex.Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var render_stem = this.beam == null && this.render_options.draw_stem;\n\t\n\t      this.drawPositions();\n\t      this.drawStemThrough();\n\t\n\t      var stem_x = this.getStemX();\n\t\n\t      this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\t\n\t      if (render_stem) {\n\t        this.context.openGroup('stem', null, { pointerBBox: true });\n\t        this.stem.setContext(this.context).draw();\n\t        this.context.closeGroup();\n\t      }\n\t\n\t      this.drawFlag();\n\t      this.drawModifiers();\n\t    }\n\t  }]);\n\n\t  return TabNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.VibratoBracket = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _vibrato = __webpack_require__(42);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Balazs Forian-Szabo\n\t//\n\t// ## Description\n\t//\n\t// This file implements `VibratoBrackets`\n\t// that renders vibrato effect between two notes.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (VibratoBracket.DEBUG) _vex.Vex.L('Vex.Flow.VibratoBracket', args);\n\t}\n\t\n\tvar VibratoBracket = exports.VibratoBracket = function (_Element) {\n\t  _inherits(VibratoBracket, _Element);\n\t\n\t  // bracket_data = {\n\t  //   start: Vex.Flow.Note (optional)\n\t  //   stop: Vex.Flow.Note (optional)\n\t  // };\n\t  // Either the stop or start note must be set, or both of them.\n\t  // A null value for the start or stop note indicates that the vibrato\n\t  // is drawn from the beginning or until the end of the stave accordingly.\n\t  function VibratoBracket(bracket_data) {\n\t    _classCallCheck(this, VibratoBracket);\n\t\n\t    var _this = _possibleConstructorReturn(this, (VibratoBracket.__proto__ || Object.getPrototypeOf(VibratoBracket)).call(this));\n\t\n\t    _this.setAttribute('type', 'VibratoBracket');\n\t\n\t    _this.start = bracket_data.start;\n\t    _this.stop = bracket_data.stop;\n\t\n\t    _this.line = 1;\n\t\n\t    _this.render_options = {\n\t      harsh: false,\n\t      wave_height: 6,\n\t      wave_width: 4,\n\t      wave_girth: 2\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Set line position of the vibrato bracket\n\t\n\t\n\t  _createClass(VibratoBracket, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t  }, {\n\t    key: 'setHarsh',\n\t    value: function setHarsh(harsh) {\n\t      this.render_options.harsh = harsh;return this;\n\t    }\n\t\n\t    // Draw the vibrato bracket on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.context;\n\t      this.setRendered();\n\t\n\t      var y = this.start ? this.start.getStave().getYForTopText(this.line) : this.stop.getStave().getYForTopText(this.line);\n\t\n\t      // If start note is not set then vibrato will be drawn\n\t      // from the beginning of the stave\n\t      var start_x = this.start ? this.start.getAbsoluteX() : this.stop.getStave().getTieStartX();\n\t\n\t      // If stop note is not set then vibrato will be drawn\n\t      // until the end of the stave\n\t      var stop_x = this.stop ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5 : this.start.getStave().getTieEndX() - 10;\n\t\n\t      this.render_options.vibrato_width = stop_x - start_x;\n\t\n\t      L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\t\n\t      _vibrato.Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n\t    }\n\t  }]);\n\n\t  return VibratoBracket;\n\t}(_element.Element);\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ClefNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _clef = __webpack_require__(51);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// Author Taehoon Moon 2014\n\t\n\t/** @constructor */\n\tvar ClefNote = exports.ClefNote = function (_Note) {\n\t  _inherits(ClefNote, _Note);\n\t\n\t  _createClass(ClefNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'clefnote';\n\t    }\n\t  }]);\n\t\n\t  function ClefNote(type, size, annotation) {\n\t    _classCallCheck(this, ClefNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ClefNote.__proto__ || Object.getPrototypeOf(ClefNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'ClefNote');\n\t\n\t    _this.setType(type, size, annotation);\n\t\n\t    // Note properties\n\t    _this.ignore_ticks = true;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ClefNote, [{\n\t    key: 'setType',\n\t    value: function setType(type, size, annotation) {\n\t      this.type = type;\n\t      this.clef_obj = new _clef.Clef(type, size, annotation);\n\t      this.clef = this.clef_obj.clef;\n\t      this.glyph = new _glyph.Glyph(this.clef.code, this.clef.point);\n\t      this.setWidth(this.glyph.getMetrics().width);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getClef',\n\t    value: function getClef() {\n\t      return this.clef;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;\n\t      this.glyph.setContext(this.context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return ClefNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t\n\t      if (!this.glyph.getContext()) {\n\t        this.glyph.setContext(this.context);\n\t      }\n\t\n\t      this.setRendered();\n\t      var abs_x = this.getAbsoluteX();\n\t\n\t      this.glyph.setStave(this.stave);\n\t      this.glyph.setYShift(this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n\t      this.glyph.renderToStave(abs_x);\n\t\n\t      // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n\t      if (this.clef_obj.annotation !== undefined) {\n\t        var attachment = new _glyph.Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n\t        if (!attachment.getContext()) {\n\t          attachment.setContext(this.context);\n\t        }\n\t        attachment.setStave(this.stave);\n\t        attachment.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n\t        attachment.setXShift(this.clef_obj.annotation.x_shift);\n\t        attachment.renderToStave(abs_x);\n\t      }\n\t    }\n\t  }]);\n\n\t  return ClefNote;\n\t}(_note.Note);\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TimeSigNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _timesignature = __webpack_require__(53);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author Taehoon Moon 2014\n\t\n\tvar TimeSigNote = exports.TimeSigNote = function (_Note) {\n\t  _inherits(TimeSigNote, _Note);\n\t\n\t  function TimeSigNote(timeSpec, customPadding) {\n\t    _classCallCheck(this, TimeSigNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TimeSigNote.__proto__ || Object.getPrototypeOf(TimeSigNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'TimeSigNote');\n\t\n\t    var timeSignature = new _timesignature.TimeSignature(timeSpec, customPadding);\n\t    _this.timeSig = timeSignature.getTimeSig();\n\t    _this.setWidth(_this.timeSig.glyph.getMetrics().width);\n\t\n\t    // Note properties\n\t    _this.ignore_ticks = true;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TimeSigNote, [{\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.stave.checkContext();\n\t      this.setRendered();\n\t\n\t      if (!this.timeSig.glyph.getContext()) {\n\t        this.timeSig.glyph.setContext(this.context);\n\t      }\n\t\n\t      this.timeSig.glyph.setStave(this.stave);\n\t      this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n\t      this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n\t    }\n\t  }]);\n\n\t  return TimeSigNote;\n\t}(_note.Note);\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TabSlide = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tabtie = __webpack_require__(34);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of ties between contiguous notes. The\n\t// ties include: regular ties, hammer ons, pull offs, and slides.\n\t\n\tvar TabSlide = exports.TabSlide = function (_TabTie) {\n\t  _inherits(TabSlide, _TabTie);\n\t\n\t  _createClass(TabSlide, null, [{\n\t    key: 'createSlideUp',\n\t    value: function createSlideUp(notes) {\n\t      return new TabSlide(notes, TabSlide.SLIDE_UP);\n\t    }\n\t  }, {\n\t    key: 'createSlideDown',\n\t    value: function createSlideDown(notes) {\n\t      return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n\t    }\n\t  }, {\n\t    key: 'SLIDE_UP',\n\t    get: function get() {\n\t      return 1;\n\t    }\n\t  }, {\n\t    key: 'SLIDE_DOWN',\n\t    get: function get() {\n\t      return -1;\n\t    }\n\t  }]);\n\t\n\t  function TabSlide(notes, direction) {\n\t    _classCallCheck(this, TabSlide);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TabSlide.__proto__ || Object.getPrototypeOf(TabSlide)).call(this, notes, 'sl.'));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *    first_indices: [n1, n2, n3],\n\t     *    last_indices: [n1, n2, n3]\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'TabSlide');\n\t\n\t    if (!direction) {\n\t      var first_fret = notes.first_note.getPositions()[0].fret;\n\t      var last_fret = notes.last_note.getPositions()[0].fret;\n\t\n\t      direction = parseInt(first_fret, 10) > parseInt(last_fret, 10) ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n\t    }\n\t\n\t    _this.slide_direction = direction;\n\t    _this.render_options.cp1 = 11;\n\t    _this.render_options.cp2 = 14;\n\t    _this.render_options.y_shift = 0.5;\n\t\n\t    _this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TabSlide, [{\n\t    key: 'renderTie',\n\t    value: function renderTie(params) {\n\t      if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'No Y-values to render');\n\t      }\n\t\n\t      var ctx = this.context;\n\t      var first_x_px = params.first_x_px;\n\t      var first_ys = params.first_ys;\n\t      var last_x_px = params.last_x_px;\n\t\n\t      var direction = this.slide_direction;\n\t      if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n\t        throw new _vex.Vex.RERR('BadSlide', 'Invalid slide direction');\n\t      }\n\t\n\t      for (var i = 0; i < this.first_indices.length; ++i) {\n\t        var slide_y = first_ys[this.first_indices[i]] + this.render_options.y_shift;\n\t\n\t        if (isNaN(slide_y)) {\n\t          throw new _vex.Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n\t        }\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(first_x_px, slide_y + 3 * direction);\n\t        ctx.lineTo(last_x_px, slide_y - 3 * direction);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return TabSlide;\n\t}(_tabtie.TabTie);\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceNote = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t\n\tvar GraceNote = exports.GraceNote = function (_StaveNote) {\n\t  _inherits(GraceNote, _StaveNote);\n\t\n\t  _createClass(GraceNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracenotes';\n\t    }\n\t  }, {\n\t    key: 'LEDGER_LINE_OFFSET',\n\t    get: function get() {\n\t      return 2;\n\t    }\n\t  }, {\n\t    key: 'SCALE',\n\t    get: function get() {\n\t      return 0.66;\n\t    }\n\t  }]);\n\t\n\t  function GraceNote(note_struct) {\n\t    _classCallCheck(this, GraceNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceNote.__proto__ || Object.getPrototypeOf(GraceNote)).call(this, _extends(note_struct, {\n\t      glyph_font_scale: _tables.Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n\t      stroke_px: GraceNote.LEDGER_LINE_OFFSET\n\t    })));\n\t\n\t    _this.setAttribute('type', 'GraceNote');\n\t\n\t    _this.slash = note_struct.slash;\n\t    _this.slur = true;\n\t\n\t    _this.buildNoteHeads();\n\t\n\t    _this.width = 3;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GraceNote, [{\n\t    key: 'getStemExtension',\n\t    value: function getStemExtension() {\n\t      var glyph = this.getGlyph();\n\t\n\t      if (this.stem_extension_override != null) {\n\t        return this.stem_extension_override;\n\t      }\n\t\n\t      if (glyph) {\n\t        return this.getStemDirection() === 1 ? glyph.gracenote_stem_up_extension : glyph.gracenote_stem_down_extension;\n\t      }\n\t\n\t      return 0;\n\t    }\n\t  }, {\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      _get(GraceNote.prototype.__proto__ || Object.getPrototypeOf(GraceNote.prototype), 'draw', this).call(this);\n\t      this.setRendered();\n\t      var ctx = this.context;\n\t      var stem_direction = this.getStemDirection();\n\t\n\t      if (this.slash) {\n\t        ctx.beginPath();\n\t\n\t        var x = this.getAbsoluteX();\n\t        var y = this.getYs()[0] - this.stem.getHeight() / 2.8;\n\t        if (stem_direction === 1) {\n\t          x += 1;\n\t          ctx.moveTo(x, y);\n\t          ctx.lineTo(x + 13, y - 9);\n\t        } else if (stem_direction === -1) {\n\t          x -= 4;\n\t          y += 1;\n\t          ctx.moveTo(x, y);\n\t          ctx.lineTo(x + 13, y + 9);\n\t        }\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GraceNote;\n\t}(_stavenote.StaveNote);\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GraceTabNote = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Balazs Forian-Szabo\n\t//\n\t// ## Description\n\t//\n\t// A basic implementation of grace notes\n\t// to be rendered on a tab stave.\n\t//\n\t// See `tests/gracetabnote_tests.js` for usage examples.\n\t\n\tvar GraceTabNote = exports.GraceTabNote = function (_TabNote) {\n\t  _inherits(GraceTabNote, _TabNote);\n\t\n\t  _createClass(GraceTabNote, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'gracetabnotes';\n\t    }\n\t  }]);\n\t\n\t  function GraceTabNote(note_struct) {\n\t    _classCallCheck(this, GraceTabNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (GraceTabNote.__proto__ || Object.getPrototypeOf(GraceTabNote)).call(this, note_struct, false));\n\t\n\t    _this.setAttribute('type', 'GraceTabNote');\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // vertical shift from stave line\n\t      y_shift: 0.3,\n\t      // grace glyph scale\n\t      scale: 0.6,\n\t      // grace tablature font\n\t      font: '7.5pt Arial'\n\t    });\n\t\n\t    _this.updateWidth();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GraceTabNote, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return GraceTabNote.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      _get(GraceTabNote.prototype.__proto__ || Object.getPrototypeOf(GraceTabNote.prototype), 'draw', this).call(this);\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return GraceTabNote;\n\t}(_tabnote.TabNote);\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tuning = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class implements varies types of tunings for tablature.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tuning = exports.Tuning = function () {\n\t  _createClass(Tuning, null, [{\n\t    key: 'names',\n\t    get: function get() {\n\t      return {\n\t        'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n\t        'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n\t        'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n\t        'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n\t        'standardBanjo': 'D/5,B/4,G/4,D/4,G/5'\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Tuning() {\n\t    var tuningString = arguments.length <= 0 || arguments[0] === undefined ? 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2' : arguments[0];\n\t\n\t    _classCallCheck(this, Tuning);\n\t\n\t    // Default to standard tuning.\n\t    this.setTuning(tuningString);\n\t  }\n\t\n\t  _createClass(Tuning, [{\n\t    key: 'noteToInteger',\n\t    value: function noteToInteger(noteString) {\n\t      return _tables.Flow.keyProperties(noteString).int_value;\n\t    }\n\t  }, {\n\t    key: 'setTuning',\n\t    value: function setTuning(noteString) {\n\t      if (Tuning.names[noteString]) {\n\t        noteString = Tuning.names[noteString];\n\t      }\n\t\n\t      this.tuningString = noteString;\n\t      this.tuningValues = [];\n\t      this.numStrings = 0;\n\t\n\t      var keys = noteString.split(/\\s*,\\s*/);\n\t      if (keys.length === 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n\t      }\n\t\n\t      this.numStrings = keys.length;\n\t      for (var i = 0; i < this.numStrings; ++i) {\n\t        this.tuningValues[i] = this.noteToInteger(keys[i]);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getValueForString',\n\t    value: function getValueForString(stringNum) {\n\t      var s = parseInt(stringNum, 10);\n\t      if (s < 1 || s > this.numStrings) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'String number must be between 1 and ' + this.numStrings + ':' + stringNum);\n\t      }\n\t\n\t      return this.tuningValues[s - 1];\n\t    }\n\t  }, {\n\t    key: 'getValueForFret',\n\t    value: function getValueForFret(fretNum, stringNum) {\n\t      var stringValue = this.getValueForString(stringNum);\n\t      var f = parseInt(fretNum, 10);\n\t\n\t      if (f < 0) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' + fretNum);\n\t      }\n\t\n\t      return stringValue + f;\n\t    }\n\t  }, {\n\t    key: 'getNoteForFret',\n\t    value: function getNoteForFret(fretNum, stringNum) {\n\t      var noteValue = this.getValueForFret(fretNum, stringNum);\n\t\n\t      var octave = Math.floor(noteValue / 12);\n\t      var value = noteValue % 12;\n\t\n\t      return _tables.Flow.integerToNote(value) + '/' + octave;\n\t    }\n\t  }]);\n\n\t  return Tuning;\n\t}();\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.KeyManager = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This class implements diatonic key management.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _music = __webpack_require__(30);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar KeyManager = exports.KeyManager = function () {\n\t  function KeyManager(key) {\n\t    _classCallCheck(this, KeyManager);\n\t\n\t    this.music = new _music.Music();\n\t    this.setKey(key);\n\t  }\n\t\n\t  _createClass(KeyManager, [{\n\t    key: 'setKey',\n\t    value: function setKey(key) {\n\t      this.key = key;\n\t      this.reset();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getKey',\n\t    value: function getKey() {\n\t      return this.key;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.keyParts = this.music.getKeyParts(this.key);\n\t\n\t      this.keyString = this.keyParts.root;\n\t      if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\t\n\t      var is_supported_type = _music.Music.scaleTypes[this.keyParts.type];\n\t      if (!is_supported_type) {\n\t        throw new _vex.Vex.RERR('BadArguments', 'Unsupported key type: ' + this.key);\n\t      }\n\t\n\t      this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), _music.Music.scaleTypes[this.keyParts.type]);\n\t\n\t      this.scaleMap = {};\n\t      this.scaleMapByValue = {};\n\t      this.originalScaleMapByValue = {};\n\t\n\t      var noteLocation = _music.Music.root_indices[this.keyParts.root];\n\t\n\t      for (var i = 0; i < _music.Music.roots.length; ++i) {\n\t        var index = (noteLocation + i) % _music.Music.roots.length;\n\t        var rootName = _music.Music.roots[index];\n\t\n\t        var noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n\t        this.scaleMap[rootName] = noteName;\n\t        this.scaleMapByValue[this.scale[i]] = noteName;\n\t        this.originalScaleMapByValue[this.scale[i]] = noteName;\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getAccidental',\n\t    value: function getAccidental(key) {\n\t      var root = this.music.getKeyParts(key).root;\n\t      var parts = this.music.getNoteParts(this.scaleMap[root]);\n\t\n\t      return {\n\t        note: this.scaleMap[root],\n\t        accidental: parts.accidental\n\t      };\n\t    }\n\t  }, {\n\t    key: 'selectNote',\n\t    value: function selectNote(note) {\n\t      note = note.toLowerCase();\n\t      var parts = this.music.getNoteParts(note);\n\t\n\t      // First look for matching note in our altered scale\n\t      var scaleNote = this.scaleMap[parts.root];\n\t      var modparts = this.music.getNoteParts(scaleNote);\n\t\n\t      if (scaleNote === note) {\n\t        return {\n\t          'note': scaleNote,\n\t          'accidental': parts.accidental,\n\t          'change': false\n\t        };\n\t      }\n\t\n\t      // Then search for a note of equivalent value in our altered scale\n\t      var valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n\t      if (valueNote != null) {\n\t        return {\n\t          'note': valueNote,\n\t          'accidental': this.music.getNoteParts(valueNote).accidental,\n\t          'change': false\n\t        };\n\t      }\n\t\n\t      // Then search for a note of equivalent value in the original scale\n\t      var originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n\t      if (originalValueNote != null) {\n\t        this.scaleMap[modparts.root] = originalValueNote;\n\t        delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n\t        this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n\t        return {\n\t          'note': originalValueNote,\n\t          'accidental': this.music.getNoteParts(originalValueNote).accidental,\n\t          'change': true\n\t        };\n\t      }\n\t\n\t      // Then try to unmodify a currently modified note.\n\t      if (modparts.root === note) {\n\t        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n\t        this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n\t        this.scaleMap[modparts.root] = modparts.root;\n\t        return {\n\t          'note': modparts.root,\n\t          'accidental': null,\n\t          'change': true\n\t        };\n\t      }\n\t\n\t      // Last resort -- shitshoot\n\t      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n\t      this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\t\n\t      delete this.scaleMap[modparts.root];\n\t      this.scaleMap[modparts.root] = note;\n\t\n\t      return {\n\t        note: note,\n\t        'accidental': parts.accidental,\n\t        'change': true\n\t      };\n\t    }\n\t  }]);\n\n\t  return KeyManager;\n\t}();\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveHairpin = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n\t//\n\t// This class implements hairpins between notes.\n\t// Hairpins can be either Crescendo or Descrescendo.\n\t\n\tvar StaveHairpin = exports.StaveHairpin = function (_Element) {\n\t  _inherits(StaveHairpin, _Element);\n\t\n\t  _createClass(StaveHairpin, null, [{\n\t    key: 'FormatByTicksAndDraw',\n\t\n\t\n\t    /* Helper function to convert ticks into pixels.\n\t     * Requires a Formatter with voices joined and formatted (to\n\t     * get pixels per tick)\n\t     *\n\t     * options is struct that has:\n\t     *\n\t     *  {\n\t     *   height: px,\n\t     *   y_shift: px, //vertical offset\n\t     *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n\t     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n\t     *  }\n\t     *\n\t     **/\n\t    value: function FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n\t      var ppt = formatter.pixelsPerTick;\n\t\n\t      if (ppt == null) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n\t      }\n\t\n\t      var l_shift_px = ppt * options.left_shift_ticks;\n\t      var r_shift_px = ppt * options.right_shift_ticks;\n\t\n\t      var hairpin_options = {\n\t        height: options.height,\n\t        y_shift: options.y_shift,\n\t        left_shift_px: l_shift_px,\n\t        right_shift_px: r_shift_px };\n\t\n\t      new StaveHairpin({\n\t        first_note: notes.first_note,\n\t        last_note: notes.last_note\n\t      }, type).setContext(ctx).setRenderOptions(hairpin_options).setPosition(position).draw();\n\t    }\n\t\n\t    /**\n\t     * Create a new hairpin from the specified notes.\n\t     *\n\t     * @constructor\n\t     * @param {!Object} notes The notes to tie up.\n\t     * @param {!Object} type The type of hairpin\n\t     */\n\t\n\t  }, {\n\t    key: 'type',\n\t    get: function get() {\n\t      return {\n\t        CRESC: 1,\n\t        DECRESC: 2\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function StaveHairpin(notes, type) {\n\t    _classCallCheck(this, StaveHairpin);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveHairpin.__proto__ || Object.getPrototypeOf(StaveHairpin)).call(this));\n\t    /**\n\t     * Notes is a struct that has:\n\t     *\n\t     *  {\n\t     *    first_note: Note,\n\t     *    last_note: Note,\n\t     *  }\n\t     *\n\t     **/\n\t\n\t\n\t    _this.setAttribute('type', 'StaveHairpin');\n\t    _this.notes = notes;\n\t    _this.hairpin = type;\n\t    _this.position = _modifier.Modifier.Position.BELOW;\n\t\n\t    _this.render_options = {\n\t      height: 10,\n\t      y_shift: 0, // vertical offset\n\t      left_shift_px: 0, // left horizontal offset\n\t      right_shift_px: 0 };\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(StaveHairpin, [{\n\t    key: 'setPosition',\n\t    value: function setPosition(position) {\n\t      if (position === _modifier.Modifier.Position.ABOVE || position === _modifier.Modifier.Position.BELOW) {\n\t        this.position = position;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setRenderOptions',\n\t    value: function setRenderOptions(options) {\n\t      if (options.height != null && options.y_shift != null && options.left_shift_px != null && options.right_shift_px != null) {\n\t        this.render_options = options;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Set the notes to attach this hairpin to.\n\t     *\n\t     * @param {!Object} notes The start and end notes.\n\t     */\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.last_note = notes.last_note;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'renderHairpin',\n\t    value: function renderHairpin(params) {\n\t      var ctx = this.checkContext();\n\t      var dis = this.render_options.y_shift + 20;\n\t      var y_shift = params.first_y;\n\t\n\t      if (this.position === _modifier.Modifier.Position.ABOVE) {\n\t        dis = -dis + 30;\n\t        y_shift = params.first_y - params.staff_height;\n\t      }\n\t\n\t      var l_shift = this.render_options.left_shift_px;\n\t      var r_shift = this.render_options.right_shift_px;\n\t\n\t      ctx.beginPath();\n\t\n\t      switch (this.hairpin) {\n\t        case StaveHairpin.type.CRESC:\n\t          ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n\t          ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n\t          ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n\t          break;\n\t        case StaveHairpin.type.DECRESC:\n\t          ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n\t          ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n\t          ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n\t          break;\n\t        default:\n\t          // Default is NONE, so nothing to draw\n\t          break;\n\t      }\n\t\n\t      ctx.stroke();\n\t      ctx.closePath();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var firstNote = this.first_note;\n\t      var lastNote = this.last_note;\n\t\n\t      var start = firstNote.getModifierStartXY(this.position, 0);\n\t      var end = lastNote.getModifierStartXY(this.position, 0);\n\t\n\t      this.renderHairpin({\n\t        first_x: start.x,\n\t        last_x: end.x,\n\t        first_y: firstNote.getStave().y + firstNote.getStave().height,\n\t        last_y: lastNote.getStave().y + lastNote.getStave().height,\n\t        staff_height: firstNote.getStave().height\n\t      });\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return StaveHairpin;\n\t}(_element.Element);\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Curve = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // VexFlow - Music Engraving for HTML5\n\t// Copyright Mohit Muthanna 2010\n\t//\n\t// This class implements curves (for slurs)\n\t\n\tvar Curve = exports.Curve = function (_Element) {\n\t  _inherits(Curve, _Element);\n\t\n\t  _createClass(Curve, null, [{\n\t    key: 'Position',\n\t    get: function get() {\n\t      return {\n\t        NEAR_HEAD: 1,\n\t        NEAR_TOP: 2\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        nearHead: Curve.Position.NEAR_HEAD,\n\t        nearTop: Curve.Position.NEAR_TOP\n\t      };\n\t    }\n\t\n\t    // from: Start note\n\t    // to: End note\n\t    // options:\n\t    //    cps: List of control points\n\t    //    x_shift: pixels to shift\n\t    //    y_shift: pixels to shift\n\t\n\t  }]);\n\t\n\t  function Curve(from, to, options) {\n\t    _classCallCheck(this, Curve);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Curve.__proto__ || Object.getPrototypeOf(Curve)).call(this));\n\t\n\t    _this.setAttribute('type', 'Curve');\n\t\n\t    _this.render_options = {\n\t      spacing: 2,\n\t      thickness: 2,\n\t      x_shift: 0,\n\t      y_shift: 10,\n\t      position: Curve.Position.NEAR_HEAD,\n\t      position_end: Curve.Position.NEAR_HEAD,\n\t      invert: false,\n\t      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }]\n\t    };\n\t\n\t    _vex.Vex.Merge(_this.render_options, options);\n\t    _this.setNotes(from, to);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Curve, [{\n\t    key: 'setNotes',\n\t    value: function setNotes(from, to) {\n\t      if (!from && !to) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Curve needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      this.from = from;\n\t      this.to = to;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @return {boolean} Returns true if this is a partial bar.\n\t     */\n\t\n\t  }, {\n\t    key: 'isPartial',\n\t    value: function isPartial() {\n\t      return !this.from || !this.to;\n\t    }\n\t  }, {\n\t    key: 'renderCurve',\n\t    value: function renderCurve(params) {\n\t      var ctx = this.context;\n\t      var cps = this.render_options.cps;\n\t\n\t      var x_shift = this.render_options.x_shift;\n\t      var y_shift = this.render_options.y_shift * params.direction;\n\t\n\t      var first_x = params.first_x + x_shift;\n\t      var first_y = params.first_y + y_shift;\n\t      var last_x = params.last_x - x_shift;\n\t      var last_y = params.last_y + y_shift;\n\t      var thickness = this.render_options.thickness;\n\t\n\t      var cp_spacing = (last_x - first_x) / (cps.length + 2);\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(first_x, first_y);\n\t      ctx.bezierCurveTo(first_x + cp_spacing + cps[0].x, first_y + cps[0].y * params.direction, last_x - cp_spacing + cps[1].x, last_y + cps[1].y * params.direction, last_x, last_y);\n\t      ctx.bezierCurveTo(last_x - cp_spacing + cps[1].x, last_y + (cps[1].y + thickness) * params.direction, first_x + cp_spacing + cps[0].x, first_y + (cps[0].y + thickness) * params.direction, first_x, first_y);\n\t      ctx.stroke();\n\t      ctx.closePath();\n\t      ctx.fill();\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.from;\n\t      var last_note = this.to;\n\t      var first_x = void 0;\n\t      var last_x = void 0;\n\t      var first_y = void 0;\n\t      var last_y = void 0;\n\t      var stem_direction = void 0;\n\t\n\t      var metric = 'baseY';\n\t      var end_metric = 'baseY';\n\t\n\t      function getPosition(position) {\n\t        return typeof position === 'string' ? Curve.PositionString[position] : position;\n\t      }\n\t      var position = getPosition(this.render_options.position);\n\t      var position_end = getPosition(this.render_options.position_end);\n\t\n\t      if (position === Curve.Position.NEAR_TOP) {\n\t        metric = 'topY';\n\t        end_metric = 'topY';\n\t      }\n\t\n\t      if (position_end === Curve.Position.NEAR_HEAD) {\n\t        end_metric = 'baseY';\n\t      } else if (position_end === Curve.Position.NEAR_TOP) {\n\t        end_metric = 'topY';\n\t      }\n\t\n\t      if (first_note) {\n\t        first_x = first_note.getTieRightX();\n\t        stem_direction = first_note.getStemDirection();\n\t        first_y = first_note.getStemExtents()[metric];\n\t      } else {\n\t        first_x = last_note.getStave().getTieStartX();\n\t        first_y = last_note.getStemExtents()[metric];\n\t      }\n\t\n\t      if (last_note) {\n\t        last_x = last_note.getTieLeftX();\n\t        stem_direction = last_note.getStemDirection();\n\t        last_y = last_note.getStemExtents()[end_metric];\n\t      } else {\n\t        last_x = first_note.getStave().getTieEndX();\n\t        last_y = first_note.getStemExtents()[end_metric];\n\t      }\n\t\n\t      this.renderCurve({\n\t        first_x: first_x,\n\t        last_x: last_x,\n\t        first_y: first_y,\n\t        last_y: last_y,\n\t        direction: stem_direction * (this.render_options.invert === true ? -1 : 1)\n\t      });\n\t      return true;\n\t    }\n\t  }]);\n\n\t  return Curve;\n\t}(_element.Element);\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextDynamics = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t// This file implements the `TextDynamics` which renders traditional\n\t// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n\t//\n\t// You can render any dynamics string that contains a combination of\n\t// the following letters:  P, M, F, Z, R, S\n\t\n\t// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (TextDynamics.DEBUG) _vex.Vex.L('Vex.Flow.TextDynamics', args);\n\t}\n\t\n\tvar TextDynamics = exports.TextDynamics = function (_Note) {\n\t  _inherits(TextDynamics, _Note);\n\t\n\t  _createClass(TextDynamics, null, [{\n\t    key: 'GLYPHS',\n\t\n\t    // The glyph data for each dynamics letter\n\t    get: function get() {\n\t      return {\n\t        'f': {\n\t          code: 'vba',\n\t          width: 12\n\t        },\n\t        'p': {\n\t          code: 'vbf',\n\t          width: 14\n\t        },\n\t        'm': {\n\t          code: 'v62',\n\t          width: 17\n\t        },\n\t        's': {\n\t          code: 'v4a',\n\t          width: 10\n\t        },\n\t        'z': {\n\t          code: 'v80',\n\t          width: 12\n\t        },\n\t        'r': {\n\t          code: 'vb1',\n\t          width: 12\n\t        }\n\t      };\n\t    }\n\t\n\t    // A `TextDynamics` object inherits from `Note` so that it can be formatted\n\t    // within a `Voice`.\n\t    // Create the dynamics marking. `text_struct` is an object\n\t    // that contains a `duration` property and a `sequence` of\n\t    // letters that represents the letters to render\n\t\n\t  }]);\n\t\n\t  function TextDynamics(text_struct) {\n\t    _classCallCheck(this, TextDynamics);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextDynamics.__proto__ || Object.getPrototypeOf(TextDynamics)).call(this, text_struct));\n\t\n\t    _this.setAttribute('type', 'TextDynamics');\n\t\n\t    _this.sequence = text_struct.text.toLowerCase();\n\t    _this.line = text_struct.line || 0;\n\t    _this.glyphs = [];\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      glyph_font_size: 40\n\t    });\n\t\n\t    L('New Dynamics Text: ', _this.sequence);\n\t    return _this;\n\t  }\n\t\n\t  // Set the Stave line on which the note should be placed\n\t\n\t\n\t  _createClass(TextDynamics, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;\n\t      return this;\n\t    }\n\t\n\t    // Preformat the dynamics text\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      var _this2 = this;\n\t\n\t      var total_width = 0;\n\t      // Iterate through each letter\n\t      this.sequence.split('').forEach(function (letter) {\n\t        // Get the glyph data for the letter\n\t        var glyph_data = TextDynamics.GLYPHS[letter];\n\t        if (!glyph_data) throw new _vex.Vex.RERR('Invalid dynamics character: ' + letter);\n\t\n\t        var size = _this2.render_options.glyph_font_size;\n\t        var glyph = new _glyph.Glyph(glyph_data.code, size);\n\t\n\t        // Add the glyph\n\t        _this2.glyphs.push(glyph);\n\t\n\t        total_width += glyph_data.width;\n\t      });\n\t\n\t      // Store the width of the text\n\t      this.setWidth(total_width);\n\t      this.preFormatted = true;\n\t      return this;\n\t    }\n\t\n\t    // Draw the dynamics text on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this3 = this;\n\t\n\t      this.setRendered();\n\t      var x = this.getAbsoluteX();\n\t      var y = this.stave.getYForLine(this.line + -3);\n\t\n\t      L('Rendering Dynamics: ', this.sequence);\n\t\n\t      var letter_x = x;\n\t      this.glyphs.forEach(function (glyph, index) {\n\t        var current_letter = _this3.sequence[index];\n\t        glyph.render(_this3.context, letter_x, y);\n\t        letter_x += TextDynamics.GLYPHS[current_letter].width;\n\t      });\n\t    }\n\t  }]);\n\n\t  return TextDynamics;\n\t}(_note.Note);\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.StaveLine = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements `StaveLine` which are simply lines that connect\n\t// two notes. This object is highly configurable, see the `render_options`.\n\t// A simple line is often used for notating glissando articulations, but you\n\t// can format a `StaveLine` with arrows or colors for more pedagogical\n\t// purposes, such as diagrams.\n\t\n\t\n\t// Attribution: Arrow rendering implementations based off of\n\t// Patrick Horgan's article, \"Drawing lines and arcs with\n\t// arrow heads on  HTML5 Canvas\"\n\t//\n\t// Draw an arrow head that connects between 3 coordinates\n\tfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n\t  // all cases do this.\n\t  ctx.beginPath();\n\t  ctx.moveTo(x0, y0);\n\t  ctx.lineTo(x1, y1);\n\t  ctx.lineTo(x2, y2);\n\t  ctx.lineTo(x0, y0);\n\t  ctx.closePath();\n\t\n\t  ctx.fill();\n\t}\n\t\n\t// Helper function to draw a line with arrow heads\n\tfunction drawArrowLine(ctx, point1, point2, config) {\n\t  var both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\t\n\t  var x1 = point1.x;\n\t  var y1 = point1.y;\n\t  var x2 = point2.x;\n\t  var y2 = point2.y;\n\t\n\t  // For ends with arrow we actually want to stop before we get to the arrow\n\t  // so that wide lines won't put a flat end on the arrow.\n\t  var distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\t  var ratio = (distance - config.arrowhead_length / 3) / distance;\n\t  var end_x = void 0;\n\t  var end_y = void 0;\n\t  var start_x = void 0;\n\t  var start_y = void 0;\n\t  if (config.draw_end_arrow || both_arrows) {\n\t    end_x = Math.round(x1 + (x2 - x1) * ratio);\n\t    end_y = Math.round(y1 + (y2 - y1) * ratio);\n\t  } else {\n\t    end_x = x2;\n\t    end_y = y2;\n\t  }\n\t\n\t  if (config.draw_start_arrow || both_arrows) {\n\t    start_x = x1 + (x2 - x1) * (1 - ratio);\n\t    start_y = y1 + (y2 - y1) * (1 - ratio);\n\t  } else {\n\t    start_x = x1;\n\t    start_y = y1;\n\t  }\n\t\n\t  if (config.color) {\n\t    ctx.setStrokeStyle(config.color);\n\t    ctx.setFillStyle(config.color);\n\t  }\n\t\n\t  // Draw the shaft of the arrow\n\t  ctx.beginPath();\n\t  ctx.moveTo(start_x, start_y);\n\t  ctx.lineTo(end_x, end_y);\n\t  ctx.stroke();\n\t  ctx.closePath();\n\t\n\t  // calculate the angle of the line\n\t  var line_angle = Math.atan2(y2 - y1, x2 - x1);\n\t  // h is the line length of a side of the arrow head\n\t  var h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\t\n\t  var angle1 = void 0;\n\t  var angle2 = void 0;\n\t  var top_x = void 0;\n\t  var top_y = void 0;\n\t  var bottom_x = void 0;\n\t  var bottom_y = void 0;\n\t\n\t  if (config.draw_end_arrow || both_arrows) {\n\t    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n\t    top_x = x2 + Math.cos(angle1) * h;\n\t    top_y = y2 + Math.sin(angle1) * h;\n\t\n\t    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n\t    bottom_x = x2 + Math.cos(angle2) * h;\n\t    bottom_y = y2 + Math.sin(angle2) * h;\n\t\n\t    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n\t  }\n\t\n\t  if (config.draw_start_arrow || both_arrows) {\n\t    angle1 = line_angle + config.arrowhead_angle;\n\t    top_x = x1 + Math.cos(angle1) * h;\n\t    top_y = y1 + Math.sin(angle1) * h;\n\t\n\t    angle2 = line_angle - config.arrowhead_angle;\n\t    bottom_x = x1 + Math.cos(angle2) * h;\n\t    bottom_y = y1 + Math.sin(angle2) * h;\n\t\n\t    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n\t  }\n\t}\n\t\n\tvar StaveLine = exports.StaveLine = function (_Element) {\n\t  _inherits(StaveLine, _Element);\n\t\n\t  _createClass(StaveLine, null, [{\n\t    key: 'TextVerticalPosition',\n\t\n\t    // Text Positioning\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        BOTTOM: 2\n\t      };\n\t    }\n\t  }, {\n\t    key: 'TextJustification',\n\t    get: function get() {\n\t      return {\n\t        LEFT: 1,\n\t        CENTER: 2,\n\t        RIGHT: 3\n\t      };\n\t    }\n\t\n\t    // Initialize the StaveLine with the given `notes`.\n\t    //\n\t    // `notes` is a struct that has:\n\t    //\n\t    //  ```\n\t    //  {\n\t    //    first_note: Note,\n\t    //    last_note: Note,\n\t    //    first_indices: [n1, n2, n3],\n\t    //    last_indices: [n1, n2, n3]\n\t    //  }\n\t    //  ```\n\t\n\t  }]);\n\t\n\t  function StaveLine(notes) {\n\t    _classCallCheck(this, StaveLine);\n\t\n\t    var _this = _possibleConstructorReturn(this, (StaveLine.__proto__ || Object.getPrototypeOf(StaveLine)).call(this));\n\t\n\t    _this.setAttribute('type', 'StaveLine');\n\t\n\t    _this.notes = notes;\n\t\n\t    _this.text = '';\n\t\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 10,\n\t      weight: ''\n\t    };\n\t\n\t    _this.render_options = {\n\t      // Space to add to the left or the right\n\t      padding_left: 4,\n\t      padding_right: 3,\n\t\n\t      // The width of the line in pixels\n\t      line_width: 1,\n\t      // An array of line/space lengths. Unsupported with Raphael (SVG)\n\t      line_dash: null,\n\t      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n\t      rounded_end: true,\n\t      // The color of the line and arrowheads\n\t      color: null,\n\t\n\t      // Flags to draw arrows on each end of the line\n\t      draw_start_arrow: false,\n\t      draw_end_arrow: false,\n\t\n\t      // The length of the arrowhead sides\n\t      arrowhead_length: 10,\n\t      // The angle of the arrowhead\n\t      arrowhead_angle: Math.PI / 8,\n\t\n\t      // The position of the text\n\t      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n\t      text_justification: StaveLine.TextJustification.CENTER\n\t    };\n\t\n\t    _this.setNotes(notes);\n\t    return _this;\n\t  }\n\t\n\t  // Set the font for the `StaveLine` text\n\t\n\t\n\t  _createClass(StaveLine, [{\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      this.font = font;return this;\n\t    }\n\t    // The the annotation for the `StaveLine`\n\t\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text) {\n\t      this.text = text;return this;\n\t    }\n\t\n\t    // Set the notes for the `StaveLine`\n\t\n\t  }, {\n\t    key: 'setNotes',\n\t    value: function setNotes(notes) {\n\t      if (!notes.first_note && !notes.last_note) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n\t      }\n\t\n\t      if (!notes.first_indices) notes.first_indices = [0];\n\t      if (!notes.last_indices) notes.last_indices = [0];\n\t\n\t      if (notes.first_indices.length !== notes.last_indices.length) {\n\t        throw new _vex.Vex.RuntimeError('BadArguments', 'Connected notes must have similar index sizes');\n\t      }\n\t\n\t      // Success. Lets grab 'em notes.\n\t      this.first_note = notes.first_note;\n\t      this.first_indices = notes.first_indices;\n\t      this.last_note = notes.last_note;\n\t      this.last_indices = notes.last_indices;\n\t      return this;\n\t    }\n\t\n\t    // Apply the style of the `StaveLine` to the context\n\t\n\t  }, {\n\t    key: 'applyLineStyle',\n\t    value: function applyLineStyle() {\n\t      var ctx = this.checkContext();\n\t      var render_options = this.render_options;\n\t\n\t      if (render_options.line_dash) {\n\t        ctx.setLineDash(render_options.line_dash);\n\t      }\n\t\n\t      if (render_options.line_width) {\n\t        ctx.setLineWidth(render_options.line_width);\n\t      }\n\t\n\t      if (render_options.rounded_end) {\n\t        ctx.setLineCap('round');\n\t      } else {\n\t        ctx.setLineCap('square');\n\t      }\n\t    }\n\t\n\t    // Apply the text styling to the context\n\t\n\t  }, {\n\t    key: 'applyFontStyle',\n\t    value: function applyFontStyle() {\n\t      var ctx = this.checkContext();\n\t\n\t      if (this.font) {\n\t        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t      }\n\t\n\t      if (this.render_options.color) {\n\t        ctx.setStrokeStyle(this.render_options.color);\n\t        ctx.setFillStyle(this.render_options.color);\n\t      }\n\t    }\n\t\n\t    // Renders the `StaveLine` on the context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this2 = this;\n\t\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      var first_note = this.first_note;\n\t      var last_note = this.last_note;\n\t      var render_options = this.render_options;\n\t\n\t      ctx.save();\n\t      this.applyLineStyle();\n\t\n\t      // Cycle through each set of indices and draw lines\n\t      var start_position = void 0;\n\t      var end_position = void 0;\n\t      this.first_indices.forEach(function (first_index, i) {\n\t        var last_index = _this2.last_indices[i];\n\t\n\t        // Get initial coordinates for the start/end of the line\n\t        start_position = first_note.getModifierStartXY(2, first_index);\n\t        end_position = last_note.getModifierStartXY(1, last_index);\n\t        var upwards_slope = start_position.y > end_position.y;\n\t\n\t        // Adjust `x` coordinates for modifiers\n\t        start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n\t        end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\t\n\t        // Adjust first `x` coordinates for displacements\n\t        var notehead_width = first_note.getGlyph().getWidth();\n\t        var first_displaced = first_note.getKeyProps()[first_index].displaced;\n\t        if (first_displaced && first_note.getStemDirection() === 1) {\n\t          start_position.x += notehead_width + render_options.padding_left;\n\t        }\n\t\n\t        // Adjust last `x` coordinates for displacements\n\t        var last_displaced = last_note.getKeyProps()[last_index].displaced;\n\t        if (last_displaced && last_note.getStemDirection() === -1) {\n\t          end_position.x -= notehead_width + render_options.padding_right;\n\t        }\n\t\n\t        // Adjust y position better if it's not coming from the center of the note\n\t        start_position.y += upwards_slope ? -3 : 1;\n\t        end_position.y += upwards_slope ? 2 : 0;\n\t\n\t        drawArrowLine(ctx, start_position, end_position, _this2.render_options);\n\t      });\n\t\n\t      ctx.restore();\n\t\n\t      // Determine the x coordinate where to start the text\n\t      var text_width = ctx.measureText(this.text).width;\n\t      var justification = render_options.text_justification;\n\t      var x = 0;\n\t      if (justification === StaveLine.TextJustification.LEFT) {\n\t        x = start_position.x;\n\t      } else if (justification === StaveLine.TextJustification.CENTER) {\n\t        var delta_x = end_position.x - start_position.x;\n\t        var center_x = delta_x / 2 + start_position.x;\n\t        x = center_x - text_width / 2;\n\t      } else if (justification === StaveLine.TextJustification.RIGHT) {\n\t        x = end_position.x - text_width;\n\t      }\n\t\n\t      // Determine the y value to start the text\n\t      var y = void 0;\n\t      var vertical_position = render_options.text_position_vertical;\n\t      if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n\t        y = first_note.getStave().getYForTopText();\n\t      } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n\t        y = first_note.getStave().getYForBottomText(_tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t      }\n\t\n\t      // Draw the text\n\t      ctx.save();\n\t      this.applyFontStyle();\n\t      ctx.fillText(this.text, x, y);\n\t      ctx.restore();\n\t\n\t      return this;\n\t    }\n\t  }]);\n\n\t  return StaveLine;\n\t}(_element.Element);\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PedalMarking = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements different types of pedal markings. These notation\n\t// elements indicate to the performer when to depress and release the a pedal.\n\t//\n\t// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n\t// custom text for the release/depress pedal markings.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (PedalMarking.DEBUG) _vex.Vex.L('Vex.Flow.PedalMarking', args);\n\t}\n\t\n\t// Draws a pedal glyph with the provided `name` on a rendering `context`\n\t// at the coordinates `x` and `y. Takes into account the glyph data\n\t// coordinate shifts.\n\tfunction drawPedalGlyph(name, context, x, y, point) {\n\t  var glyph_data = PedalMarking.GLYPHS[name];\n\t  var glyph = new _glyph.Glyph(glyph_data.code, point);\n\t  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n\t}\n\t\n\tvar PedalMarking = exports.PedalMarking = function (_Element) {\n\t  _inherits(PedalMarking, _Element);\n\t\n\t  _createClass(PedalMarking, null, [{\n\t    key: 'createSustain',\n\t\n\t\n\t    // Create a sustain pedal marking. Returns the defaults PedalMarking.\n\t    // Which uses the traditional \"Ped\" and \"*\"\" markings.\n\t    value: function createSustain(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      return pedal;\n\t    }\n\t\n\t    // Create a sostenuto pedal marking\n\t\n\t  }, {\n\t    key: 'createSostenuto',\n\t    value: function createSostenuto(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      pedal.setStyle(PedalMarking.Styles.MIXED);\n\t      pedal.setCustomText('Sost. Ped.');\n\t      return pedal;\n\t    }\n\t\n\t    // Create an una corda pedal marking\n\t\n\t  }, {\n\t    key: 'createUnaCorda',\n\t    value: function createUnaCorda(notes) {\n\t      var pedal = new PedalMarking(notes);\n\t      pedal.setStyle(PedalMarking.Styles.TEXT);\n\t      pedal.setCustomText('una corda', 'tre corda');\n\t      return pedal;\n\t    }\n\t\n\t    // ## Prototype Methods\n\t\n\t  }, {\n\t    key: 'GLYPHS',\n\t\n\t    // Glyph data\n\t    get: function get() {\n\t      return {\n\t        'pedal_depress': {\n\t          code: 'v36',\n\t          x_shift: -10,\n\t          y_shift: 0\n\t        },\n\t        'pedal_release': {\n\t          code: 'v5d',\n\t          x_shift: -2,\n\t          y_shift: 3\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'Styles',\n\t    get: function get() {\n\t      return {\n\t        TEXT: 1,\n\t        BRACKET: 2,\n\t        MIXED: 3\n\t      };\n\t    }\n\t  }, {\n\t    key: 'StylesString',\n\t    get: function get() {\n\t      return {\n\t        text: PedalMarking.Styles.TEXT,\n\t        bracket: PedalMarking.Styles.BRACKET,\n\t        mixed: PedalMarking.Styles.MIXED\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function PedalMarking(notes) {\n\t    _classCallCheck(this, PedalMarking);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PedalMarking.__proto__ || Object.getPrototypeOf(PedalMarking)).call(this));\n\t\n\t    _this.setAttribute('type', 'PedalMarking');\n\t\n\t    _this.notes = notes;\n\t    _this.style = PedalMarking.TEXT;\n\t    _this.line = 0;\n\t\n\t    // Custom text for the release/depress markings\n\t    _this.custom_depress_text = '';\n\t    _this.custom_release_text = '';\n\t\n\t    _this.font = {\n\t      family: 'Times New Roman',\n\t      size: 12,\n\t      weight: 'italic bold'\n\t    };\n\t\n\t    _this.render_options = {\n\t      bracket_height: 10,\n\t      text_margin_right: 6,\n\t      bracket_line_width: 1,\n\t      glyph_point_size: 40,\n\t      color: 'black'\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Set custom text for the `depress`/`release` pedal markings. No text is\n\t  // set if the parameter is falsy.\n\t\n\t\n\t  _createClass(PedalMarking, [{\n\t    key: 'setCustomText',\n\t    value: function setCustomText(depress, release) {\n\t      this.custom_depress_text = depress || '';\n\t      this.custom_release_text = release || '';\n\t      return this;\n\t    }\n\t\n\t    // Set the pedal marking style\n\t\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      if (style < 1 && style > 3) {\n\t        throw new _vex.Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n\t      }\n\t\n\t      this.style = style;\n\t      return this;\n\t    }\n\t\n\t    // Set the staff line to render the markings on\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Draw the bracket based pedal markings\n\t\n\t  }, {\n\t    key: 'drawBracketed',\n\t    value: function drawBracketed() {\n\t      var ctx = this.context;\n\t      var is_pedal_depressed = false;\n\t      var prev_x = void 0;\n\t      var prev_y = void 0;\n\t      var pedal = this;\n\t\n\t      // Iterate through each note\n\t      this.notes.forEach(function (note, index, notes) {\n\t        // Each note triggers the opposite pedal action\n\t        is_pedal_depressed = !is_pedal_depressed;\n\t\n\t        // Get the initial coordinates for the note\n\t        var x = note.getAbsoluteX();\n\t        var y = note.getStave().getYForBottomText(pedal.line + 3);\n\t\n\t        // Throw if current note is positioned before the previous note\n\t        if (x < prev_x) {\n\t          throw new _vex.Vex.RERR('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n\t        }\n\t\n\t        // Determine if the previous or next note are the same\n\t        // as the current note. We need to keep track of this for\n\t        // when adjustments are made for the release+depress action\n\t        var next_is_same = notes[index + 1] === note;\n\t        var prev_is_same = notes[index - 1] === note;\n\t\n\t        var x_shift = 0;\n\t        if (is_pedal_depressed) {\n\t          // Adjustment for release+depress\n\t          x_shift = prev_is_same ? 5 : 0;\n\t\n\t          if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n\t            // For MIXED style, start with text instead of bracket\n\t            if (pedal.custom_depress_text) {\n\t              // If we have custom text, use instead of the default \"Ped\" glyph\n\t              var text_width = ctx.measureText(pedal.custom_depress_text).width;\n\t              ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n\t              x_shift = text_width / 2 + pedal.render_options.text_margin_right;\n\t            } else {\n\t              // Render the Ped glyph in position\n\t              drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n\t              x_shift = 20 + pedal.render_options.text_margin_right;\n\t            }\n\t          } else {\n\t            // Draw start bracket\n\t            ctx.beginPath();\n\t            ctx.moveTo(x, y - pedal.render_options.bracket_height);\n\t            ctx.lineTo(x + x_shift, y);\n\t            ctx.stroke();\n\t            ctx.closePath();\n\t          }\n\t        } else {\n\t          // Adjustment for release+depress\n\t          x_shift = next_is_same ? -5 : 0;\n\t\n\t          // Draw end bracket\n\t          ctx.beginPath();\n\t          ctx.moveTo(prev_x, prev_y);\n\t          ctx.lineTo(x + x_shift, y);\n\t          ctx.lineTo(x, y - pedal.render_options.bracket_height);\n\t          ctx.stroke();\n\t          ctx.closePath();\n\t        }\n\t\n\t        // Store previous coordinates\n\t        prev_x = x + x_shift;\n\t        prev_y = y;\n\t      });\n\t    }\n\t\n\t    // Draw the text based pedal markings. This defaults to the traditional\n\t    // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n\t\n\t  }, {\n\t    key: 'drawText',\n\t    value: function drawText() {\n\t      var ctx = this.context;\n\t      var is_pedal_depressed = false;\n\t      var pedal = this;\n\t\n\t      // The glyph point size\n\t      var point = pedal.render_options.glyph_point_size;\n\t\n\t      // Iterate through each note, placing glyphs or custom text accordingly\n\t      this.notes.forEach(function (note) {\n\t        is_pedal_depressed = !is_pedal_depressed;\n\t        var stave = note.getStave();\n\t        var x = note.getAbsoluteX();\n\t        var y = stave.getYForBottomText(pedal.line + 3);\n\t\n\t        var text_width = 0;\n\t        if (is_pedal_depressed) {\n\t          if (pedal.custom_depress_text) {\n\t            text_width = ctx.measureText(pedal.custom_depress_text).width;\n\t            ctx.fillText(pedal.custom_depress_text, x - text_width / 2, y);\n\t          } else {\n\t            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n\t          }\n\t        } else {\n\t          if (pedal.custom_release_text) {\n\t            text_width = ctx.measureText(pedal.custom_release_text).width;\n\t            ctx.fillText(pedal.custom_release_text, x - text_width / 2, y);\n\t          } else {\n\t            drawPedalGlyph('pedal_release', ctx, x, y, point);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    // Render the pedal marking in position on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      ctx.save();\n\t      ctx.setStrokeStyle(this.render_options.color);\n\t      ctx.setFillStyle(this.render_options.color);\n\t      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\t\n\t      L('Rendering Pedal Marking');\n\t\n\t      if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n\t        ctx.setLineWidth(this.render_options.bracket_line_width);\n\t        this.drawBracketed();\n\t      } else if (this.style === PedalMarking.Styles.TEXT) {\n\t        this.drawText();\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return PedalMarking;\n\t}(_element.Element);\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextBracket = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _tables = __webpack_require__(2);\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Cyril Silverman\n\t//\n\t// ## Description\n\t//\n\t// This file implement `TextBrackets` which extend between two notes.\n\t// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n\t// using this class.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (TextBracket.DEBUG) _vex.Vex.L('Vex.Flow.TextBracket', args);\n\t}\n\t\n\tvar TextBracket = exports.TextBracket = function (_Element) {\n\t  _inherits(TextBracket, _Element);\n\t\n\t  _createClass(TextBracket, null, [{\n\t    key: 'Positions',\n\t\n\t    // FIXME: Modifier.Position is singular while this is plural, make consistent\n\t    get: function get() {\n\t      return {\n\t        TOP: 1,\n\t        BOTTOM: -1\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PositionString',\n\t    get: function get() {\n\t      return {\n\t        top: TextBracket.Positions.TOP,\n\t        bottom: TextBracket.Positions.BOTTOM\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function TextBracket(_ref) {\n\t    var start = _ref.start;\n\t    var stop = _ref.stop;\n\t    var _ref$text = _ref.text;\n\t    var text = _ref$text === undefined ? '' : _ref$text;\n\t    var _ref$superscript = _ref.superscript;\n\t    var superscript = _ref$superscript === undefined ? '' : _ref$superscript;\n\t    var _ref$position = _ref.position;\n\t    var position = _ref$position === undefined ? TextBracket.Positions.TOP : _ref$position;\n\t\n\t    _classCallCheck(this, TextBracket);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextBracket.__proto__ || Object.getPrototypeOf(TextBracket)).call(this));\n\t\n\t    _this.setAttribute('type', 'TextBracket');\n\t\n\t    _this.start = start;\n\t    _this.stop = stop;\n\t\n\t    _this.text = text;\n\t    _this.superscript = superscript;\n\t\n\t    _this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n\t\n\t    _this.line = 1;\n\t\n\t    _this.font = {\n\t      family: 'Serif',\n\t      size: 15,\n\t      weight: 'italic'\n\t    };\n\t\n\t    _this.render_options = {\n\t      dashed: true,\n\t      dash: [5],\n\t      color: 'black',\n\t      line_width: 1,\n\t      show_bracket: true,\n\t      bracket_height: 8,\n\t\n\t      // In the BOTTOM position, the bracket line can extend\n\t      // under the superscript.\n\t      underline_superscript: true\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  // Apply the text backet styling to the provided `context`\n\t\n\t\n\t  _createClass(TextBracket, [{\n\t    key: 'applyStyle',\n\t    value: function applyStyle(context) {\n\t      // Apply style for the octave bracket\n\t      context.setFont(this.font.family, this.font.size, this.font.weight);\n\t      context.setStrokeStyle(this.render_options.color);\n\t      context.setFillStyle(this.render_options.color);\n\t      context.setLineWidth(this.render_options.line_width);\n\t\n\t      return this;\n\t    }\n\t\n\t    // Set whether the bracket line should be `dashed`. You can also\n\t    // optionally set the `dash` pattern by passing in an array of numbers\n\t\n\t  }, {\n\t    key: 'setDashed',\n\t    value: function setDashed(dashed, dash) {\n\t      this.render_options.dashed = dashed;\n\t      if (dash) this.render_options.dash = dash;\n\t      return this;\n\t    }\n\t\n\t    // Set the font for the text\n\t\n\t  }, {\n\t    key: 'setFont',\n\t    value: function setFont(font) {\n\t      // We use Object.assign to support partial updates to the font object\n\t      this.font = _extends({}, this.font, font);\n\t      return this;\n\t    }\n\t    // Set the rendering `context` for the octave bracket\n\t\n\t  }, {\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Draw the octave bracket on the rendering context\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var ctx = this.context;\n\t      this.setRendered();\n\t\n\t      var y = 0;\n\t      switch (this.position) {\n\t        case TextBracket.Positions.TOP:\n\t          y = this.start.getStave().getYForTopText(this.line);\n\t          break;\n\t        case TextBracket.Positions.BOTTOM:\n\t          y = this.start.getStave().getYForBottomText(this.line + _tables.Flow.TEXT_HEIGHT_OFFSET_HACK);\n\t          break;\n\t        default:\n\t          throw new _vex.Vex.RERR('InvalidPosition', 'The position ' + this.position + ' is invalid');\n\t      }\n\t\n\t      // Get the preliminary start and stop coordintates for the bracket\n\t      var start = { x: this.start.getAbsoluteX(), y: y };\n\t      var stop = { x: this.stop.getAbsoluteX(), y: y };\n\t\n\t      L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\t\n\t      var bracket_height = this.render_options.bracket_height * this.position;\n\t\n\t      ctx.save();\n\t      this.applyStyle(ctx);\n\t\n\t      // Draw text\n\t      ctx.fillText(this.text, start.x, start.y);\n\t\n\t      // Get the width and height for the octave number\n\t      var main_width = ctx.measureText(this.text).width;\n\t      var main_height = ctx.measureText('M').width;\n\t\n\t      // Calculate the y position for the super script\n\t      var super_y = start.y - main_height / 2.5;\n\t\n\t      // Draw the superscript\n\t      ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n\t      ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\t\n\t      // Determine width and height of the superscript\n\t      var superscript_width = ctx.measureText(this.superscript).width;\n\t      var super_height = ctx.measureText('M').width;\n\t\n\t      // Setup initial coordinates for the bracket line\n\t      var start_x = start.x;\n\t      var line_y = super_y;\n\t      var end_x = stop.x + this.stop.getGlyph().getWidth();\n\t\n\t      // Adjust x and y coordinates based on position\n\t      if (this.position === TextBracket.Positions.TOP) {\n\t        start_x += main_width + superscript_width + 5;\n\t        line_y -= super_height / 2.7;\n\t      } else if (this.position === TextBracket.Positions.BOTTOM) {\n\t        line_y += super_height / 2.7;\n\t        start_x += main_width + 2;\n\t\n\t        if (!this.render_options.underline_superscript) {\n\t          start_x += superscript_width;\n\t        }\n\t      }\n\t\n\t      if (this.render_options.dashed) {\n\t        // Main line\n\t        _renderer.Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n\t        // Ending Bracket\n\t        if (this.render_options.show_bracket) {\n\t          _renderer.Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n\t        }\n\t      } else {\n\t        ctx.beginPath();\n\t        ctx.moveTo(start_x, line_y);\n\t        // Main line\n\t        ctx.lineTo(end_x, line_y);\n\t        if (this.render_options.show_bracket) {\n\t          // Ending bracket\n\t          ctx.lineTo(end_x, line_y + bracket_height);\n\t        }\n\t        ctx.stroke();\n\t        ctx.closePath();\n\t      }\n\t\n\t      ctx.restore();\n\t    }\n\t  }]);\n\n\t  return TextBracket;\n\t}(_element.Element);\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.BarNote = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _stavebarline = __webpack_require__(44);\n\t\n\tvar _boundingbox = __webpack_require__(8);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n\t// be added to a voice and rendered in the middle of a stave. Since it has no\n\t// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n\t//\n\t// See `tests/barnote_tests.js` for usage examples.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (BarNote.DEBUG) _vex.Vex.L('Vex.Flow.BarNote', args);\n\t}\n\t\n\tvar BarNote = exports.BarNote = function (_Note) {\n\t  _inherits(BarNote, _Note);\n\t\n\t  function BarNote() {\n\t    var _this$metrics$widths;\n\t\n\t    var type = arguments.length <= 0 || arguments[0] === undefined ? _stavebarline.Barline.type.SINGLE : arguments[0];\n\t\n\t    _classCallCheck(this, BarNote);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BarNote.__proto__ || Object.getPrototypeOf(BarNote)).call(this, { duration: 'b' }));\n\t\n\t    _this.setAttribute('type', 'BarNote');\n\t\n\t    _this.metrics = {\n\t      widths: {}\n\t    };\n\t\n\t    var TYPE = _stavebarline.Barline.type;\n\t    _this.metrics.widths = (_this$metrics$widths = {}, _defineProperty(_this$metrics$widths, TYPE.SINGLE, 8), _defineProperty(_this$metrics$widths, TYPE.DOUBLE, 12), _defineProperty(_this$metrics$widths, TYPE.END, 15), _defineProperty(_this$metrics$widths, TYPE.REPEAT_BEGIN, 14), _defineProperty(_this$metrics$widths, TYPE.REPEAT_END, 14), _defineProperty(_this$metrics$widths, TYPE.REPEAT_BOTH, 18), _defineProperty(_this$metrics$widths, TYPE.NONE, 0), _this$metrics$widths);\n\t\n\t    // Tell the formatter that bar notes have no duration.\n\t    _this.ignore_ticks = true;\n\t    _this.setType(type);\n\t    return _this;\n\t  }\n\t\n\t  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n\t\n\t\n\t  _createClass(BarNote, [{\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t  }, {\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = typeof type === 'string' ? _stavebarline.Barline.typeString[type] : type;\n\t\n\t      // Set width to width of relevant `Barline`.\n\t      this.setWidth(this.metrics.widths[this.type]);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'getBoundingBox',\n\t    value: function getBoundingBox() {\n\t      return new _boundingbox.BoundingBox(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* overridden to ignore */\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      /* overridden to ignore */\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t\n\t    // Render note to stave.\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t      L('Rendering bar line at: ', this.getAbsoluteX());\n\t      var barline = new _stavebarline.Barline(this.type);\n\t      barline.setX(this.getAbsoluteX());\n\t      barline.draw(this.stave);\n\t      this.setRendered();\n\t    }\n\t  }]);\n\n\t  return BarNote;\n\t}(_note.Note);\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.GhostNote = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stemmablenote = __webpack_require__(24);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t\n\tvar GhostNote = exports.GhostNote = function (_StemmableNote) {\n\t  _inherits(GhostNote, _StemmableNote);\n\t\n\t  /** @constructor */\n\t  function GhostNote(parameter) {\n\t    _classCallCheck(this, GhostNote);\n\t\n\t    // Sanity check\n\t    if (!parameter) {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Ghost note must have valid initialization data to identify ' + 'duration.');\n\t    }\n\t\n\t    var note_struct = void 0;\n\t\n\t    // Preserve backwards-compatibility\n\t    if (typeof parameter === 'string') {\n\t      note_struct = { duration: parameter };\n\t    } else if ((typeof parameter === 'undefined' ? 'undefined' : _typeof(parameter)) === 'object') {\n\t      note_struct = parameter;\n\t    } else {\n\t      throw new _vex.Vex.RuntimeError('BadArguments', 'Ghost note must have valid initialization data to identify ' + 'duration.');\n\t    }\n\t\n\t    var _this = _possibleConstructorReturn(this, (GhostNote.__proto__ || Object.getPrototypeOf(GhostNote)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'GhostNote');\n\t\n\t    // Note properties\n\t    _this.setWidth(0);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(GhostNote, [{\n\t    key: 'isRest',\n\t    value: function isRest() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'setStave',\n\t    value: function setStave(stave) {\n\t      _get(GhostNote.prototype.__proto__ || Object.getPrototypeOf(GhostNote.prototype), 'setStave', this).call(this, stave);\n\t    }\n\t  }, {\n\t    key: 'addToModifierContext',\n\t    value: function addToModifierContext() {\n\t      /* intentionally overridden */return this;\n\t    }\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.setPreFormatted(true);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      if (!this.stave) throw new _vex.Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\t\n\t      // Draw the modifiers\n\t      this.setRendered();\n\t      for (var i = 0; i < this.modifiers.length; ++i) {\n\t        var modifier = this.modifiers[i];\n\t        modifier.setContext(this.context);\n\t        modifier.draw();\n\t      }\n\t    }\n\t  }]);\n\n\t  return GhostNote;\n\t}(_stemmablenote.StemmableNote);\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tremolo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _modifier = __webpack_require__(25);\n\t\n\tvar _glyph = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// Author: Mike Corrigan <corrigan@gmail.com>\n\t//\n\t// This class implements tremolo notation.\n\t\n\tvar Tremolo = exports.Tremolo = function (_Modifier) {\n\t  _inherits(Tremolo, _Modifier);\n\t\n\t  _createClass(Tremolo, null, [{\n\t    key: 'CATEGORY',\n\t    get: function get() {\n\t      return 'tremolo';\n\t    }\n\t  }]);\n\t\n\t  function Tremolo(num) {\n\t    _classCallCheck(this, Tremolo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tremolo.__proto__ || Object.getPrototypeOf(Tremolo)).call(this));\n\t\n\t    _this.setAttribute('type', 'Tremolo');\n\t\n\t    _this.num = num;\n\t    _this.note = null;\n\t    _this.index = null;\n\t    _this.position = _modifier.Modifier.Position.CENTER;\n\t    _this.code = 'v74';\n\t    _this.shift_right = -2;\n\t    _this.y_spacing = 4;\n\t\n\t    _this.render_options = {\n\t      font_scale: 35,\n\t      stroke_px: 3,\n\t      stroke_spacing: 10\n\t    };\n\t\n\t    _this.font = {\n\t      family: 'Arial',\n\t      size: 16,\n\t      weight: ''\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tremolo, [{\n\t    key: 'getCategory',\n\t    value: function getCategory() {\n\t      return Tremolo.CATEGORY;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t\n\t      if (!(this.note && this.index != null)) {\n\t        throw new _vex.Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n\t      }\n\t\n\t      this.setRendered();\n\t      var start = this.note.getModifierStartXY(this.position, this.index);\n\t      var x = start.x;\n\t      var y = start.y;\n\t\n\t      x += this.shift_right;\n\t      for (var i = 0; i < this.num; ++i) {\n\t        _glyph.Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n\t        y += this.y_spacing;\n\t      }\n\t    }\n\t  }]);\n\n\t  return Tremolo;\n\t}(_modifier.Modifier);\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Crescendo = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// ## Description\n\t//\n\t// This file implements the `Crescendo` object which draws crescendos and\n\t// decrescendo dynamics markings. A `Crescendo` is initialized with a\n\t// duration and formatted as part of a `Voice` like any other `Note`\n\t// type in VexFlow. This object would most likely be formatted in a Voice\n\t// with `TextNotes` - which are used to represent other dynamics markings.\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Crescendo.DEBUG) _vex.Vex.L('Vex.Flow.Crescendo', args);\n\t}\n\t\n\t// Private helper to draw the hairpin\n\tfunction renderHairpin(ctx, params) {\n\t  var begin_x = params.begin_x;\n\t  var end_x = params.end_x;\n\t  var y = params.y;\n\t  var half_height = params.height / 2;\n\t\n\t  ctx.beginPath();\n\t\n\t  if (params.reverse) {\n\t    ctx.moveTo(begin_x, y - half_height);\n\t    ctx.lineTo(end_x, y);\n\t    ctx.lineTo(begin_x, y + half_height);\n\t  } else {\n\t    ctx.moveTo(end_x, y - half_height);\n\t    ctx.lineTo(begin_x, y);\n\t    ctx.lineTo(end_x, y + half_height);\n\t  }\n\t\n\t  ctx.stroke();\n\t  ctx.closePath();\n\t}\n\t\n\tvar Crescendo = exports.Crescendo = function (_Note) {\n\t  _inherits(Crescendo, _Note);\n\t\n\t  // Initialize the crescendo's properties\n\t  function Crescendo(note_struct) {\n\t    _classCallCheck(this, Crescendo);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Crescendo.__proto__ || Object.getPrototypeOf(Crescendo)).call(this, note_struct));\n\t\n\t    _this.setAttribute('type', 'Crescendo');\n\t\n\t    // Whether the object is a decrescendo\n\t    _this.decrescendo = false;\n\t\n\t    // The staff line to be placed on\n\t    _this.line = note_struct.line || 0;\n\t\n\t    // The height at the open end of the cresc/decresc\n\t    _this.height = 15;\n\t\n\t    _vex.Vex.Merge(_this.render_options, {\n\t      // Extensions to the length of the crescendo on either side\n\t      extend_left: 0,\n\t      extend_right: 0,\n\t      // Vertical shift\n\t      y_shift: 0\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  // Set the line to center the element on\n\t\n\t\n\t  _createClass(Crescendo, [{\n\t    key: 'setLine',\n\t    value: function setLine(line) {\n\t      this.line = line;return this;\n\t    }\n\t\n\t    // Set the full height at the open end\n\t\n\t  }, {\n\t    key: 'setHeight',\n\t    value: function setHeight(height) {\n\t      this.height = height;return this;\n\t    }\n\t\n\t    // Set whether the sign should be a descresendo by passing a bool\n\t    // to `decresc`\n\t\n\t  }, {\n\t    key: 'setDecrescendo',\n\t    value: function setDecrescendo(decresc) {\n\t      this.decrescendo = decresc;\n\t      return this;\n\t    }\n\t\n\t    // Preformat the note\n\t\n\t  }, {\n\t    key: 'preFormat',\n\t    value: function preFormat() {\n\t      this.preFormatted = true;return this;\n\t    }\n\t\n\t    // Render the Crescendo object onto the canvas\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      this.checkContext();\n\t      this.setRendered();\n\t\n\t      var tick_context = this.getTickContext();\n\t      var next_context = _tickcontext.TickContext.getNextContext(tick_context);\n\t\n\t      var begin_x = this.getAbsoluteX();\n\t      var end_x = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n\t      var y = this.stave.getYForLine(this.line + -3) + 1;\n\t\n\t      L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n\t\n\t      renderHairpin(this.context, {\n\t        begin_x: begin_x - this.render_options.extend_left,\n\t        end_x: end_x + this.render_options.extend_right,\n\t        y: y + this.render_options.y_shift,\n\t        height: this.height,\n\t        reverse: this.decrescendo\n\t      });\n\t    }\n\t  }]);\n\n\t  return Crescendo;\n\t}(_note.Note);\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.System = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// This class implements a musical system, which is a collection of staves,\n\t// each which can have one or more voices. All voices across all staves in\n\t// the system are formatted together.\n\t\n\tvar _element = __webpack_require__(5);\n\t\n\tvar _factory = __webpack_require__(76);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _note = __webpack_require__(22);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction setDefaults(params, defaults) {\n\t  var default_options = defaults.options;\n\t  params = _extends(defaults, params);\n\t  params.options = _extends(default_options, params.options);\n\t  return params;\n\t}\n\t\n\tvar System = exports.System = function (_Element) {\n\t  _inherits(System, _Element);\n\t\n\t  function System() {\n\t    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, System);\n\t\n\t    var _this = _possibleConstructorReturn(this, (System.__proto__ || Object.getPrototypeOf(System)).call(this));\n\t\n\t    _this.setAttribute('type', 'System');\n\t    _this.setOptions(params);\n\t    _this.parts = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(System, [{\n\t    key: 'setOptions',\n\t    value: function setOptions() {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      this.options = setDefaults(options, {\n\t        x: 10,\n\t        y: 10,\n\t        width: 500,\n\t        connector: null,\n\t        spaceBetweenStaves: 12, // stave spaces\n\t        factory: null,\n\t        debugFormatter: false,\n\t        formatIterations: 0, // number of formatter tuning steps\n\t        options: {}\n\t      });\n\t\n\t      this.factory = this.options.factory || new _factory.Factory({ renderer: { el: null } });\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      _get(System.prototype.__proto__ || Object.getPrototypeOf(System.prototype), 'setContext', this).call(this, context);\n\t      this.factory.setContext(context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'addConnector',\n\t    value: function addConnector() {\n\t      var type = arguments.length <= 0 || arguments[0] === undefined ? 'double' : arguments[0];\n\t\n\t      this.connector = this.factory.StaveConnector({\n\t        top_stave: this.parts[0].stave,\n\t        bottom_stave: this.parts[this.parts.length - 1].stave,\n\t        type: type\n\t      });\n\t      return this.connector;\n\t    }\n\t  }, {\n\t    key: 'addStave',\n\t    value: function addStave(params) {\n\t      var _this2 = this;\n\t\n\t      params = setDefaults(params, {\n\t        stave: null,\n\t        voices: [],\n\t        spaceAbove: 0, // stave spaces\n\t        spaceBelow: 0, // stave spaces\n\t        debugNoteMetrics: false,\n\t        options: {}\n\t      });\n\t\n\t      if (!params.stave) {\n\t        var options = { left_bar: false };\n\t        params.stave = this.factory.Stave({\n\t          x: this.options.x,\n\t          y: this.options.y,\n\t          width: this.options.width,\n\t          options: options\n\t        });\n\t      }\n\t\n\t      params.voices.forEach(function (voice) {\n\t        return voice.setContext(_this2.context).setStave(params.stave).getTickables().forEach(function (tickable) {\n\t          return tickable.setStave(params.stave);\n\t        });\n\t      });\n\t\n\t      this.parts.push(params);\n\t      return params.stave;\n\t    }\n\t  }, {\n\t    key: 'format',\n\t    value: function format() {\n\t      var _this3 = this;\n\t\n\t      var formatter = new _formatter.Formatter();\n\t      this.formatter = formatter;\n\t\n\t      var y = this.options.y;\n\t      var startX = 0;\n\t      var allVoices = [];\n\t      var debugNoteMetricsYs = [];\n\t\n\t      // Join the voices for each stave.\n\t      this.parts.forEach(function (part) {\n\t        y = y + part.stave.space(part.spaceAbove);\n\t        part.stave.setY(y);\n\t        formatter.joinVoices(part.voices);\n\t        y = y + part.stave.space(part.spaceBelow);\n\t        y = y + part.stave.space(_this3.options.spaceBetweenStaves);\n\t        if (part.debugNoteMetrics) {\n\t          debugNoteMetricsYs.push({ y: y, voice: part.voices[0] });\n\t          y += 15;\n\t        }\n\t        allVoices = allVoices.concat(part.voices);\n\t\n\t        startX = Math.max(startX, part.stave.getNoteStartX());\n\t      });\n\t\n\t      // Update the start position of all staves.\n\t      this.parts.forEach(function (part) {\n\t        return part.stave.setNoteStartX(startX);\n\t      });\n\t      var justifyWidth = this.options.width - (startX - this.options.x) - _note.Note.STAVEPADDING;\n\t      formatter.format(allVoices, justifyWidth);\n\t\n\t      for (var i = 0; i < this.options.formatIterations; i++) {\n\t        formatter.tune();\n\t      }\n\t\n\t      this.startX = startX;\n\t      this.debugNoteMetricsYs = debugNoteMetricsYs;\n\t      this.lastY = y;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      // Render debugging information, if requested.\n\t      var ctx = this.checkContext();\n\t      this.setRendered();\n\t\n\t      if (this.options.debugFormatter) {\n\t        _formatter.Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n\t      }\n\t\n\t      this.debugNoteMetricsYs.forEach(function (d) {\n\t        d.voice.getTickables().forEach(function (note) {\n\t          return _note.Note.plotMetrics(ctx, note, d.y);\n\t        });\n\t      });\n\t    }\n\t  }]);\n\n\t  return System;\n\t}(_element.Element);\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Factory = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t// @author Mohit Cheppudira\n\t//\n\t// ## Description\n\t//\n\t// This file implements a high level API around VexFlow. It will eventually\n\t// become the canonical way to use VexFlow.\n\t//\n\t// *This API is currently DRAFT*\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _accidental = __webpack_require__(29);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tvar _annotation = __webpack_require__(40);\n\t\n\tvar _formatter = __webpack_require__(14);\n\t\n\tvar _frethandfinger = __webpack_require__(28);\n\t\n\tvar _stringnumber = __webpack_require__(36);\n\t\n\tvar _textdynamics = __webpack_require__(67);\n\t\n\tvar _modifiercontext = __webpack_require__(27);\n\t\n\tvar _renderer = __webpack_require__(10);\n\t\n\tvar _stave = __webpack_require__(43);\n\t\n\tvar _stavetie = __webpack_require__(33);\n\t\n\tvar _staveline = __webpack_require__(68);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _staveconnector = __webpack_require__(19);\n\t\n\tvar _system = __webpack_require__(75);\n\t\n\tvar _tickcontext = __webpack_require__(39);\n\t\n\tvar _tuplet = __webpack_require__(16);\n\t\n\tvar _voice = __webpack_require__(18);\n\t\n\tvar _beam = __webpack_require__(15);\n\t\n\tvar _curve = __webpack_require__(66);\n\t\n\tvar _gracenote = __webpack_require__(61);\n\t\n\tvar _gracenotegroup = __webpack_require__(32);\n\t\n\tvar _notesubgroup = __webpack_require__(31);\n\t\n\tvar _easyscore = __webpack_require__(77);\n\t\n\tvar _timesignote = __webpack_require__(59);\n\t\n\tvar _clefnote = __webpack_require__(58);\n\t\n\tvar _pedalmarking = __webpack_require__(69);\n\t\n\tvar _textbracket = __webpack_require__(70);\n\t\n\tvar _vibratobracket = __webpack_require__(57);\n\t\n\tvar _ghostnote = __webpack_require__(72);\n\t\n\tvar _barnote = __webpack_require__(71);\n\t\n\tvar _tabnote = __webpack_require__(56);\n\t\n\tvar _tabstave = __webpack_require__(55);\n\t\n\tvar _textnote = __webpack_require__(50);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Factory.DEBUG) _vex.Vex.L('Vex.Flow.Factory', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('FactoryError');\n\t\n\tfunction setDefaults() {\n\t  var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t  var defaults = arguments[1];\n\t\n\t  var default_options = defaults.options;\n\t  params = _extends(defaults, params);\n\t  params.options = _extends(default_options, params.options);\n\t  return params;\n\t}\n\t\n\tvar Factory = exports.Factory = function () {\n\t  function Factory(options) {\n\t    _classCallCheck(this, Factory);\n\t\n\t    L('New factory: ', options);\n\t    var defaults = {\n\t      stave: {\n\t        space: 10\n\t      },\n\t      renderer: {\n\t        context: null,\n\t        elementId: '',\n\t        backend: _renderer.Renderer.Backends.SVG,\n\t        width: 500,\n\t        height: 200,\n\t        background: '#FFF'\n\t      },\n\t      font: {\n\t        face: 'Arial',\n\t        point: 10,\n\t        style: ''\n\t      }\n\t    };\n\t\n\t    this.options = defaults;\n\t    this.setOptions(options);\n\t  }\n\t\n\t  _createClass(Factory, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.renderQ = [];\n\t      this.systems = [];\n\t      this.staves = [];\n\t      this.voices = [];\n\t      this.stave = null; // current stave\n\t    }\n\t  }, {\n\t    key: 'getOptions',\n\t    value: function getOptions() {\n\t      return this.options;\n\t    }\n\t  }, {\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      var _arr = ['stave', 'renderer', 'font'];\n\t\n\t      for (var _i = 0; _i < _arr.length; _i++) {\n\t        var key = _arr[_i];\n\t        _extends(this.options[key], options[key]);\n\t      }\n\t      if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n\t        this.initRenderer();\n\t      }\n\t\n\t      this.reset();\n\t    }\n\t  }, {\n\t    key: 'initRenderer',\n\t    value: function initRenderer() {\n\t      var _options$renderer = this.options.renderer;\n\t      var elementId = _options$renderer.elementId;\n\t      var backend = _options$renderer.backend;\n\t      var width = _options$renderer.width;\n\t      var height = _options$renderer.height;\n\t      var background = _options$renderer.background;\n\t\n\t      if (elementId === '') {\n\t        throw new X('HTML DOM element not set in Factory');\n\t      }\n\t\n\t      this.context = _renderer.Renderer.buildContext(elementId, backend, width, height, background);\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this.context;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      this.context = context;return this;\n\t    }\n\t  }, {\n\t    key: 'getStave',\n\t    value: function getStave() {\n\t      return this.stave;\n\t    }\n\t  }, {\n\t    key: 'getVoices',\n\t    value: function getVoices() {\n\t      return this.voices;\n\t    }\n\t\n\t    // Returns pixels from current stave spacing.\n\t\n\t  }, {\n\t    key: 'space',\n\t    value: function space(spacing) {\n\t      return this.options.stave.space * spacing;\n\t    }\n\t  }, {\n\t    key: 'Stave',\n\t    value: function Stave(params) {\n\t      params = setDefaults(params, {\n\t        x: 0,\n\t        y: 0,\n\t        width: this.options.renderer.width - this.space(1),\n\t        options: {\n\t          spacing_between_lines_px: this.options.stave.space\n\t        }\n\t      });\n\t\n\t      var stave = new _stave.Stave(params.x, params.y, params.width, params.options);\n\t      this.staves.push(stave);\n\t      stave.setContext(this.context);\n\t      this.stave = stave;\n\t      return stave;\n\t    }\n\t  }, {\n\t    key: 'TabStave',\n\t    value: function TabStave(params) {\n\t      params = setDefaults(params, {\n\t        x: 0,\n\t        y: 0,\n\t        width: this.options.renderer.width - this.space(1),\n\t        options: {\n\t          spacing_between_lines_px: this.options.stave.space * 1.3\n\t        }\n\t      });\n\t\n\t      var stave = new _tabstave.TabStave(params.x, params.y, params.width, params.options);\n\t      this.staves.push(stave);\n\t      stave.setContext(this.context);\n\t      this.stave = stave;\n\t      return stave;\n\t    }\n\t  }, {\n\t    key: 'StaveNote',\n\t    value: function StaveNote(noteStruct) {\n\t      var note = new _stavenote.StaveNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      this.renderQ.push(note);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GhostNote',\n\t    value: function GhostNote(noteStruct) {\n\t      var ghostNote = new _ghostnote.GhostNote(noteStruct);\n\t      if (this.stave) ghostNote.setStave(this.stave);\n\t      ghostNote.setContext(this.context);\n\t      this.renderQ.push(ghostNote);\n\t      return ghostNote;\n\t    }\n\t  }, {\n\t    key: 'TextNote',\n\t    value: function TextNote(textNoteStruct) {\n\t      var textNote = new _textnote.TextNote(textNoteStruct);\n\t      if (this.stave) textNote.setStave(this.stave);\n\t      textNote.setContext(this.context);\n\t      this.renderQ.push(textNote);\n\t      return textNote;\n\t    }\n\t  }, {\n\t    key: 'BarNote',\n\t    value: function BarNote(params) {\n\t      params = setDefaults(params, {\n\t        type: 'single',\n\t        options: {}\n\t      });\n\t\n\t      var barNote = new _barnote.BarNote(params.type);\n\t      if (this.stave) barNote.setStave(this.stave);\n\t      barNote.setContext(this.context);\n\t      this.renderQ.push(barNote);\n\t      return barNote;\n\t    }\n\t  }, {\n\t    key: 'ClefNote',\n\t    value: function ClefNote(params) {\n\t      params = setDefaults(params, {\n\t        type: 'treble',\n\t        options: {\n\t          size: 'default'\n\t        }\n\t      });\n\t\n\t      var clefNote = new _clefnote.ClefNote(params.type, params.options.size, params.options.annotation);\n\t      if (this.stave) clefNote.setStave(this.stave);\n\t      clefNote.setContext(this.context);\n\t      this.renderQ.push(clefNote);\n\t      return clefNote;\n\t    }\n\t  }, {\n\t    key: 'TimeSigNote',\n\t    value: function TimeSigNote(params) {\n\t      params = setDefaults(params, {\n\t        time: '4/4',\n\t        options: {}\n\t      });\n\t\n\t      var timeSigNote = new _timesignote.TimeSigNote(params.time);\n\t      if (this.stave) timeSigNote.setStave(this.stave);\n\t      timeSigNote.setContext(this.context);\n\t      this.renderQ.push(timeSigNote);\n\t      return timeSigNote;\n\t    }\n\t  }, {\n\t    key: 'TabNote',\n\t    value: function TabNote(noteStruct) {\n\t      var note = new _tabnote.TabNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      this.renderQ.push(note);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GraceNote',\n\t    value: function GraceNote(noteStruct) {\n\t      var note = new _gracenote.GraceNote(noteStruct);\n\t      if (this.stave) note.setStave(this.stave);\n\t      note.setContext(this.context);\n\t      return note;\n\t    }\n\t  }, {\n\t    key: 'GraceNoteGroup',\n\t    value: function GraceNoteGroup(params) {\n\t      var group = new _gracenotegroup.GraceNoteGroup(params.notes, params.slur);\n\t      group.setContext(this.context);\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'Accidental',\n\t    value: function Accidental(params) {\n\t      params = setDefaults(params, {\n\t        type: null,\n\t        options: {}\n\t      });\n\t\n\t      var accid = new _accidental.Accidental(params.type);\n\t      accid.setContext(this.context);\n\t      return accid;\n\t    }\n\t  }, {\n\t    key: 'Annotation',\n\t    value: function Annotation(params) {\n\t      params = setDefaults(params, {\n\t        text: 'p',\n\t        vJustify: 'below',\n\t        hJustify: 'center',\n\t        fontFamily: 'Times',\n\t        fontSize: 14,\n\t        fontWeight: 'bold italic',\n\t        options: {}\n\t      });\n\t\n\t      var annotation = new _annotation.Annotation(params.text);\n\t      annotation.setJustification(params.hJustify);\n\t      annotation.setVerticalJustification(params.vJustify);\n\t      annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n\t      annotation.setContext(this.context);\n\t      return annotation;\n\t    }\n\t  }, {\n\t    key: 'Articulation',\n\t    value: function Articulation(params) {\n\t      params = setDefaults(params, {\n\t        type: 'a.',\n\t        position: 'above',\n\t        options: {}\n\t      });\n\t\n\t      var articulation = new _articulation.Articulation(params.type);\n\t      articulation.setPosition(params.position);\n\t      articulation.setContext(this.context);\n\t      return articulation;\n\t    }\n\t  }, {\n\t    key: 'TextDynamics',\n\t    value: function TextDynamics(params) {\n\t      params = setDefaults(params, {\n\t        text: 'p',\n\t        duration: 'q',\n\t        dots: 0,\n\t        line: 0,\n\t        options: {}\n\t      });\n\t\n\t      var text = new _textdynamics.TextDynamics({\n\t        text: params.text,\n\t        line: params.line,\n\t        duration: params.duration,\n\t        dots: params.dots\n\t      });\n\t\n\t      if (this.stave) text.setStave(this.stave);\n\t      text.setContext(this.context);\n\t      this.renderQ.push(text);\n\t      return text;\n\t    }\n\t  }, {\n\t    key: 'Fingering',\n\t    value: function Fingering(params) {\n\t      params = setDefaults(params, {\n\t        number: '0',\n\t        position: 'left',\n\t        options: {}\n\t      });\n\t\n\t      var fingering = new _frethandfinger.FretHandFinger(params.number);\n\t      fingering.setPosition(params.position);\n\t      fingering.setContext(this.context);\n\t      return fingering;\n\t    }\n\t  }, {\n\t    key: 'StringNumber',\n\t    value: function StringNumber(params) {\n\t      params = setDefaults(params, {\n\t        number: '0',\n\t        position: 'left',\n\t        options: {}\n\t      });\n\t\n\t      var stringNumber = new _stringnumber.StringNumber(params.number);\n\t      stringNumber.setPosition(params.position);\n\t      stringNumber.setContext(this.context);\n\t      return stringNumber;\n\t    }\n\t  }, {\n\t    key: 'TickContext',\n\t    value: function TickContext() {\n\t      return new _tickcontext.TickContext().setContext(this.context);\n\t    }\n\t  }, {\n\t    key: 'ModifierContext',\n\t    value: function ModifierContext() {\n\t      return new _modifiercontext.ModifierContext();\n\t    }\n\t  }, {\n\t    key: 'Voice',\n\t    value: function Voice(params) {\n\t      params = setDefaults(params, {\n\t        time: '4/4',\n\t        options: {}\n\t      });\n\t      var voice = new _voice.Voice(params.time);\n\t      this.voices.push(voice);\n\t      return voice;\n\t    }\n\t  }, {\n\t    key: 'StaveConnector',\n\t    value: function StaveConnector(params) {\n\t      params = setDefaults(params, {\n\t        top_stave: null,\n\t        bottom_stave: null,\n\t        type: 'double',\n\t        options: {}\n\t      });\n\t      var connector = new _staveconnector.StaveConnector(params.top_stave, params.bottom_stave);\n\t      connector.setType(params.type).setContext(this.context);\n\t      this.renderQ.push(connector);\n\t      return connector;\n\t    }\n\t  }, {\n\t    key: 'Formatter',\n\t    value: function Formatter() {\n\t      return new _formatter.Formatter();\n\t    }\n\t  }, {\n\t    key: 'Tuplet',\n\t    value: function Tuplet(params) {\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {}\n\t      });\n\t\n\t      var tuplet = new _tuplet.Tuplet(params.notes, params.options).setContext(this.context);\n\t      this.renderQ.push(tuplet);\n\t      return tuplet;\n\t    }\n\t  }, {\n\t    key: 'Beam',\n\t    value: function Beam(params) {\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {\n\t          autoStem: false,\n\t          secondaryBeamBreaks: []\n\t        }\n\t      });\n\t\n\t      var beam = new _beam.Beam(params.notes, params.options.autoStem).setContext(this.context);\n\t      beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n\t      this.renderQ.push(beam);\n\t      return beam;\n\t    }\n\t  }, {\n\t    key: 'Curve',\n\t    value: function Curve(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        options: {}\n\t      });\n\t\n\t      var curve = new _curve.Curve(params.from, params.to, params.options).setContext(this.context);\n\t      this.renderQ.push(curve);\n\t      return curve;\n\t    }\n\t  }, {\n\t    key: 'StaveTie',\n\t    value: function StaveTie(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        first_indices: [0],\n\t        last_indices: [0],\n\t        text: null,\n\t        options: {\n\t          direction: undefined\n\t        }\n\t      });\n\t\n\t      var tie = new _stavetie.StaveTie({\n\t        first_note: params.from,\n\t        last_note: params.to,\n\t        first_indices: params.first_indices,\n\t        last_indices: params.last_indices\n\t      }, params.text);\n\t\n\t      if (params.options.direction) tie.setDirection(params.options.direction);\n\t      tie.setContext(this.context);\n\t      this.renderQ.push(tie);\n\t      return tie;\n\t    }\n\t  }, {\n\t    key: 'StaveLine',\n\t    value: function StaveLine(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        first_indices: [0],\n\t        last_indices: [0],\n\t        options: {}\n\t      });\n\t\n\t      var line = new _staveline.StaveLine({\n\t        first_note: params.from,\n\t        last_note: params.to,\n\t        first_indices: params.first_indices,\n\t        last_indices: params.last_indices\n\t      });\n\t\n\t      if (params.options.text) line.setText(params.options.text);\n\t      if (params.options.font) line.setFont(params.options.font);\n\t\n\t      line.setContext(this.context);\n\t      this.renderQ.push(line);\n\t      return line;\n\t    }\n\t  }, {\n\t    key: 'VibratoBracket',\n\t    value: function VibratoBracket(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        options: {\n\t          harsh: false\n\t        }\n\t      });\n\t\n\t      var vibratoBracket = new _vibratobracket.VibratoBracket({\n\t        start: params.from,\n\t        stop: params.to\n\t      });\n\t\n\t      if (params.options.line) vibratoBracket.setLine(params.options.line);\n\t      if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\t\n\t      vibratoBracket.setContext(this.context);\n\t      this.renderQ.push(vibratoBracket);\n\t\n\t      return vibratoBracket;\n\t    }\n\t  }, {\n\t    key: 'TextBracket',\n\t    value: function TextBracket(params) {\n\t      params = setDefaults(params, {\n\t        from: null,\n\t        to: null,\n\t        text: '',\n\t        options: {\n\t          superscript: '',\n\t          position: 1\n\t        }\n\t      });\n\t\n\t      var textBracket = new _textbracket.TextBracket({\n\t        start: params.from,\n\t        stop: params.to,\n\t        text: params.text,\n\t        superscript: params.options.superscript,\n\t        position: params.options.position\n\t      });\n\t\n\t      if (params.options.line) textBracket.setLine(params.options.line);\n\t      if (params.options.font) textBracket.setFont(params.options.font);\n\t\n\t      textBracket.setContext(this.context);\n\t      this.renderQ.push(textBracket);\n\t      return textBracket;\n\t    }\n\t  }, {\n\t    key: 'System',\n\t    value: function System() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params.factory = this;\n\t      var system = new _system.System(params).setContext(this.context);\n\t      this.systems.push(system);\n\t      return system;\n\t    }\n\t  }, {\n\t    key: 'EasyScore',\n\t    value: function EasyScore() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params.factory = this;\n\t      return new _easyscore.EasyScore(params);\n\t    }\n\t  }, {\n\t    key: 'PedalMarking',\n\t    value: function PedalMarking() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {\n\t          style: 'mixed'\n\t        }\n\t      });\n\t\n\t      var pedal = new _pedalmarking.PedalMarking(params.notes);\n\t      pedal.setStyle(_pedalmarking.PedalMarking.StylesString[params.options.style]);\n\t      pedal.setContext(this.context);\n\t      this.renderQ.push(pedal);\n\t      return pedal;\n\t    }\n\t  }, {\n\t    key: 'NoteSubGroup',\n\t    value: function NoteSubGroup() {\n\t      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      params = setDefaults(params, {\n\t        notes: [],\n\t        options: {}\n\t      });\n\t\n\t      var group = new _notesubgroup.NoteSubGroup(params.notes);\n\t      group.setContext(this.context);\n\t      return group;\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      var _this = this;\n\t\n\t      this.systems.forEach(function (i) {\n\t        return i.setContext(_this.context).format();\n\t      });\n\t      this.staves.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.voices.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.renderQ.forEach(function (i) {\n\t        if (!i.isRendered()) i.setContext(_this.context).draw();\n\t      });\n\t      this.systems.forEach(function (i) {\n\t        return i.setContext(_this.context).draw();\n\t      });\n\t      this.reset();\n\t    }\n\t  }], [{\n\t    key: 'newFromElementId',\n\t    value: function newFromElementId(elementId) {\n\t      var width = arguments.length <= 1 || arguments[1] === undefined ? 500 : arguments[1];\n\t      var height = arguments.length <= 2 || arguments[2] === undefined ? 200 : arguments[2];\n\t\n\t      return new Factory({ renderer: { elementId: elementId, width: width, height: height } });\n\t    }\n\t  }]);\n\n\t  return Factory;\n\t}();\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.EasyScore = exports.X = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// This class implements a parser for a simple language to generate\n\t// VexFlow objects.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tvar _stavenote = __webpack_require__(20);\n\t\n\tvar _parser = __webpack_require__(78);\n\t\n\tvar _articulation = __webpack_require__(37);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (EasyScore.DEBUG) _vex.Vex.L('Vex.Flow.EasyScore', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('EasyScoreError');\n\t\n\tvar Grammar = function () {\n\t  function Grammar(builder) {\n\t    _classCallCheck(this, Grammar);\n\t\n\t    this.builder = builder;\n\t  }\n\t\n\t  _createClass(Grammar, [{\n\t    key: 'begin',\n\t    value: function begin() {\n\t      return this.LINE;\n\t    }\n\t  }, {\n\t    key: 'LINE',\n\t    value: function LINE() {\n\t      return {\n\t        expect: [this.PIECE, this.PIECES, this.EOL]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PIECE',\n\t    value: function PIECE() {\n\t      var _this = this;\n\t\n\t      return {\n\t        expect: [this.CHORDORNOTE, this.PARAMS],\n\t        run: function run() {\n\t          return _this.builder.commitPiece();\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PIECES',\n\t    value: function PIECES() {\n\t      return {\n\t        expect: [this.COMMA, this.PIECE],\n\t        zeroOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'PARAMS',\n\t    value: function PARAMS() {\n\t      return {\n\t        expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'CHORDORNOTE',\n\t    value: function CHORDORNOTE() {\n\t      return {\n\t        expect: [this.CHORD, this.SINGLENOTE],\n\t        or: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'CHORD',\n\t    value: function CHORD() {\n\t      var _this2 = this;\n\t\n\t      return {\n\t        expect: [this.LPAREN, this.NOTES, this.RPAREN],\n\t        run: function run(state) {\n\t          return _this2.builder.addChord(state.matches[1]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'NOTES',\n\t    value: function NOTES() {\n\t      return {\n\t        expect: [this.NOTE],\n\t        oneOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'NOTE',\n\t    value: function NOTE() {\n\t      return {\n\t        expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE]\n\t      };\n\t    }\n\t  }, {\n\t    key: 'SINGLENOTE',\n\t    value: function SINGLENOTE() {\n\t      var _this3 = this;\n\t\n\t      return {\n\t        expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n\t        run: function run(state) {\n\t          return _this3.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'ACCIDENTAL',\n\t    value: function ACCIDENTAL() {\n\t      return {\n\t        expect: [this.ACCIDENTALS],\n\t        maybe: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'DOTS',\n\t    value: function DOTS() {\n\t      var _this4 = this;\n\t\n\t      return {\n\t        expect: [this.DOT],\n\t        zeroOrMore: true,\n\t        run: function run(state) {\n\t          return _this4.builder.setNoteDots(state.matches[0]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'TYPE',\n\t    value: function TYPE() {\n\t      var _this5 = this;\n\t\n\t      return {\n\t        expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n\t        maybe: true,\n\t        run: function run(state) {\n\t          return _this5.builder.setNoteType(state.matches[2]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'DURATION',\n\t    value: function DURATION() {\n\t      var _this6 = this;\n\t\n\t      return {\n\t        expect: [this.SLASH, this.DURATIONS],\n\t        maybe: true,\n\t        run: function run(state) {\n\t          return _this6.builder.setNoteDuration(state.matches[1]);\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'OPTS',\n\t    value: function OPTS() {\n\t      return {\n\t        expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n\t        maybe: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEYVALS',\n\t    value: function KEYVALS() {\n\t      return {\n\t        expect: [this.COMMA, this.KEYVAL],\n\t        zeroOrMore: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEYVAL',\n\t    value: function KEYVAL() {\n\t      var _this7 = this;\n\t\n\t      var unquote = function unquote(str) {\n\t        return str.slice(1, -1);\n\t      };\n\t\n\t      return {\n\t        expect: [this.KEY, this.EQUALS, this.VAL],\n\t        run: function run(state) {\n\t          return _this7.builder.addNoteOption(state.matches[0], unquote(state.matches[2]));\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'VAL',\n\t    value: function VAL() {\n\t      return {\n\t        expect: [this.SVAL, this.DVAL],\n\t        or: true\n\t      };\n\t    }\n\t  }, {\n\t    key: 'KEY',\n\t    value: function KEY() {\n\t      return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n\t    }\n\t  }, {\n\t    key: 'DVAL',\n\t    value: function DVAL() {\n\t      return { token: '[\"][^\"]*[\"]' };\n\t    }\n\t  }, {\n\t    key: 'SVAL',\n\t    value: function SVAL() {\n\t      return { token: \"['][^']*[']\" };\n\t    }\n\t  }, {\n\t    key: 'NOTENAME',\n\t    value: function NOTENAME() {\n\t      return { token: '[a-gA-G]' };\n\t    }\n\t  }, {\n\t    key: 'OCTAVE',\n\t    value: function OCTAVE() {\n\t      return { token: '[0-9]+' };\n\t    }\n\t  }, {\n\t    key: 'ACCIDENTALS',\n\t    value: function ACCIDENTALS() {\n\t      return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n\t    }\n\t  }, {\n\t    key: 'DURATIONS',\n\t    value: function DURATIONS() {\n\t      return { token: '[0-9whq]+' };\n\t    }\n\t  }, {\n\t    key: 'TYPES',\n\t    value: function TYPES() {\n\t      return { token: '[rRsSxX]' };\n\t    }\n\t  }, {\n\t    key: 'LPAREN',\n\t    value: function LPAREN() {\n\t      return { token: '[(]' };\n\t    }\n\t  }, {\n\t    key: 'RPAREN',\n\t    value: function RPAREN() {\n\t      return { token: '[)]' };\n\t    }\n\t  }, {\n\t    key: 'COMMA',\n\t    value: function COMMA() {\n\t      return { token: '[,]' };\n\t    }\n\t  }, {\n\t    key: 'DOT',\n\t    value: function DOT() {\n\t      return { token: '[.]' };\n\t    }\n\t  }, {\n\t    key: 'SLASH',\n\t    value: function SLASH() {\n\t      return { token: '[/]' };\n\t    }\n\t  }, {\n\t    key: 'MAYBESLASH',\n\t    value: function MAYBESLASH() {\n\t      return { token: '[/]?' };\n\t    }\n\t  }, {\n\t    key: 'EQUALS',\n\t    value: function EQUALS() {\n\t      return { token: '[=]' };\n\t    }\n\t  }, {\n\t    key: 'LBRACKET',\n\t    value: function LBRACKET() {\n\t      return { token: '\\\\[' };\n\t    }\n\t  }, {\n\t    key: 'RBRACKET',\n\t    value: function RBRACKET() {\n\t      return { token: '\\\\]' };\n\t    }\n\t  }, {\n\t    key: 'EOL',\n\t    value: function EOL() {\n\t      return { token: '$' };\n\t    }\n\t  }]);\n\t\n\t  return Grammar;\n\t}();\n\t\n\tvar Builder = function () {\n\t  function Builder(factory) {\n\t    _classCallCheck(this, Builder);\n\t\n\t    this.factory = factory;\n\t    this.commitHooks = [];\n\t    this.reset();\n\t  }\n\t\n\t  _createClass(Builder, [{\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      this.options = {\n\t        stem: 'auto',\n\t        clef: 'treble'\n\t      };\n\t      this.elements = {\n\t        notes: [],\n\t        accidentals: []\n\t      };\n\t      this.rollingDuration = '8';\n\t      this.resetPiece();\n\t      _extends(this.options, options);\n\t    }\n\t  }, {\n\t    key: 'getFactory',\n\t    value: function getFactory() {\n\t      return this.factory;\n\t    }\n\t  }, {\n\t    key: 'getElements',\n\t    value: function getElements() {\n\t      return this.elements;\n\t    }\n\t  }, {\n\t    key: 'addCommitHook',\n\t    value: function addCommitHook(commitHook) {\n\t      this.commitHooks.push(commitHook);\n\t    }\n\t  }, {\n\t    key: 'resetPiece',\n\t    value: function resetPiece() {\n\t      L('resetPiece');\n\t      this.piece = {\n\t        chord: [],\n\t        duration: this.rollingDuration,\n\t        dots: 0,\n\t        type: undefined,\n\t        options: {}\n\t      };\n\t    }\n\t  }, {\n\t    key: 'setNoteDots',\n\t    value: function setNoteDots(dots) {\n\t      L('setNoteDots:', dots);\n\t      if (dots) this.piece.dots = dots.length;\n\t    }\n\t  }, {\n\t    key: 'setNoteDuration',\n\t    value: function setNoteDuration(duration) {\n\t      L('setNoteDuration:', duration);\n\t      this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n\t    }\n\t  }, {\n\t    key: 'setNoteType',\n\t    value: function setNoteType(type) {\n\t      L('setNoteType:', type);\n\t      if (type) this.piece.type = type;\n\t    }\n\t  }, {\n\t    key: 'addNoteOption',\n\t    value: function addNoteOption(key, value) {\n\t      L('addNoteOption: key:', key, 'value:', value);\n\t      this.piece.options[key] = value;\n\t    }\n\t  }, {\n\t    key: 'addNote',\n\t    value: function addNote(key, accid, octave) {\n\t      L('addNote:', key, accid, octave);\n\t      this.piece.chord.push({ key: key, accid: accid, octave: octave });\n\t    }\n\t  }, {\n\t    key: 'addSingleNote',\n\t    value: function addSingleNote(key, accid, octave) {\n\t      L('addSingleNote:', key, accid, octave);\n\t      this.addNote(key, accid, octave);\n\t    }\n\t  }, {\n\t    key: 'addChord',\n\t    value: function addChord(notes) {\n\t      var _this8 = this;\n\t\n\t      L('startChord');\n\t      if (_typeof(notes[0]) !== 'object') {\n\t        this.addSingleNote(notes[0]);\n\t      } else {\n\t        notes.forEach(function (n) {\n\t          if (n) _this8.addNote.apply(_this8, _toConsumableArray(n));\n\t        });\n\t      }\n\t      L('endChord');\n\t    }\n\t  }, {\n\t    key: 'commitPiece',\n\t    value: function commitPiece() {\n\t      var _this9 = this;\n\t\n\t      L('commitPiece');\n\t      var factory = this.factory;\n\t\n\t\n\t      if (!factory) return;\n\t\n\t      var options = _extends({}, this.options, this.piece.options);\n\t      var stem = options.stem;\n\t      var clef = options.clef;\n\t\n\t      var autoStem = stem.toLowerCase() === 'auto';\n\t      var stemDirection = !autoStem && stem.toLowerCase() === 'up' ? _stavenote.StaveNote.STEM_UP : _stavenote.StaveNote.STEM_DOWN;\n\t\n\t      // Build StaveNotes.\n\t      var _piece = this.piece;\n\t      var chord = _piece.chord;\n\t      var duration = _piece.duration;\n\t      var dots = _piece.dots;\n\t      var type = _piece.type;\n\t\n\t      var keys = chord.map(function (note) {\n\t        return note.key + '/' + note.octave;\n\t      });\n\t      var note = factory.StaveNote({\n\t        keys: keys,\n\t        duration: duration,\n\t        dots: dots,\n\t        type: type,\n\t        clef: clef,\n\t        auto_stem: autoStem\n\t      });\n\t      if (!autoStem) note.setStemDirection(stemDirection);\n\t\n\t      // Attach accidentals.\n\t      var accids = chord.map(function (note) {\n\t        return note.accid || null;\n\t      });\n\t      accids.forEach(function (accid, i) {\n\t        if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n\t      });\n\t\n\t      // Attach dots.\n\t      for (var i = 0; i < dots; i++) {\n\t        note.addDotToAll();\n\t      }this.commitHooks.forEach(function (fn) {\n\t        return fn(options, note, _this9);\n\t      });\n\t\n\t      this.elements.notes.push(note);\n\t      this.elements.accidentals.concat(accids);\n\t      this.resetPiece();\n\t    }\n\t  }]);\n\t\n\t  return Builder;\n\t}();\n\t\n\tfunction setId(_ref, note) {\n\t  var id = _ref.id;\n\t\n\t  if (id === undefined) return;\n\t\n\t  note.setAttribute('id', id);\n\t}\n\t\n\tfunction setClass(options, note) {\n\t  if (!options.class) return;\n\t\n\t  var commaSeparatedRegex = /\\s*,\\s*/;\n\t\n\t  options.class.split(commaSeparatedRegex).forEach(function (className) {\n\t    return note.addClass(className);\n\t  });\n\t}\n\t\n\tvar EasyScore = exports.EasyScore = function () {\n\t  function EasyScore() {\n\t    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    _classCallCheck(this, EasyScore);\n\t\n\t    this.setOptions(options);\n\t    this.defaults = {\n\t      clef: 'treble',\n\t      time: '4/4',\n\t      stem: 'auto'\n\t    };\n\t  }\n\t\n\t  _createClass(EasyScore, [{\n\t    key: 'set',\n\t    value: function set(defaults) {\n\t      _extends(this.defaults, defaults);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setOptions',\n\t    value: function setOptions(options) {\n\t      var _this10 = this;\n\t\n\t      this.options = _extends({\n\t        factory: null,\n\t        builder: null,\n\t        commitHooks: [setId, setClass, _articulation.Articulation.easyScoreHook],\n\t        throwOnError: false\n\t      }, options);\n\t\n\t      this.factory = this.options.factory;\n\t      this.builder = this.options.builder || new Builder(this.factory);\n\t      this.grammar = new Grammar(this.builder);\n\t      this.parser = new _parser.Parser(this.grammar);\n\t      this.options.commitHooks.forEach(function (commitHook) {\n\t        return _this10.addCommitHook(commitHook);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(context) {\n\t      if (this.factory) this.factory.setContext(context);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(line) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.builder.reset(options);\n\t      var result = this.parser.parse(line);\n\t      if (!result.success && this.options.throwOnError) {\n\t        throw new X('Error parsing line: ' + line, result);\n\t      }\n\t      return result;\n\t    }\n\t  }, {\n\t    key: 'beam',\n\t    value: function beam(notes) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.factory.Beam({ notes: notes, options: options });\n\t      return notes;\n\t    }\n\t  }, {\n\t    key: 'tuplet',\n\t    value: function tuplet(notes) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      this.factory.Tuplet({ notes: notes, options: options });\n\t      return notes;\n\t    }\n\t  }, {\n\t    key: 'notes',\n\t    value: function notes(line) {\n\t      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      options = _extends({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n\t      this.parse(line, options);\n\t      return this.builder.getElements().notes;\n\t    }\n\t  }, {\n\t    key: 'voice',\n\t    value: function voice(notes, voiceOptions) {\n\t      voiceOptions = _extends({ time: this.defaults.time }, voiceOptions);\n\t      return this.factory.Voice(voiceOptions).addTickables(notes);\n\t    }\n\t  }, {\n\t    key: 'addCommitHook',\n\t    value: function addCommitHook(commitHook) {\n\t      return this.builder.addCommitHook(commitHook);\n\t    }\n\t  }]);\n\n\t  return EasyScore;\n\t}();\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Parser = exports.X = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\t//\n\t// A generic text parsing class for VexFlow.\n\t\n\tvar _vex = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n\tfunction L() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  if (Parser.DEBUG) _vex.Vex.L('Vex.Flow.Parser', args);\n\t}\n\t\n\tvar X = exports.X = _vex.Vex.MakeException('ParserError');\n\t\n\t// Converts parser results into an easy to reference list that can be\n\t// used in triggers.\n\tfunction flattenMatches(results) {\n\t  if (results.matchedString !== undefined) return results.matchedString;\n\t  if (results.results) return flattenMatches(results.results);\n\t  if (results.length === 1) return flattenMatches(results[0]);\n\t  if (results.length === 0) return null;\n\t  return results.map(flattenMatches);\n\t}\n\t\n\t// This is the base parser class. Given an arbitrary context-free grammar, it\n\t// can parse any line and execute code when specific rules are met (e.g.,\n\t// when a string is terminated.)\n\t\n\tvar Parser = exports.Parser = function () {\n\t  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n\t  // the EasyScore grammar in easyscore.js.\n\t  function Parser(grammar) {\n\t    _classCallCheck(this, Parser);\n\t\n\t    this.grammar = grammar;\n\t  }\n\t\n\t  // Parse `line` using current grammar. Returns {success: true} if the\n\t  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n\t  // where `errorPos` is the location of the error in the string.\n\t\n\t\n\t  _createClass(Parser, [{\n\t    key: 'parse',\n\t    value: function parse(line) {\n\t      this.line = line;\n\t      this.pos = 0;\n\t      this.errorPos = -1;\n\t      var results = this.expect(this.grammar.begin());\n\t      results.errorPos = this.errorPos;\n\t      return results;\n\t    }\n\t  }, {\n\t    key: 'matchFail',\n\t    value: function matchFail(returnPos) {\n\t      if (this.errorPos === -1) this.errorPos = this.pos;\n\t      this.pos = returnPos;\n\t    }\n\t  }, {\n\t    key: 'matchSuccess',\n\t    value: function matchSuccess() {\n\t      this.errorPos = -1;\n\t    }\n\t\n\t    // Look for `token` in this.line[this.pos], and return success\n\t    // if one is found. `token` is specified as a regular expression.\n\t\n\t  }, {\n\t    key: 'matchToken',\n\t    value: function matchToken(token) {\n\t      var noSpace = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n\t      var workingLine = this.line.slice(this.pos);\n\t      var result = workingLine.match(regexp);\n\t      if (result !== null) {\n\t        return {\n\t          success: true,\n\t          matchedString: result[2],\n\t          incrementPos: result[1].length,\n\t          pos: this.pos\n\t        };\n\t      } else {\n\t        return {\n\t          success: false,\n\t          pos: this.pos\n\t        };\n\t      }\n\t    }\n\t\n\t    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n\t    // set, then return success even if the token is not found, but reset\n\t    // the position before exiting.\n\t\n\t  }, {\n\t    key: 'expectOne',\n\t    value: function expectOne(rule) {\n\t      var maybe = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var results = [];\n\t      var pos = this.pos;\n\t\n\t      var allMatches = true;\n\t      var oneMatch = false;\n\t      maybe = maybe === true || rule.maybe === true;\n\t\n\t      // Execute all sub rules in sequence.\n\t      for (var i = 0; i < rule.expect.length; i++) {\n\t        var next = rule.expect[i];\n\t        var localPos = this.pos;\n\t        var result = this.expect(next);\n\t\n\t        // If `rule.or` is set, then return success if any one\n\t        // of the subrules match, else all subrules must match.\n\t        if (result.success) {\n\t          results.push(result);\n\t          oneMatch = true;\n\t          if (rule.or) break;\n\t        } else {\n\t          allMatches = false;\n\t          if (!rule.or) {\n\t            this.pos = localPos;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var gotOne = rule.or && oneMatch || allMatches;\n\t      var success = gotOne || maybe === true;\n\t      if (maybe && !gotOne) this.pos = pos;\n\t      if (success) this.matchSuccess();else this.matchFail(pos);\n\t      return { success: success, results: results, numMatches: gotOne ? 1 : 0 };\n\t    }\n\t\n\t    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n\t    // then a failed match is also a success (but the position is reset).\n\t\n\t  }, {\n\t    key: 'expectOneOrMore',\n\t    value: function expectOneOrMore(rule) {\n\t      var maybe = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      var results = [];\n\t      var pos = this.pos;\n\t      var numMatches = 0;\n\t      var more = true;\n\t\n\t      do {\n\t        var result = this.expectOne(rule);\n\t        if (result.success) {\n\t          numMatches++;\n\t          results.push(result.results);\n\t        } else {\n\t          more = false;\n\t        }\n\t      } while (more);\n\t\n\t      var success = numMatches > 0 || maybe === true;\n\t      if (maybe && !(numMatches > 0)) this.pos = pos;\n\t      if (success) this.matchSuccess();else this.matchFail(pos);\n\t      return { success: success, results: results, numMatches: numMatches };\n\t    }\n\t\n\t    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n\t\n\t  }, {\n\t    key: 'expectZeroOrMore',\n\t    value: function expectZeroOrMore(rule) {\n\t      return this.expectOneOrMore(rule, true);\n\t    }\n\t\n\t    // Execute the rule produced by the provided the `rules` function. This\n\t    // ofloads to one of the above matchers and consolidates the results. It is also\n\t    // responsible for executing any code triggered by the rule (in `rule.run`.)\n\t\n\t  }, {\n\t    key: 'expect',\n\t    value: function expect(rules) {\n\t      L('Evaluating rules:', rules);\n\t      var result = void 0;\n\t      if (!rules) {\n\t        throw new X('Invalid Rule: ' + rules, rules);\n\t      }\n\t\n\t      // Get rule from Grammar class.\n\t      var rule = rules.bind(this.grammar)();\n\t\n\t      if (rule.token) {\n\t        // Base case: parse the regex and throw an error if the\n\t        // line doesn't match.\n\t        result = this.matchToken(rule.token, rule.noSpace === true);\n\t        if (result.success) {\n\t          // Token match! Update position and throw away parsed portion\n\t          // of string.\n\t          this.pos += result.incrementPos;\n\t        }\n\t      } else if (rule.expect) {\n\t        if (rule.oneOrMore) {\n\t          result = this.expectOneOrMore(rule);\n\t        } else if (rule.zeroOrMore) {\n\t          result = this.expectZeroOrMore(rule);\n\t        } else {\n\t          result = this.expectOne(rule);\n\t        }\n\t      } else {\n\t        throw new X('Bad grammar! No `token` or `expect` property', rule);\n\t      }\n\t\n\t      // If there's a trigger attached to this rule, then pull it.\n\t      result.matches = [];\n\t      if (result.results) result.results.forEach(function (r) {\n\t        return result.matches.push(flattenMatches(r));\n\t      });\n\t      if (rule.run && result.success) rule.run(result);\n\t      return result;\n\t    }\n\t  }]);\n\n\t  return Parser;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=vexflow-debug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vexflow/releases/vexflow-debug.js\n// module id = 6CD5\n// module chunks = 1","/*!\n * Vue.js v2.5.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.functionalOptions = undefined;\n  this.functionalScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var componentOptions = vnode.componentOptions;\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep) {\n    if (vnode.children) {\n      cloned.children = cloneVNodes(vnode.children, true);\n    }\n    if (componentOptions && componentOptions.children) {\n      componentOptions.children = cloneVNodes(componentOptions.children, true);\n    }\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production' && inject) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if (inBrowser && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both micro and macro tasks.\n// In < 2.4 we used micro tasks everywhere, but there are some scenarios where\n// micro tasks have too high a priority and fires in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using macro tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use micro task by default, but expose a way to force macro task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) Task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine MicroTask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a Task instead of a MicroTask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias,\n  eventKeyName\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (keyCodes) {\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  // static trees can be rendered once and cached on the contructor options\n  // so every instance shares the same cached trees\n  var options = this.$options;\n  var cached = options.cached || (options.cached = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = options.staticRenderFns[index].call(this._renderProxy, null, this);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm = Object.create(parent);\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode) {\n        vnode.functionalScopeId = options._scopeId;\n        vnode.functionalContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = contextVm;\n    vnode.functionalOptions = options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && cached$$1 !== current) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.exclude && matches(this.exclude, name)) ||\n        (this.include && !matches(this.include, name))\n      )) {\n        return vnode\n      }\n\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.5.3';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(\n            config.ignoredElements.length &&\n            config.ignoredElements.some(function (ignore) {\n              return isRegExp(ignore)\n                ? ignore.test(tag)\n                : ignore === tag\n            })\n          ) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.functionalScopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setAttribute(vnode.elm, i, '');\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.functionalContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !vnodeToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nVue$3.nextTick(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$1 = 0; i$1 < postTransforms.length; i$1++) {\n        postTransforms[i$1](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\n      var typeBinding = getBindingAttr(el, 'type');\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var code = keyCodes[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(code)) + \",\" +\n    \"$event.key)\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = FZ+f\n// module chunks = 1","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuex/dist/vuex.esm.js\n// module id = NYxO\n// module chunks = 1","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = W2nU\n// module chunks = 1","/**\n  * vue-class-component v6.1.0\n  * (c) 2015-2017 Evan You\n  * @license MIT\n  */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(require('vue'));\n\nfunction createDecorator(factory) {\n    return function (target, key, index) {\n        var Ctor = typeof target === 'function'\n            ? target\n            : target.constructor;\n        if (!Ctor.__decorators__) {\n            Ctor.__decorators__ = [];\n        }\n        if (typeof index !== 'number') {\n            index = undefined;\n        }\n        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });\n    };\n}\nfunction warn(message) {\n    if (typeof console !== 'undefined') {\n        console.warn('[vue-class-component] ' + message);\n    }\n}\n\nfunction collectDataFromConstructor(vm, Component) {\n    Component.prototype._init = function () {\n        var _this = this;\n        var keys = Object.getOwnPropertyNames(vm);\n        if (vm.$options.props) {\n            for (var key in vm.$options.props) {\n                if (!vm.hasOwnProperty(key)) {\n                    keys.push(key);\n                }\n            }\n        }\n        keys.forEach(function (key) {\n            if (key.charAt(0) !== '_') {\n                Object.defineProperty(_this, key, {\n                    get: function () { return vm[key]; },\n                    set: function (value) { return vm[key] = value; },\n                    configurable: true\n                });\n            }\n        });\n    };\n    var data = new Component();\n    var plainData = {};\n    Object.keys(data).forEach(function (key) {\n        if (data[key] !== undefined) {\n            plainData[key] = data[key];\n        }\n    });\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(Component.prototype instanceof Vue) && Object.keys(plainData).length > 0) {\n            warn('Component class must inherit Vue or its descendant class ' +\n                'when class property is used.');\n        }\n    }\n    return plainData;\n}\n\nvar $internalHooks = [\n    'data',\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeDestroy',\n    'destroyed',\n    'beforeUpdate',\n    'updated',\n    'activated',\n    'deactivated',\n    'render',\n    'errorCaptured'\n];\nfunction componentFactory(Component, options) {\n    if (options === void 0) { options = {}; }\n    options.name = options.name || Component._componentTag || Component.name;\n    var proto = Component.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n            return;\n        }\n        if ($internalHooks.indexOf(key) > -1) {\n            options[key] = proto[key];\n            return;\n        }\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (typeof descriptor.value === 'function') {\n            (options.methods || (options.methods = {}))[key] = descriptor.value;\n        }\n        else if (descriptor.get || descriptor.set) {\n            (options.computed || (options.computed = {}))[key] = {\n                get: descriptor.get,\n                set: descriptor.set\n            };\n        }\n    });\n    (options.mixins || (options.mixins = [])).push({\n        data: function () {\n            return collectDataFromConstructor(this, Component);\n        }\n    });\n    var decorators = Component.__decorators__;\n    if (decorators) {\n        decorators.forEach(function (fn) { return fn(options); });\n    }\n    var superProto = Object.getPrototypeOf(Component.prototype);\n    var Super = superProto instanceof Vue\n        ? superProto.constructor\n        : Vue;\n    var Extended = Super.extend(options);\n    for (var staticKey in Component) {\n        if (Component.hasOwnProperty(staticKey)) {\n            Extended[staticKey] = Component[staticKey];\n        }\n    }\n    return Extended;\n}\n\nfunction Component(options) {\n    if (typeof options === 'function') {\n        return componentFactory(options);\n    }\n    return function (Component) {\n        return componentFactory(Component, options);\n    };\n}\n(function (Component) {\n    function registerHooks(keys) {\n        $internalHooks.push.apply($internalHooks, keys);\n    }\n    Component.registerHooks = registerHooks;\n})(Component || (Component = {}));\nvar Component$1 = Component;\n\nexports['default'] = Component$1;\nexports.createDecorator = createDecorator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-class-component/dist/vue-class-component.common.js\n// module id = c+8m\n// module chunks = 1","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = mypn\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = rjj0\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = tTVk\n// module chunks = 1"],"sourceRoot":""}